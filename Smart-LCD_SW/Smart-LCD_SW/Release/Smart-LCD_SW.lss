
Smart-LCD_SW.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000248  00800100  00004aaa  00004b3e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004aaa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000142  00800348  00800348  00004d86  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00004d86  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004de4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000430  00000000  00000000  00004e28  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000a33b  00000000  00000000  00005258  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001ccf  00000000  00000000  0000f593  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003c09  00000000  00000000  00011262  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001998  00000000  00000000  00014e6c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001fdc  00000000  00000000  00016804  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000955c  00000000  00000000  000187e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000440  00000000  00000000  00021d3c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	e7 c2       	rjmp	.+1486   	; 0x5d0 <__ctors_end>
       2:	00 00       	nop
       4:	0c 94 1b 0c 	jmp	0x1836	; 0x1836 <__vector_1>
       8:	0c 94 f8 0b 	jmp	0x17f0	; 0x17f0 <__vector_2>
       c:	0c 94 d5 0b 	jmp	0x17aa	; 0x17aa <__vector_3>
      10:	0c 94 b2 0b 	jmp	0x1764	; 0x1764 <__vector_4>
      14:	0c 94 8f 0b 	jmp	0x171e	; 0x171e <__vector_5>
      18:	0c 94 6c 0b 	jmp	0x16d8	; 0x16d8 <__vector_6>
      1c:	0c 94 49 0b 	jmp	0x1692	; 0x1692 <__vector_7>
      20:	0c 94 26 0b 	jmp	0x164c	; 0x164c <__vector_8>
      24:	f5 c6       	rjmp	.+3562   	; 0xe10 <__vector_9>
      26:	00 00       	nop
      28:	0c 94 03 0b 	jmp	0x1606	; 0x1606 <__vector_10>
      2c:	0c 94 e0 0a 	jmp	0x15c0	; 0x15c0 <__vector_11>
      30:	0c 94 bd 0a 	jmp	0x157a	; 0x157a <__vector_12>
      34:	87 c7       	rjmp	.+3854   	; 0xf44 <__vector_13>
      36:	00 00       	nop
      38:	0c 94 9a 0a 	jmp	0x1534	; 0x1534 <__vector_14>
      3c:	0c 94 77 0a 	jmp	0x14ee	; 0x14ee <__vector_15>
      40:	0c 94 54 0a 	jmp	0x14a8	; 0x14a8 <__vector_16>
      44:	0c 94 31 0a 	jmp	0x1462	; 0x1462 <__vector_17>
      48:	0c 94 0e 0a 	jmp	0x141c	; 0x141c <__vector_18>
      4c:	0c 94 eb 09 	jmp	0x13d6	; 0x13d6 <__vector_19>
      50:	0c 94 c8 09 	jmp	0x1390	; 0x1390 <__vector_20>
      54:	0c 94 c0 08 	jmp	0x1180	; 0x1180 <__vector_21>
      58:	0c 94 a5 09 	jmp	0x134a	; 0x134a <__vector_22>
      5c:	0c 94 82 09 	jmp	0x1304	; 0x1304 <__vector_23>
      60:	0c 94 2d 09 	jmp	0x125a	; 0x125a <__vector_24>
      64:	0c 94 5f 09 	jmp	0x12be	; 0x12be <__vector_25>
      68:	c8 19       	sub	r28, r8
      6a:	d2 19       	sub	r29, r2
      6c:	de 19       	sub	r29, r14
      6e:	e8 19       	sub	r30, r8
      70:	f4 19       	sub	r31, r4
      72:	02 1a       	sub	r0, r18
      74:	12 1a       	sub	r1, r18
      76:	24 1a       	sub	r2, r20
      78:	3a 1a       	sub	r3, r26
      7a:	54 1a       	sub	r5, r20
      7c:	72 1a       	sub	r7, r18
      7e:	94 1a       	sub	r9, r20
      80:	ba 1a       	sub	r11, r26
      82:	08 1b       	sub	r16, r24
      84:	18 1b       	sub	r17, r24
      86:	26 1b       	sub	r18, r22
      88:	32 1b       	sub	r19, r18
      8a:	40 1b       	sub	r20, r16
      8c:	4a 1b       	sub	r20, r26
      8e:	a2 1b       	sub	r26, r18
      90:	a2 1b       	sub	r26, r18
      92:	56 1b       	sub	r21, r22
      94:	62 1b       	sub	r22, r18
      96:	6c 1b       	sub	r22, r28
      98:	76 1b       	sub	r23, r22
      9a:	86 1b       	sub	r24, r22
      9c:	96 1b       	sub	r25, r22

0000009e <__trampolines_end>:
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	00 00       	nop
      a4:	00 20       	and	r0, r0
      a6:	20 20       	and	r2, r0
      a8:	20 20       	and	r2, r0
      aa:	00 20       	and	r0, r0
      ac:	50 50       	subi	r21, 0x00	; 0
      ae:	50 00       	.word	0x0050	; ????
      b0:	00 00       	nop
      b2:	00 50       	subi	r16, 0x00	; 0
      b4:	50 f8       	bld	r5, 0
      b6:	50 f8       	bld	r5, 0
      b8:	50 50       	subi	r21, 0x00	; 0
      ba:	20 78       	andi	r18, 0x80	; 128
      bc:	a0 70       	andi	r26, 0x00	; 0
      be:	28 f0       	brcs	.+10     	; 0xca <__trampolines_end+0x2c>
      c0:	20 c0       	rjmp	.+64     	; 0x102 <__trampolines_end+0x64>
      c2:	c8 10       	cpse	r12, r8
      c4:	20 40       	sbci	r18, 0x00	; 0
      c6:	98 18       	sub	r9, r8
      c8:	60 90 a0 40 	lds	r6, 0x40A0	; 0x8040a0 <__bss_end+0x3c16>
      cc:	a8 90       	.word	0x90a8	; ????
      ce:	68 60       	ori	r22, 0x08	; 8
      d0:	20 40       	sbci	r18, 0x00	; 0
      d2:	00 00       	nop
      d4:	00 00       	nop
      d6:	10 20       	and	r1, r0
      d8:	40 40       	sbci	r20, 0x00	; 0
      da:	40 20       	and	r4, r0
      dc:	10 40       	sbci	r17, 0x00	; 0
      de:	20 10       	cpse	r2, r0
      e0:	10 10       	cpse	r1, r0
      e2:	20 40       	sbci	r18, 0x00	; 0
      e4:	00 50       	subi	r16, 0x00	; 0
      e6:	20 f8       	bld	r2, 0
      e8:	20 50       	subi	r18, 0x00	; 0
      ea:	00 00       	nop
      ec:	20 20       	and	r2, r0
      ee:	f8 20       	and	r15, r8
      f0:	20 00       	.word	0x0020	; ????
      f2:	00 00       	nop
      f4:	00 00       	nop
      f6:	60 20       	and	r6, r0
      f8:	40 00       	.word	0x0040	; ????
      fa:	00 00       	nop
      fc:	f8 00       	.word	0x00f8	; ????
      fe:	00 00       	nop
     100:	00 00       	nop
     102:	00 00       	nop
     104:	00 60       	ori	r16, 0x00	; 0
     106:	60 00       	.word	0x0060	; ????
     108:	08 10       	cpse	r0, r8
     10a:	20 40       	sbci	r18, 0x00	; 0
     10c:	80 00       	.word	0x0080	; ????
     10e:	70 88       	ldd	r7, Z+16	; 0x10
     110:	98 a8       	ldd	r9, Y+48	; 0x30
     112:	c8 88       	ldd	r12, Y+16	; 0x10
     114:	70 20       	and	r7, r0
     116:	60 20       	and	r6, r0
     118:	20 20       	and	r2, r0
     11a:	20 70       	andi	r18, 0x00	; 0
     11c:	70 88       	ldd	r7, Z+16	; 0x10
     11e:	08 10       	cpse	r0, r8
     120:	20 40       	sbci	r18, 0x00	; 0
     122:	f8 f8       	.word	0xf8f8	; ????
     124:	10 20       	and	r1, r0
     126:	10 08       	sbc	r1, r0
     128:	88 70       	andi	r24, 0x08	; 8
     12a:	10 30       	cpi	r17, 0x00	; 0
     12c:	50 90 f8 10 	lds	r5, 0x10F8	; 0x8010f8 <__bss_end+0xc6e>
     130:	10 f8       	bld	r1, 0
     132:	80 f0       	brcs	.+32     	; 0x154 <__trampolines_end+0xb6>
     134:	08 08       	sbc	r0, r8
     136:	88 70       	andi	r24, 0x08	; 8
     138:	30 40       	sbci	r19, 0x00	; 0
     13a:	80 f0       	brcs	.+32     	; 0x15c <__trampolines_end+0xbe>
     13c:	88 88       	ldd	r8, Y+16	; 0x10
     13e:	70 f8       	bld	r7, 0
     140:	08 10       	cpse	r0, r8
     142:	20 40       	sbci	r18, 0x00	; 0
     144:	40 40       	sbci	r20, 0x00	; 0
     146:	70 88       	ldd	r7, Z+16	; 0x10
     148:	88 70       	andi	r24, 0x08	; 8
     14a:	88 88       	ldd	r8, Y+16	; 0x10
     14c:	70 70       	andi	r23, 0x00	; 0
     14e:	88 88       	ldd	r8, Y+16	; 0x10
     150:	78 08       	sbc	r7, r8
     152:	10 60       	ori	r17, 0x00	; 0
     154:	00 60       	ori	r16, 0x00	; 0
     156:	60 00       	.word	0x0060	; ????
     158:	60 60       	ori	r22, 0x00	; 0
     15a:	00 00       	nop
     15c:	60 60       	ori	r22, 0x00	; 0
     15e:	00 60       	ori	r16, 0x00	; 0
     160:	20 40       	sbci	r18, 0x00	; 0
     162:	08 10       	cpse	r0, r8
     164:	20 40       	sbci	r18, 0x00	; 0
     166:	20 10       	cpse	r2, r0
     168:	08 00       	.word	0x0008	; ????
     16a:	00 f8       	bld	r0, 0
     16c:	00 f8       	bld	r0, 0
     16e:	00 00       	nop
     170:	80 40       	sbci	r24, 0x00	; 0
     172:	20 10       	cpse	r2, r0
     174:	20 40       	sbci	r18, 0x00	; 0
     176:	80 70       	andi	r24, 0x00	; 0
     178:	88 08       	sbc	r8, r8
     17a:	10 20       	and	r1, r0
     17c:	00 20       	and	r0, r0
     17e:	70 88       	ldd	r7, Z+16	; 0x10
     180:	08 68       	ori	r16, 0x88	; 136
     182:	a8 a8       	ldd	r10, Y+48	; 0x30
     184:	70 70       	andi	r23, 0x00	; 0
     186:	88 88       	ldd	r8, Y+16	; 0x10
     188:	88 f8       	.word	0xf888	; ????
     18a:	88 88       	ldd	r8, Y+16	; 0x10
     18c:	f0 88       	ldd	r15, Z+16	; 0x10
     18e:	88 f0       	brcs	.+34     	; 0x1b2 <__trampolines_end+0x114>
     190:	88 88       	ldd	r8, Y+16	; 0x10
     192:	f0 70       	andi	r31, 0x00	; 0
     194:	88 80       	ld	r8, Y
     196:	80 80       	ld	r8, Z
     198:	88 70       	andi	r24, 0x08	; 8
     19a:	e0 90 88 88 	lds	r14, 0x8888	; 0x808888 <__bss_end+0x83fe>
     19e:	88 90       	.word	0x9088	; ????
     1a0:	e0 f8       	bld	r14, 0
     1a2:	80 80       	ld	r8, Z
     1a4:	f0 80       	ld	r15, Z
     1a6:	80 f8       	bld	r8, 0
     1a8:	f8 80       	ld	r15, Y
     1aa:	80 e0       	ldi	r24, 0x00	; 0
     1ac:	80 80       	ld	r8, Z
     1ae:	80 70       	andi	r24, 0x00	; 0
     1b0:	88 80       	ld	r8, Y
     1b2:	80 98       	cbi	0x10, 0	; 16
     1b4:	88 70       	andi	r24, 0x08	; 8
     1b6:	88 88       	ldd	r8, Y+16	; 0x10
     1b8:	88 f8       	.word	0xf888	; ????
     1ba:	88 88       	ldd	r8, Y+16	; 0x10
     1bc:	88 70       	andi	r24, 0x08	; 8
     1be:	20 20       	and	r2, r0
     1c0:	20 20       	and	r2, r0
     1c2:	20 70       	andi	r18, 0x00	; 0
     1c4:	38 10       	cpse	r3, r8
     1c6:	10 10       	cpse	r1, r0
     1c8:	10 90 60 88 	lds	r1, 0x8860	; 0x808860 <__bss_end+0x83d6>
     1cc:	90 a0       	ldd	r9, Z+32	; 0x20
     1ce:	c0 a0       	ldd	r12, Z+32	; 0x20
     1d0:	90 88       	ldd	r9, Z+16	; 0x10
     1d2:	80 80       	ld	r8, Z
     1d4:	80 80       	ld	r8, Z
     1d6:	80 80       	ld	r8, Z
     1d8:	f8 88       	ldd	r15, Y+16	; 0x10
     1da:	d8 a8       	ldd	r13, Y+48	; 0x30
     1dc:	88 88       	ldd	r8, Y+16	; 0x10
     1de:	88 88       	ldd	r8, Y+16	; 0x10
     1e0:	88 88       	ldd	r8, Y+16	; 0x10
     1e2:	c8 a8       	ldd	r12, Y+48	; 0x30
     1e4:	98 88       	ldd	r9, Y+16	; 0x10
     1e6:	88 70       	andi	r24, 0x08	; 8
     1e8:	88 88       	ldd	r8, Y+16	; 0x10
     1ea:	88 88       	ldd	r8, Y+16	; 0x10
     1ec:	88 70       	andi	r24, 0x08	; 8
     1ee:	f0 88       	ldd	r15, Z+16	; 0x10
     1f0:	88 f0       	brcs	.+34     	; 0x214 <__trampolines_end+0x176>
     1f2:	80 80       	ld	r8, Z
     1f4:	80 70       	andi	r24, 0x00	; 0
     1f6:	88 88       	ldd	r8, Y+16	; 0x10
     1f8:	88 a8       	ldd	r8, Y+48	; 0x30
     1fa:	90 68       	ori	r25, 0x80	; 128
     1fc:	f0 88       	ldd	r15, Z+16	; 0x10
     1fe:	88 f0       	brcs	.+34     	; 0x222 <__trampolines_end+0x184>
     200:	a0 90 88 78 	lds	r10, 0x7888	; 0x807888 <__bss_end+0x73fe>
     204:	80 80       	ld	r8, Z
     206:	70 08       	sbc	r7, r0
     208:	08 f0       	brcs	.+2      	; 0x20c <__trampolines_end+0x16e>
     20a:	f8 20       	and	r15, r8
     20c:	20 20       	and	r2, r0
     20e:	20 20       	and	r2, r0
     210:	20 88       	ldd	r2, Z+16	; 0x10
     212:	88 88       	ldd	r8, Y+16	; 0x10
     214:	88 88       	ldd	r8, Y+16	; 0x10
     216:	88 70       	andi	r24, 0x08	; 8
     218:	88 88       	ldd	r8, Y+16	; 0x10
     21a:	88 88       	ldd	r8, Y+16	; 0x10
     21c:	88 50       	subi	r24, 0x08	; 8
     21e:	20 88       	ldd	r2, Z+16	; 0x10
     220:	88 88       	ldd	r8, Y+16	; 0x10
     222:	a8 a8       	ldd	r10, Y+48	; 0x30
     224:	d8 88       	ldd	r13, Y+16	; 0x10
     226:	88 88       	ldd	r8, Y+16	; 0x10
     228:	50 20       	and	r5, r0
     22a:	50 88       	ldd	r5, Z+16	; 0x10
     22c:	88 88       	ldd	r8, Y+16	; 0x10
     22e:	88 50       	subi	r24, 0x08	; 8
     230:	20 20       	and	r2, r0
     232:	20 20       	and	r2, r0
     234:	f8 08       	sbc	r15, r8
     236:	10 20       	and	r1, r0
     238:	40 80       	ld	r4, Z
     23a:	f8 38       	cpi	r31, 0x88	; 136
     23c:	20 20       	and	r2, r0
     23e:	20 20       	and	r2, r0
     240:	20 38       	cpi	r18, 0x80	; 128
     242:	00 80       	ld	r0, Z
     244:	40 20       	and	r4, r0
     246:	10 08       	sbc	r1, r0
     248:	00 e0       	ldi	r16, 0x00	; 0
     24a:	20 20       	and	r2, r0
     24c:	20 20       	and	r2, r0
     24e:	20 e0       	ldi	r18, 0x00	; 0
     250:	20 50       	subi	r18, 0x00	; 0
     252:	88 00       	.word	0x0088	; ????
	...
     25c:	00 f8       	bld	r0, 0
     25e:	40 20       	and	r4, r0
     260:	10 00       	.word	0x0010	; ????
     262:	00 00       	nop
     264:	00 00       	nop
     266:	00 70       	andi	r16, 0x00	; 0
     268:	08 78       	andi	r16, 0x88	; 136
     26a:	88 78       	andi	r24, 0x88	; 136
     26c:	80 80       	ld	r8, Z
     26e:	b0 c8       	rjmp	.-3744   	; 0xfffff3d0 <__eeprom_end+0xff7ef3d0>
     270:	88 88       	ldd	r8, Y+16	; 0x10
     272:	f0 00       	.word	0x00f0	; ????
     274:	00 70       	andi	r16, 0x00	; 0
     276:	80 80       	ld	r8, Z
     278:	88 70       	andi	r24, 0x08	; 8
     27a:	08 08       	sbc	r0, r8
     27c:	68 98       	cbi	0x0d, 0	; 13
     27e:	88 88       	ldd	r8, Y+16	; 0x10
     280:	78 00       	.word	0x0078	; ????
     282:	00 70       	andi	r16, 0x00	; 0
     284:	88 f8       	.word	0xf888	; ????
     286:	80 70       	andi	r24, 0x00	; 0
     288:	30 48       	sbci	r19, 0x80	; 128
     28a:	40 e0       	ldi	r20, 0x00	; 0
     28c:	40 40       	sbci	r20, 0x00	; 0
     28e:	40 00       	.word	0x0040	; ????
     290:	00 78       	andi	r16, 0x80	; 128
     292:	88 78       	andi	r24, 0x88	; 136
     294:	08 30       	cpi	r16, 0x08	; 8
     296:	80 80       	ld	r8, Z
     298:	b0 c8       	rjmp	.-3744   	; 0xfffff3fa <__eeprom_end+0xff7ef3fa>
     29a:	88 88       	ldd	r8, Y+16	; 0x10
     29c:	88 20       	and	r8, r8
     29e:	00 60       	ori	r16, 0x00	; 0
     2a0:	20 20       	and	r2, r0
     2a2:	20 70       	andi	r18, 0x00	; 0
     2a4:	10 00       	.word	0x0010	; ????
     2a6:	30 10       	cpse	r3, r0
     2a8:	10 90 60 40 	lds	r1, 0x4060	; 0x804060 <__bss_end+0x3bd6>
     2ac:	40 48       	sbci	r20, 0x80	; 128
     2ae:	50 60       	ori	r21, 0x00	; 0
     2b0:	50 48       	sbci	r21, 0x80	; 128
     2b2:	60 20       	and	r6, r0
     2b4:	20 20       	and	r2, r0
     2b6:	20 20       	and	r2, r0
     2b8:	70 00       	.word	0x0070	; ????
     2ba:	00 d0       	rcall	.+0      	; 0x2bc <__trampolines_end+0x21e>
     2bc:	a8 a8       	ldd	r10, Y+48	; 0x30
     2be:	88 88       	ldd	r8, Y+16	; 0x10
     2c0:	00 00       	nop
     2c2:	b0 c8       	rjmp	.-3744   	; 0xfffff424 <__eeprom_end+0xff7ef424>
     2c4:	88 88       	ldd	r8, Y+16	; 0x10
     2c6:	88 00       	.word	0x0088	; ????
     2c8:	00 70       	andi	r16, 0x00	; 0
     2ca:	88 88       	ldd	r8, Y+16	; 0x10
     2cc:	88 70       	andi	r24, 0x08	; 8
     2ce:	00 00       	nop
     2d0:	f0 88       	ldd	r15, Z+16	; 0x10
     2d2:	f0 80       	ld	r15, Z
     2d4:	80 00       	.word	0x0080	; ????
     2d6:	00 68       	ori	r16, 0x80	; 128
     2d8:	98 78       	andi	r25, 0x88	; 136
     2da:	08 08       	sbc	r0, r8
     2dc:	00 00       	nop
     2de:	b0 c8       	rjmp	.-3744   	; 0xfffff440 <__eeprom_end+0xff7ef440>
     2e0:	80 80       	ld	r8, Z
     2e2:	80 00       	.word	0x0080	; ????
     2e4:	00 70       	andi	r16, 0x00	; 0
     2e6:	80 70       	andi	r24, 0x00	; 0
     2e8:	08 f0       	brcs	.+2      	; 0x2ec <__trampolines_end+0x24e>
     2ea:	40 40       	sbci	r20, 0x00	; 0
     2ec:	e0 40       	sbci	r30, 0x00	; 0
     2ee:	40 48       	sbci	r20, 0x80	; 128
     2f0:	30 00       	.word	0x0030	; ????
     2f2:	00 88       	ldd	r0, Z+16	; 0x10
     2f4:	88 88       	ldd	r8, Y+16	; 0x10
     2f6:	98 68       	ori	r25, 0x88	; 136
     2f8:	00 00       	nop
     2fa:	88 88       	ldd	r8, Y+16	; 0x10
     2fc:	88 50       	subi	r24, 0x08	; 8
     2fe:	20 00       	.word	0x0020	; ????
     300:	00 88       	ldd	r0, Z+16	; 0x10
     302:	88 a8       	ldd	r8, Y+48	; 0x30
     304:	a8 50       	subi	r26, 0x08	; 8
     306:	00 00       	nop
     308:	88 50       	subi	r24, 0x08	; 8
     30a:	20 50       	subi	r18, 0x00	; 0
     30c:	88 00       	.word	0x0088	; ????
     30e:	00 88       	ldd	r0, Z+16	; 0x10
     310:	88 78       	andi	r24, 0x88	; 136
     312:	08 70       	andi	r16, 0x08	; 8
     314:	00 00       	nop
     316:	f8 10       	cpse	r15, r8
     318:	20 40       	sbci	r18, 0x00	; 0
     31a:	f8 10       	cpse	r15, r8
     31c:	20 20       	and	r2, r0
     31e:	40 20       	and	r4, r0
     320:	20 10       	cpse	r2, r0
     322:	20 20       	and	r2, r0
     324:	20 20       	and	r2, r0
     326:	20 20       	and	r2, r0
     328:	20 40       	sbci	r18, 0x00	; 0
     32a:	20 20       	and	r2, r0
     32c:	10 20       	and	r1, r0
     32e:	20 40       	sbci	r18, 0x00	; 0
     330:	20 50       	subi	r18, 0x00	; 0
     332:	20 00       	.word	0x0020	; ????
     334:	00 00       	nop
	...

00000337 <sysfont_glyphs>:
     337:	00 00 00 00 00 00 00 20 20 20 20 20 00 20 50 50     .......     . PP
     347:	50 00 00 00 00 50 50 f8 50 f8 50 50 20 78 a0 70     P....PP.P.PP x.p
     357:	28 f0 20 c0 c8 10 20 40 98 18 60 90 a0 40 a8 90     (. ... @..`..@..
     367:	68 60 20 40 00 00 00 00 10 20 40 40 40 20 10 40     h` @..... @@@ .@
     377:	20 10 10 10 20 40 00 50 20 f8 20 50 00 00 20 20      ... @.P . P..  
     387:	f8 20 20 00 00 00 00 00 60 20 40 00 00 00 f8 00     .  .....` @.....
     397:	00 00 00 00 00 00 00 60 60 00 08 10 20 40 80 00     .......``... @..
     3a7:	70 88 98 a8 c8 88 70 20 60 20 20 20 20 70 70 88     p.....p `    pp.
     3b7:	08 10 20 40 f8 f8 10 20 10 08 88 70 10 30 50 90     .. @... ...p.0P.
     3c7:	f8 10 10 f8 80 f0 08 08 88 70 30 40 80 f0 88 88     .........p0@....
     3d7:	70 f8 08 10 20 40 40 40 70 88 88 70 88 88 70 70     p... @@@p..p..pp
     3e7:	88 88 78 08 10 60 00 60 60 00 60 60 00 00 60 60     ..x..`.``.``..``
     3f7:	00 60 20 40 08 10 20 40 20 10 08 00 00 f8 00 f8     .` @.. @ .......
     407:	00 00 80 40 20 10 20 40 80 70 88 08 10 20 00 20     ...@ . @.p... . 
     417:	70 88 08 68 a8 a8 70 70 88 88 88 f8 88 88 f0 88     p..h..pp........
     427:	88 f0 88 88 f0 70 88 80 80 80 88 70 e0 90 88 88     .....p.....p....
     437:	88 90 e0 f8 80 80 f0 80 80 f8 f8 80 80 e0 80 80     ................
     447:	80 70 88 80 80 98 88 70 88 88 88 f8 88 88 88 70     .p.....p.......p
     457:	20 20 20 20 20 70 38 10 10 10 10 90 60 88 90 a0          p8.....`...
     467:	c0 a0 90 88 80 80 80 80 80 80 f8 88 d8 a8 88 88     ................
     477:	88 88 88 88 c8 a8 98 88 88 70 88 88 88 88 88 70     .........p.....p
     487:	f0 88 88 f0 80 80 80 70 88 88 88 a8 90 68 f0 88     .......p.....h..
     497:	88 f0 a0 90 88 78 80 80 70 08 08 f0 f8 20 20 20     .....x..p....   
     4a7:	20 20 20 88 88 88 88 88 88 70 88 88 88 88 88 50        ......p.....P
     4b7:	20 88 88 88 a8 a8 d8 88 88 88 50 20 50 88 88 88      .........P P...
     4c7:	88 50 20 20 20 20 f8 08 10 20 40 80 f8 38 20 20     .P    ... @..8  
     4d7:	20 20 20 38 00 80 40 20 10 08 00 e0 20 20 20 20        8..@ ....    
     4e7:	20 e0 20 50 88 00 00 00 00 00 00 00 00 00 00 f8      . P............
     4f7:	40 20 10 00 00 00 00 00 00 70 08 78 88 78 80 80     @ .......p.x.x..
     507:	b0 c8 88 88 f0 00 00 70 80 80 88 70 08 08 68 98     .......p...p..h.
     517:	88 88 78 00 00 70 88 f8 80 70 30 48 40 e0 40 40     ..x..p...p0H@.@@
     527:	40 00 00 78 88 78 08 30 80 80 b0 c8 88 88 88 20     @..x.x.0....... 
     537:	00 60 20 20 20 70 10 00 30 10 10 90 60 40 40 48     .`   p..0...`@@H
     547:	50 60 50 48 60 20 20 20 20 20 70 00 00 d0 a8 a8     P`PH`     p.....
     557:	88 88 00 00 b0 c8 88 88 88 00 00 70 88 88 88 70     ...........p...p
     567:	00 00 f0 88 f0 80 80 00 00 68 98 78 08 08 00 00     .........h.x....
     577:	b0 c8 80 80 80 00 00 70 80 70 08 f0 40 40 e0 40     .......p.p..@@.@
     587:	40 48 30 00 00 88 88 88 98 68 00 00 88 88 88 50     @H0......h.....P
     597:	20 00 00 88 88 a8 a8 50 00 00 88 50 20 50 88 00      ......P...P P..
     5a7:	00 88 88 78 08 70 00 00 f8 10 20 40 f8 10 20 20     ...x.p.... @..  
     5b7:	40 20 20 10 20 20 20 20 20 20 20 40 20 20 10 20     @  .       @  . 
     5c7:	20 40 20 50 20 00 00 00 00                           @ P ....

000005d0 <__ctors_end>:
     5d0:	11 24       	eor	r1, r1
     5d2:	1f be       	out	0x3f, r1	; 63
     5d4:	cf ef       	ldi	r28, 0xFF	; 255
     5d6:	d8 e0       	ldi	r29, 0x08	; 8
     5d8:	de bf       	out	0x3e, r29	; 62
     5da:	cd bf       	out	0x3d, r28	; 61

000005dc <__do_copy_data>:
     5dc:	13 e0       	ldi	r17, 0x03	; 3
     5de:	a0 e0       	ldi	r26, 0x00	; 0
     5e0:	b1 e0       	ldi	r27, 0x01	; 1
     5e2:	ea ea       	ldi	r30, 0xAA	; 170
     5e4:	fa e4       	ldi	r31, 0x4A	; 74
     5e6:	02 c0       	rjmp	.+4      	; 0x5ec <__do_copy_data+0x10>
     5e8:	05 90       	lpm	r0, Z+
     5ea:	0d 92       	st	X+, r0
     5ec:	a8 34       	cpi	r26, 0x48	; 72
     5ee:	b1 07       	cpc	r27, r17
     5f0:	d9 f7       	brne	.-10     	; 0x5e8 <__do_copy_data+0xc>

000005f2 <__do_clear_bss>:
     5f2:	24 e0       	ldi	r18, 0x04	; 4
     5f4:	a8 e4       	ldi	r26, 0x48	; 72
     5f6:	b3 e0       	ldi	r27, 0x03	; 3
     5f8:	01 c0       	rjmp	.+2      	; 0x5fc <.do_clear_bss_start>

000005fa <.do_clear_bss_loop>:
     5fa:	1d 92       	st	X+, r1

000005fc <.do_clear_bss_start>:
     5fc:	aa 38       	cpi	r26, 0x8A	; 138
     5fe:	b2 07       	cpc	r27, r18
     600:	e1 f7       	brne	.-8      	; 0x5fa <.do_clear_bss_loop>
     602:	0e 94 72 1e 	call	0x3ce4	; 0x3ce4 <main>
     606:	0c 94 53 25 	jmp	0x4aa6	; 0x4aa6 <_exit>

0000060a <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
     60a:	08 95       	ret

0000060c <sysclk_init>:

/**
 *  Function to initialize the clock and disable clock for not required modules.
 */
void sysclk_init(void)
{
     60c:	cf 93       	push	r28
     60e:	df 93       	push	r29
     610:	1f 92       	push	r1
     612:	cd b7       	in	r28, 0x3d	; 61
     614:	de b7       	in	r29, 0x3e	; 62
	/* Turn off all peripheral clocks that can be turned off.
	 * The debugWIRE system of some devices that shares system clock with the SPI module.
	 * Thus the PRSPI bit in the PRR register must not be set when debugging.
	 */
	for (i = 0; i < NUMBER_OF_POWER_REG; i++) {
		*(reg++) = 0xFF;
     616:	8f ef       	ldi	r24, 0xFF	; 255
     618:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
     61c:	8f b7       	in	r24, 0x3f	; 63
     61e:	89 83       	std	Y+1, r24	; 0x01
	cpu_irq_disable();
     620:	f8 94       	cli
	return flags;
     622:	89 81       	ldd	r24, Y+1	; 0x01
static inline void sysclk_set_prescalers(uint8_t psdiv)
{
#if !MEGA_UNSPECIFIED
	irqflags_t flags = cpu_irq_save();

	ASM(
     624:	5f 93       	push	r21
     626:	50 e8       	ldi	r21, 0x80	; 128
     628:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     62c:	50 e0       	ldi	r21, 0x00	; 0
     62e:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     632:	5f 91       	pop	r21
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     634:	8f bf       	out	0x3f, r24	; 63
	if ((CONFIG_SYSCLK_PSDIV != SYSCLK_PSDIV_8) ||
			(SYSCLK_PSDIV_8 != CLKPR)) {
		sysclk_set_prescalers(CONFIG_SYSCLK_PSDIV);
	}
#endif
}
     636:	0f 90       	pop	r0
     638:	df 91       	pop	r29
     63a:	cf 91       	pop	r28
     63c:	08 95       	ret

0000063e <sysclk_enable_module>:
 * \param port ID of the port to which the module is connected (one of
 * the \c power_red_id *definitions).
 * \param id The ID (bitmask) of the peripheral module to be enabled.
 */
void sysclk_enable_module(enum power_red_id port, uint8_t id)
{
     63e:	cf 93       	push	r28
     640:	df 93       	push	r29
     642:	1f 92       	push	r1
     644:	cd b7       	in	r28, 0x3d	; 61
     646:	de b7       	in	r29, 0x3e	; 62

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
     648:	9f b7       	in	r25, 0x3f	; 63
     64a:	99 83       	std	Y+1, r25	; 0x01
	cpu_irq_disable();
     64c:	f8 94       	cli
	return flags;
     64e:	99 81       	ldd	r25, Y+1	; 0x01
#if !MEGA_UNSPECIFIED && !MEGA_XX
	uint8_t *reg = (uint8_t *)&(POWER_REG_ADD);
	irqflags_t flags = cpu_irq_save();

	if (port < NUMBER_OF_POWER_REG) {
     650:	81 11       	cpse	r24, r1
     652:	06 c0       	rjmp	.+12     	; 0x660 <sysclk_enable_module+0x22>
		*(reg + port)  &= ~id;
     654:	60 95       	com	r22
     656:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
     65a:	68 23       	and	r22, r24
     65c:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     660:	9f bf       	out	0x3f, r25	; 63
	}
	cpu_irq_restore(flags);
#endif
}
     662:	0f 90       	pop	r0
     664:	df 91       	pop	r29
     666:	cf 91       	pop	r28
     668:	08 95       	ret

0000066a <sysclk_disable_module>:
 * \param port ID of the port to which the module is connected (one of
 * the \c power_red_id *definitions).
 * \param id The ID (bit mask) of the peripheral module to be disabled.
 */
void sysclk_disable_module( enum power_red_id port, uint8_t id)
{
     66a:	cf 93       	push	r28
     66c:	df 93       	push	r29
     66e:	1f 92       	push	r1
     670:	cd b7       	in	r28, 0x3d	; 61
     672:	de b7       	in	r29, 0x3e	; 62

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
     674:	9f b7       	in	r25, 0x3f	; 63
     676:	99 83       	std	Y+1, r25	; 0x01
	cpu_irq_disable();
     678:	f8 94       	cli
	return flags;
     67a:	99 81       	ldd	r25, Y+1	; 0x01
#if !MEGA_UNSPECIFIED && !MEGA_XX
	uint8_t *reg = (uint8_t *)&(POWER_REG_ADD);
	irqflags_t flags = cpu_irq_save();
	if (port < NUMBER_OF_POWER_REG) {
     67c:	81 11       	cpse	r24, r1
     67e:	05 c0       	rjmp	.+10     	; 0x68a <sysclk_disable_module+0x20>
		*(reg + port) |= id;
     680:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
     684:	68 2b       	or	r22, r24
     686:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     68a:	9f bf       	out	0x3f, r25	; 63
	}
	cpu_irq_restore(flags);
#endif
}
     68c:	0f 90       	pop	r0
     68e:	df 91       	pop	r29
     690:	cf 91       	pop	r28
     692:	08 95       	ret

00000694 <gfx_mono_generic_draw_horizontal_line>:
 * \param  length     Length of the line in pixels.
 * \param  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
     694:	ff 92       	push	r15
     696:	0f 93       	push	r16
     698:	1f 93       	push	r17
     69a:	cf 93       	push	r28
     69c:	df 93       	push	r29
     69e:	08 2f       	mov	r16, r24
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
     6a0:	84 2f       	mov	r24, r20
     6a2:	90 e0       	ldi	r25, 0x00	; 0
     6a4:	80 0f       	add	r24, r16
     6a6:	91 1d       	adc	r25, r1
     6a8:	81 3f       	cpi	r24, 0xF1	; 241
     6aa:	91 05       	cpc	r25, r1
     6ac:	14 f0       	brlt	.+4      	; 0x6b2 <gfx_mono_generic_draw_horizontal_line+0x1e>
		length = GFX_MONO_LCD_WIDTH - x;
     6ae:	40 ef       	ldi	r20, 0xF0	; 240
     6b0:	40 1b       	sub	r20, r16
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
     6b2:	44 23       	and	r20, r20
     6b4:	09 f4       	brne	.+2      	; 0x6b8 <gfx_mono_generic_draw_horizontal_line+0x24>
     6b6:	47 c0       	rjmp	.+142    	; 0x746 <gfx_mono_generic_draw_horizontal_line+0xb2>
	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
		length = GFX_MONO_LCD_WIDTH - x;
	}

	page = y / 8;
     6b8:	d6 2f       	mov	r29, r22
     6ba:	d6 95       	lsr	r29
     6bc:	d6 95       	lsr	r29
     6be:	d6 95       	lsr	r29
	pixelmask = (1 << (y - (page * 8)));
     6c0:	70 e0       	ldi	r23, 0x00	; 0
     6c2:	88 e0       	ldi	r24, 0x08	; 8
     6c4:	d8 9f       	mul	r29, r24
     6c6:	60 19       	sub	r22, r0
     6c8:	71 09       	sbc	r23, r1
     6ca:	11 24       	eor	r1, r1
     6cc:	81 e0       	ldi	r24, 0x01	; 1
     6ce:	90 e0       	ldi	r25, 0x00	; 0
     6d0:	01 c0       	rjmp	.+2      	; 0x6d4 <gfx_mono_generic_draw_horizontal_line+0x40>
     6d2:	88 0f       	add	r24, r24
     6d4:	6a 95       	dec	r22
     6d6:	ea f7       	brpl	.-6      	; 0x6d2 <gfx_mono_generic_draw_horizontal_line+0x3e>
     6d8:	f8 2e       	mov	r15, r24
	if (length == 0) {
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
     6da:	21 30       	cpi	r18, 0x01	; 1
     6dc:	31 f0       	breq	.+12     	; 0x6ea <gfx_mono_generic_draw_horizontal_line+0x56>
     6de:	40 f0       	brcs	.+16     	; 0x6f0 <gfx_mono_generic_draw_horizontal_line+0x5c>
     6e0:	22 30       	cpi	r18, 0x02	; 2
     6e2:	89 f5       	brne	.+98     	; 0x746 <gfx_mono_generic_draw_horizontal_line+0xb2>
     6e4:	cf ef       	ldi	r28, 0xFF	; 255
     6e6:	c4 0f       	add	r28, r20
     6e8:	22 c0       	rjmp	.+68     	; 0x72e <gfx_mono_generic_draw_horizontal_line+0x9a>
     6ea:	cf ef       	ldi	r28, 0xFF	; 255
     6ec:	c4 0f       	add	r28, r20
     6ee:	05 c0       	rjmp	.+10     	; 0x6fa <gfx_mono_generic_draw_horizontal_line+0x66>
     6f0:	cf ef       	ldi	r28, 0xFF	; 255
     6f2:	c4 0f       	add	r28, r20
		break;

	case GFX_PIXEL_CLR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
			temp &= ~pixelmask;
     6f4:	18 2f       	mov	r17, r24
     6f6:	10 95       	com	r17
     6f8:	0d c0       	rjmp	.+26     	; 0x714 <gfx_mono_generic_draw_horizontal_line+0x80>
     6fa:	10 2f       	mov	r17, r16
     6fc:	1c 0f       	add	r17, r28
	}

	switch (color) {
	case GFX_PIXEL_SET:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
     6fe:	61 2f       	mov	r22, r17
     700:	8d 2f       	mov	r24, r29
     702:	af d2       	rcall	.+1374   	; 0xc62 <gfx_mono_lcd_uc1608_get_byte>
			temp |= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
     704:	4f 2d       	mov	r20, r15
     706:	48 2b       	or	r20, r24
     708:	61 2f       	mov	r22, r17
     70a:	8d 2f       	mov	r24, r29
     70c:	98 d2       	rcall	.+1328   	; 0xc3e <gfx_mono_lcd_uc1608_put_byte>
     70e:	c1 50       	subi	r28, 0x01	; 1
     710:	a0 f7       	brcc	.-24     	; 0x6fa <gfx_mono_generic_draw_horizontal_line+0x66>
     712:	19 c0       	rjmp	.+50     	; 0x746 <gfx_mono_generic_draw_horizontal_line+0xb2>
     714:	f0 2e       	mov	r15, r16
		}
		break;

	case GFX_PIXEL_CLR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
     716:	fc 0e       	add	r15, r28
     718:	6f 2d       	mov	r22, r15
     71a:	8d 2f       	mov	r24, r29
			temp &= ~pixelmask;
     71c:	a2 d2       	rcall	.+1348   	; 0xc62 <gfx_mono_lcd_uc1608_get_byte>
			gfx_mono_put_byte(page, x + length, temp);
     71e:	41 2f       	mov	r20, r17
     720:	48 23       	and	r20, r24
     722:	6f 2d       	mov	r22, r15
     724:	8d 2f       	mov	r24, r29
     726:	8b d2       	rcall	.+1302   	; 0xc3e <gfx_mono_lcd_uc1608_put_byte>
     728:	c1 50       	subi	r28, 0x01	; 1
     72a:	a0 f7       	brcc	.-24     	; 0x714 <gfx_mono_generic_draw_horizontal_line+0x80>
     72c:	0c c0       	rjmp	.+24     	; 0x746 <gfx_mono_generic_draw_horizontal_line+0xb2>
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
     72e:	10 2f       	mov	r17, r16
     730:	1c 0f       	add	r17, r28
     732:	61 2f       	mov	r22, r17
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
     734:	8d 2f       	mov	r24, r29
     736:	95 d2       	rcall	.+1322   	; 0xc62 <gfx_mono_lcd_uc1608_get_byte>
     738:	4f 2d       	mov	r20, r15
     73a:	48 27       	eor	r20, r24
     73c:	61 2f       	mov	r22, r17
     73e:	8d 2f       	mov	r24, r29
     740:	7e d2       	rcall	.+1276   	; 0xc3e <gfx_mono_lcd_uc1608_put_byte>
     742:	c1 50       	subi	r28, 0x01	; 1
		break;

	default:
		break;
	}
}
     744:	a0 f7       	brcc	.-24     	; 0x72e <gfx_mono_generic_draw_horizontal_line+0x9a>
     746:	df 91       	pop	r29
     748:	cf 91       	pop	r28
     74a:	1f 91       	pop	r17
     74c:	0f 91       	pop	r16
     74e:	ff 90       	pop	r15
     750:	08 95       	ret

00000752 <gfx_mono_generic_draw_vertical_line>:
 * \param  length     Length of the line in pixels.
 * \param  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_vertical_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
     752:	ef 92       	push	r14
     754:	ff 92       	push	r15
     756:	0f 93       	push	r16
     758:	1f 93       	push	r17
     75a:	cf 93       	push	r28
     75c:	df 93       	push	r29
     75e:	94 2f       	mov	r25, r20
	if (length == 0) {
     760:	44 23       	and	r20, r20
     762:	09 f4       	brne	.+2      	; 0x766 <gfx_mono_generic_draw_vertical_line+0x14>
     764:	46 c0       	rjmp	.+140    	; 0x7f2 <gfx_mono_generic_draw_vertical_line+0xa0>
		return;
	}

	gfx_coord_t y2 = y + length - 1;
     766:	4f ef       	ldi	r20, 0xFF	; 255
     768:	46 0f       	add	r20, r22
     76a:	94 0f       	add	r25, r20

	if (y == y2) {
     76c:	69 13       	cpse	r22, r25
     76e:	08 c0       	rjmp	.+16     	; 0x780 <gfx_mono_generic_draw_vertical_line+0x2e>
		gfx_mono_draw_pixel(x, y, color);
     770:	42 2f       	mov	r20, r18
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
		}

		gfx_mono_mask_byte(y2page, x, y2pixelmask, color);
	}
}
     772:	df 91       	pop	r29
     774:	cf 91       	pop	r28
     776:	1f 91       	pop	r17
     778:	0f 91       	pop	r16
     77a:	ff 90       	pop	r15
	}

	gfx_coord_t y2 = y + length - 1;

	if (y == y2) {
		gfx_mono_draw_pixel(x, y, color);
     77c:	ef 90       	pop	r14
		return;
	}

	if (y2 >= GFX_MONO_LCD_HEIGHT - 1) {
     77e:	a4 c2       	rjmp	.+1352   	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
     780:	9f 37       	cpi	r25, 0x7F	; 127
		y2 = GFX_MONO_LCD_HEIGHT - 1;
     782:	08 f0       	brcs	.+2      	; 0x786 <gfx_mono_generic_draw_vertical_line+0x34>
	}

	gfx_coord_t y1page = y / 8;
     784:	9f e7       	ldi	r25, 0x7F	; 127
     786:	16 2f       	mov	r17, r22
     788:	16 95       	lsr	r17
     78a:	16 95       	lsr	r17
	gfx_coord_t y2page = y2 / 8;
     78c:	16 95       	lsr	r17
     78e:	09 2f       	mov	r16, r25
     790:	06 95       	lsr	r16
     792:	06 95       	lsr	r16

	uint8_t y1bitpos = y & 0x07;
	uint8_t y2bitpos = y2 & 0x07;

	uint8_t y1pixelmask = 0xFF << y1bitpos;
     794:	06 95       	lsr	r16
     796:	67 70       	andi	r22, 0x07	; 7
     798:	ef ef       	ldi	r30, 0xFF	; 255
     79a:	f0 e0       	ldi	r31, 0x00	; 0
     79c:	af 01       	movw	r20, r30
     79e:	01 c0       	rjmp	.+2      	; 0x7a2 <gfx_mono_generic_draw_vertical_line+0x50>
     7a0:	44 0f       	add	r20, r20
     7a2:	6a 95       	dec	r22
	uint8_t y2pixelmask = 0xFF >> (7 - y2bitpos);
     7a4:	ea f7       	brpl	.-6      	; 0x7a0 <gfx_mono_generic_draw_vertical_line+0x4e>
     7a6:	97 70       	andi	r25, 0x07	; 7
     7a8:	67 e0       	ldi	r22, 0x07	; 7
     7aa:	70 e0       	ldi	r23, 0x00	; 0
     7ac:	69 1b       	sub	r22, r25
     7ae:	71 09       	sbc	r23, r1
     7b0:	7f 01       	movw	r14, r30
     7b2:	02 c0       	rjmp	.+4      	; 0x7b8 <gfx_mono_generic_draw_vertical_line+0x66>
     7b4:	f5 94       	asr	r15
     7b6:	e7 94       	ror	r14
     7b8:	6a 95       	dec	r22

	/* The pixels are on the same page; combine masks */
	if (y1page == y2page) {
     7ba:	e2 f7       	brpl	.-8      	; 0x7b4 <gfx_mono_generic_draw_vertical_line+0x62>
     7bc:	10 13       	cpse	r17, r16
		uint8_t pixelmask = y1pixelmask & y2pixelmask;
		gfx_mono_mask_byte(y1page, x, pixelmask, color);
     7be:	04 c0       	rjmp	.+8      	; 0x7c8 <gfx_mono_generic_draw_vertical_line+0x76>
     7c0:	4e 21       	and	r20, r14
     7c2:	68 2f       	mov	r22, r24
     7c4:	81 2f       	mov	r24, r17
     7c6:	0e c0       	rjmp	.+28     	; 0x7e4 <gfx_mono_generic_draw_vertical_line+0x92>
     7c8:	d2 2f       	mov	r29, r18
	} else {
		gfx_mono_mask_byte(y1page, x, y1pixelmask, color);

		while (++y1page < y2page) {
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
     7ca:	c8 2f       	mov	r28, r24
     7cc:	6c 2f       	mov	r22, r28
     7ce:	81 2f       	mov	r24, r17
		uint8_t pixelmask = y1pixelmask & y2pixelmask;
		gfx_mono_mask_byte(y1page, x, pixelmask, color);
	} else {
		gfx_mono_mask_byte(y1page, x, y1pixelmask, color);

		while (++y1page < y2page) {
     7d0:	56 d2       	rcall	.+1196   	; 0xc7e <gfx_mono_lcd_uc1608_mask_byte>
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
     7d2:	1f 5f       	subi	r17, 0xFF	; 255
		uint8_t pixelmask = y1pixelmask & y2pixelmask;
		gfx_mono_mask_byte(y1page, x, pixelmask, color);
	} else {
		gfx_mono_mask_byte(y1page, x, y1pixelmask, color);

		while (++y1page < y2page) {
     7d4:	2d 2f       	mov	r18, r29
     7d6:	10 17       	cp	r17, r16
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
     7d8:	10 f4       	brcc	.+4      	; 0x7de <gfx_mono_generic_draw_vertical_line+0x8c>
     7da:	4f ef       	ldi	r20, 0xFF	; 255
		}

		gfx_mono_mask_byte(y2page, x, y2pixelmask, color);
     7dc:	f7 cf       	rjmp	.-18     	; 0x7cc <gfx_mono_generic_draw_vertical_line+0x7a>
     7de:	4e 2d       	mov	r20, r14
     7e0:	6c 2f       	mov	r22, r28
	}
}
     7e2:	80 2f       	mov	r24, r16
     7e4:	df 91       	pop	r29
     7e6:	cf 91       	pop	r28
     7e8:	1f 91       	pop	r17
     7ea:	0f 91       	pop	r16

		while (++y1page < y2page) {
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
		}

		gfx_mono_mask_byte(y2page, x, y2pixelmask, color);
     7ec:	ff 90       	pop	r15
     7ee:	ef 90       	pop	r14
	}
}
     7f0:	46 c2       	rjmp	.+1164   	; 0xc7e <gfx_mono_lcd_uc1608_mask_byte>
     7f2:	df 91       	pop	r29
     7f4:	cf 91       	pop	r28
     7f6:	1f 91       	pop	r17
     7f8:	0f 91       	pop	r16
     7fa:	ff 90       	pop	r15
     7fc:	ef 90       	pop	r14
     7fe:	08 95       	ret

00000800 <gfx_mono_generic_draw_line>:
 * \param  color       Pixel operation of the line.
 */
void gfx_mono_generic_draw_line(gfx_coord_t x1, gfx_coord_t y1,
		gfx_coord_t x2, gfx_coord_t y2,
		enum gfx_mono_color color)
{
     800:	8f 92       	push	r8
     802:	9f 92       	push	r9
     804:	af 92       	push	r10
     806:	bf 92       	push	r11
     808:	cf 92       	push	r12
     80a:	df 92       	push	r13
     80c:	ef 92       	push	r14
     80e:	ff 92       	push	r15
     810:	0f 93       	push	r16
     812:	1f 93       	push	r17
     814:	cf 93       	push	r28
     816:	df 93       	push	r29
     818:	18 2f       	mov	r17, r24
     81a:	b6 2e       	mov	r11, r22
	int16_t dx;
	int16_t dy;
	int16_t e;

	/* swap x1,y1  with x2,y2 */
	if (x1 > x2) {
     81c:	48 17       	cp	r20, r24
     81e:	28 f4       	brcc	.+10     	; 0x82a <gfx_mono_generic_draw_line+0x2a>
		dx = x1;
		x1 = x2;
		x2 = dx;
		dy = y1;
		y1 = y2;
     820:	b2 2e       	mov	r11, r18
		y2 = dy;
     822:	26 2f       	mov	r18, r22
	int16_t dx;
	int16_t dy;
	int16_t e;

	/* swap x1,y1  with x2,y2 */
	if (x1 > x2) {
     824:	81 2f       	mov	r24, r17
     826:	14 2f       	mov	r17, r20
     828:	48 2f       	mov	r20, r24
		dy = y1;
		y1 = y2;
		y2 = dy;
	}

	dx = x2 - x1;
     82a:	c4 2f       	mov	r28, r20
     82c:	d0 e0       	ldi	r29, 0x00	; 0
     82e:	c1 1b       	sub	r28, r17
     830:	d1 09       	sbc	r29, r1
	dy = y2 - y1;
     832:	e2 2e       	mov	r14, r18
     834:	f1 2c       	mov	r15, r1
     836:	eb 18       	sub	r14, r11
     838:	f1 08       	sbc	r15, r1

	x = x1;
	y = y1;

	if (dx < 0) {
     83a:	d7 ff       	sbrs	r29, 7
     83c:	06 c0       	rjmp	.+12     	; 0x84a <gfx_mono_generic_draw_line+0x4a>
		xinc = -1;
		dx = -dx;
     83e:	d1 95       	neg	r29
     840:	c1 95       	neg	r28
     842:	d1 09       	sbc	r29, r1

	x = x1;
	y = y1;

	if (dx < 0) {
		xinc = -1;
     844:	99 24       	eor	r9, r9
     846:	9a 94       	dec	r9
     848:	02 c0       	rjmp	.+4      	; 0x84e <gfx_mono_generic_draw_line+0x4e>
		dx = -dx;
	} else {
		xinc = 1;
     84a:	99 24       	eor	r9, r9
     84c:	93 94       	inc	r9
	}

	if (dy < 0) {
     84e:	f7 fe       	sbrs	r15, 7
     850:	06 c0       	rjmp	.+12     	; 0x85e <gfx_mono_generic_draw_line+0x5e>
		yinc = -1;
		dy = -dy;
     852:	f1 94       	neg	r15
     854:	e1 94       	neg	r14
     856:	f1 08       	sbc	r15, r1
	} else {
		xinc = 1;
	}

	if (dy < 0) {
		yinc = -1;
     858:	88 24       	eor	r8, r8
     85a:	8a 94       	dec	r8
     85c:	02 c0       	rjmp	.+4      	; 0x862 <gfx_mono_generic_draw_line+0x62>
		dy = -dy;
	} else {
		yinc = 1;
     85e:	88 24       	eor	r8, r8
     860:	83 94       	inc	r8
	}

	if (dx > dy) {
     862:	ec 16       	cp	r14, r28
     864:	fd 06       	cpc	r15, r29
     866:	bc f4       	brge	.+46     	; 0x896 <gfx_mono_generic_draw_line+0x96>
		e = dy - dx;
     868:	67 01       	movw	r12, r14
     86a:	cc 1a       	sub	r12, r28
     86c:	dd 0a       	sbc	r13, r29
		for (i = 0; i <= dx; i++) {
     86e:	a1 2c       	mov	r10, r1
     870:	8a 2d       	mov	r24, r10
     872:	90 e0       	ldi	r25, 0x00	; 0
     874:	c8 17       	cp	r28, r24
     876:	d9 07       	cpc	r29, r25
     878:	2c f1       	brlt	.+74     	; 0x8c4 <gfx_mono_generic_draw_line+0xc4>
			gfx_mono_draw_pixel(x, y, color);
     87a:	40 2f       	mov	r20, r16
     87c:	6b 2d       	mov	r22, r11
     87e:	81 2f       	mov	r24, r17
     880:	23 d2       	rcall	.+1094   	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
			if (e >= 0) {
     882:	d7 fc       	sbrc	r13, 7
     884:	03 c0       	rjmp	.+6      	; 0x88c <gfx_mono_generic_draw_line+0x8c>
				e -= dx;
     886:	cc 1a       	sub	r12, r28
     888:	dd 0a       	sbc	r13, r29
				y += yinc;
     88a:	b8 0c       	add	r11, r8
			}

			e += dy;
     88c:	ce 0c       	add	r12, r14
     88e:	df 1c       	adc	r13, r15
     890:	19 0d       	add	r17, r9
		yinc = 1;
	}

	if (dx > dy) {
		e = dy - dx;
		for (i = 0; i <= dx; i++) {
     892:	a3 94       	inc	r10
     894:	ed cf       	rjmp	.-38     	; 0x870 <gfx_mono_generic_draw_line+0x70>

			e += dy;
			x += xinc;
		}
	} else {
		e = dx - dy;
     896:	6e 01       	movw	r12, r28
     898:	ce 18       	sub	r12, r14
     89a:	df 08       	sbc	r13, r15
		for (i = 0; i <= dy; i++) {
     89c:	a1 2c       	mov	r10, r1
     89e:	8a 2d       	mov	r24, r10
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	e8 16       	cp	r14, r24
     8a4:	f9 06       	cpc	r15, r25
     8a6:	74 f0       	brlt	.+28     	; 0x8c4 <gfx_mono_generic_draw_line+0xc4>
			gfx_mono_draw_pixel(x, y, color);
     8a8:	40 2f       	mov	r20, r16
     8aa:	6b 2d       	mov	r22, r11
     8ac:	81 2f       	mov	r24, r17
     8ae:	0c d2       	rcall	.+1048   	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
			if (e >= 0) {
     8b0:	d7 fc       	sbrc	r13, 7
     8b2:	03 c0       	rjmp	.+6      	; 0x8ba <gfx_mono_generic_draw_line+0xba>
				e -= dy;
     8b4:	ce 18       	sub	r12, r14
     8b6:	df 08       	sbc	r13, r15
				x += xinc;
     8b8:	19 0d       	add	r17, r9
			}

			e += dx;
     8ba:	cc 0e       	add	r12, r28
     8bc:	dd 1e       	adc	r13, r29
     8be:	b8 0c       	add	r11, r8
			e += dy;
			x += xinc;
		}
	} else {
		e = dx - dy;
		for (i = 0; i <= dy; i++) {
     8c0:	a3 94       	inc	r10
     8c2:	ed cf       	rjmp	.-38     	; 0x89e <gfx_mono_generic_draw_line+0x9e>

			e += dx;
			y += yinc;
		}
	}
}
     8c4:	df 91       	pop	r29
     8c6:	cf 91       	pop	r28
     8c8:	1f 91       	pop	r17
     8ca:	0f 91       	pop	r16
     8cc:	ff 90       	pop	r15
     8ce:	ef 90       	pop	r14
     8d0:	df 90       	pop	r13
     8d2:	cf 90       	pop	r12
     8d4:	bf 90       	pop	r11
     8d6:	af 90       	pop	r10
     8d8:	9f 90       	pop	r9
     8da:	8f 90       	pop	r8
     8dc:	08 95       	ret

000008de <gfx_mono_generic_draw_rect>:
 * \param  color       Pixel operation of the line.
 */
void gfx_mono_generic_draw_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
     8de:	ff 92       	push	r15
     8e0:	0f 93       	push	r16
     8e2:	1f 93       	push	r17
     8e4:	cf 93       	push	r28
     8e6:	df 93       	push	r29
     8e8:	d8 2f       	mov	r29, r24
     8ea:	16 2f       	mov	r17, r22
     8ec:	c4 2f       	mov	r28, r20
     8ee:	f2 2e       	mov	r15, r18
	gfx_mono_draw_horizontal_line(x, y, width, color);
     8f0:	20 2f       	mov	r18, r16
     8f2:	d0 de       	rcall	.-608    	; 0x694 <gfx_mono_generic_draw_horizontal_line>
	gfx_mono_draw_horizontal_line(x, y + height - 1, width, color);
     8f4:	6f ef       	ldi	r22, 0xFF	; 255
     8f6:	6f 0d       	add	r22, r15
     8f8:	61 0f       	add	r22, r17
     8fa:	20 2f       	mov	r18, r16
     8fc:	4c 2f       	mov	r20, r28
     8fe:	8d 2f       	mov	r24, r29
     900:	c9 de       	rcall	.-622    	; 0x694 <gfx_mono_generic_draw_horizontal_line>

	gfx_mono_draw_vertical_line(x, y, height, color);
     902:	20 2f       	mov	r18, r16
     904:	4f 2d       	mov	r20, r15
     906:	61 2f       	mov	r22, r17
     908:	8d 2f       	mov	r24, r29
     90a:	23 df       	rcall	.-442    	; 0x752 <gfx_mono_generic_draw_vertical_line>
	gfx_mono_draw_vertical_line(x + width - 1, y, height, color);
     90c:	8f ef       	ldi	r24, 0xFF	; 255
     90e:	8c 0f       	add	r24, r28
     910:	20 2f       	mov	r18, r16
     912:	4f 2d       	mov	r20, r15
     914:	61 2f       	mov	r22, r17
     916:	8d 0f       	add	r24, r29
}
     918:	df 91       	pop	r29
     91a:	cf 91       	pop	r28
     91c:	1f 91       	pop	r17
     91e:	0f 91       	pop	r16
{
	gfx_mono_draw_horizontal_line(x, y, width, color);
	gfx_mono_draw_horizontal_line(x, y + height - 1, width, color);

	gfx_mono_draw_vertical_line(x, y, height, color);
	gfx_mono_draw_vertical_line(x + width - 1, y, height, color);
     920:	ff 90       	pop	r15
     922:	17 cf       	rjmp	.-466    	; 0x752 <gfx_mono_generic_draw_vertical_line>

00000924 <gfx_mono_generic_draw_filled_rect>:
 * \param  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
     924:	ff 92       	push	r15
     926:	0f 93       	push	r16
     928:	1f 93       	push	r17
     92a:	cf 93       	push	r28
     92c:	df 93       	push	r29
	if (height == 0) {
     92e:	22 23       	and	r18, r18
     930:	69 f0       	breq	.+26     	; 0x94c <gfx_mono_generic_draw_filled_rect+0x28>
     932:	14 2f       	mov	r17, r20
     934:	f6 2e       	mov	r15, r22
     936:	d8 2f       	mov	r29, r24
     938:	cf ef       	ldi	r28, 0xFF	; 255
     93a:	c2 0f       	add	r28, r18
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
     93c:	6f 2d       	mov	r22, r15
     93e:	6c 0f       	add	r22, r28
     940:	20 2f       	mov	r18, r16
     942:	41 2f       	mov	r20, r17
     944:	8d 2f       	mov	r24, r29
     946:	a6 de       	rcall	.-692    	; 0x694 <gfx_mono_generic_draw_horizontal_line>
     948:	c1 50       	subi	r28, 0x01	; 1
     94a:	c0 f7       	brcc	.-16     	; 0x93c <gfx_mono_generic_draw_filled_rect+0x18>
	}
}
     94c:	df 91       	pop	r29
     94e:	cf 91       	pop	r28
     950:	1f 91       	pop	r17
     952:	0f 91       	pop	r16
     954:	ff 90       	pop	r15
     956:	08 95       	ret

00000958 <gfx_mono_generic_draw_circle>:
 * \param  octant_mask Bitmask indicating which octants to draw.
 */
void gfx_mono_generic_draw_circle(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t radius, enum gfx_mono_color color,
		uint8_t octant_mask)
{
     958:	5f 92       	push	r5
     95a:	6f 92       	push	r6
     95c:	7f 92       	push	r7
     95e:	8f 92       	push	r8
     960:	9f 92       	push	r9
     962:	af 92       	push	r10
     964:	bf 92       	push	r11
     966:	cf 92       	push	r12
     968:	df 92       	push	r13
     96a:	ef 92       	push	r14
     96c:	ff 92       	push	r15
     96e:	0f 93       	push	r16
     970:	1f 93       	push	r17
     972:	cf 93       	push	r28
     974:	df 93       	push	r29
     976:	18 2f       	mov	r17, r24
     978:	f6 2e       	mov	r15, r22
     97a:	c4 2f       	mov	r28, r20
     97c:	e2 2e       	mov	r14, r18
	gfx_coord_t offset_x;
	gfx_coord_t offset_y;
	int16_t error;

	/* Draw only a pixel if radius is zero. */
	if (radius == 0) {
     97e:	41 11       	cpse	r20, r1
     980:	11 c0       	rjmp	.+34     	; 0x9a4 <gfx_mono_generic_draw_circle+0x4c>
		gfx_mono_draw_pixel(x, y, color);
     982:	42 2f       	mov	r20, r18
		}

		/* Next X. */
		++offset_x;
	}
}
     984:	df 91       	pop	r29
     986:	cf 91       	pop	r28
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	cf 90       	pop	r12
     994:	bf 90       	pop	r11
     996:	af 90       	pop	r10
     998:	9f 90       	pop	r9
     99a:	8f 90       	pop	r8
     99c:	7f 90       	pop	r7
     99e:	6f 90       	pop	r6
	gfx_coord_t offset_y;
	int16_t error;

	/* Draw only a pixel if radius is zero. */
	if (radius == 0) {
		gfx_mono_draw_pixel(x, y, color);
     9a0:	5f 90       	pop	r5
	}

	/* Set up start iterators. */
	offset_x = 0;
	offset_y = radius;
	error = 3 - 2 * radius;
     9a2:	92 c1       	rjmp	.+804    	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
     9a4:	83 e0       	ldi	r24, 0x03	; 3
     9a6:	90 e0       	ldi	r25, 0x00	; 0
     9a8:	6c 01       	movw	r12, r24
     9aa:	22 e0       	ldi	r18, 0x02	; 2
     9ac:	42 9f       	mul	r20, r18
     9ae:	c0 18       	sub	r12, r0
     9b0:	d1 08       	sbc	r13, r1
		gfx_mono_draw_pixel(x, y, color);
		return;
	}

	/* Set up start iterators. */
	offset_x = 0;
     9b2:	11 24       	eor	r1, r1
	error = 3 - 2 * radius;

	/* Iterate offsetX from 0 to radius. */
	while (offset_x <= offset_y) {
		/* Draw one pixel for each octant enabled in octant_mask. */
		if (octant_mask & GFX_OCTANT0) {
     9b4:	d0 e0       	ldi	r29, 0x00	; 0
     9b6:	80 2f       	mov	r24, r16
     9b8:	81 70       	andi	r24, 0x01	; 1
			gfx_mono_draw_pixel(x + offset_y, y - offset_x, color);
		}

		if (octant_mask & GFX_OCTANT1) {
     9ba:	b8 2e       	mov	r11, r24
     9bc:	20 2f       	mov	r18, r16
     9be:	22 70       	andi	r18, 0x02	; 2
			gfx_mono_draw_pixel(x + offset_x, y - offset_y, color);
		}

		if (octant_mask & GFX_OCTANT2) {
     9c0:	a2 2e       	mov	r10, r18
     9c2:	80 2f       	mov	r24, r16
     9c4:	84 70       	andi	r24, 0x04	; 4
			gfx_mono_draw_pixel(x - offset_x, y - offset_y, color);
		}

		if (octant_mask & GFX_OCTANT3) {
     9c6:	98 2e       	mov	r9, r24
     9c8:	20 2f       	mov	r18, r16
     9ca:	28 70       	andi	r18, 0x08	; 8
			gfx_mono_draw_pixel(x - offset_y, y - offset_x, color);
		}

		if (octant_mask & GFX_OCTANT4) {
     9cc:	82 2e       	mov	r8, r18
     9ce:	80 2f       	mov	r24, r16
     9d0:	80 71       	andi	r24, 0x10	; 16
			gfx_mono_draw_pixel(x - offset_y, y + offset_x, color);
		}

		if (octant_mask & GFX_OCTANT5) {
     9d2:	78 2e       	mov	r7, r24
     9d4:	20 2f       	mov	r18, r16
     9d6:	20 72       	andi	r18, 0x20	; 32
			gfx_mono_draw_pixel(x - offset_x, y + offset_y, color);
		}

		if (octant_mask & GFX_OCTANT6) {
     9d8:	62 2e       	mov	r6, r18
     9da:	80 2f       	mov	r24, r16
     9dc:	80 74       	andi	r24, 0x40	; 64
	error = 3 - 2 * radius;

	/* Iterate offsetX from 0 to radius. */
	while (offset_x <= offset_y) {
		/* Draw one pixel for each octant enabled in octant_mask. */
		if (octant_mask & GFX_OCTANT0) {
     9de:	58 2e       	mov	r5, r24
     9e0:	bb 20       	and	r11, r11
			gfx_mono_draw_pixel(x + offset_y, y - offset_x, color);
     9e2:	31 f0       	breq	.+12     	; 0x9f0 <gfx_mono_generic_draw_circle+0x98>
     9e4:	4e 2d       	mov	r20, r14
     9e6:	6f 2d       	mov	r22, r15
     9e8:	6d 1b       	sub	r22, r29
     9ea:	81 2f       	mov	r24, r17
     9ec:	8c 0f       	add	r24, r28
		}

		if (octant_mask & GFX_OCTANT1) {
     9ee:	6c d1       	rcall	.+728    	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
     9f0:	aa 20       	and	r10, r10
			gfx_mono_draw_pixel(x + offset_x, y - offset_y, color);
     9f2:	31 f0       	breq	.+12     	; 0xa00 <gfx_mono_generic_draw_circle+0xa8>
     9f4:	4e 2d       	mov	r20, r14
     9f6:	6f 2d       	mov	r22, r15
     9f8:	6c 1b       	sub	r22, r28
     9fa:	81 2f       	mov	r24, r17
     9fc:	8d 0f       	add	r24, r29
		}

		if (octant_mask & GFX_OCTANT2) {
     9fe:	64 d1       	rcall	.+712    	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
     a00:	99 20       	and	r9, r9
			gfx_mono_draw_pixel(x - offset_x, y - offset_y, color);
     a02:	31 f0       	breq	.+12     	; 0xa10 <gfx_mono_generic_draw_circle+0xb8>
     a04:	4e 2d       	mov	r20, r14
     a06:	6f 2d       	mov	r22, r15
     a08:	6c 1b       	sub	r22, r28
     a0a:	81 2f       	mov	r24, r17
     a0c:	8d 1b       	sub	r24, r29
		}

		if (octant_mask & GFX_OCTANT3) {
     a0e:	5c d1       	rcall	.+696    	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
     a10:	88 20       	and	r8, r8
			gfx_mono_draw_pixel(x - offset_y, y - offset_x, color);
     a12:	31 f0       	breq	.+12     	; 0xa20 <gfx_mono_generic_draw_circle+0xc8>
     a14:	4e 2d       	mov	r20, r14
     a16:	6f 2d       	mov	r22, r15
     a18:	6d 1b       	sub	r22, r29
     a1a:	81 2f       	mov	r24, r17
     a1c:	8c 1b       	sub	r24, r28
		}

		if (octant_mask & GFX_OCTANT4) {
     a1e:	54 d1       	rcall	.+680    	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
			gfx_mono_draw_pixel(x - offset_y, y + offset_x, color);
     a20:	77 20       	and	r7, r7
     a22:	31 f0       	breq	.+12     	; 0xa30 <gfx_mono_generic_draw_circle+0xd8>
     a24:	4e 2d       	mov	r20, r14
     a26:	6f 2d       	mov	r22, r15
     a28:	6d 0f       	add	r22, r29
     a2a:	81 2f       	mov	r24, r17
		}

		if (octant_mask & GFX_OCTANT5) {
     a2c:	8c 1b       	sub	r24, r28
			gfx_mono_draw_pixel(x - offset_x, y + offset_y, color);
     a2e:	4c d1       	rcall	.+664    	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
     a30:	66 20       	and	r6, r6
     a32:	31 f0       	breq	.+12     	; 0xa40 <gfx_mono_generic_draw_circle+0xe8>
     a34:	4e 2d       	mov	r20, r14
     a36:	6f 2d       	mov	r22, r15
     a38:	6c 0f       	add	r22, r28
		}

		if (octant_mask & GFX_OCTANT6) {
     a3a:	81 2f       	mov	r24, r17
			gfx_mono_draw_pixel(x + offset_x, y + offset_y, color);
     a3c:	8d 1b       	sub	r24, r29
     a3e:	44 d1       	rcall	.+648    	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
     a40:	55 20       	and	r5, r5
     a42:	31 f0       	breq	.+12     	; 0xa50 <gfx_mono_generic_draw_circle+0xf8>
     a44:	4e 2d       	mov	r20, r14
     a46:	6f 2d       	mov	r22, r15
		}

		if (octant_mask & GFX_OCTANT7) {
     a48:	6c 0f       	add	r22, r28
     a4a:	81 2f       	mov	r24, r17
			gfx_mono_draw_pixel(x + offset_y, y + offset_x, color);
     a4c:	8d 0f       	add	r24, r29
     a4e:	3c d1       	rcall	.+632    	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
     a50:	07 ff       	sbrs	r16, 7
     a52:	06 c0       	rjmp	.+12     	; 0xa60 <gfx_mono_generic_draw_circle+0x108>
     a54:	4e 2d       	mov	r20, r14
     a56:	6f 2d       	mov	r22, r15
     a58:	6d 0f       	add	r22, r29
     a5a:	81 2f       	mov	r24, r17
     a5c:	8c 0f       	add	r24, r28
		}

		/* Update error value and step offset_y when required. */
		if (error < 0) {
     a5e:	34 d1       	rcall	.+616    	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
     a60:	8d 2f       	mov	r24, r29
			error += ((offset_x << 2) + 6);
     a62:	90 e0       	ldi	r25, 0x00	; 0
     a64:	d7 fe       	sbrs	r13, 7
     a66:	08 c0       	rjmp	.+16     	; 0xa78 <gfx_mono_generic_draw_circle+0x120>
     a68:	88 0f       	add	r24, r24
     a6a:	99 1f       	adc	r25, r25
     a6c:	88 0f       	add	r24, r24
     a6e:	99 1f       	adc	r25, r25
     a70:	06 96       	adiw	r24, 0x06	; 6
		} else {
			error += (((offset_x - offset_y) << 2) + 10);
     a72:	c8 0e       	add	r12, r24
     a74:	d9 1e       	adc	r13, r25
     a76:	0a c0       	rjmp	.+20     	; 0xa8c <gfx_mono_generic_draw_circle+0x134>
     a78:	8c 1b       	sub	r24, r28
     a7a:	91 09       	sbc	r25, r1
     a7c:	88 0f       	add	r24, r24
     a7e:	99 1f       	adc	r25, r25
     a80:	88 0f       	add	r24, r24
     a82:	99 1f       	adc	r25, r25
			--offset_y;
     a84:	0a 96       	adiw	r24, 0x0a	; 10
		}

		/* Next X. */
		++offset_x;
     a86:	c8 0e       	add	r12, r24
	offset_x = 0;
	offset_y = radius;
	error = 3 - 2 * radius;

	/* Iterate offsetX from 0 to radius. */
	while (offset_x <= offset_y) {
     a88:	d9 1e       	adc	r13, r25
     a8a:	c1 50       	subi	r28, 0x01	; 1
     a8c:	df 5f       	subi	r29, 0xFF	; 255
		}

		/* Next X. */
		++offset_x;
	}
}
     a8e:	cd 17       	cp	r28, r29
     a90:	08 f0       	brcs	.+2      	; 0xa94 <gfx_mono_generic_draw_circle+0x13c>
     a92:	a6 cf       	rjmp	.-180    	; 0x9e0 <gfx_mono_generic_draw_circle+0x88>
     a94:	df 91       	pop	r29
     a96:	cf 91       	pop	r28
     a98:	1f 91       	pop	r17
     a9a:	0f 91       	pop	r16
     a9c:	ff 90       	pop	r15
     a9e:	ef 90       	pop	r14
     aa0:	df 90       	pop	r13
     aa2:	cf 90       	pop	r12
     aa4:	bf 90       	pop	r11
     aa6:	af 90       	pop	r10
     aa8:	9f 90       	pop	r9
     aaa:	8f 90       	pop	r8
     aac:	7f 90       	pop	r7
     aae:	6f 90       	pop	r6
     ab0:	5f 90       	pop	r5
     ab2:	08 95       	ret

00000ab4 <gfx_mono_generic_draw_filled_circle>:
 * \param  quadrant_mask Bitmask indicating which quadrants to draw.
 */
void gfx_mono_generic_draw_filled_circle(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t radius, enum gfx_mono_color color,
		uint8_t quadrant_mask)
{
     ab4:	8f 92       	push	r8
     ab6:	9f 92       	push	r9
     ab8:	af 92       	push	r10
     aba:	bf 92       	push	r11
     abc:	cf 92       	push	r12
     abe:	df 92       	push	r13
     ac0:	ef 92       	push	r14
     ac2:	ff 92       	push	r15
     ac4:	0f 93       	push	r16
     ac6:	1f 93       	push	r17
     ac8:	cf 93       	push	r28
     aca:	df 93       	push	r29
     acc:	18 2f       	mov	r17, r24
     ace:	d6 2e       	mov	r13, r22
     ad0:	c4 2f       	mov	r28, r20
     ad2:	c2 2e       	mov	r12, r18
	gfx_coord_t offset_x;
	gfx_coord_t offset_y;
	int16_t error;

	/* Draw only a pixel if radius is zero. */
	if (radius == 0) {
     ad4:	41 11       	cpse	r20, r1
     ad6:	0e c0       	rjmp	.+28     	; 0xaf4 <gfx_mono_generic_draw_filled_circle+0x40>
		gfx_mono_draw_pixel(x, y, color);
     ad8:	42 2f       	mov	r20, r18
		}

		/* Next X. */
		++offset_x;
	}
}
     ada:	df 91       	pop	r29
     adc:	cf 91       	pop	r28
     ade:	1f 91       	pop	r17
     ae0:	0f 91       	pop	r16
     ae2:	ff 90       	pop	r15
     ae4:	ef 90       	pop	r14
     ae6:	df 90       	pop	r13
     ae8:	cf 90       	pop	r12
     aea:	bf 90       	pop	r11
     aec:	af 90       	pop	r10
     aee:	9f 90       	pop	r9
	gfx_coord_t offset_y;
	int16_t error;

	/* Draw only a pixel if radius is zero. */
	if (radius == 0) {
		gfx_mono_draw_pixel(x, y, color);
     af0:	8f 90       	pop	r8
	}

	/* Set up start iterators. */
	offset_x = 0;
	offset_y = radius;
	error = 3 - 2 * radius;
     af2:	ea c0       	rjmp	.+468    	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
     af4:	83 e0       	ldi	r24, 0x03	; 3
     af6:	90 e0       	ldi	r25, 0x00	; 0
     af8:	7c 01       	movw	r14, r24
     afa:	22 e0       	ldi	r18, 0x02	; 2
     afc:	42 9f       	mul	r20, r18
     afe:	e0 18       	sub	r14, r0
     b00:	f1 08       	sbc	r15, r1
     b02:	11 24       	eor	r1, r1
     b04:	bb 24       	eor	r11, r11
		gfx_mono_draw_pixel(x, y, color);
		return;
	}

	/* Set up start iterators. */
	offset_x = 0;
     b06:	b3 94       	inc	r11
	error = 3 - 2 * radius;

	/* Iterate offset_x from 0 to radius. */
	while (offset_x <= offset_y) {
		/* Draw vertical lines tracking each quadrant. */
		if (quadrant_mask & GFX_QUADRANT0) {
     b08:	d0 e0       	ldi	r29, 0x00	; 0
     b0a:	80 2f       	mov	r24, r16
     b0c:	83 70       	andi	r24, 0x03	; 3
					y - offset_x, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x + offset_x,
					y - offset_y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT1) {
     b0e:	a8 2e       	mov	r10, r24
     b10:	20 2f       	mov	r18, r16
     b12:	2c 70       	andi	r18, 0x0C	; 12
					y - offset_x, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x - offset_x,
					y - offset_y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT2) {
     b14:	92 2e       	mov	r9, r18
     b16:	80 2f       	mov	r24, r16
     b18:	80 73       	andi	r24, 0x30	; 48
					y, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x - offset_x,
					y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT3) {
     b1a:	88 2e       	mov	r8, r24
	error = 3 - 2 * radius;

	/* Iterate offset_x from 0 to radius. */
	while (offset_x <= offset_y) {
		/* Draw vertical lines tracking each quadrant. */
		if (quadrant_mask & GFX_QUADRANT0) {
     b1c:	00 7c       	andi	r16, 0xC0	; 192
     b1e:	aa 20       	and	r10, r10
			gfx_mono_draw_vertical_line(x + offset_y,
     b20:	79 f0       	breq	.+30     	; 0xb40 <gfx_mono_generic_draw_filled_circle+0x8c>
     b22:	2c 2d       	mov	r18, r12
     b24:	4b 2d       	mov	r20, r11
     b26:	6d 2d       	mov	r22, r13
     b28:	6d 1b       	sub	r22, r29
     b2a:	81 2f       	mov	r24, r17
     b2c:	8c 0f       	add	r24, r28
					y - offset_x, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x + offset_x,
     b2e:	11 de       	rcall	.-990    	; 0x752 <gfx_mono_generic_draw_vertical_line>
     b30:	2c 2d       	mov	r18, r12
     b32:	41 e0       	ldi	r20, 0x01	; 1
     b34:	4c 0f       	add	r20, r28
     b36:	6d 2d       	mov	r22, r13
     b38:	6c 1b       	sub	r22, r28
     b3a:	81 2f       	mov	r24, r17
     b3c:	8d 0f       	add	r24, r29
					y - offset_y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT1) {
     b3e:	09 de       	rcall	.-1006   	; 0x752 <gfx_mono_generic_draw_vertical_line>
     b40:	99 20       	and	r9, r9
			gfx_mono_draw_vertical_line(x - offset_y,
     b42:	79 f0       	breq	.+30     	; 0xb62 <gfx_mono_generic_draw_filled_circle+0xae>
     b44:	2c 2d       	mov	r18, r12
     b46:	4b 2d       	mov	r20, r11
     b48:	6d 2d       	mov	r22, r13
     b4a:	6d 1b       	sub	r22, r29
     b4c:	81 2f       	mov	r24, r17
     b4e:	8c 1b       	sub	r24, r28
					y - offset_x, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x - offset_x,
     b50:	00 de       	rcall	.-1024   	; 0x752 <gfx_mono_generic_draw_vertical_line>
     b52:	2c 2d       	mov	r18, r12
     b54:	41 e0       	ldi	r20, 0x01	; 1
     b56:	4c 0f       	add	r20, r28
     b58:	6d 2d       	mov	r22, r13
     b5a:	6c 1b       	sub	r22, r28
     b5c:	81 2f       	mov	r24, r17
     b5e:	8d 1b       	sub	r24, r29
					y - offset_y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT2) {
     b60:	f8 dd       	rcall	.-1040   	; 0x752 <gfx_mono_generic_draw_vertical_line>
			gfx_mono_draw_vertical_line(x - offset_y,
     b62:	88 20       	and	r8, r8
     b64:	69 f0       	breq	.+26     	; 0xb80 <gfx_mono_generic_draw_filled_circle+0xcc>
     b66:	2c 2d       	mov	r18, r12
     b68:	4b 2d       	mov	r20, r11
     b6a:	6d 2d       	mov	r22, r13
					y, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x - offset_x,
     b6c:	81 2f       	mov	r24, r17
     b6e:	8c 1b       	sub	r24, r28
     b70:	f0 dd       	rcall	.-1056   	; 0x752 <gfx_mono_generic_draw_vertical_line>
     b72:	2c 2d       	mov	r18, r12
     b74:	41 e0       	ldi	r20, 0x01	; 1
     b76:	4c 0f       	add	r20, r28
					y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT3) {
     b78:	6d 2d       	mov	r22, r13
			gfx_mono_draw_vertical_line(x + offset_y,
     b7a:	81 2f       	mov	r24, r17
     b7c:	8d 1b       	sub	r24, r29
     b7e:	e9 dd       	rcall	.-1070   	; 0x752 <gfx_mono_generic_draw_vertical_line>
     b80:	00 23       	and	r16, r16
     b82:	69 f0       	breq	.+26     	; 0xb9e <gfx_mono_generic_draw_filled_circle+0xea>
     b84:	2c 2d       	mov	r18, r12
					y, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x + offset_x,
     b86:	4b 2d       	mov	r20, r11
     b88:	6d 2d       	mov	r22, r13
     b8a:	81 2f       	mov	r24, r17
     b8c:	8c 0f       	add	r24, r28
     b8e:	e1 dd       	rcall	.-1086   	; 0x752 <gfx_mono_generic_draw_vertical_line>
     b90:	2c 2d       	mov	r18, r12
     b92:	41 e0       	ldi	r20, 0x01	; 1
     b94:	4c 0f       	add	r20, r28
     b96:	6d 2d       	mov	r22, r13
     b98:	81 2f       	mov	r24, r17
					y, offset_y + 1, color);
		}

		/* Update error value and step offset_y when required. */
		if (error < 0) {
     b9a:	8d 0f       	add	r24, r29
     b9c:	da dd       	rcall	.-1100   	; 0x752 <gfx_mono_generic_draw_vertical_line>
			error += ((offset_x << 2) + 6);
     b9e:	8d 2f       	mov	r24, r29
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	f7 fe       	sbrs	r15, 7
     ba4:	08 c0       	rjmp	.+16     	; 0xbb6 <gfx_mono_generic_draw_filled_circle+0x102>
     ba6:	88 0f       	add	r24, r24
     ba8:	99 1f       	adc	r25, r25
     baa:	88 0f       	add	r24, r24
     bac:	99 1f       	adc	r25, r25
		} else {
			error += (((offset_x - offset_y) << 2) + 10);
     bae:	06 96       	adiw	r24, 0x06	; 6
     bb0:	e8 0e       	add	r14, r24
     bb2:	f9 1e       	adc	r15, r25
     bb4:	0a c0       	rjmp	.+20     	; 0xbca <gfx_mono_generic_draw_filled_circle+0x116>
     bb6:	8c 1b       	sub	r24, r28
     bb8:	91 09       	sbc	r25, r1
     bba:	88 0f       	add	r24, r24
     bbc:	99 1f       	adc	r25, r25
     bbe:	88 0f       	add	r24, r24
			--offset_y;
     bc0:	99 1f       	adc	r25, r25
		}

		/* Next X. */
		++offset_x;
     bc2:	0a 96       	adiw	r24, 0x0a	; 10
     bc4:	e8 0e       	add	r14, r24
	offset_x = 0;
	offset_y = radius;
	error = 3 - 2 * radius;

	/* Iterate offset_x from 0 to radius. */
	while (offset_x <= offset_y) {
     bc6:	f9 1e       	adc	r15, r25
     bc8:	c1 50       	subi	r28, 0x01	; 1
     bca:	df 5f       	subi	r29, 0xFF	; 255
		}

		/* Next X. */
		++offset_x;
	}
}
     bcc:	b3 94       	inc	r11
     bce:	cd 17       	cp	r28, r29
     bd0:	08 f0       	brcs	.+2      	; 0xbd4 <gfx_mono_generic_draw_filled_circle+0x120>
     bd2:	a5 cf       	rjmp	.-182    	; 0xb1e <gfx_mono_generic_draw_filled_circle+0x6a>
     bd4:	df 91       	pop	r29
     bd6:	cf 91       	pop	r28
     bd8:	1f 91       	pop	r17
     bda:	0f 91       	pop	r16
     bdc:	ff 90       	pop	r15
     bde:	ef 90       	pop	r14
     be0:	df 90       	pop	r13
     be2:	cf 90       	pop	r12
     be4:	bf 90       	pop	r11
     be6:	af 90       	pop	r10
     be8:	9f 90       	pop	r9
     bea:	8f 90       	pop	r8
     bec:	08 95       	ret

00000bee <gfx_mono_lcd_uc1608_put_page>:
		uint8_t				byte = gfx_mono_lcd_uc1608_get_byte(page, x);

		isSet = (byte & pixel_mask) ?  GFX_PIXEL_SET : GFX_PIXEL_CLR;
	}
	return isSet;
}
     bee:	0f 93       	push	r16
     bf0:	1f 93       	push	r17
     bf2:	cf 93       	push	r28
     bf4:	df 93       	push	r29
     bf6:	8c 01       	movw	r16, r24
     bf8:	86 2f       	mov	r24, r22
     bfa:	d4 2f       	mov	r29, r20
     bfc:	c2 2f       	mov	r28, r18
     bfe:	01 15       	cp	r16, r1
     c00:	11 05       	cpc	r17, r1
     c02:	c1 f0       	breq	.+48     	; 0xc34 <gfx_mono_lcd_uc1608_put_page+0x46>
     c04:	60 31       	cpi	r22, 0x10	; 16
     c06:	b0 f4       	brcc	.+44     	; 0xc34 <gfx_mono_lcd_uc1608_put_page+0x46>
     c08:	40 3f       	cpi	r20, 0xF0	; 240
     c0a:	a0 f4       	brcc	.+40     	; 0xc34 <gfx_mono_lcd_uc1608_put_page+0x46>
     c0c:	b3 d6       	rcall	.+3430   	; 0x1974 <lcd_page_set>
     c0e:	8d 2f       	mov	r24, r29
     c10:	b9 d6       	rcall	.+3442   	; 0x1984 <lcd_col_set>
     c12:	8c 2f       	mov	r24, r28
     c14:	90 e0       	ldi	r25, 0x00	; 0
     c16:	8d 0f       	add	r24, r29
     c18:	91 1d       	adc	r25, r1
     c1a:	81 3f       	cpi	r24, 0xF1	; 241
     c1c:	91 05       	cpc	r25, r1
     c1e:	14 f0       	brlt	.+4      	; 0xc24 <gfx_mono_lcd_uc1608_put_page+0x36>
     c20:	c0 ef       	ldi	r28, 0xF0	; 240
     c22:	cd 1b       	sub	r28, r29
     c24:	cc 23       	and	r28, r28
     c26:	31 f0       	breq	.+12     	; 0xc34 <gfx_mono_lcd_uc1608_put_page+0x46>
     c28:	f8 01       	movw	r30, r16
     c2a:	81 91       	ld	r24, Z+
     c2c:	8f 01       	movw	r16, r30
     c2e:	57 d6       	rcall	.+3246   	; 0x18de <lcd_bus_write_ram>
     c30:	c1 50       	subi	r28, 0x01	; 1
     c32:	f8 cf       	rjmp	.-16     	; 0xc24 <gfx_mono_lcd_uc1608_put_page+0x36>
     c34:	df 91       	pop	r29
     c36:	cf 91       	pop	r28
     c38:	1f 91       	pop	r17
     c3a:	0f 91       	pop	r16
     c3c:	08 95       	ret

00000c3e <gfx_mono_lcd_uc1608_put_byte>:
     c3e:	cf 93       	push	r28
     c40:	df 93       	push	r29
     c42:	80 31       	cpi	r24, 0x10	; 16
     c44:	58 f4       	brcc	.+22     	; 0xc5c <gfx_mono_lcd_uc1608_put_byte+0x1e>
     c46:	60 3f       	cpi	r22, 0xF0	; 240
     c48:	48 f4       	brcc	.+18     	; 0xc5c <gfx_mono_lcd_uc1608_put_byte+0x1e>
     c4a:	d4 2f       	mov	r29, r20
     c4c:	c6 2f       	mov	r28, r22
     c4e:	92 d6       	rcall	.+3364   	; 0x1974 <lcd_page_set>
     c50:	8c 2f       	mov	r24, r28
     c52:	98 d6       	rcall	.+3376   	; 0x1984 <lcd_col_set>
     c54:	8d 2f       	mov	r24, r29
     c56:	df 91       	pop	r29
     c58:	cf 91       	pop	r28
     c5a:	41 c6       	rjmp	.+3202   	; 0x18de <lcd_bus_write_ram>
     c5c:	df 91       	pop	r29
     c5e:	cf 91       	pop	r28
     c60:	08 95       	ret

00000c62 <gfx_mono_lcd_uc1608_get_byte>:
     c62:	cf 93       	push	r28
     c64:	80 31       	cpi	r24, 0x10	; 16
     c66:	40 f4       	brcc	.+16     	; 0xc78 <gfx_mono_lcd_uc1608_get_byte+0x16>
     c68:	60 3f       	cpi	r22, 0xF0	; 240
     c6a:	30 f4       	brcc	.+12     	; 0xc78 <gfx_mono_lcd_uc1608_get_byte+0x16>
     c6c:	c6 2f       	mov	r28, r22
     c6e:	82 d6       	rcall	.+3332   	; 0x1974 <lcd_page_set>
     c70:	8c 2f       	mov	r24, r28
     c72:	88 d6       	rcall	.+3344   	; 0x1984 <lcd_col_set>
     c74:	cf 91       	pop	r28
     c76:	40 c6       	rjmp	.+3200   	; 0x18f8 <lcd_bus_read_ram>
     c78:	80 e0       	ldi	r24, 0x00	; 0
     c7a:	cf 91       	pop	r28
     c7c:	08 95       	ret

00000c7e <gfx_mono_lcd_uc1608_mask_byte>:
 * \param column     Page offset (x coordinate)
 * \param pixel_mask Mask for pixel operation
 * \param color      Pixel operation
 */
void gfx_mono_lcd_uc1608_mask_byte(gfx_coord_t page, gfx_coord_t column, gfx_mono_color_t pixel_mask, gfx_mono_color_t color)
{
     c7e:	0f 93       	push	r16
     c80:	1f 93       	push	r17
     c82:	cf 93       	push	r28
     c84:	df 93       	push	r29
	uint8_t data = 0;

	if ((page < GFX_MONO_LCD_PAGES) && (column < GFX_MONO_LCD_WIDTH)) {
     c86:	80 31       	cpi	r24, 0x10	; 16
     c88:	d0 f4       	brcc	.+52     	; 0xcbe <gfx_mono_lcd_uc1608_mask_byte+0x40>
     c8a:	60 3f       	cpi	r22, 0xF0	; 240
     c8c:	c0 f4       	brcc	.+48     	; 0xcbe <gfx_mono_lcd_uc1608_mask_byte+0x40>
     c8e:	02 2f       	mov	r16, r18
     c90:	d4 2f       	mov	r29, r20
		data = gfx_mono_lcd_uc1608_get_byte(page, column);
     c92:	16 2f       	mov	r17, r22
     c94:	e6 df       	rcall	.-52     	; 0xc62 <gfx_mono_lcd_uc1608_get_byte>

		switch (color) {
     c96:	c8 2f       	mov	r28, r24
     c98:	01 30       	cpi	r16, 0x01	; 1
     c9a:	41 f0       	breq	.+16     	; 0xcac <gfx_mono_lcd_uc1608_mask_byte+0x2e>
     c9c:	20 f0       	brcs	.+8      	; 0xca6 <gfx_mono_lcd_uc1608_mask_byte+0x28>
     c9e:	02 30       	cpi	r16, 0x02	; 2
			case GFX_PIXEL_SET:
				data |= pixel_mask;
				break;

			case GFX_PIXEL_XOR:
				data ^= pixel_mask;
     ca0:	31 f4       	brne	.+12     	; 0xcae <gfx_mono_lcd_uc1608_mask_byte+0x30>
     ca2:	cd 27       	eor	r28, r29
	if ((page < GFX_MONO_LCD_PAGES) && (column < GFX_MONO_LCD_WIDTH)) {
		data = gfx_mono_lcd_uc1608_get_byte(page, column);

		switch (color) {
			case GFX_PIXEL_CLR:
				data &= ~pixel_mask;
     ca4:	04 c0       	rjmp	.+8      	; 0xcae <gfx_mono_lcd_uc1608_mask_byte+0x30>
     ca6:	d0 95       	com	r29
     ca8:	cd 23       	and	r28, r29
			case GFX_PIXEL_XOR:
				data ^= pixel_mask;
				break;
		}

		lcd_col_set(column);
     caa:	01 c0       	rjmp	.+2      	; 0xcae <gfx_mono_lcd_uc1608_mask_byte+0x30>
     cac:	cd 2b       	or	r28, r29
		lcd_bus_write_ram(data);										// Write byte slice to RAM
     cae:	81 2f       	mov	r24, r17
	}
}
     cb0:	69 d6       	rcall	.+3282   	; 0x1984 <lcd_col_set>
     cb2:	8c 2f       	mov	r24, r28
     cb4:	df 91       	pop	r29
				data ^= pixel_mask;
				break;
		}

		lcd_col_set(column);
		lcd_bus_write_ram(data);										// Write byte slice to RAM
     cb6:	cf 91       	pop	r28
     cb8:	1f 91       	pop	r17
	}
}
     cba:	0f 91       	pop	r16
     cbc:	10 c6       	rjmp	.+3104   	; 0x18de <lcd_bus_write_ram>
     cbe:	df 91       	pop	r29
     cc0:	cf 91       	pop	r28
     cc2:	1f 91       	pop	r17
     cc4:	0f 91       	pop	r16
     cc6:	08 95       	ret

00000cc8 <gfx_mono_lcd_uc1608_draw_pixel>:
 * \param x         X coordinate of the pixel
 * \param y         Y coordinate of the pixel
 * \param color     Pixel operation.
 */
void gfx_mono_lcd_uc1608_draw_pixel(gfx_coord_t x, gfx_coord_t y, gfx_mono_color_t color)
{
     cc8:	96 2f       	mov	r25, r22
     cca:	24 2f       	mov	r18, r20
	if ((x < GFX_MONO_LCD_WIDTH) && (y < GFX_MONO_LCD_HEIGHT)) {
     ccc:	80 3f       	cpi	r24, 0xF0	; 240
     cce:	88 f4       	brcc	.+34     	; 0xcf2 <gfx_mono_lcd_uc1608_draw_pixel+0x2a>
     cd0:	67 fd       	sbrc	r22, 7
     cd2:	0f c0       	rjmp	.+30     	; 0xcf2 <gfx_mono_lcd_uc1608_draw_pixel+0x2a>
		gfx_coord_t			page		= y / GFX_MONO_LCD_PIXELS_PER_BYTE;
		gfx_mono_color_t	pixel_mask	= 1 << (y % GFX_MONO_LCD_PIXELS_PER_BYTE);

		gfx_mono_lcd_uc1608_mask_byte(page, x, pixel_mask, color);
     cd4:	36 2f       	mov	r19, r22
     cd6:	37 70       	andi	r19, 0x07	; 7
     cd8:	61 e0       	ldi	r22, 0x01	; 1
     cda:	70 e0       	ldi	r23, 0x00	; 0
     cdc:	ab 01       	movw	r20, r22
     cde:	01 c0       	rjmp	.+2      	; 0xce2 <gfx_mono_lcd_uc1608_draw_pixel+0x1a>
     ce0:	44 0f       	add	r20, r20
     ce2:	3a 95       	dec	r19
     ce4:	ea f7       	brpl	.-6      	; 0xce0 <gfx_mono_lcd_uc1608_draw_pixel+0x18>
     ce6:	68 2f       	mov	r22, r24
     ce8:	89 2f       	mov	r24, r25
     cea:	86 95       	lsr	r24
     cec:	86 95       	lsr	r24
     cee:	86 95       	lsr	r24
     cf0:	c6 cf       	rjmp	.-116    	; 0xc7e <gfx_mono_lcd_uc1608_mask_byte>
     cf2:	08 95       	ret

00000cf4 <gfx_mono_draw_char>:
 * \param y        Y coordinate on screen.
 * \param font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
     cf4:	9f 92       	push	r9
     cf6:	af 92       	push	r10
     cf8:	bf 92       	push	r11
     cfa:	cf 92       	push	r12
     cfc:	df 92       	push	r13
     cfe:	ef 92       	push	r14
     d00:	ff 92       	push	r15
     d02:	0f 93       	push	r16
     d04:	1f 93       	push	r17
     d06:	cf 93       	push	r28
     d08:	df 93       	push	r29
     d0a:	d8 2f       	mov	r29, r24
     d0c:	c6 2e       	mov	r12, r22
     d0e:	d4 2e       	mov	r13, r20
     d10:	79 01       	movw	r14, r18
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
     d12:	00 e0       	ldi	r16, 0x00	; 0
     d14:	f9 01       	movw	r30, r18
     d16:	24 81       	ldd	r18, Z+4	; 0x04
     d18:	43 81       	ldd	r20, Z+3	; 0x03
     d1a:	6d 2d       	mov	r22, r13
     d1c:	8c 2d       	mov	r24, r12
     d1e:	02 de       	rcall	.-1020   	; 0x924 <gfx_mono_generic_draw_filled_rect>
			GFX_PIXEL_CLR);

	switch (font->type) {
     d20:	f7 01       	movw	r30, r14
     d22:	80 81       	ld	r24, Z
     d24:	81 11       	cpse	r24, r1
     d26:	39 c0       	rjmp	.+114    	; 0xd9a <gfx_mono_draw_char+0xa6>
	Assert(font != NULL);

	gfx_coord_t inc_x = x;
	gfx_coord_t inc_y = y;

	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
     d28:	83 81       	ldd	r24, Z+3	; 0x03
     d2a:	28 2f       	mov	r18, r24
     d2c:	26 95       	lsr	r18
     d2e:	26 95       	lsr	r18
     d30:	26 95       	lsr	r18
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
     d32:	87 70       	andi	r24, 0x07	; 7
     d34:	09 f0       	breq	.+2      	; 0xd38 <gfx_mono_draw_char+0x44>
		char_row_size++;
     d36:	2f 5f       	subi	r18, 0xFF	; 255
	}

	glyph_data_offset = char_row_size * font->height *
     d38:	f7 01       	movw	r30, r14
     d3a:	c4 81       	ldd	r28, Z+4	; 0x04
			((uint8_t)ch - font->first_char);
	glyph_data = font->data.progmem + glyph_data_offset;
     d3c:	8d 2f       	mov	r24, r29
     d3e:	90 e0       	ldi	r25, 0x00	; 0
     d40:	35 81       	ldd	r19, Z+5	; 0x05
     d42:	83 1b       	sub	r24, r19
     d44:	91 09       	sbc	r25, r1
     d46:	2c 9f       	mul	r18, r28
     d48:	90 01       	movw	r18, r0
     d4a:	11 24       	eor	r1, r1
     d4c:	82 9f       	mul	r24, r18
     d4e:	a0 01       	movw	r20, r0
     d50:	83 9f       	mul	r24, r19
     d52:	50 0d       	add	r21, r0
     d54:	92 9f       	mul	r25, r18
     d56:	50 0d       	add	r21, r0
     d58:	11 24       	eor	r1, r1
     d5a:	01 81       	ldd	r16, Z+1	; 0x01
     d5c:	12 81       	ldd	r17, Z+2	; 0x02
     d5e:	04 0f       	add	r16, r20
     d60:	15 1f       	adc	r17, r21
     d62:	dc 0e       	add	r13, r28
     d64:	9d 2c       	mov	r9, r13
     d66:	9c 1a       	sub	r9, r28
	rows_left = font->height;

	do {
		uint8_t glyph_byte = 0;
		uint8_t pixelsToDraw = font->width;
     d68:	f7 01       	movw	r30, r14
     d6a:	a3 80       	ldd	r10, Z+3	; 0x03
			((uint8_t)ch - font->first_char);
	glyph_data = font->data.progmem + glyph_data_offset;
	rows_left = font->height;

	do {
		uint8_t glyph_byte = 0;
     d6c:	b1 2c       	mov	r11, r1
		uint8_t pixelsToDraw = font->width;

		for (i = 0; i < pixelsToDraw; i++) {
     d6e:	d0 e0       	ldi	r29, 0x00	; 0
     d70:	8c 2d       	mov	r24, r12
     d72:	8d 0f       	add	r24, r29
     d74:	ad 16       	cp	r10, r29
     d76:	79 f0       	breq	.+30     	; 0xd96 <gfx_mono_draw_char+0xa2>
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
     d78:	9d 2f       	mov	r25, r29
     d7a:	97 70       	andi	r25, 0x07	; 7
     d7c:	21 f4       	brne	.+8      	; 0xd86 <gfx_mono_draw_char+0x92>
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
     d7e:	f8 01       	movw	r30, r16
     d80:	b4 90       	lpm	r11, Z
				glyph_data++;
     d82:	0f 5f       	subi	r16, 0xFF	; 255
     d84:	1f 4f       	sbci	r17, 0xFF	; 255
			}

			if ((glyph_byte & 0x80)) {
     d86:	b7 fe       	sbrs	r11, 7
     d88:	03 c0       	rjmp	.+6      	; 0xd90 <gfx_mono_draw_char+0x9c>
				gfx_mono_draw_pixel(inc_x, inc_y,
     d8a:	41 e0       	ldi	r20, 0x01	; 1
     d8c:	69 2d       	mov	r22, r9
     d8e:	9c df       	rcall	.-200    	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
						GFX_PIXEL_SET);
			}

			inc_x += 1;
			glyph_byte <<= 1;
     d90:	bb 0c       	add	r11, r11

	do {
		uint8_t glyph_byte = 0;
		uint8_t pixelsToDraw = font->width;

		for (i = 0; i < pixelsToDraw; i++) {
     d92:	df 5f       	subi	r29, 0xFF	; 255
     d94:	ed cf       	rjmp	.-38     	; 0xd70 <gfx_mono_draw_char+0x7c>
			glyph_byte <<= 1;
		}

		inc_y += 1;
		inc_x = x;
		rows_left--;
     d96:	c1 50       	subi	r28, 0x01	; 1
	} while (rows_left > 0);
     d98:	29 f7       	brne	.-54     	; 0xd64 <gfx_mono_draw_char+0x70>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
     d9a:	df 91       	pop	r29
     d9c:	cf 91       	pop	r28
     d9e:	1f 91       	pop	r17
     da0:	0f 91       	pop	r16
     da2:	ff 90       	pop	r15
     da4:	ef 90       	pop	r14
     da6:	df 90       	pop	r13
     da8:	cf 90       	pop	r12
     daa:	bf 90       	pop	r11
     dac:	af 90       	pop	r10
     dae:	9f 90       	pop	r9
     db0:	08 95       	ret

00000db2 <gfx_mono_draw_string>:
 * \param y         Y coordinate on screen.
 * \param font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
     db2:	df 92       	push	r13
     db4:	ef 92       	push	r14
     db6:	ff 92       	push	r15
     db8:	0f 93       	push	r16
     dba:	1f 93       	push	r17
     dbc:	cf 93       	push	r28
     dbe:	df 93       	push	r29
     dc0:	d6 2e       	mov	r13, r22
     dc2:	d4 2f       	mov	r29, r20
     dc4:	79 01       	movw	r14, r18
     dc6:	8c 01       	movw	r16, r24
     dc8:	c6 2f       	mov	r28, r22
	Assert(font != NULL);

	/* Draw characters until trailing null byte */
	do {
		/* Handle '\n' as newline, draw normal characters. */
		if (*str == '\n') {
     dca:	f8 01       	movw	r30, r16
     dcc:	81 91       	ld	r24, Z+
     dce:	8f 01       	movw	r16, r30
     dd0:	8a 30       	cpi	r24, 0x0A	; 10
     dd2:	31 f4       	brne	.+12     	; 0xde0 <gfx_mono_draw_string+0x2e>
			x = start_of_string_position_x;
			y += font->height + 1;
     dd4:	f7 01       	movw	r30, r14
     dd6:	84 81       	ldd	r24, Z+4	; 0x04
     dd8:	8f 5f       	subi	r24, 0xFF	; 255
     dda:	d8 0f       	add	r29, r24

	/* Draw characters until trailing null byte */
	do {
		/* Handle '\n' as newline, draw normal characters. */
		if (*str == '\n') {
			x = start_of_string_position_x;
     ddc:	cd 2d       	mov	r28, r13
     dde:	09 c0       	rjmp	.+18     	; 0xdf2 <gfx_mono_draw_string+0x40>
			y += font->height + 1;
		} else if (*str == '\r') {
     de0:	8d 30       	cpi	r24, 0x0D	; 13
     de2:	39 f0       	breq	.+14     	; 0xdf2 <gfx_mono_draw_string+0x40>
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
     de4:	97 01       	movw	r18, r14
     de6:	4d 2f       	mov	r20, r29
     de8:	6c 2f       	mov	r22, r28
     dea:	84 df       	rcall	.-248    	; 0xcf4 <gfx_mono_draw_char>
			x += font->width;
     dec:	f7 01       	movw	r30, r14
     dee:	83 81       	ldd	r24, Z+3	; 0x03
     df0:	c8 0f       	add	r28, r24
		}
	} while (*(++str));
     df2:	f8 01       	movw	r30, r16
     df4:	80 81       	ld	r24, Z
     df6:	81 11       	cpse	r24, r1
     df8:	e8 cf       	rjmp	.-48     	; 0xdca <gfx_mono_draw_string+0x18>
}
     dfa:	df 91       	pop	r29
     dfc:	cf 91       	pop	r28
     dfe:	1f 91       	pop	r17
     e00:	0f 91       	pop	r16
     e02:	ff 90       	pop	r15
     e04:	ef 90       	pop	r14
     e06:	df 90       	pop	r13
     e08:	08 95       	ret

00000e0a <asm_break>:

/* Helper functions */

void asm_break(void)
{
	__asm__ __volatile__ ("break" ::: "memory");
     e0a:	98 95       	break
	nop();
     e0c:	00 00       	nop
     e0e:	08 95       	ret

00000e10 <__vector_9>:
{	/* TIMER 2 COMP-B */
	s_bad_interrupt();
}

ISR(__vector_9, ISR_BLOCK)
{	/* TIMER 2 OVF - Overflow */
     e10:	1f 92       	push	r1
     e12:	0f 92       	push	r0
     e14:	0f b6       	in	r0, 0x3f	; 63
     e16:	0f 92       	push	r0
     e18:	11 24       	eor	r1, r1
     e1a:	2f 93       	push	r18
     e1c:	3f 93       	push	r19
     e1e:	4f 93       	push	r20
     e20:	5f 93       	push	r21
     e22:	6f 93       	push	r22
     e24:	7f 93       	push	r23
     e26:	8f 93       	push	r24
     e28:	9f 93       	push	r25
     e2a:	af 93       	push	r26
     e2c:	bf 93       	push	r27
     e2e:	ef 93       	push	r30
     e30:	ff 93       	push	r31
	if (g_status.isAnimationStopped && (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)) {
     e32:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <g_status>
     e36:	81 ff       	sbrs	r24, 1
     e38:	74 c0       	rjmp	.+232    	; 0xf22 <__vector_9+0x112>
     e3a:	80 91 32 04 	lds	r24, 0x0432	; 0x800432 <g_SmartLCD_mode>
     e3e:	80 32       	cpi	r24, 0x20	; 32
     e40:	09 f0       	breq	.+2      	; 0xe44 <__vector_9+0x34>
     e42:	6f c0       	rjmp	.+222    	; 0xf22 <__vector_9+0x112>
		static uint8_t state_old = 0;
		static uint8_t state_ctr = 0;
		static uint8_t second_old = 0;
		static uint8_t button_ctr = 0;
		uint8_t cur = PORTB & 0x3f;
     e44:	85 b1       	in	r24, 0x05	; 5
     e46:	8f 73       	andi	r24, 0x3F	; 63

		/* signaling the grade of deviation */
		g_audio_out_loudness = 0;
		if (g_showData.clkState_clk_state < 0xf) {
     e48:	90 91 5d 04 	lds	r25, 0x045D	; 0x80045d <g_showData+0x2a>
     e4c:	9f 30       	cpi	r25, 0x0F	; 15
     e4e:	60 f4       	brcc	.+24     	; 0xe68 <__vector_9+0x58>
			cur |= _BV(PORTB6);  // LED = red
     e50:	80 64       	ori	r24, 0x40	; 64
			if (state_old != 0x02) {
     e52:	90 91 4b 03 	lds	r25, 0x034B	; 0x80034b <state_old.3074>
     e56:	92 30       	cpi	r25, 0x02	; 2
     e58:	19 f0       	breq	.+6      	; 0xe60 <__vector_9+0x50>
				state_ctr = 122;  // 1 sec
     e5a:	9a e7       	ldi	r25, 0x7A	; 122
     e5c:	90 93 4a 03 	sts	0x034A, r25	; 0x80034a <state_ctr.3075>
			}
			state_old = 0x02;
     e60:	92 e0       	ldi	r25, 0x02	; 2
     e62:	90 93 4b 03 	sts	0x034B, r25	; 0x80034b <state_old.3074>
     e66:	24 c0       	rjmp	.+72     	; 0xeb0 <__vector_9+0xa0>

		} else if ((g_showData.clkState_clk_state == 0xf) && (-4 < g_showData.ppb_int) && (g_showData.ppb_int < 4)) {
     e68:	9f 30       	cpi	r25, 0x0F	; 15
     e6a:	c1 f4       	brne	.+48     	; 0xe9c <__vector_9+0x8c>
     e6c:	20 91 4f 04 	lds	r18, 0x044F	; 0x80044f <g_showData+0x1c>
     e70:	30 91 50 04 	lds	r19, 0x0450	; 0x800450 <g_showData+0x1d>
     e74:	2d 5f       	subi	r18, 0xFD	; 253
     e76:	3f 4f       	sbci	r19, 0xFF	; 255
     e78:	27 30       	cpi	r18, 0x07	; 7
     e7a:	31 05       	cpc	r19, r1
     e7c:	78 f4       	brcc	.+30     	; 0xe9c <__vector_9+0x8c>
			cur |= _BV(PORTB7);  // LED = green
     e7e:	80 68       	ori	r24, 0x80	; 128
			state_old = 0x00;
     e80:	10 92 4b 03 	sts	0x034B, r1	; 0x80034b <state_old.3074>

			/* Acoustic phase tracker */
			if (g_showData.time_second != second_old) {
     e84:	90 91 62 04 	lds	r25, 0x0462	; 0x800462 <g_showData+0x2f>
     e88:	20 91 49 03 	lds	r18, 0x0349	; 0x800349 <second_old.3076>
     e8c:	92 17       	cp	r25, r18
     e8e:	81 f0       	breq	.+32     	; 0xeb0 <__vector_9+0xa0>
				second_old = g_showData.time_second;
     e90:	90 93 49 03 	sts	0x0349, r25	; 0x800349 <second_old.3076>
				state_ctr = 6;
     e94:	96 e0       	ldi	r25, 0x06	; 6
     e96:	90 93 4a 03 	sts	0x034A, r25	; 0x80034a <state_ctr.3075>
     e9a:	0a c0       	rjmp	.+20     	; 0xeb0 <__vector_9+0xa0>
			}

		} else {
			if (!state_old) {
     e9c:	90 91 4b 03 	lds	r25, 0x034B	; 0x80034b <state_old.3074>
     ea0:	91 11       	cpse	r25, r1
     ea2:	03 c0       	rjmp	.+6      	; 0xeaa <__vector_9+0x9a>
				state_ctr = 30;  // 1/4 sec
     ea4:	9e e1       	ldi	r25, 0x1E	; 30
     ea6:	90 93 4a 03 	sts	0x034A, r25	; 0x80034a <state_ctr.3075>
			}
			state_old = 0x01;
     eaa:	91 e0       	ldi	r25, 0x01	; 1
     eac:	90 93 4b 03 	sts	0x034B, r25	; 0x80034b <state_old.3074>
		}

		if (state_ctr) {
     eb0:	90 91 4a 03 	lds	r25, 0x034A	; 0x80034a <state_ctr.3075>
     eb4:	99 23       	and	r25, r25
     eb6:	39 f0       	breq	.+14     	; 0xec6 <__vector_9+0xb6>
			--state_ctr;
     eb8:	91 50       	subi	r25, 0x01	; 1
     eba:	90 93 4a 03 	sts	0x034A, r25	; 0x80034a <state_ctr.3075>
			g_audio_out_loudness = 9;  // max 9
     ebe:	99 e0       	ldi	r25, 0x09	; 9
     ec0:	90 93 76 04 	sts	0x0476, r25	; 0x800476 <g_audio_out_loudness>
     ec4:	02 c0       	rjmp	.+4      	; 0xeca <__vector_9+0xba>
		} else {
			g_audio_out_loudness = 0;
     ec6:	10 92 76 04 	sts	0x0476, r1	; 0x800476 <g_audio_out_loudness>
		}

		PORTB = cur;
     eca:	85 b9       	out	0x05, r24	; 5

		/* sampling I/Q and push buttons */
		if (button_ctr) {
     ecc:	80 91 48 03 	lds	r24, 0x0348	; 0x800348 <__data_end>
     ed0:	88 23       	and	r24, r24
     ed2:	21 f0       	breq	.+8      	; 0xedc <__vector_9+0xcc>
			--button_ctr;
     ed4:	81 50       	subi	r24, 0x01	; 1
     ed6:	80 93 48 03 	sts	0x0348, r24	; 0x800348 <__data_end>
     eda:	23 c0       	rjmp	.+70     	; 0xf22 <__vector_9+0x112>
		} else {
			button_ctr = 12;
     edc:	8c e0       	ldi	r24, 0x0C	; 12
     ede:	80 93 48 03 	sts	0x0348, r24	; 0x800348 <__data_end>
			uint8_t sw = (PINC & 0x06) >> 1;
     ee2:	86 b1       	in	r24, 0x06	; 6
     ee4:	86 70       	andi	r24, 0x06	; 6
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	95 95       	asr	r25
     eea:	87 95       	ror	r24
			if (!(sw & 0x01)) {									// SW-I: decrement contrast voltage
     eec:	80 fd       	sbrc	r24, 0
     eee:	09 c0       	rjmp	.+18     	; 0xf02 <__vector_9+0xf2>
				if (g_lcd_contrast_pm) {
     ef0:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <g_lcd_contrast_pm>
     ef4:	88 23       	and	r24, r24
     ef6:	a9 f0       	breq	.+42     	; 0xf22 <__vector_9+0x112>
					--g_lcd_contrast_pm;
     ef8:	81 50       	subi	r24, 0x01	; 1
     efa:	80 93 77 04 	sts	0x0477, r24	; 0x800477 <g_lcd_contrast_pm>
					lcd_contrast_update();
     efe:	11 d5       	rcall	.+2594   	; 0x1922 <lcd_contrast_update>
				}
			} else if (!(sw & 0x02)) {							// SW-Q: increment contrast voltage
     f00:	10 c0       	rjmp	.+32     	; 0xf22 <__vector_9+0x112>
     f02:	81 fd       	sbrc	r24, 1
				if (g_lcd_contrast_pm < 0x3F) {
     f04:	09 c0       	rjmp	.+18     	; 0xf18 <__vector_9+0x108>
     f06:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <g_lcd_contrast_pm>
     f0a:	8f 33       	cpi	r24, 0x3F	; 63
					++g_lcd_contrast_pm;
     f0c:	50 f4       	brcc	.+20     	; 0xf22 <__vector_9+0x112>
     f0e:	8f 5f       	subi	r24, 0xFF	; 255
					lcd_contrast_update();
     f10:	80 93 77 04 	sts	0x0477, r24	; 0x800477 <g_lcd_contrast_pm>
     f14:	06 d5       	rcall	.+2572   	; 0x1922 <lcd_contrast_update>
				}
			} else if (!(PINB & _BV(PINB2))) {					// Pushbutton: store value in EEPROM
     f16:	05 c0       	rjmp	.+10     	; 0xf22 <__vector_9+0x112>
     f18:	1a 99       	sbic	0x03, 2	; 3
				eeprom_nvm_settings_write(C_EEPROM_NVM_SETTING_LCD_CONTRAST);
     f1a:	03 c0       	rjmp	.+6      	; 0xf22 <__vector_9+0x112>
     f1c:	81 e0       	ldi	r24, 0x01	; 1
     f1e:	0e 94 78 1d 	call	0x3af0	; 0x3af0 <eeprom_nvm_settings_write>
			}
		}
	}
}
     f22:	ff 91       	pop	r31
     f24:	ef 91       	pop	r30
     f26:	bf 91       	pop	r27
     f28:	af 91       	pop	r26
     f2a:	9f 91       	pop	r25
     f2c:	8f 91       	pop	r24
     f2e:	7f 91       	pop	r23
     f30:	6f 91       	pop	r22
     f32:	5f 91       	pop	r21
     f34:	4f 91       	pop	r20
     f36:	3f 91       	pop	r19
     f38:	2f 91       	pop	r18
     f3a:	0f 90       	pop	r0
     f3c:	0f be       	out	0x3f, r0	; 63
     f3e:	0f 90       	pop	r0
     f40:	1f 90       	pop	r1
     f42:	18 95       	reti

00000f44 <__vector_13>:
{	/* TIMER 1 COMP-B */
	s_bad_interrupt();
}

ISR(__vector_13, ISR_BLOCK)
{	/* TIMER 1 OVF - Overflow */
     f44:	1f 92       	push	r1
     f46:	0f 92       	push	r0
     f48:	0f b6       	in	r0, 0x3f	; 63
     f4a:	0f 92       	push	r0
     f4c:	11 24       	eor	r1, r1
     f4e:	2f 93       	push	r18
     f50:	3f 93       	push	r19
     f52:	4f 93       	push	r20
     f54:	5f 93       	push	r21
     f56:	6f 93       	push	r22
     f58:	7f 93       	push	r23
     f5a:	8f 93       	push	r24
     f5c:	9f 93       	push	r25
     f5e:	af 93       	push	r26
     f60:	bf 93       	push	r27
	++g_timer_abs_msb;
     f62:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <g_timer_abs_msb>
     f66:	90 91 87 04 	lds	r25, 0x0487	; 0x800487 <g_timer_abs_msb+0x1>
     f6a:	a0 91 88 04 	lds	r26, 0x0488	; 0x800488 <g_timer_abs_msb+0x2>
     f6e:	b0 91 89 04 	lds	r27, 0x0489	; 0x800489 <g_timer_abs_msb+0x3>
     f72:	01 96       	adiw	r24, 0x01	; 1
     f74:	a1 1d       	adc	r26, r1
     f76:	b1 1d       	adc	r27, r1
     f78:	80 93 86 04 	sts	0x0486, r24	; 0x800486 <g_timer_abs_msb>
     f7c:	90 93 87 04 	sts	0x0487, r25	; 0x800487 <g_timer_abs_msb+0x1>
     f80:	a0 93 88 04 	sts	0x0488, r26	; 0x800488 <g_timer_abs_msb+0x2>
     f84:	b0 93 89 04 	sts	0x0489, r27	; 0x800489 <g_timer_abs_msb+0x3>

	if (g_status.isAnimationStopped && g_audio_out_loudness) {
     f88:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <g_status>
     f8c:	81 ff       	sbrs	r24, 1
     f8e:	56 c0       	rjmp	.+172    	; 0x103c <__vector_13+0xf8>
     f90:	40 91 76 04 	lds	r20, 0x0476	; 0x800476 <g_audio_out_loudness>
     f94:	44 23       	and	r20, r20
     f96:	09 f4       	brne	.+2      	; 0xf9a <__vector_13+0x56>
     f98:	51 c0       	rjmp	.+162    	; 0x103c <__vector_13+0xf8>
		int16_t l_audio_pwm_inc = 3691 + (g_showData.clkState_phaseDeg100 >> 2);  // (880 Hz / 15625 Hz) * 16384 Steps * 8
     f9a:	80 91 4b 04 	lds	r24, 0x044B	; 0x80044b <g_showData+0x18>
     f9e:	90 91 4c 04 	lds	r25, 0x044C	; 0x80044c <g_showData+0x19>
     fa2:	95 95       	asr	r25
     fa4:	87 95       	ror	r24
     fa6:	95 95       	asr	r25
     fa8:	87 95       	ror	r24
     faa:	9c 01       	movw	r18, r24
     fac:	25 59       	subi	r18, 0x95	; 149
     fae:	31 4f       	sbci	r19, 0xF1	; 241

		/* Generate triangle signal */
		if (g_audio_pwm_ramp_dwn) {
     fb0:	50 91 73 04 	lds	r21, 0x0473	; 0x800473 <g_audio_pwm_ramp_dwn>
     fb4:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <g_audio_pwm_accu>
     fb8:	90 91 75 04 	lds	r25, 0x0475	; 0x800475 <g_audio_pwm_accu+0x1>
     fbc:	55 23       	and	r21, r21
     fbe:	b1 f0       	breq	.+44     	; 0xfec <__vector_13+0xa8>
			g_audio_pwm_accu -= l_audio_pwm_inc;
     fc0:	82 1b       	sub	r24, r18
     fc2:	93 0b       	sbc	r25, r19
     fc4:	90 93 75 04 	sts	0x0475, r25	; 0x800475 <g_audio_pwm_accu+0x1>
     fc8:	80 93 74 04 	sts	0x0474, r24	; 0x800474 <g_audio_pwm_accu>
			if (g_audio_pwm_accu <= -16383) {
     fcc:	82 30       	cpi	r24, 0x02	; 2
     fce:	20 ec       	ldi	r18, 0xC0	; 192
     fd0:	92 07       	cpc	r25, r18
     fd2:	14 f5       	brge	.+68     	; 0x1018 <__vector_13+0xd4>
				g_audio_pwm_ramp_dwn = false;
     fd4:	10 92 73 04 	sts	0x0473, r1	; 0x800473 <g_audio_pwm_ramp_dwn>
				int16_t residue = -g_audio_pwm_accu - 16383;
				g_audio_pwm_accu = -16383 + residue;
     fd8:	22 e0       	ldi	r18, 0x02	; 2
     fda:	30 e8       	ldi	r19, 0x80	; 128
     fdc:	b9 01       	movw	r22, r18
     fde:	68 1b       	sub	r22, r24
     fe0:	79 0b       	sbc	r23, r25
     fe2:	70 93 75 04 	sts	0x0475, r23	; 0x800475 <g_audio_pwm_accu+0x1>
     fe6:	60 93 74 04 	sts	0x0474, r22	; 0x800474 <g_audio_pwm_accu>
     fea:	16 c0       	rjmp	.+44     	; 0x1018 <__vector_13+0xd4>
			}
		} else {
			g_audio_pwm_accu += l_audio_pwm_inc;
     fec:	82 0f       	add	r24, r18
     fee:	93 1f       	adc	r25, r19
     ff0:	90 93 75 04 	sts	0x0475, r25	; 0x800475 <g_audio_pwm_accu+0x1>
     ff4:	80 93 74 04 	sts	0x0474, r24	; 0x800474 <g_audio_pwm_accu>
			if (g_audio_pwm_accu >= +16383) {
     ff8:	8f 3f       	cpi	r24, 0xFF	; 255
     ffa:	7f e3       	ldi	r23, 0x3F	; 63
     ffc:	97 07       	cpc	r25, r23
     ffe:	64 f0       	brlt	.+24     	; 0x1018 <__vector_13+0xd4>
				g_audio_pwm_ramp_dwn = true;
    1000:	21 e0       	ldi	r18, 0x01	; 1
    1002:	20 93 73 04 	sts	0x0473, r18	; 0x800473 <g_audio_pwm_ramp_dwn>
				int16_t residue = g_audio_pwm_accu - 16383;
				g_audio_pwm_accu = 16383 - residue;
    1006:	2e ef       	ldi	r18, 0xFE	; 254
    1008:	3f e7       	ldi	r19, 0x7F	; 127
    100a:	b9 01       	movw	r22, r18
    100c:	68 1b       	sub	r22, r24
    100e:	79 0b       	sbc	r23, r25
    1010:	70 93 75 04 	sts	0x0475, r23	; 0x800475 <g_audio_pwm_accu+0x1>
    1014:	60 93 74 04 	sts	0x0474, r22	; 0x800474 <g_audio_pwm_accu>
			}
		}

		int16_t audio_out = 256 + (g_audio_pwm_accu >> (15 - g_audio_out_loudness));  // 6 + 9
    1018:	2f e0       	ldi	r18, 0x0F	; 15
    101a:	30 e0       	ldi	r19, 0x00	; 0
    101c:	24 1b       	sub	r18, r20
    101e:	31 09       	sbc	r19, r1
    1020:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <g_audio_pwm_accu>
    1024:	90 91 75 04 	lds	r25, 0x0475	; 0x800475 <g_audio_pwm_accu+0x1>
    1028:	02 c0       	rjmp	.+4      	; 0x102e <__vector_13+0xea>
    102a:	95 95       	asr	r25
    102c:	87 95       	ror	r24
    102e:	2a 95       	dec	r18
    1030:	e2 f7       	brpl	.-8      	; 0x102a <__vector_13+0xe6>
    1032:	93 95       	inc	r25
		OCR1AH = (uint8_t) (audio_out >> 8);					// 9 bit
    1034:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
		OCR1AL = (uint8_t) (audio_out & 0xff);
    1038:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	}
}
    103c:	bf 91       	pop	r27
    103e:	af 91       	pop	r26
    1040:	9f 91       	pop	r25
    1042:	8f 91       	pop	r24
    1044:	7f 91       	pop	r23
    1046:	6f 91       	pop	r22
    1048:	5f 91       	pop	r21
    104a:	4f 91       	pop	r20
    104c:	3f 91       	pop	r19
    104e:	2f 91       	pop	r18
    1050:	0f 90       	pop	r0
    1052:	0f be       	out	0x3f, r0	; 63
    1054:	0f 90       	pop	r0
    1056:	1f 90       	pop	r1
    1058:	18 95       	reti

0000105a <__vector_21__bottom>:
	__vector_21__bottom(reason, adc_val, adc_light_last, adc_temp_last);
}

/* do not static this function to avoid code inlining that would inherit many push operations in the critical section */
void __vector_21__bottom(uint8_t reason, uint16_t adc_val, uint16_t adc_light_last, uint16_t adc_temp_last)
{
    105a:	8f 92       	push	r8
    105c:	9f 92       	push	r9
    105e:	af 92       	push	r10
    1060:	bf 92       	push	r11
    1062:	cf 92       	push	r12
    1064:	df 92       	push	r13
    1066:	ef 92       	push	r14
    1068:	ff 92       	push	r15
    106a:	cf 93       	push	r28
    106c:	df 93       	push	r29
    106e:	eb 01       	movw	r28, r22
	/* Low pass filtering and enhancing the data depth */
	if (reason == ADC_STATE_VLD_LDR) {
    1070:	81 30       	cpi	r24, 0x01	; 1
    1072:	e9 f5       	brne	.+122    	; 0x10ee <__vector_21__bottom+0x94>
		float calc = g_adc_light ?  0.998f * g_adc_light + 0.002f * adc_val : adc_val;			// load with initial value if none is set before
    1074:	c0 90 81 04 	lds	r12, 0x0481	; 0x800481 <g_adc_light>
    1078:	d0 90 82 04 	lds	r13, 0x0482	; 0x800482 <g_adc_light+0x1>
    107c:	e0 90 83 04 	lds	r14, 0x0483	; 0x800483 <g_adc_light+0x2>
    1080:	f0 90 84 04 	lds	r15, 0x0484	; 0x800484 <g_adc_light+0x3>
    1084:	20 e0       	ldi	r18, 0x00	; 0
    1086:	30 e0       	ldi	r19, 0x00	; 0
    1088:	a9 01       	movw	r20, r18
    108a:	c7 01       	movw	r24, r14
    108c:	b6 01       	movw	r22, r12
    108e:	0e 94 0e 20 	call	0x401c	; 0x401c <__cmpsf2>
    1092:	ae 01       	movw	r20, r28
    1094:	60 e0       	ldi	r22, 0x00	; 0
    1096:	70 e0       	ldi	r23, 0x00	; 0
    1098:	88 23       	and	r24, r24
    109a:	d9 f0       	breq	.+54     	; 0x10d2 <__vector_21__bottom+0x78>
    109c:	cb 01       	movw	r24, r22
    109e:	ba 01       	movw	r22, r20
    10a0:	0e 94 ab 20 	call	0x4156	; 0x4156 <__floatunsisf>
    10a4:	2f e6       	ldi	r18, 0x6F	; 111
    10a6:	32 e1       	ldi	r19, 0x12	; 18
    10a8:	43 e0       	ldi	r20, 0x03	; 3
    10aa:	5b e3       	ldi	r21, 0x3B	; 59
    10ac:	0e 94 b4 21 	call	0x4368	; 0x4368 <__mulsf3>
    10b0:	4b 01       	movw	r8, r22
    10b2:	5c 01       	movw	r10, r24
    10b4:	2e ee       	ldi	r18, 0xEE	; 238
    10b6:	3c e7       	ldi	r19, 0x7C	; 124
    10b8:	4f e7       	ldi	r20, 0x7F	; 127
    10ba:	5f e3       	ldi	r21, 0x3F	; 63
    10bc:	c7 01       	movw	r24, r14
    10be:	b6 01       	movw	r22, r12
    10c0:	0e 94 b4 21 	call	0x4368	; 0x4368 <__mulsf3>
    10c4:	9b 01       	movw	r18, r22
    10c6:	ac 01       	movw	r20, r24
    10c8:	c5 01       	movw	r24, r10
    10ca:	b4 01       	movw	r22, r8
    10cc:	0e 94 aa 1f 	call	0x3f54	; 0x3f54 <__addsf3>
    10d0:	04 c0       	rjmp	.+8      	; 0x10da <__vector_21__bottom+0x80>
    10d2:	cb 01       	movw	r24, r22
    10d4:	ba 01       	movw	r22, r20
    10d6:	0e 94 ab 20 	call	0x4156	; 0x4156 <__floatunsisf>

		cpu_irq_disable();
    10da:	f8 94       	cli
		g_adc_light = calc;
    10dc:	60 93 81 04 	sts	0x0481, r22	; 0x800481 <g_adc_light>
    10e0:	70 93 82 04 	sts	0x0482, r23	; 0x800482 <g_adc_light+0x1>
    10e4:	80 93 83 04 	sts	0x0483, r24	; 0x800483 <g_adc_light+0x2>
    10e8:	90 93 84 04 	sts	0x0484, r25	; 0x800484 <g_adc_light+0x3>
    10ec:	3e c0       	rjmp	.+124    	; 0x116a <__vector_21__bottom+0x110>

	} else if (reason == ADC_STATE_VLD_TEMP) {
    10ee:	83 30       	cpi	r24, 0x03	; 3
    10f0:	e1 f5       	brne	.+120    	; 0x116a <__vector_21__bottom+0x110>
		float calc = g_adc_temp ?  0.9995f * g_adc_temp + 0.0005f * adc_val : adc_val;		// load with initial value if none is set before
    10f2:	c0 90 7d 04 	lds	r12, 0x047D	; 0x80047d <g_adc_temp>
    10f6:	d0 90 7e 04 	lds	r13, 0x047E	; 0x80047e <g_adc_temp+0x1>
    10fa:	e0 90 7f 04 	lds	r14, 0x047F	; 0x80047f <g_adc_temp+0x2>
    10fe:	f0 90 80 04 	lds	r15, 0x0480	; 0x800480 <g_adc_temp+0x3>
    1102:	20 e0       	ldi	r18, 0x00	; 0
    1104:	30 e0       	ldi	r19, 0x00	; 0
    1106:	a9 01       	movw	r20, r18
    1108:	c7 01       	movw	r24, r14
    110a:	b6 01       	movw	r22, r12
    110c:	0e 94 0e 20 	call	0x401c	; 0x401c <__cmpsf2>
    1110:	ae 01       	movw	r20, r28
    1112:	60 e0       	ldi	r22, 0x00	; 0
    1114:	70 e0       	ldi	r23, 0x00	; 0
    1116:	88 23       	and	r24, r24
    1118:	d9 f0       	breq	.+54     	; 0x1150 <__vector_21__bottom+0xf6>
    111a:	cb 01       	movw	r24, r22
    111c:	ba 01       	movw	r22, r20
    111e:	0e 94 ab 20 	call	0x4156	; 0x4156 <__floatunsisf>
    1122:	2f e6       	ldi	r18, 0x6F	; 111
    1124:	32 e1       	ldi	r19, 0x12	; 18
    1126:	43 e0       	ldi	r20, 0x03	; 3
    1128:	5a e3       	ldi	r21, 0x3A	; 58
    112a:	0e 94 b4 21 	call	0x4368	; 0x4368 <__mulsf3>
    112e:	4b 01       	movw	r8, r22
    1130:	5c 01       	movw	r10, r24
    1132:	2b e3       	ldi	r18, 0x3B	; 59
    1134:	3f ed       	ldi	r19, 0xDF	; 223
    1136:	4f e7       	ldi	r20, 0x7F	; 127
    1138:	5f e3       	ldi	r21, 0x3F	; 63
    113a:	c7 01       	movw	r24, r14
    113c:	b6 01       	movw	r22, r12
    113e:	0e 94 b4 21 	call	0x4368	; 0x4368 <__mulsf3>
    1142:	9b 01       	movw	r18, r22
    1144:	ac 01       	movw	r20, r24
    1146:	c5 01       	movw	r24, r10
    1148:	b4 01       	movw	r22, r8
    114a:	0e 94 aa 1f 	call	0x3f54	; 0x3f54 <__addsf3>
    114e:	04 c0       	rjmp	.+8      	; 0x1158 <__vector_21__bottom+0xfe>
    1150:	cb 01       	movw	r24, r22
    1152:	ba 01       	movw	r22, r20
    1154:	0e 94 ab 20 	call	0x4156	; 0x4156 <__floatunsisf>

		cpu_irq_disable();
    1158:	f8 94       	cli
		g_adc_temp = calc;
    115a:	60 93 7d 04 	sts	0x047D, r22	; 0x80047d <g_adc_temp>
    115e:	70 93 7e 04 	sts	0x047E, r23	; 0x80047e <g_adc_temp+0x1>
    1162:	80 93 7f 04 	sts	0x047F, r24	; 0x80047f <g_adc_temp+0x2>
    1166:	90 93 80 04 	sts	0x0480, r25	; 0x800480 <g_adc_temp+0x3>
	}
}
    116a:	df 91       	pop	r29
    116c:	cf 91       	pop	r28
    116e:	ff 90       	pop	r15
    1170:	ef 90       	pop	r14
    1172:	df 90       	pop	r13
    1174:	cf 90       	pop	r12
    1176:	bf 90       	pop	r11
    1178:	af 90       	pop	r10
    117a:	9f 90       	pop	r9
    117c:	8f 90       	pop	r8
    117e:	08 95       	ret

00001180 <__vector_21>:
{	/* USART, TX - Complete */
	s_bad_interrupt();
}

ISR(__vector_21, ISR_BLOCK)
{	/* ADC */
    1180:	1f 92       	push	r1
    1182:	0f 92       	push	r0
    1184:	0f b6       	in	r0, 0x3f	; 63
    1186:	0f 92       	push	r0
    1188:	11 24       	eor	r1, r1
    118a:	cf 92       	push	r12
    118c:	df 92       	push	r13
    118e:	ef 92       	push	r14
    1190:	ff 92       	push	r15
    1192:	1f 93       	push	r17
    1194:	2f 93       	push	r18
    1196:	3f 93       	push	r19
    1198:	4f 93       	push	r20
    119a:	5f 93       	push	r21
    119c:	6f 93       	push	r22
    119e:	7f 93       	push	r23
    11a0:	8f 93       	push	r24
    11a2:	9f 93       	push	r25
    11a4:	af 93       	push	r26
    11a6:	bf 93       	push	r27
    11a8:	cf 93       	push	r28
    11aa:	df 93       	push	r29
    11ac:	ef 93       	push	r30
    11ae:	ff 93       	push	r31
	uint16_t adc_val;
	uint8_t  reason = g_adc_state;
    11b0:	10 91 85 04 	lds	r17, 0x0485	; 0x800485 <g_adc_state>

	/* CLI part */
	adc_val  = ADCL;
    11b4:	c0 91 78 00 	lds	r28, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
	adc_val |= ADCH << 8;
    11b8:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
    11bc:	d0 e0       	ldi	r29, 0x00	; 0
    11be:	d8 2b       	or	r29, r24

	//TIFR1 |= _BV(TOV1);							// Reset Timer1 overflow status bit (no ISR for TOV1 activated!)

	switch (g_adc_state) {
    11c0:	11 30       	cpi	r17, 0x01	; 1
    11c2:	59 f0       	breq	.+22     	; 0x11da <__vector_21+0x5a>
    11c4:	30 f0       	brcs	.+12     	; 0x11d2 <__vector_21+0x52>
    11c6:	12 30       	cpi	r17, 0x02	; 2
    11c8:	79 f4       	brne	.+30     	; 0x11e8 <__vector_21+0x68>
			g_adc_state = ADC_STATE_PRE_TEMP;
		break;

		case ADC_STATE_PRE_TEMP:
			// drop one ADC value after switching MUX
			g_adc_state = ADC_STATE_VLD_TEMP;
    11ca:	83 e0       	ldi	r24, 0x03	; 3
    11cc:	80 93 85 04 	sts	0x0485, r24	; 0x800485 <g_adc_state>
		break;
    11d0:	10 c0       	rjmp	.+32     	; 0x11f2 <__vector_21+0x72>
	//TIFR1 |= _BV(TOV1);							// Reset Timer1 overflow status bit (no ISR for TOV1 activated!)

	switch (g_adc_state) {
		case ADC_STATE_PRE_LDR:
			// drop one ADC value after switching MUX
			g_adc_state = ADC_STATE_VLD_LDR;
    11d2:	81 e0       	ldi	r24, 0x01	; 1
    11d4:	80 93 85 04 	sts	0x0485, r24	; 0x800485 <g_adc_state>
		break;
    11d8:	0c c0       	rjmp	.+24     	; 0x11f2 <__vector_21+0x72>
 *
 * \param regval   ADC input mux selection and voltage reference
 */
static inline void adc_set_admux(uint8_t regval)
{
	ADMUX = regval;
    11da:	88 ec       	ldi	r24, 0xC8	; 200
    11dc:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>

		case ADC_STATE_VLD_LDR:
			adc_set_admux(ADC_MUX_TEMPSENSE | ADC_VREF_1V1 | ADC_ADJUSTMENT_RIGHT);
			g_adc_state = ADC_STATE_PRE_TEMP;
    11e0:	82 e0       	ldi	r24, 0x02	; 2
    11e2:	80 93 85 04 	sts	0x0485, r24	; 0x800485 <g_adc_state>
		break;
    11e6:	05 c0       	rjmp	.+10     	; 0x11f2 <__vector_21+0x72>
    11e8:	80 ec       	ldi	r24, 0xC0	; 192
    11ea:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>

		case ADC_STATE_VLD_TEMP:
			// fall-through.
		default:
			adc_set_admux(ADC_MUX_ADC0 | ADC_VREF_1V1 | ADC_ADJUSTMENT_RIGHT);
			g_adc_state = ADC_STATE_PRE_LDR;
    11ee:	10 92 85 04 	sts	0x0485, r1	; 0x800485 <g_adc_state>
	}

	uint16_t adc_light_last = g_adc_light;
    11f2:	60 91 81 04 	lds	r22, 0x0481	; 0x800481 <g_adc_light>
    11f6:	70 91 82 04 	lds	r23, 0x0482	; 0x800482 <g_adc_light+0x1>
    11fa:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <g_adc_light+0x2>
    11fe:	90 91 84 04 	lds	r25, 0x0484	; 0x800484 <g_adc_light+0x3>
    1202:	0e 94 7f 20 	call	0x40fe	; 0x40fe <__fixunssfsi>
    1206:	6b 01       	movw	r12, r22
    1208:	7c 01       	movw	r14, r24
	uint16_t adc_temp_last  = g_adc_temp;
    120a:	60 91 7d 04 	lds	r22, 0x047D	; 0x80047d <g_adc_temp>
    120e:	70 91 7e 04 	lds	r23, 0x047E	; 0x80047e <g_adc_temp+0x1>
    1212:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <g_adc_temp+0x2>
    1216:	90 91 80 04 	lds	r25, 0x0480	; 0x800480 <g_adc_temp+0x3>
    121a:	0e 94 7f 20 	call	0x40fe	; 0x40fe <__fixunssfsi>

	/* SEI part */
	cpu_irq_enable();
    121e:	78 94       	sei

	__vector_21__bottom(reason, adc_val, adc_light_last, adc_temp_last);
    1220:	9b 01       	movw	r18, r22
    1222:	a6 01       	movw	r20, r12
    1224:	be 01       	movw	r22, r28
    1226:	81 2f       	mov	r24, r17
    1228:	18 df       	rcall	.-464    	; 0x105a <__vector_21__bottom>
}
    122a:	ff 91       	pop	r31
    122c:	ef 91       	pop	r30
    122e:	df 91       	pop	r29
    1230:	cf 91       	pop	r28
    1232:	bf 91       	pop	r27
    1234:	af 91       	pop	r26
    1236:	9f 91       	pop	r25
    1238:	8f 91       	pop	r24
    123a:	7f 91       	pop	r23
    123c:	6f 91       	pop	r22
    123e:	5f 91       	pop	r21
    1240:	4f 91       	pop	r20
    1242:	3f 91       	pop	r19
    1244:	2f 91       	pop	r18
    1246:	1f 91       	pop	r17
    1248:	ff 90       	pop	r15
    124a:	ef 90       	pop	r14
    124c:	df 90       	pop	r13
    124e:	cf 90       	pop	r12
    1250:	0f 90       	pop	r0
    1252:	0f be       	out	0x3f, r0	; 63
    1254:	0f 90       	pop	r0
    1256:	1f 90       	pop	r1
    1258:	18 95       	reti

0000125a <__vector_24>:
{	/* ANALOG COMP */
	s_bad_interrupt();
}

ISR(__vector_24, ISR_BLOCK)
{	/* TWI */
    125a:	1f 92       	push	r1
    125c:	0f 92       	push	r0
    125e:	0f b6       	in	r0, 0x3f	; 63
    1260:	0f 92       	push	r0
    1262:	11 24       	eor	r1, r1
    1264:	2f 93       	push	r18
    1266:	3f 93       	push	r19
    1268:	4f 93       	push	r20
    126a:	5f 93       	push	r21
    126c:	6f 93       	push	r22
    126e:	7f 93       	push	r23
    1270:	8f 93       	push	r24
    1272:	9f 93       	push	r25
    1274:	af 93       	push	r26
    1276:	bf 93       	push	r27
    1278:	cf 93       	push	r28
    127a:	df 93       	push	r29
    127c:	ef 93       	push	r30
    127e:	ff 93       	push	r31
	uint8_t tws = TWSR & (0b11111 << TWS3);
    1280:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	uint8_t twd = TWDR;
    1284:	60 91 bb 00 	lds	r22, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	uint8_t twcr_cur = TWCR;
    1288:	cc eb       	ldi	r28, 0xBC	; 188
    128a:	d0 e0       	ldi	r29, 0x00	; 0
    128c:	48 81       	ld	r20, Y

	uint8_t twcr_new = __vector_24__bottom(tws, twd, twcr_cur);
    128e:	88 7f       	andi	r24, 0xF8	; 248
    1290:	0e 94 a8 1b 	call	0x3750	; 0x3750 <__vector_24__bottom>
	TWCR = twcr_new | _BV(TWINT) | _BV(TWEN) | _BV(TWIE);
    1294:	85 68       	ori	r24, 0x85	; 133
    1296:	88 83       	st	Y, r24
}
    1298:	ff 91       	pop	r31
    129a:	ef 91       	pop	r30
    129c:	df 91       	pop	r29
    129e:	cf 91       	pop	r28
    12a0:	bf 91       	pop	r27
    12a2:	af 91       	pop	r26
    12a4:	9f 91       	pop	r25
    12a6:	8f 91       	pop	r24
    12a8:	7f 91       	pop	r23
    12aa:	6f 91       	pop	r22
    12ac:	5f 91       	pop	r21
    12ae:	4f 91       	pop	r20
    12b0:	3f 91       	pop	r19
    12b2:	2f 91       	pop	r18
    12b4:	0f 90       	pop	r0
    12b6:	0f be       	out	0x3f, r0	; 63
    12b8:	0f 90       	pop	r0
    12ba:	1f 90       	pop	r1
    12bc:	18 95       	reti

000012be <__vector_25>:

ISR(__vector_25, ISR_BLOCK)
{	/* SPM READY - Store Program Memory Ready */
    12be:	1f 92       	push	r1
    12c0:	0f 92       	push	r0
    12c2:	0f b6       	in	r0, 0x3f	; 63
    12c4:	0f 92       	push	r0
    12c6:	11 24       	eor	r1, r1
    12c8:	2f 93       	push	r18
    12ca:	3f 93       	push	r19
    12cc:	4f 93       	push	r20
    12ce:	5f 93       	push	r21
    12d0:	6f 93       	push	r22
    12d2:	7f 93       	push	r23
    12d4:	8f 93       	push	r24
    12d6:	9f 93       	push	r25
    12d8:	af 93       	push	r26
    12da:	bf 93       	push	r27
    12dc:	ef 93       	push	r30

/* ISR routines */

static void s_bad_interrupt(void)
{
	asm_break();
    12de:	ff 93       	push	r31
}

ISR(__vector_25, ISR_BLOCK)
{	/* SPM READY - Store Program Memory Ready */
	s_bad_interrupt();
}
    12e0:	94 dd       	rcall	.-1240   	; 0xe0a <asm_break>
    12e2:	ff 91       	pop	r31
    12e4:	ef 91       	pop	r30
    12e6:	bf 91       	pop	r27
    12e8:	af 91       	pop	r26
    12ea:	9f 91       	pop	r25
    12ec:	8f 91       	pop	r24
    12ee:	7f 91       	pop	r23
    12f0:	6f 91       	pop	r22
    12f2:	5f 91       	pop	r21
    12f4:	4f 91       	pop	r20
    12f6:	3f 91       	pop	r19
    12f8:	2f 91       	pop	r18
    12fa:	0f 90       	pop	r0
    12fc:	0f be       	out	0x3f, r0	; 63
    12fe:	0f 90       	pop	r0
    1300:	1f 90       	pop	r1
    1302:	18 95       	reti

00001304 <__vector_23>:
    1304:	1f 92       	push	r1
    1306:	0f 92       	push	r0
    1308:	0f b6       	in	r0, 0x3f	; 63
    130a:	0f 92       	push	r0
    130c:	11 24       	eor	r1, r1
    130e:	2f 93       	push	r18
    1310:	3f 93       	push	r19
    1312:	4f 93       	push	r20
    1314:	5f 93       	push	r21
    1316:	6f 93       	push	r22
    1318:	7f 93       	push	r23
    131a:	8f 93       	push	r24
    131c:	9f 93       	push	r25
    131e:	af 93       	push	r26
    1320:	bf 93       	push	r27
    1322:	ef 93       	push	r30
    1324:	ff 93       	push	r31
    1326:	cb df       	rcall	.-106    	; 0x12be <__vector_25>
    1328:	ff 91       	pop	r31
    132a:	ef 91       	pop	r30
    132c:	bf 91       	pop	r27
    132e:	af 91       	pop	r26
    1330:	9f 91       	pop	r25
    1332:	8f 91       	pop	r24
    1334:	7f 91       	pop	r23
    1336:	6f 91       	pop	r22
    1338:	5f 91       	pop	r21
    133a:	4f 91       	pop	r20
    133c:	3f 91       	pop	r19
    133e:	2f 91       	pop	r18
    1340:	0f 90       	pop	r0
    1342:	0f be       	out	0x3f, r0	; 63
    1344:	0f 90       	pop	r0
    1346:	1f 90       	pop	r1
    1348:	18 95       	reti

0000134a <__vector_22>:
    134a:	1f 92       	push	r1
    134c:	0f 92       	push	r0
    134e:	0f b6       	in	r0, 0x3f	; 63
    1350:	0f 92       	push	r0
    1352:	11 24       	eor	r1, r1
    1354:	2f 93       	push	r18
    1356:	3f 93       	push	r19
    1358:	4f 93       	push	r20
    135a:	5f 93       	push	r21
    135c:	6f 93       	push	r22
    135e:	7f 93       	push	r23
    1360:	8f 93       	push	r24
    1362:	9f 93       	push	r25
    1364:	af 93       	push	r26
    1366:	bf 93       	push	r27
    1368:	ef 93       	push	r30
    136a:	ff 93       	push	r31
    136c:	a8 df       	rcall	.-176    	; 0x12be <__vector_25>
    136e:	ff 91       	pop	r31
    1370:	ef 91       	pop	r30
    1372:	bf 91       	pop	r27
    1374:	af 91       	pop	r26
    1376:	9f 91       	pop	r25
    1378:	8f 91       	pop	r24
    137a:	7f 91       	pop	r23
    137c:	6f 91       	pop	r22
    137e:	5f 91       	pop	r21
    1380:	4f 91       	pop	r20
    1382:	3f 91       	pop	r19
    1384:	2f 91       	pop	r18
    1386:	0f 90       	pop	r0
    1388:	0f be       	out	0x3f, r0	; 63
    138a:	0f 90       	pop	r0
    138c:	1f 90       	pop	r1
    138e:	18 95       	reti

00001390 <__vector_20>:
    1390:	1f 92       	push	r1
    1392:	0f 92       	push	r0
    1394:	0f b6       	in	r0, 0x3f	; 63
    1396:	0f 92       	push	r0
    1398:	11 24       	eor	r1, r1
    139a:	2f 93       	push	r18
    139c:	3f 93       	push	r19
    139e:	4f 93       	push	r20
    13a0:	5f 93       	push	r21
    13a2:	6f 93       	push	r22
    13a4:	7f 93       	push	r23
    13a6:	8f 93       	push	r24
    13a8:	9f 93       	push	r25
    13aa:	af 93       	push	r26
    13ac:	bf 93       	push	r27
    13ae:	ef 93       	push	r30
    13b0:	ff 93       	push	r31
    13b2:	85 df       	rcall	.-246    	; 0x12be <__vector_25>
    13b4:	ff 91       	pop	r31
    13b6:	ef 91       	pop	r30
    13b8:	bf 91       	pop	r27
    13ba:	af 91       	pop	r26
    13bc:	9f 91       	pop	r25
    13be:	8f 91       	pop	r24
    13c0:	7f 91       	pop	r23
    13c2:	6f 91       	pop	r22
    13c4:	5f 91       	pop	r21
    13c6:	4f 91       	pop	r20
    13c8:	3f 91       	pop	r19
    13ca:	2f 91       	pop	r18
    13cc:	0f 90       	pop	r0
    13ce:	0f be       	out	0x3f, r0	; 63
    13d0:	0f 90       	pop	r0
    13d2:	1f 90       	pop	r1
    13d4:	18 95       	reti

000013d6 <__vector_19>:
    13d6:	1f 92       	push	r1
    13d8:	0f 92       	push	r0
    13da:	0f b6       	in	r0, 0x3f	; 63
    13dc:	0f 92       	push	r0
    13de:	11 24       	eor	r1, r1
    13e0:	2f 93       	push	r18
    13e2:	3f 93       	push	r19
    13e4:	4f 93       	push	r20
    13e6:	5f 93       	push	r21
    13e8:	6f 93       	push	r22
    13ea:	7f 93       	push	r23
    13ec:	8f 93       	push	r24
    13ee:	9f 93       	push	r25
    13f0:	af 93       	push	r26
    13f2:	bf 93       	push	r27
    13f4:	ef 93       	push	r30
    13f6:	ff 93       	push	r31
    13f8:	62 df       	rcall	.-316    	; 0x12be <__vector_25>
    13fa:	ff 91       	pop	r31
    13fc:	ef 91       	pop	r30
    13fe:	bf 91       	pop	r27
    1400:	af 91       	pop	r26
    1402:	9f 91       	pop	r25
    1404:	8f 91       	pop	r24
    1406:	7f 91       	pop	r23
    1408:	6f 91       	pop	r22
    140a:	5f 91       	pop	r21
    140c:	4f 91       	pop	r20
    140e:	3f 91       	pop	r19
    1410:	2f 91       	pop	r18
    1412:	0f 90       	pop	r0
    1414:	0f be       	out	0x3f, r0	; 63
    1416:	0f 90       	pop	r0
    1418:	1f 90       	pop	r1
    141a:	18 95       	reti

0000141c <__vector_18>:
    141c:	1f 92       	push	r1
    141e:	0f 92       	push	r0
    1420:	0f b6       	in	r0, 0x3f	; 63
    1422:	0f 92       	push	r0
    1424:	11 24       	eor	r1, r1
    1426:	2f 93       	push	r18
    1428:	3f 93       	push	r19
    142a:	4f 93       	push	r20
    142c:	5f 93       	push	r21
    142e:	6f 93       	push	r22
    1430:	7f 93       	push	r23
    1432:	8f 93       	push	r24
    1434:	9f 93       	push	r25
    1436:	af 93       	push	r26
    1438:	bf 93       	push	r27
    143a:	ef 93       	push	r30
    143c:	ff 93       	push	r31
    143e:	3f df       	rcall	.-386    	; 0x12be <__vector_25>
    1440:	ff 91       	pop	r31
    1442:	ef 91       	pop	r30
    1444:	bf 91       	pop	r27
    1446:	af 91       	pop	r26
    1448:	9f 91       	pop	r25
    144a:	8f 91       	pop	r24
    144c:	7f 91       	pop	r23
    144e:	6f 91       	pop	r22
    1450:	5f 91       	pop	r21
    1452:	4f 91       	pop	r20
    1454:	3f 91       	pop	r19
    1456:	2f 91       	pop	r18
    1458:	0f 90       	pop	r0
    145a:	0f be       	out	0x3f, r0	; 63
    145c:	0f 90       	pop	r0
    145e:	1f 90       	pop	r1
    1460:	18 95       	reti

00001462 <__vector_17>:
    1462:	1f 92       	push	r1
    1464:	0f 92       	push	r0
    1466:	0f b6       	in	r0, 0x3f	; 63
    1468:	0f 92       	push	r0
    146a:	11 24       	eor	r1, r1
    146c:	2f 93       	push	r18
    146e:	3f 93       	push	r19
    1470:	4f 93       	push	r20
    1472:	5f 93       	push	r21
    1474:	6f 93       	push	r22
    1476:	7f 93       	push	r23
    1478:	8f 93       	push	r24
    147a:	9f 93       	push	r25
    147c:	af 93       	push	r26
    147e:	bf 93       	push	r27
    1480:	ef 93       	push	r30
    1482:	ff 93       	push	r31
    1484:	1c df       	rcall	.-456    	; 0x12be <__vector_25>
    1486:	ff 91       	pop	r31
    1488:	ef 91       	pop	r30
    148a:	bf 91       	pop	r27
    148c:	af 91       	pop	r26
    148e:	9f 91       	pop	r25
    1490:	8f 91       	pop	r24
    1492:	7f 91       	pop	r23
    1494:	6f 91       	pop	r22
    1496:	5f 91       	pop	r21
    1498:	4f 91       	pop	r20
    149a:	3f 91       	pop	r19
    149c:	2f 91       	pop	r18
    149e:	0f 90       	pop	r0
    14a0:	0f be       	out	0x3f, r0	; 63
    14a2:	0f 90       	pop	r0
    14a4:	1f 90       	pop	r1
    14a6:	18 95       	reti

000014a8 <__vector_16>:
    14a8:	1f 92       	push	r1
    14aa:	0f 92       	push	r0
    14ac:	0f b6       	in	r0, 0x3f	; 63
    14ae:	0f 92       	push	r0
    14b0:	11 24       	eor	r1, r1
    14b2:	2f 93       	push	r18
    14b4:	3f 93       	push	r19
    14b6:	4f 93       	push	r20
    14b8:	5f 93       	push	r21
    14ba:	6f 93       	push	r22
    14bc:	7f 93       	push	r23
    14be:	8f 93       	push	r24
    14c0:	9f 93       	push	r25
    14c2:	af 93       	push	r26
    14c4:	bf 93       	push	r27
    14c6:	ef 93       	push	r30
    14c8:	ff 93       	push	r31
    14ca:	f9 de       	rcall	.-526    	; 0x12be <__vector_25>
    14cc:	ff 91       	pop	r31
    14ce:	ef 91       	pop	r30
    14d0:	bf 91       	pop	r27
    14d2:	af 91       	pop	r26
    14d4:	9f 91       	pop	r25
    14d6:	8f 91       	pop	r24
    14d8:	7f 91       	pop	r23
    14da:	6f 91       	pop	r22
    14dc:	5f 91       	pop	r21
    14de:	4f 91       	pop	r20
    14e0:	3f 91       	pop	r19
    14e2:	2f 91       	pop	r18
    14e4:	0f 90       	pop	r0
    14e6:	0f be       	out	0x3f, r0	; 63
    14e8:	0f 90       	pop	r0
    14ea:	1f 90       	pop	r1
    14ec:	18 95       	reti

000014ee <__vector_15>:
    14ee:	1f 92       	push	r1
    14f0:	0f 92       	push	r0
    14f2:	0f b6       	in	r0, 0x3f	; 63
    14f4:	0f 92       	push	r0
    14f6:	11 24       	eor	r1, r1
    14f8:	2f 93       	push	r18
    14fa:	3f 93       	push	r19
    14fc:	4f 93       	push	r20
    14fe:	5f 93       	push	r21
    1500:	6f 93       	push	r22
    1502:	7f 93       	push	r23
    1504:	8f 93       	push	r24
    1506:	9f 93       	push	r25
    1508:	af 93       	push	r26
    150a:	bf 93       	push	r27
    150c:	ef 93       	push	r30
    150e:	ff 93       	push	r31
    1510:	d6 de       	rcall	.-596    	; 0x12be <__vector_25>
    1512:	ff 91       	pop	r31
    1514:	ef 91       	pop	r30
    1516:	bf 91       	pop	r27
    1518:	af 91       	pop	r26
    151a:	9f 91       	pop	r25
    151c:	8f 91       	pop	r24
    151e:	7f 91       	pop	r23
    1520:	6f 91       	pop	r22
    1522:	5f 91       	pop	r21
    1524:	4f 91       	pop	r20
    1526:	3f 91       	pop	r19
    1528:	2f 91       	pop	r18
    152a:	0f 90       	pop	r0
    152c:	0f be       	out	0x3f, r0	; 63
    152e:	0f 90       	pop	r0
    1530:	1f 90       	pop	r1
    1532:	18 95       	reti

00001534 <__vector_14>:
    1534:	1f 92       	push	r1
    1536:	0f 92       	push	r0
    1538:	0f b6       	in	r0, 0x3f	; 63
    153a:	0f 92       	push	r0
    153c:	11 24       	eor	r1, r1
    153e:	2f 93       	push	r18
    1540:	3f 93       	push	r19
    1542:	4f 93       	push	r20
    1544:	5f 93       	push	r21
    1546:	6f 93       	push	r22
    1548:	7f 93       	push	r23
    154a:	8f 93       	push	r24
    154c:	9f 93       	push	r25
    154e:	af 93       	push	r26
    1550:	bf 93       	push	r27
    1552:	ef 93       	push	r30
    1554:	ff 93       	push	r31
    1556:	b3 de       	rcall	.-666    	; 0x12be <__vector_25>
    1558:	ff 91       	pop	r31
    155a:	ef 91       	pop	r30
    155c:	bf 91       	pop	r27
    155e:	af 91       	pop	r26
    1560:	9f 91       	pop	r25
    1562:	8f 91       	pop	r24
    1564:	7f 91       	pop	r23
    1566:	6f 91       	pop	r22
    1568:	5f 91       	pop	r21
    156a:	4f 91       	pop	r20
    156c:	3f 91       	pop	r19
    156e:	2f 91       	pop	r18
    1570:	0f 90       	pop	r0
    1572:	0f be       	out	0x3f, r0	; 63
    1574:	0f 90       	pop	r0
    1576:	1f 90       	pop	r1
    1578:	18 95       	reti

0000157a <__vector_12>:
    157a:	1f 92       	push	r1
    157c:	0f 92       	push	r0
    157e:	0f b6       	in	r0, 0x3f	; 63
    1580:	0f 92       	push	r0
    1582:	11 24       	eor	r1, r1
    1584:	2f 93       	push	r18
    1586:	3f 93       	push	r19
    1588:	4f 93       	push	r20
    158a:	5f 93       	push	r21
    158c:	6f 93       	push	r22
    158e:	7f 93       	push	r23
    1590:	8f 93       	push	r24
    1592:	9f 93       	push	r25
    1594:	af 93       	push	r26
    1596:	bf 93       	push	r27
    1598:	ef 93       	push	r30
    159a:	ff 93       	push	r31
    159c:	90 de       	rcall	.-736    	; 0x12be <__vector_25>
    159e:	ff 91       	pop	r31
    15a0:	ef 91       	pop	r30
    15a2:	bf 91       	pop	r27
    15a4:	af 91       	pop	r26
    15a6:	9f 91       	pop	r25
    15a8:	8f 91       	pop	r24
    15aa:	7f 91       	pop	r23
    15ac:	6f 91       	pop	r22
    15ae:	5f 91       	pop	r21
    15b0:	4f 91       	pop	r20
    15b2:	3f 91       	pop	r19
    15b4:	2f 91       	pop	r18
    15b6:	0f 90       	pop	r0
    15b8:	0f be       	out	0x3f, r0	; 63
    15ba:	0f 90       	pop	r0
    15bc:	1f 90       	pop	r1
    15be:	18 95       	reti

000015c0 <__vector_11>:
    15c0:	1f 92       	push	r1
    15c2:	0f 92       	push	r0
    15c4:	0f b6       	in	r0, 0x3f	; 63
    15c6:	0f 92       	push	r0
    15c8:	11 24       	eor	r1, r1
    15ca:	2f 93       	push	r18
    15cc:	3f 93       	push	r19
    15ce:	4f 93       	push	r20
    15d0:	5f 93       	push	r21
    15d2:	6f 93       	push	r22
    15d4:	7f 93       	push	r23
    15d6:	8f 93       	push	r24
    15d8:	9f 93       	push	r25
    15da:	af 93       	push	r26
    15dc:	bf 93       	push	r27
    15de:	ef 93       	push	r30
    15e0:	ff 93       	push	r31
    15e2:	6d de       	rcall	.-806    	; 0x12be <__vector_25>
    15e4:	ff 91       	pop	r31
    15e6:	ef 91       	pop	r30
    15e8:	bf 91       	pop	r27
    15ea:	af 91       	pop	r26
    15ec:	9f 91       	pop	r25
    15ee:	8f 91       	pop	r24
    15f0:	7f 91       	pop	r23
    15f2:	6f 91       	pop	r22
    15f4:	5f 91       	pop	r21
    15f6:	4f 91       	pop	r20
    15f8:	3f 91       	pop	r19
    15fa:	2f 91       	pop	r18
    15fc:	0f 90       	pop	r0
    15fe:	0f be       	out	0x3f, r0	; 63
    1600:	0f 90       	pop	r0
    1602:	1f 90       	pop	r1
    1604:	18 95       	reti

00001606 <__vector_10>:
    1606:	1f 92       	push	r1
    1608:	0f 92       	push	r0
    160a:	0f b6       	in	r0, 0x3f	; 63
    160c:	0f 92       	push	r0
    160e:	11 24       	eor	r1, r1
    1610:	2f 93       	push	r18
    1612:	3f 93       	push	r19
    1614:	4f 93       	push	r20
    1616:	5f 93       	push	r21
    1618:	6f 93       	push	r22
    161a:	7f 93       	push	r23
    161c:	8f 93       	push	r24
    161e:	9f 93       	push	r25
    1620:	af 93       	push	r26
    1622:	bf 93       	push	r27
    1624:	ef 93       	push	r30
    1626:	ff 93       	push	r31
    1628:	4a de       	rcall	.-876    	; 0x12be <__vector_25>
    162a:	ff 91       	pop	r31
    162c:	ef 91       	pop	r30
    162e:	bf 91       	pop	r27
    1630:	af 91       	pop	r26
    1632:	9f 91       	pop	r25
    1634:	8f 91       	pop	r24
    1636:	7f 91       	pop	r23
    1638:	6f 91       	pop	r22
    163a:	5f 91       	pop	r21
    163c:	4f 91       	pop	r20
    163e:	3f 91       	pop	r19
    1640:	2f 91       	pop	r18
    1642:	0f 90       	pop	r0
    1644:	0f be       	out	0x3f, r0	; 63
    1646:	0f 90       	pop	r0
    1648:	1f 90       	pop	r1
    164a:	18 95       	reti

0000164c <__vector_8>:
    164c:	1f 92       	push	r1
    164e:	0f 92       	push	r0
    1650:	0f b6       	in	r0, 0x3f	; 63
    1652:	0f 92       	push	r0
    1654:	11 24       	eor	r1, r1
    1656:	2f 93       	push	r18
    1658:	3f 93       	push	r19
    165a:	4f 93       	push	r20
    165c:	5f 93       	push	r21
    165e:	6f 93       	push	r22
    1660:	7f 93       	push	r23
    1662:	8f 93       	push	r24
    1664:	9f 93       	push	r25
    1666:	af 93       	push	r26
    1668:	bf 93       	push	r27
    166a:	ef 93       	push	r30
    166c:	ff 93       	push	r31
    166e:	27 de       	rcall	.-946    	; 0x12be <__vector_25>
    1670:	ff 91       	pop	r31
    1672:	ef 91       	pop	r30
    1674:	bf 91       	pop	r27
    1676:	af 91       	pop	r26
    1678:	9f 91       	pop	r25
    167a:	8f 91       	pop	r24
    167c:	7f 91       	pop	r23
    167e:	6f 91       	pop	r22
    1680:	5f 91       	pop	r21
    1682:	4f 91       	pop	r20
    1684:	3f 91       	pop	r19
    1686:	2f 91       	pop	r18
    1688:	0f 90       	pop	r0
    168a:	0f be       	out	0x3f, r0	; 63
    168c:	0f 90       	pop	r0
    168e:	1f 90       	pop	r1
    1690:	18 95       	reti

00001692 <__vector_7>:
    1692:	1f 92       	push	r1
    1694:	0f 92       	push	r0
    1696:	0f b6       	in	r0, 0x3f	; 63
    1698:	0f 92       	push	r0
    169a:	11 24       	eor	r1, r1
    169c:	2f 93       	push	r18
    169e:	3f 93       	push	r19
    16a0:	4f 93       	push	r20
    16a2:	5f 93       	push	r21
    16a4:	6f 93       	push	r22
    16a6:	7f 93       	push	r23
    16a8:	8f 93       	push	r24
    16aa:	9f 93       	push	r25
    16ac:	af 93       	push	r26
    16ae:	bf 93       	push	r27
    16b0:	ef 93       	push	r30
    16b2:	ff 93       	push	r31
    16b4:	04 de       	rcall	.-1016   	; 0x12be <__vector_25>
    16b6:	ff 91       	pop	r31
    16b8:	ef 91       	pop	r30
    16ba:	bf 91       	pop	r27
    16bc:	af 91       	pop	r26
    16be:	9f 91       	pop	r25
    16c0:	8f 91       	pop	r24
    16c2:	7f 91       	pop	r23
    16c4:	6f 91       	pop	r22
    16c6:	5f 91       	pop	r21
    16c8:	4f 91       	pop	r20
    16ca:	3f 91       	pop	r19
    16cc:	2f 91       	pop	r18
    16ce:	0f 90       	pop	r0
    16d0:	0f be       	out	0x3f, r0	; 63
    16d2:	0f 90       	pop	r0
    16d4:	1f 90       	pop	r1
    16d6:	18 95       	reti

000016d8 <__vector_6>:
    16d8:	1f 92       	push	r1
    16da:	0f 92       	push	r0
    16dc:	0f b6       	in	r0, 0x3f	; 63
    16de:	0f 92       	push	r0
    16e0:	11 24       	eor	r1, r1
    16e2:	2f 93       	push	r18
    16e4:	3f 93       	push	r19
    16e6:	4f 93       	push	r20
    16e8:	5f 93       	push	r21
    16ea:	6f 93       	push	r22
    16ec:	7f 93       	push	r23
    16ee:	8f 93       	push	r24
    16f0:	9f 93       	push	r25
    16f2:	af 93       	push	r26
    16f4:	bf 93       	push	r27
    16f6:	ef 93       	push	r30
    16f8:	ff 93       	push	r31
    16fa:	e1 dd       	rcall	.-1086   	; 0x12be <__vector_25>
    16fc:	ff 91       	pop	r31
    16fe:	ef 91       	pop	r30
    1700:	bf 91       	pop	r27
    1702:	af 91       	pop	r26
    1704:	9f 91       	pop	r25
    1706:	8f 91       	pop	r24
    1708:	7f 91       	pop	r23
    170a:	6f 91       	pop	r22
    170c:	5f 91       	pop	r21
    170e:	4f 91       	pop	r20
    1710:	3f 91       	pop	r19
    1712:	2f 91       	pop	r18
    1714:	0f 90       	pop	r0
    1716:	0f be       	out	0x3f, r0	; 63
    1718:	0f 90       	pop	r0
    171a:	1f 90       	pop	r1
    171c:	18 95       	reti

0000171e <__vector_5>:
    171e:	1f 92       	push	r1
    1720:	0f 92       	push	r0
    1722:	0f b6       	in	r0, 0x3f	; 63
    1724:	0f 92       	push	r0
    1726:	11 24       	eor	r1, r1
    1728:	2f 93       	push	r18
    172a:	3f 93       	push	r19
    172c:	4f 93       	push	r20
    172e:	5f 93       	push	r21
    1730:	6f 93       	push	r22
    1732:	7f 93       	push	r23
    1734:	8f 93       	push	r24
    1736:	9f 93       	push	r25
    1738:	af 93       	push	r26
    173a:	bf 93       	push	r27
    173c:	ef 93       	push	r30
    173e:	ff 93       	push	r31
    1740:	be dd       	rcall	.-1156   	; 0x12be <__vector_25>
    1742:	ff 91       	pop	r31
    1744:	ef 91       	pop	r30
    1746:	bf 91       	pop	r27
    1748:	af 91       	pop	r26
    174a:	9f 91       	pop	r25
    174c:	8f 91       	pop	r24
    174e:	7f 91       	pop	r23
    1750:	6f 91       	pop	r22
    1752:	5f 91       	pop	r21
    1754:	4f 91       	pop	r20
    1756:	3f 91       	pop	r19
    1758:	2f 91       	pop	r18
    175a:	0f 90       	pop	r0
    175c:	0f be       	out	0x3f, r0	; 63
    175e:	0f 90       	pop	r0
    1760:	1f 90       	pop	r1
    1762:	18 95       	reti

00001764 <__vector_4>:
    1764:	1f 92       	push	r1
    1766:	0f 92       	push	r0
    1768:	0f b6       	in	r0, 0x3f	; 63
    176a:	0f 92       	push	r0
    176c:	11 24       	eor	r1, r1
    176e:	2f 93       	push	r18
    1770:	3f 93       	push	r19
    1772:	4f 93       	push	r20
    1774:	5f 93       	push	r21
    1776:	6f 93       	push	r22
    1778:	7f 93       	push	r23
    177a:	8f 93       	push	r24
    177c:	9f 93       	push	r25
    177e:	af 93       	push	r26
    1780:	bf 93       	push	r27
    1782:	ef 93       	push	r30
    1784:	ff 93       	push	r31
    1786:	9b dd       	rcall	.-1226   	; 0x12be <__vector_25>
    1788:	ff 91       	pop	r31
    178a:	ef 91       	pop	r30
    178c:	bf 91       	pop	r27
    178e:	af 91       	pop	r26
    1790:	9f 91       	pop	r25
    1792:	8f 91       	pop	r24
    1794:	7f 91       	pop	r23
    1796:	6f 91       	pop	r22
    1798:	5f 91       	pop	r21
    179a:	4f 91       	pop	r20
    179c:	3f 91       	pop	r19
    179e:	2f 91       	pop	r18
    17a0:	0f 90       	pop	r0
    17a2:	0f be       	out	0x3f, r0	; 63
    17a4:	0f 90       	pop	r0
    17a6:	1f 90       	pop	r1
    17a8:	18 95       	reti

000017aa <__vector_3>:
    17aa:	1f 92       	push	r1
    17ac:	0f 92       	push	r0
    17ae:	0f b6       	in	r0, 0x3f	; 63
    17b0:	0f 92       	push	r0
    17b2:	11 24       	eor	r1, r1
    17b4:	2f 93       	push	r18
    17b6:	3f 93       	push	r19
    17b8:	4f 93       	push	r20
    17ba:	5f 93       	push	r21
    17bc:	6f 93       	push	r22
    17be:	7f 93       	push	r23
    17c0:	8f 93       	push	r24
    17c2:	9f 93       	push	r25
    17c4:	af 93       	push	r26
    17c6:	bf 93       	push	r27
    17c8:	ef 93       	push	r30
    17ca:	ff 93       	push	r31
    17cc:	78 dd       	rcall	.-1296   	; 0x12be <__vector_25>
    17ce:	ff 91       	pop	r31
    17d0:	ef 91       	pop	r30
    17d2:	bf 91       	pop	r27
    17d4:	af 91       	pop	r26
    17d6:	9f 91       	pop	r25
    17d8:	8f 91       	pop	r24
    17da:	7f 91       	pop	r23
    17dc:	6f 91       	pop	r22
    17de:	5f 91       	pop	r21
    17e0:	4f 91       	pop	r20
    17e2:	3f 91       	pop	r19
    17e4:	2f 91       	pop	r18
    17e6:	0f 90       	pop	r0
    17e8:	0f be       	out	0x3f, r0	; 63
    17ea:	0f 90       	pop	r0
    17ec:	1f 90       	pop	r1
    17ee:	18 95       	reti

000017f0 <__vector_2>:
    17f0:	1f 92       	push	r1
    17f2:	0f 92       	push	r0
    17f4:	0f b6       	in	r0, 0x3f	; 63
    17f6:	0f 92       	push	r0
    17f8:	11 24       	eor	r1, r1
    17fa:	2f 93       	push	r18
    17fc:	3f 93       	push	r19
    17fe:	4f 93       	push	r20
    1800:	5f 93       	push	r21
    1802:	6f 93       	push	r22
    1804:	7f 93       	push	r23
    1806:	8f 93       	push	r24
    1808:	9f 93       	push	r25
    180a:	af 93       	push	r26
    180c:	bf 93       	push	r27
    180e:	ef 93       	push	r30
    1810:	ff 93       	push	r31
    1812:	55 dd       	rcall	.-1366   	; 0x12be <__vector_25>
    1814:	ff 91       	pop	r31
    1816:	ef 91       	pop	r30
    1818:	bf 91       	pop	r27
    181a:	af 91       	pop	r26
    181c:	9f 91       	pop	r25
    181e:	8f 91       	pop	r24
    1820:	7f 91       	pop	r23
    1822:	6f 91       	pop	r22
    1824:	5f 91       	pop	r21
    1826:	4f 91       	pop	r20
    1828:	3f 91       	pop	r19
    182a:	2f 91       	pop	r18
    182c:	0f 90       	pop	r0
    182e:	0f be       	out	0x3f, r0	; 63
    1830:	0f 90       	pop	r0
    1832:	1f 90       	pop	r1
    1834:	18 95       	reti

00001836 <__vector_1>:
    1836:	1f 92       	push	r1
    1838:	0f 92       	push	r0
    183a:	0f b6       	in	r0, 0x3f	; 63
    183c:	0f 92       	push	r0
    183e:	11 24       	eor	r1, r1
    1840:	2f 93       	push	r18
    1842:	3f 93       	push	r19
    1844:	4f 93       	push	r20
    1846:	5f 93       	push	r21
    1848:	6f 93       	push	r22
    184a:	7f 93       	push	r23
    184c:	8f 93       	push	r24
    184e:	9f 93       	push	r25
    1850:	af 93       	push	r26
    1852:	bf 93       	push	r27
    1854:	ef 93       	push	r30
    1856:	ff 93       	push	r31
    1858:	32 dd       	rcall	.-1436   	; 0x12be <__vector_25>
    185a:	ff 91       	pop	r31
    185c:	ef 91       	pop	r30
    185e:	bf 91       	pop	r27
    1860:	af 91       	pop	r26
    1862:	9f 91       	pop	r25
    1864:	8f 91       	pop	r24
    1866:	7f 91       	pop	r23
    1868:	6f 91       	pop	r22
    186a:	5f 91       	pop	r21
    186c:	4f 91       	pop	r20
    186e:	3f 91       	pop	r19
    1870:	2f 91       	pop	r18
    1872:	0f 90       	pop	r0
    1874:	0f be       	out	0x3f, r0	; 63
    1876:	0f 90       	pop	r0
    1878:	1f 90       	pop	r1
    187a:	18 95       	reti

0000187c <cpu_irq_save>:
}

void lcd_enable(uint8_t on)
{
	if (!on) {
		lcd_bus_write_cmd(0b10101110);									// Disable DC[2] (Display)
    187c:	cf 93       	push	r28
    187e:	df 93       	push	r29
    1880:	1f 92       	push	r1
    1882:	cd b7       	in	r28, 0x3d	; 61
    1884:	de b7       	in	r29, 0x3e	; 62
    1886:	8f b7       	in	r24, 0x3f	; 63
    1888:	89 83       	std	Y+1, r24	; 0x01
    188a:	f8 94       	cli
    188c:	89 81       	ldd	r24, Y+1	; 0x01
    188e:	0f 90       	pop	r0
    1890:	df 91       	pop	r29
    1892:	cf 91       	pop	r28
    1894:	08 95       	ret

00001896 <__portable_avr_delay_cycles>:
    1896:	04 c0       	rjmp	.+8      	; 0x18a0 <__portable_avr_delay_cycles+0xa>
    1898:	61 50       	subi	r22, 0x01	; 1
    189a:	71 09       	sbc	r23, r1
    189c:	81 09       	sbc	r24, r1
    189e:	91 09       	sbc	r25, r1
    18a0:	61 15       	cp	r22, r1
    18a2:	71 05       	cpc	r23, r1
    18a4:	81 05       	cpc	r24, r1
    18a6:	91 05       	cpc	r25, r1
    18a8:	b9 f7       	brne	.-18     	; 0x1898 <__portable_avr_delay_cycles+0x2>
    18aa:	08 95       	ret

000018ac <lcd_bus_read_status>:
    18ac:	e7 df       	rcall	.-50     	; 0x187c <cpu_irq_save>
    18ae:	98 2f       	mov	r25, r24
    18b0:	8f ef       	ldi	r24, 0xFF	; 255
    18b2:	8b b9       	out	0x0b, r24	; 11
    18b4:	1a b8       	out	0x0a, r1	; 10
    18b6:	28 98       	cbi	0x05, 0	; 5
    18b8:	2c 9a       	sbi	0x05, 4	; 5
    18ba:	2d 9a       	sbi	0x05, 5	; 5
    18bc:	2d 98       	cbi	0x05, 5	; 5
    18be:	89 b1       	in	r24, 0x09	; 9
    18c0:	9f bf       	out	0x3f, r25	; 63
    18c2:	08 95       	ret

000018c4 <lcd_bus_write_cmd>:
    18c4:	cf 93       	push	r28
    18c6:	c8 2f       	mov	r28, r24
    18c8:	d9 df       	rcall	.-78     	; 0x187c <cpu_irq_save>
    18ca:	cb b9       	out	0x0b, r28	; 11
    18cc:	9f ef       	ldi	r25, 0xFF	; 255
    18ce:	9a b9       	out	0x0a, r25	; 10
    18d0:	28 98       	cbi	0x05, 0	; 5
    18d2:	2c 98       	cbi	0x05, 4	; 5
    18d4:	2d 9a       	sbi	0x05, 5	; 5
    18d6:	2d 98       	cbi	0x05, 5	; 5
    18d8:	8f bf       	out	0x3f, r24	; 63
    18da:	cf 91       	pop	r28
    18dc:	08 95       	ret

000018de <lcd_bus_write_ram>:
    18de:	cf 93       	push	r28
    18e0:	c8 2f       	mov	r28, r24
    18e2:	cc df       	rcall	.-104    	; 0x187c <cpu_irq_save>
    18e4:	cb b9       	out	0x0b, r28	; 11
    18e6:	9f ef       	ldi	r25, 0xFF	; 255
    18e8:	9a b9       	out	0x0a, r25	; 10
    18ea:	28 9a       	sbi	0x05, 0	; 5
    18ec:	2c 98       	cbi	0x05, 4	; 5
    18ee:	2d 9a       	sbi	0x05, 5	; 5
    18f0:	2d 98       	cbi	0x05, 5	; 5
    18f2:	8f bf       	out	0x3f, r24	; 63
    18f4:	cf 91       	pop	r28
    18f6:	08 95       	ret

000018f8 <lcd_bus_read_ram>:
    18f8:	c1 df       	rcall	.-126    	; 0x187c <cpu_irq_save>
    18fa:	98 2f       	mov	r25, r24
    18fc:	8f ef       	ldi	r24, 0xFF	; 255
    18fe:	8b b9       	out	0x0b, r24	; 11
    1900:	1a b8       	out	0x0a, r1	; 10
    1902:	28 9a       	sbi	0x05, 0	; 5
    1904:	2c 9a       	sbi	0x05, 4	; 5
    1906:	2d 9a       	sbi	0x05, 5	; 5
    1908:	2d 98       	cbi	0x05, 5	; 5
    190a:	80 91 0c 04 	lds	r24, 0x040C	; 0x80040c <s_lcd_ram_read_nonvalid>
    190e:	88 23       	and	r24, r24
    1910:	19 f0       	breq	.+6      	; 0x1918 <lcd_bus_read_ram+0x20>
    1912:	89 b1       	in	r24, 0x09	; 9
    1914:	2d 9a       	sbi	0x05, 5	; 5
    1916:	2d 98       	cbi	0x05, 5	; 5
    1918:	89 b1       	in	r24, 0x09	; 9
    191a:	10 92 0c 04 	sts	0x040C, r1	; 0x80040c <s_lcd_ram_read_nonvalid>
    191e:	9f bf       	out	0x3f, r25	; 63
    1920:	08 95       	ret

00001922 <lcd_contrast_update>:
    1922:	81 e8       	ldi	r24, 0x81	; 129
    1924:	cf df       	rcall	.-98     	; 0x18c4 <lcd_bus_write_cmd>
    1926:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <g_lcd_contrast_pm>
    192a:	8f 73       	andi	r24, 0x3F	; 63
    192c:	80 68       	ori	r24, 0x80	; 128
    192e:	ca cf       	rjmp	.-108    	; 0x18c4 <lcd_bus_write_cmd>

00001930 <lcd_enable.part.0>:
    1930:	8d e2       	ldi	r24, 0x2D	; 45
    1932:	c8 df       	rcall	.-112    	; 0x18c4 <lcd_bus_write_cmd>
    1934:	84 e2       	ldi	r24, 0x24	; 36
    1936:	c6 df       	rcall	.-116    	; 0x18c4 <lcd_bus_write_cmd>
    1938:	8a ee       	ldi	r24, 0xEA	; 234
    193a:	c4 df       	rcall	.-120    	; 0x18c4 <lcd_bus_write_cmd>
    193c:	f2 df       	rcall	.-28     	; 0x1922 <lcd_contrast_update>
    193e:	88 ec       	ldi	r24, 0xC8	; 200
    1940:	c1 df       	rcall	.-126    	; 0x18c4 <lcd_bus_write_cmd>
    1942:	88 e8       	ldi	r24, 0x88	; 136
    1944:	bf df       	rcall	.-130    	; 0x18c4 <lcd_bus_write_cmd>
    1946:	80 e4       	ldi	r24, 0x40	; 64
    1948:	bd df       	rcall	.-134    	; 0x18c4 <lcd_bus_write_cmd>
    194a:	80 e9       	ldi	r24, 0x90	; 144
    194c:	bb df       	rcall	.-138    	; 0x18c4 <lcd_bus_write_cmd>
    194e:	80 eb       	ldi	r24, 0xB0	; 176
    1950:	b9 df       	rcall	.-142    	; 0x18c4 <lcd_bus_write_cmd>
    1952:	80 e0       	ldi	r24, 0x00	; 0
    1954:	b7 df       	rcall	.-146    	; 0x18c4 <lcd_bus_write_cmd>
    1956:	80 e1       	ldi	r24, 0x10	; 16
    1958:	b5 df       	rcall	.-150    	; 0x18c4 <lcd_bus_write_cmd>
    195a:	81 e0       	ldi	r24, 0x01	; 1
    195c:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <s_lcd_ram_read_nonvalid>
    1960:	8f ee       	ldi	r24, 0xEF	; 239
    1962:	b0 df       	rcall	.-160    	; 0x18c4 <lcd_bus_write_cmd>
    1964:	8e ee       	ldi	r24, 0xEE	; 238
    1966:	ae df       	rcall	.-164    	; 0x18c4 <lcd_bus_write_cmd>
    1968:	84 ea       	ldi	r24, 0xA4	; 164
    196a:	ac df       	rcall	.-168    	; 0x18c4 <lcd_bus_write_cmd>
    196c:	86 ea       	ldi	r24, 0xA6	; 166
    196e:	aa df       	rcall	.-172    	; 0x18c4 <lcd_bus_write_cmd>
    1970:	8f ea       	ldi	r24, 0xAF	; 175
    1972:	a8 cf       	rjmp	.-176    	; 0x18c4 <lcd_bus_write_cmd>

00001974 <lcd_page_set>:
	}
}

void lcd_page_set(uint8_t page)
{
	if ((0 <= page) && (page < GFX_MONO_LCD_PAGES)) {
    1974:	80 31       	cpi	r24, 0x10	; 16
    1976:	28 f4       	brcc	.+10     	; 0x1982 <lcd_page_set+0xe>
		lcd_bus_write_cmd(0b10110000 | page);					// Set Page Address
    1978:	80 6b       	ori	r24, 0xB0	; 176
    197a:	a4 df       	rcall	.-184    	; 0x18c4 <lcd_bus_write_cmd>

		s_lcd_ram_read_nonvalid = 1;
    197c:	81 e0       	ldi	r24, 0x01	; 1
    197e:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <s_lcd_ram_read_nonvalid>
    1982:	08 95       	ret

00001984 <lcd_col_set>:
// hold a copy of a font size in the PROG memory section
SYSFONT_DEFINE_GLYPHS;


uint8_t lcd_bus_read_status(void)
{
    1984:	cf 93       	push	r28
    1986:	80 3f       	cpi	r24, 0xF0	; 240
    1988:	58 f4       	brcc	.+22     	; 0x19a0 <lcd_col_set+0x1c>
    198a:	c8 2f       	mov	r28, r24
    198c:	8f 70       	andi	r24, 0x0F	; 15
    198e:	9a df       	rcall	.-204    	; 0x18c4 <lcd_bus_write_cmd>
    1990:	8c 2f       	mov	r24, r28
    1992:	82 95       	swap	r24
    1994:	8f 70       	andi	r24, 0x0F	; 15
    1996:	80 61       	ori	r24, 0x10	; 16
    1998:	95 df       	rcall	.-214    	; 0x18c4 <lcd_bus_write_cmd>
    199a:	81 e0       	ldi	r24, 0x01	; 1
    199c:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <s_lcd_ram_read_nonvalid>
    19a0:	cf 91       	pop	r28
    19a2:	08 95       	ret

000019a4 <lcd_cr>:
    19a4:	80 e0       	ldi	r24, 0x00	; 0
    19a6:	8e df       	rcall	.-228    	; 0x18c4 <lcd_bus_write_cmd>
    19a8:	80 e1       	ldi	r24, 0x10	; 16
    19aa:	8c df       	rcall	.-232    	; 0x18c4 <lcd_bus_write_cmd>
    19ac:	81 e0       	ldi	r24, 0x01	; 1
    19ae:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <s_lcd_ram_read_nonvalid>
    19b2:	08 95       	ret

000019b4 <lcd_home>:
    19b4:	80 eb       	ldi	r24, 0xB0	; 176
    19b6:	86 df       	rcall	.-244    	; 0x18c4 <lcd_bus_write_cmd>
    19b8:	f5 cf       	rjmp	.-22     	; 0x19a4 <lcd_cr>

000019ba <lcd_cls>:
    19ba:	cf 93       	push	r28
    19bc:	df 93       	push	r29
    19be:	c0 e0       	ldi	r28, 0x00	; 0
    19c0:	8c 2f       	mov	r24, r28
    19c2:	80 6b       	ori	r24, 0xB0	; 176
    19c4:	7f df       	rcall	.-258    	; 0x18c4 <lcd_bus_write_cmd>
    19c6:	80 e0       	ldi	r24, 0x00	; 0
    19c8:	7d df       	rcall	.-262    	; 0x18c4 <lcd_bus_write_cmd>
    19ca:	80 e1       	ldi	r24, 0x10	; 16
    19cc:	7b df       	rcall	.-266    	; 0x18c4 <lcd_bus_write_cmd>
    19ce:	d0 ef       	ldi	r29, 0xF0	; 240
    19d0:	80 e0       	ldi	r24, 0x00	; 0
    19d2:	85 df       	rcall	.-246    	; 0x18de <lcd_bus_write_ram>
    19d4:	d1 50       	subi	r29, 0x01	; 1
    19d6:	e1 f7       	brne	.-8      	; 0x19d0 <lcd_cls+0x16>
    19d8:	cf 5f       	subi	r28, 0xFF	; 255
    19da:	c0 31       	cpi	r28, 0x10	; 16
    19dc:	89 f7       	brne	.-30     	; 0x19c0 <lcd_cls+0x6>
    19de:	df 91       	pop	r29
    19e0:	cf 91       	pop	r28
    19e2:	e8 cf       	rjmp	.-48     	; 0x19b4 <lcd_home>

000019e4 <lcd_show_template>:
    19e4:	ff 92       	push	r15
    19e6:	0f 93       	push	r16
    19e8:	1f 93       	push	r17
    19ea:	cf 93       	push	r28
    19ec:	df 93       	push	r29
    19ee:	6a e0       	ldi	r22, 0x0A	; 10
    19f0:	71 e0       	ldi	r23, 0x01	; 1
    19f2:	8c ed       	ldi	r24, 0xDC	; 220
    19f4:	93 e0       	ldi	r25, 0x03	; 3
    19f6:	0e 94 50 22 	call	0x44a0	; 0x44a0 <strcpy>
    19fa:	23 e0       	ldi	r18, 0x03	; 3
    19fc:	31 e0       	ldi	r19, 0x01	; 1
    19fe:	4b e0       	ldi	r20, 0x0B	; 11
    1a00:	63 e0       	ldi	r22, 0x03	; 3
    1a02:	8c ed       	ldi	r24, 0xDC	; 220
    1a04:	93 e0       	ldi	r25, 0x03	; 3
    1a06:	d5 d9       	rcall	.-3158   	; 0xdb2 <gfx_mono_draw_string>
    1a08:	67 e1       	ldi	r22, 0x17	; 23
    1a0a:	71 e0       	ldi	r23, 0x01	; 1
    1a0c:	8c ed       	ldi	r24, 0xDC	; 220
    1a0e:	93 e0       	ldi	r25, 0x03	; 3
    1a10:	0e 94 50 22 	call	0x44a0	; 0x44a0 <strcpy>
    1a14:	23 e0       	ldi	r18, 0x03	; 3
    1a16:	31 e0       	ldi	r19, 0x01	; 1
    1a18:	44 e1       	ldi	r20, 0x14	; 20
    1a1a:	63 e0       	ldi	r22, 0x03	; 3
    1a1c:	8c ed       	ldi	r24, 0xDC	; 220
    1a1e:	93 e0       	ldi	r25, 0x03	; 3
    1a20:	c8 d9       	rcall	.-3184   	; 0xdb2 <gfx_mono_draw_string>
    1a22:	61 e2       	ldi	r22, 0x21	; 33
    1a24:	71 e0       	ldi	r23, 0x01	; 1
    1a26:	8c ed       	ldi	r24, 0xDC	; 220
    1a28:	93 e0       	ldi	r25, 0x03	; 3
    1a2a:	0e 94 50 22 	call	0x44a0	; 0x44a0 <strcpy>
    1a2e:	23 e0       	ldi	r18, 0x03	; 3
    1a30:	31 e0       	ldi	r19, 0x01	; 1
    1a32:	4d e1       	ldi	r20, 0x1D	; 29
    1a34:	63 e0       	ldi	r22, 0x03	; 3
    1a36:	8c ed       	ldi	r24, 0xDC	; 220
    1a38:	93 e0       	ldi	r25, 0x03	; 3
    1a3a:	bb d9       	rcall	.-3210   	; 0xdb2 <gfx_mono_draw_string>
    1a3c:	1f 92       	push	r1
    1a3e:	1f 92       	push	r1
    1a40:	1f 92       	push	r1
    1a42:	1f 92       	push	r1
    1a44:	88 e3       	ldi	r24, 0x38	; 56
    1a46:	91 e0       	ldi	r25, 0x01	; 1
    1a48:	9f 93       	push	r25
    1a4a:	8f 93       	push	r24
    1a4c:	1f 92       	push	r1
    1a4e:	10 e3       	ldi	r17, 0x30	; 48
    1a50:	1f 93       	push	r17
    1a52:	cc ed       	ldi	r28, 0xDC	; 220
    1a54:	d3 e0       	ldi	r29, 0x03	; 3
    1a56:	df 93       	push	r29
    1a58:	cf 93       	push	r28
    1a5a:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    1a5e:	23 e0       	ldi	r18, 0x03	; 3
    1a60:	31 e0       	ldi	r19, 0x01	; 1
    1a62:	46 e2       	ldi	r20, 0x26	; 38
    1a64:	63 e0       	ldi	r22, 0x03	; 3
    1a66:	ce 01       	movw	r24, r28
    1a68:	a4 d9       	rcall	.-3256   	; 0xdb2 <gfx_mono_draw_string>
    1a6a:	1f 92       	push	r1
    1a6c:	1f 92       	push	r1
    1a6e:	1f 92       	push	r1
    1a70:	1f 92       	push	r1
    1a72:	1f 92       	push	r1
    1a74:	1f 92       	push	r1
    1a76:	1f 92       	push	r1
    1a78:	1f 92       	push	r1
    1a7a:	80 e5       	ldi	r24, 0x50	; 80
    1a7c:	91 e0       	ldi	r25, 0x01	; 1
    1a7e:	9f 93       	push	r25
    1a80:	8f 93       	push	r24
    1a82:	1f 92       	push	r1
    1a84:	1f 93       	push	r17
    1a86:	df 93       	push	r29
    1a88:	cf 93       	push	r28
    1a8a:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    1a8e:	23 e0       	ldi	r18, 0x03	; 3
    1a90:	31 e0       	ldi	r19, 0x01	; 1
    1a92:	4f e2       	ldi	r20, 0x2F	; 47
    1a94:	63 e0       	ldi	r22, 0x03	; 3
    1a96:	ce 01       	movw	r24, r28
    1a98:	8c d9       	rcall	.-3304   	; 0xdb2 <gfx_mono_draw_string>
    1a9a:	1f 92       	push	r1
    1a9c:	1f 92       	push	r1
    1a9e:	1f 92       	push	r1
    1aa0:	1f 92       	push	r1
    1aa2:	83 e7       	ldi	r24, 0x73	; 115
    1aa4:	91 e0       	ldi	r25, 0x01	; 1
    1aa6:	9f 93       	push	r25
    1aa8:	8f 93       	push	r24
    1aaa:	1f 92       	push	r1
    1aac:	1f 93       	push	r17
    1aae:	df 93       	push	r29
    1ab0:	cf 93       	push	r28
    1ab2:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    1ab6:	8d b7       	in	r24, 0x3d	; 61
    1ab8:	9e b7       	in	r25, 0x3e	; 62
    1aba:	82 96       	adiw	r24, 0x22	; 34
    1abc:	0f b6       	in	r0, 0x3f	; 63
    1abe:	f8 94       	cli
    1ac0:	9e bf       	out	0x3e, r25	; 62
    1ac2:	0f be       	out	0x3f, r0	; 63
    1ac4:	8d bf       	out	0x3d, r24	; 61
    1ac6:	23 e0       	ldi	r18, 0x03	; 3
    1ac8:	31 e0       	ldi	r19, 0x01	; 1
    1aca:	48 e3       	ldi	r20, 0x38	; 56
    1acc:	63 e0       	ldi	r22, 0x03	; 3
    1ace:	ce 01       	movw	r24, r28
    1ad0:	70 d9       	rcall	.-3360   	; 0xdb2 <gfx_mono_draw_string>
    1ad2:	1f 92       	push	r1
    1ad4:	1f 92       	push	r1
    1ad6:	1f 92       	push	r1
    1ad8:	1f 92       	push	r1
    1ada:	88 e8       	ldi	r24, 0x88	; 136
    1adc:	91 e0       	ldi	r25, 0x01	; 1
    1ade:	9f 93       	push	r25
    1ae0:	8f 93       	push	r24
    1ae2:	1f 92       	push	r1
    1ae4:	1f 93       	push	r17
    1ae6:	df 93       	push	r29
    1ae8:	cf 93       	push	r28
    1aea:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    1aee:	23 e0       	ldi	r18, 0x03	; 3
    1af0:	31 e0       	ldi	r19, 0x01	; 1
    1af2:	48 e3       	ldi	r20, 0x38	; 56
    1af4:	6b e7       	ldi	r22, 0x7B	; 123
    1af6:	ce 01       	movw	r24, r28
    1af8:	5c d9       	rcall	.-3400   	; 0xdb2 <gfx_mono_draw_string>
    1afa:	1f 92       	push	r1
    1afc:	1f 92       	push	r1
    1afe:	1f 92       	push	r1
    1b00:	1f 92       	push	r1
    1b02:	1f 92       	push	r1
    1b04:	1f 92       	push	r1
    1b06:	8e e9       	ldi	r24, 0x9E	; 158
    1b08:	91 e0       	ldi	r25, 0x01	; 1
    1b0a:	9f 93       	push	r25
    1b0c:	8f 93       	push	r24
    1b0e:	1f 92       	push	r1
    1b10:	1f 93       	push	r17
    1b12:	df 93       	push	r29
    1b14:	cf 93       	push	r28
    1b16:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    1b1a:	23 e0       	ldi	r18, 0x03	; 3
    1b1c:	31 e0       	ldi	r19, 0x01	; 1
    1b1e:	41 e4       	ldi	r20, 0x41	; 65
    1b20:	63 e0       	ldi	r22, 0x03	; 3
    1b22:	ce 01       	movw	r24, r28
    1b24:	46 d9       	rcall	.-3444   	; 0xdb2 <gfx_mono_draw_string>
    1b26:	1f 92       	push	r1
    1b28:	1f 92       	push	r1
    1b2a:	1f 92       	push	r1
    1b2c:	1f 92       	push	r1
    1b2e:	8b ec       	ldi	r24, 0xCB	; 203
    1b30:	91 e0       	ldi	r25, 0x01	; 1
    1b32:	9f 93       	push	r25
    1b34:	8f 93       	push	r24
    1b36:	1f 92       	push	r1
    1b38:	1f 93       	push	r17
    1b3a:	df 93       	push	r29
    1b3c:	cf 93       	push	r28
    1b3e:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    1b42:	8d b7       	in	r24, 0x3d	; 61
    1b44:	9e b7       	in	r25, 0x3e	; 62
    1b46:	80 96       	adiw	r24, 0x20	; 32
    1b48:	0f b6       	in	r0, 0x3f	; 63
    1b4a:	f8 94       	cli
    1b4c:	9e bf       	out	0x3e, r25	; 62
    1b4e:	0f be       	out	0x3f, r0	; 63
    1b50:	8d bf       	out	0x3d, r24	; 61
    1b52:	23 e0       	ldi	r18, 0x03	; 3
    1b54:	31 e0       	ldi	r19, 0x01	; 1
    1b56:	4a e4       	ldi	r20, 0x4A	; 74
    1b58:	63 e0       	ldi	r22, 0x03	; 3
    1b5a:	ce 01       	movw	r24, r28
    1b5c:	2a d9       	rcall	.-3500   	; 0xdb2 <gfx_mono_draw_string>
    1b5e:	1f 92       	push	r1
    1b60:	1f 92       	push	r1
    1b62:	1f 92       	push	r1
    1b64:	1f 92       	push	r1
    1b66:	8f ed       	ldi	r24, 0xDF	; 223
    1b68:	91 e0       	ldi	r25, 0x01	; 1
    1b6a:	9f 93       	push	r25
    1b6c:	8f 93       	push	r24
    1b6e:	1f 92       	push	r1
    1b70:	1f 93       	push	r17
    1b72:	df 93       	push	r29
    1b74:	cf 93       	push	r28
    1b76:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    1b7a:	23 e0       	ldi	r18, 0x03	; 3
    1b7c:	31 e0       	ldi	r19, 0x01	; 1
    1b7e:	43 e5       	ldi	r20, 0x53	; 83
    1b80:	63 e0       	ldi	r22, 0x03	; 3
    1b82:	ce 01       	movw	r24, r28
    1b84:	16 d9       	rcall	.-3540   	; 0xdb2 <gfx_mono_draw_string>
    1b86:	1f 92       	push	r1
    1b88:	1f 92       	push	r1
    1b8a:	1f 92       	push	r1
    1b8c:	1f 92       	push	r1
    1b8e:	1f 92       	push	r1
    1b90:	0e e7       	ldi	r16, 0x7E	; 126
    1b92:	0f 93       	push	r16
    1b94:	1f 92       	push	r1
    1b96:	1f 92       	push	r1
    1b98:	1f 92       	push	r1
    1b9a:	80 e2       	ldi	r24, 0x20	; 32
    1b9c:	f8 2e       	mov	r15, r24
    1b9e:	ff 92       	push	r15
    1ba0:	87 ef       	ldi	r24, 0xF7	; 247
    1ba2:	91 e0       	ldi	r25, 0x01	; 1
    1ba4:	9f 93       	push	r25
    1ba6:	8f 93       	push	r24
    1ba8:	1f 92       	push	r1
    1baa:	1f 93       	push	r17
    1bac:	df 93       	push	r29
    1bae:	cf 93       	push	r28
    1bb0:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    1bb4:	23 e0       	ldi	r18, 0x03	; 3
    1bb6:	31 e0       	ldi	r19, 0x01	; 1
    1bb8:	4c e5       	ldi	r20, 0x5C	; 92
    1bba:	63 e0       	ldi	r22, 0x03	; 3
    1bbc:	ce 01       	movw	r24, r28
    1bbe:	f9 d8       	rcall	.-3598   	; 0xdb2 <gfx_mono_draw_string>
    1bc0:	1f 92       	push	r1
    1bc2:	1f 92       	push	r1
    1bc4:	1f 92       	push	r1
    1bc6:	1f 92       	push	r1
    1bc8:	1f 92       	push	r1
    1bca:	0f 93       	push	r16
    1bcc:	1f 92       	push	r1
    1bce:	1f 92       	push	r1
    1bd0:	1f 92       	push	r1
    1bd2:	ff 92       	push	r15
    1bd4:	86 e1       	ldi	r24, 0x16	; 22
    1bd6:	92 e0       	ldi	r25, 0x02	; 2
    1bd8:	9f 93       	push	r25
    1bda:	8f 93       	push	r24
    1bdc:	1f 92       	push	r1
    1bde:	1f 93       	push	r17
    1be0:	df 93       	push	r29
    1be2:	cf 93       	push	r28
    1be4:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    1be8:	8d b7       	in	r24, 0x3d	; 61
    1bea:	9e b7       	in	r25, 0x3e	; 62
    1bec:	8a 96       	adiw	r24, 0x2a	; 42
    1bee:	0f b6       	in	r0, 0x3f	; 63
    1bf0:	f8 94       	cli
    1bf2:	9e bf       	out	0x3e, r25	; 62
    1bf4:	0f be       	out	0x3f, r0	; 63
    1bf6:	8d bf       	out	0x3d, r24	; 61
    1bf8:	23 e0       	ldi	r18, 0x03	; 3
    1bfa:	31 e0       	ldi	r19, 0x01	; 1
    1bfc:	45 e6       	ldi	r20, 0x65	; 101
    1bfe:	63 e0       	ldi	r22, 0x03	; 3
    1c00:	ce 01       	movw	r24, r28
    1c02:	d7 d8       	rcall	.-3666   	; 0xdb2 <gfx_mono_draw_string>
    1c04:	1f 92       	push	r1
    1c06:	1f 92       	push	r1
    1c08:	1f 92       	push	r1
    1c0a:	1f 92       	push	r1
    1c0c:	84 e3       	ldi	r24, 0x34	; 52
    1c0e:	92 e0       	ldi	r25, 0x02	; 2
    1c10:	9f 93       	push	r25
    1c12:	8f 93       	push	r24
    1c14:	1f 92       	push	r1
    1c16:	1f 93       	push	r17
    1c18:	df 93       	push	r29
    1c1a:	cf 93       	push	r28
    1c1c:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    1c20:	23 e0       	ldi	r18, 0x03	; 3
    1c22:	31 e0       	ldi	r19, 0x01	; 1
    1c24:	4e e6       	ldi	r20, 0x6E	; 110
    1c26:	63 e0       	ldi	r22, 0x03	; 3
    1c28:	ce 01       	movw	r24, r28
    1c2a:	c3 d8       	rcall	.-3706   	; 0xdb2 <gfx_mono_draw_string>
    1c2c:	1f 92       	push	r1
    1c2e:	0f 93       	push	r16
    1c30:	1f 92       	push	r1
    1c32:	1f 92       	push	r1
    1c34:	8a e4       	ldi	r24, 0x4A	; 74
    1c36:	92 e0       	ldi	r25, 0x02	; 2
    1c38:	9f 93       	push	r25
    1c3a:	8f 93       	push	r24
    1c3c:	1f 92       	push	r1
    1c3e:	1f 93       	push	r17
    1c40:	df 93       	push	r29
    1c42:	cf 93       	push	r28
    1c44:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    1c48:	23 e0       	ldi	r18, 0x03	; 3
    1c4a:	31 e0       	ldi	r19, 0x01	; 1
    1c4c:	4e e6       	ldi	r20, 0x6E	; 110
    1c4e:	6f e9       	ldi	r22, 0x9F	; 159
    1c50:	ce 01       	movw	r24, r28
    1c52:	af d8       	rcall	.-3746   	; 0xdb2 <gfx_mono_draw_string>
    1c54:	8d b7       	in	r24, 0x3d	; 61
    1c56:	9e b7       	in	r25, 0x3e	; 62
    1c58:	44 96       	adiw	r24, 0x14	; 20
    1c5a:	0f b6       	in	r0, 0x3f	; 63
    1c5c:	f8 94       	cli
    1c5e:	9e bf       	out	0x3e, r25	; 62
    1c60:	0f be       	out	0x3f, r0	; 63
    1c62:	8d bf       	out	0x3d, r24	; 61
    1c64:	23 e0       	ldi	r18, 0x03	; 3
    1c66:	31 e0       	ldi	r19, 0x01	; 1
    1c68:	47 e7       	ldi	r20, 0x77	; 119
    1c6a:	63 e0       	ldi	r22, 0x03	; 3
    1c6c:	89 e5       	ldi	r24, 0x59	; 89
    1c6e:	92 e0       	ldi	r25, 0x02	; 2
    1c70:	df 91       	pop	r29
    1c72:	cf 91       	pop	r28
    1c74:	1f 91       	pop	r17
    1c76:	0f 91       	pop	r16
    1c78:	ff 90       	pop	r15
    1c7a:	9b c8       	rjmp	.-3786   	; 0xdb2 <gfx_mono_draw_string>

00001c7c <lcd_show_new_refosc_data>:
    1c7c:	3f 92       	push	r3
    1c7e:	4f 92       	push	r4
    1c80:	5f 92       	push	r5
    1c82:	6f 92       	push	r6
    1c84:	7f 92       	push	r7
    1c86:	8f 92       	push	r8
    1c88:	9f 92       	push	r9
    1c8a:	af 92       	push	r10
    1c8c:	bf 92       	push	r11
    1c8e:	cf 92       	push	r12
    1c90:	df 92       	push	r13
    1c92:	ef 92       	push	r14
    1c94:	ff 92       	push	r15
    1c96:	0f 93       	push	r16
    1c98:	1f 93       	push	r17
    1c9a:	cf 93       	push	r28
    1c9c:	df 93       	push	r29
    1c9e:	ee dd       	rcall	.-1060   	; 0x187c <cpu_irq_save>
    1ca0:	c8 2f       	mov	r28, r24
    1ca2:	90 91 33 04 	lds	r25, 0x0433	; 0x800433 <g_showData>
    1ca6:	92 ff       	sbrs	r25, 2
    1ca8:	2e c0       	rjmp	.+92     	; 0x1d06 <lcd_show_new_refosc_data+0x8a>
    1caa:	9b 7f       	andi	r25, 0xFB	; 251
    1cac:	90 93 33 04 	sts	0x0433, r25	; 0x800433 <g_showData>
    1cb0:	80 91 62 04 	lds	r24, 0x0462	; 0x800462 <g_showData+0x2f>
    1cb4:	1f 92       	push	r1
    1cb6:	8f 93       	push	r24
    1cb8:	80 91 61 04 	lds	r24, 0x0461	; 0x800461 <g_showData+0x2e>
    1cbc:	1f 92       	push	r1
    1cbe:	8f 93       	push	r24
    1cc0:	80 91 60 04 	lds	r24, 0x0460	; 0x800460 <g_showData+0x2d>
    1cc4:	1f 92       	push	r1
    1cc6:	8f 93       	push	r24
    1cc8:	83 e6       	ldi	r24, 0x63	; 99
    1cca:	92 e0       	ldi	r25, 0x02	; 2
    1ccc:	9f 93       	push	r25
    1cce:	8f 93       	push	r24
    1cd0:	1f 92       	push	r1
    1cd2:	80 e3       	ldi	r24, 0x30	; 48
    1cd4:	8f 93       	push	r24
    1cd6:	8c ed       	ldi	r24, 0xDC	; 220
    1cd8:	93 e0       	ldi	r25, 0x03	; 3
    1cda:	9f 93       	push	r25
    1cdc:	8f 93       	push	r24
    1cde:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    1ce2:	cf bf       	out	0x3f, r28	; 63
    1ce4:	23 e0       	ldi	r18, 0x03	; 3
    1ce6:	31 e0       	ldi	r19, 0x01	; 1
    1ce8:	4d e1       	ldi	r20, 0x1D	; 29
    1cea:	6f e3       	ldi	r22, 0x3F	; 63
    1cec:	8c ed       	ldi	r24, 0xDC	; 220
    1cee:	93 e0       	ldi	r25, 0x03	; 3
    1cf0:	60 d8       	rcall	.-3904   	; 0xdb2 <gfx_mono_draw_string>
    1cf2:	8d b7       	in	r24, 0x3d	; 61
    1cf4:	9e b7       	in	r25, 0x3e	; 62
    1cf6:	0c 96       	adiw	r24, 0x0c	; 12
    1cf8:	0f b6       	in	r0, 0x3f	; 63
    1cfa:	f8 94       	cli
    1cfc:	9e bf       	out	0x3e, r25	; 62
    1cfe:	0f be       	out	0x3f, r0	; 63
    1d00:	8d bf       	out	0x3d, r24	; 61
    1d02:	8f ef       	ldi	r24, 0xFF	; 255
    1d04:	ff c3       	rjmp	.+2046   	; 0x2504 <lcd_show_new_refosc_data+0x888>
    1d06:	91 ff       	sbrs	r25, 1
    1d08:	30 c0       	rjmp	.+96     	; 0x1d6a <lcd_show_new_refosc_data+0xee>
    1d0a:	9d 7f       	andi	r25, 0xFD	; 253
    1d0c:	90 93 33 04 	sts	0x0433, r25	; 0x800433 <g_showData>
    1d10:	80 91 4e 04 	lds	r24, 0x044E	; 0x80044e <g_showData+0x1b>
    1d14:	8f 93       	push	r24
    1d16:	80 91 4d 04 	lds	r24, 0x044D	; 0x80044d <g_showData+0x1a>
    1d1a:	8f 93       	push	r24
    1d1c:	80 91 5e 04 	lds	r24, 0x045E	; 0x80045e <g_showData+0x2b>
    1d20:	1f 92       	push	r1
    1d22:	8f 93       	push	r24
    1d24:	80 91 5f 04 	lds	r24, 0x045F	; 0x80045f <g_showData+0x2c>
    1d28:	1f 92       	push	r1
    1d2a:	8f 93       	push	r24
    1d2c:	82 e7       	ldi	r24, 0x72	; 114
    1d2e:	92 e0       	ldi	r25, 0x02	; 2
    1d30:	9f 93       	push	r25
    1d32:	8f 93       	push	r24
    1d34:	1f 92       	push	r1
    1d36:	80 e3       	ldi	r24, 0x30	; 48
    1d38:	8f 93       	push	r24
    1d3a:	8c ed       	ldi	r24, 0xDC	; 220
    1d3c:	93 e0       	ldi	r25, 0x03	; 3
    1d3e:	9f 93       	push	r25
    1d40:	8f 93       	push	r24
    1d42:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    1d46:	cf bf       	out	0x3f, r28	; 63
    1d48:	23 e0       	ldi	r18, 0x03	; 3
    1d4a:	31 e0       	ldi	r19, 0x01	; 1
    1d4c:	44 e1       	ldi	r20, 0x14	; 20
    1d4e:	6f e3       	ldi	r22, 0x3F	; 63
    1d50:	8c ed       	ldi	r24, 0xDC	; 220
    1d52:	93 e0       	ldi	r25, 0x03	; 3
    1d54:	2e d8       	rcall	.-4004   	; 0xdb2 <gfx_mono_draw_string>
    1d56:	8d b7       	in	r24, 0x3d	; 61
    1d58:	9e b7       	in	r25, 0x3e	; 62
    1d5a:	0c 96       	adiw	r24, 0x0c	; 12
    1d5c:	0f b6       	in	r0, 0x3f	; 63
    1d5e:	f8 94       	cli
    1d60:	9e bf       	out	0x3e, r25	; 62
    1d62:	0f be       	out	0x3f, r0	; 63
    1d64:	8d bf       	out	0x3d, r24	; 61
    1d66:	8e ef       	ldi	r24, 0xFE	; 254
    1d68:	cd c3       	rjmp	.+1946   	; 0x2504 <lcd_show_new_refosc_data+0x888>
    1d6a:	89 2f       	mov	r24, r25
    1d6c:	81 70       	andi	r24, 0x01	; 1
    1d6e:	90 ff       	sbrs	r25, 0
    1d70:	55 c1       	rjmp	.+682    	; 0x201c <lcd_show_new_refosc_data+0x3a0>
    1d72:	9e 7f       	andi	r25, 0xFE	; 254
    1d74:	90 93 33 04 	sts	0x0433, r25	; 0x800433 <g_showData>
    1d78:	cf bf       	out	0x3f, r28	; 63
    1d7a:	c0 91 4b 04 	lds	r28, 0x044B	; 0x80044b <g_showData+0x18>
    1d7e:	d0 91 4c 04 	lds	r29, 0x044C	; 0x80044c <g_showData+0x19>
    1d82:	a0 90 49 04 	lds	r10, 0x0449	; 0x800449 <g_showData+0x16>
    1d86:	b0 90 4a 04 	lds	r11, 0x044A	; 0x80044a <g_showData+0x17>
    1d8a:	90 90 5d 04 	lds	r9, 0x045D	; 0x80045d <g_showData+0x2a>
    1d8e:	c1 35       	cpi	r28, 0x51	; 81
    1d90:	96 e4       	ldi	r25, 0x46	; 70
    1d92:	d9 07       	cpc	r29, r25
    1d94:	9c f4       	brge	.+38     	; 0x1dbc <lcd_show_new_refosc_data+0x140>
    1d96:	c0 3b       	cpi	r28, 0xB0	; 176
    1d98:	89 eb       	ldi	r24, 0xB9	; 185
    1d9a:	d8 07       	cpc	r29, r24
    1d9c:	2c f0       	brlt	.+10     	; 0x1da8 <lcd_show_new_refosc_data+0x12c>
    1d9e:	c5 39       	cpi	r28, 0x95	; 149
    1da0:	91 e1       	ldi	r25, 0x11	; 17
    1da2:	d9 07       	cpc	r29, r25
    1da4:	1c f0       	brlt	.+6      	; 0x1dac <lcd_show_new_refosc_data+0x130>
    1da6:	0f c0       	rjmp	.+30     	; 0x1dc6 <lcd_show_new_refosc_data+0x14a>
    1da8:	c0 eb       	ldi	r28, 0xB0	; 176
    1daa:	d9 eb       	ldi	r29, 0xB9	; 185
    1dac:	be 01       	movw	r22, r28
    1dae:	cc 36       	cpi	r28, 0x6C	; 108
    1db0:	8e ee       	ldi	r24, 0xEE	; 238
    1db2:	d8 07       	cpc	r29, r24
    1db4:	54 f4       	brge	.+20     	; 0x1dca <lcd_show_new_refosc_data+0x14e>
    1db6:	6c e6       	ldi	r22, 0x6C	; 108
    1db8:	7e ee       	ldi	r23, 0xEE	; 238
    1dba:	07 c0       	rjmp	.+14     	; 0x1dca <lcd_show_new_refosc_data+0x14e>
    1dbc:	c0 e5       	ldi	r28, 0x50	; 80
    1dbe:	d6 e4       	ldi	r29, 0x46	; 70
    1dc0:	60 e5       	ldi	r22, 0x50	; 80
    1dc2:	76 e4       	ldi	r23, 0x46	; 70
    1dc4:	02 c0       	rjmp	.+4      	; 0x1dca <lcd_show_new_refosc_data+0x14e>
    1dc6:	60 e5       	ldi	r22, 0x50	; 80
    1dc8:	76 e4       	ldi	r23, 0x46	; 70
    1dca:	07 2e       	mov	r0, r23
    1dcc:	00 0c       	add	r0, r0
    1dce:	88 0b       	sbc	r24, r24
    1dd0:	99 0b       	sbc	r25, r25
    1dd2:	0e 94 ad 20 	call	0x415a	; 0x415a <__floatsisf>
    1dd6:	20 e0       	ldi	r18, 0x00	; 0
    1dd8:	30 ea       	ldi	r19, 0xA0	; 160
    1dda:	4c e8       	ldi	r20, 0x8C	; 140
    1ddc:	55 e4       	ldi	r21, 0x45	; 69
    1dde:	0e 94 12 20 	call	0x4024	; 0x4024 <__divsf3>
    1de2:	20 e0       	ldi	r18, 0x00	; 0
    1de4:	30 e0       	ldi	r19, 0x00	; 0
    1de6:	48 e9       	ldi	r20, 0x98	; 152
    1de8:	52 e4       	ldi	r21, 0x42	; 66
    1dea:	0e 94 b4 21 	call	0x4368	; 0x4368 <__mulsf3>
    1dee:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__fixsfsi>
    1df2:	2b 01       	movw	r4, r22
    1df4:	3c 01       	movw	r6, r24
    1df6:	7b 01       	movw	r14, r22
    1df8:	77 ff       	sbrs	r23, 7
    1dfa:	08 c0       	rjmp	.+16     	; 0x1e0c <lcd_show_new_refosc_data+0x190>
    1dfc:	36 e9       	ldi	r19, 0x96	; 150
    1dfe:	83 2e       	mov	r8, r19
    1e00:	86 0e       	add	r8, r22
    1e02:	cc 24       	eor	r12, r12
    1e04:	dd 24       	eor	r13, r13
    1e06:	c6 1a       	sub	r12, r22
    1e08:	d7 0a       	sbc	r13, r23
    1e0a:	03 c0       	rjmp	.+6      	; 0x1e12 <lcd_show_new_refosc_data+0x196>
    1e0c:	6b 01       	movw	r12, r22
    1e0e:	26 e9       	ldi	r18, 0x96	; 150
    1e10:	82 2e       	mov	r8, r18
    1e12:	1f 92       	push	r1
    1e14:	9f 92       	push	r9
    1e16:	81 e8       	ldi	r24, 0x81	; 129
    1e18:	92 e0       	ldi	r25, 0x02	; 2
    1e1a:	9f 93       	push	r25
    1e1c:	8f 93       	push	r24
    1e1e:	1f 92       	push	r1
    1e20:	90 e3       	ldi	r25, 0x30	; 48
    1e22:	39 2e       	mov	r3, r25
    1e24:	3f 92       	push	r3
    1e26:	0c ed       	ldi	r16, 0xDC	; 220
    1e28:	13 e0       	ldi	r17, 0x03	; 3
    1e2a:	1f 93       	push	r17
    1e2c:	0f 93       	push	r16
    1e2e:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    1e32:	23 e0       	ldi	r18, 0x03	; 3
    1e34:	31 e0       	ldi	r19, 0x01	; 1
    1e36:	4b e0       	ldi	r20, 0x0B	; 11
    1e38:	6b e4       	ldi	r22, 0x4B	; 75
    1e3a:	c8 01       	movw	r24, r16
    1e3c:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <gfx_mono_draw_string>
    1e40:	c5 01       	movw	r24, r10
    1e42:	68 ee       	ldi	r22, 0xE8	; 232
    1e44:	73 e0       	ldi	r23, 0x03	; 3
    1e46:	0e 94 23 22 	call	0x4446	; 0x4446 <__udivmodhi4>
    1e4a:	9f 93       	push	r25
    1e4c:	8f 93       	push	r24
    1e4e:	7f 93       	push	r23
    1e50:	6f 93       	push	r22
    1e52:	85 e8       	ldi	r24, 0x85	; 133
    1e54:	92 e0       	ldi	r25, 0x02	; 2
    1e56:	9f 93       	push	r25
    1e58:	8f 93       	push	r24
    1e5a:	1f 92       	push	r1
    1e5c:	3f 92       	push	r3
    1e5e:	1f 93       	push	r17
    1e60:	0f 93       	push	r16
    1e62:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    1e66:	23 e0       	ldi	r18, 0x03	; 3
    1e68:	31 e0       	ldi	r19, 0x01	; 1
    1e6a:	48 e3       	ldi	r20, 0x38	; 56
    1e6c:	6d eb       	ldi	r22, 0xBD	; 189
    1e6e:	c8 01       	movw	r24, r16
    1e70:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <gfx_mono_draw_string>
    1e74:	ce 01       	movw	r24, r28
    1e76:	64 e6       	ldi	r22, 0x64	; 100
    1e78:	70 e0       	ldi	r23, 0x00	; 0
    1e7a:	0e 94 37 22 	call	0x446e	; 0x446e <__divmodhi4>
    1e7e:	7f 93       	push	r23
    1e80:	6f 93       	push	r22
    1e82:	8e e8       	ldi	r24, 0x8E	; 142
    1e84:	92 e0       	ldi	r25, 0x02	; 2
    1e86:	9f 93       	push	r25
    1e88:	8f 93       	push	r24
    1e8a:	1f 92       	push	r1
    1e8c:	3f 92       	push	r3
    1e8e:	1f 93       	push	r17
    1e90:	0f 93       	push	r16
    1e92:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    1e96:	23 e0       	ldi	r18, 0x03	; 3
    1e98:	31 e0       	ldi	r19, 0x01	; 1
    1e9a:	4e e6       	ldi	r20, 0x6E	; 110
    1e9c:	69 ec       	ldi	r22, 0xC9	; 201
    1e9e:	c8 01       	movw	r24, r16
    1ea0:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <gfx_mono_draw_string>
    1ea4:	8d b7       	in	r24, 0x3d	; 61
    1ea6:	9e b7       	in	r25, 0x3e	; 62
    1ea8:	4a 96       	adiw	r24, 0x1a	; 26
    1eaa:	0f b6       	in	r0, 0x3f	; 63
    1eac:	f8 94       	cli
    1eae:	9e bf       	out	0x3e, r25	; 62
    1eb0:	0f be       	out	0x3f, r0	; 63
    1eb2:	8d bf       	out	0x3d, r24	; 61
    1eb4:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <clk_state_old.3550>
    1eb8:	98 12       	cpse	r9, r24
    1eba:	22 c0       	rjmp	.+68     	; 0x1f00 <lcd_show_new_refosc_data+0x284>
    1ebc:	c1 14       	cp	r12, r1
    1ebe:	d1 04       	cpc	r13, r1
    1ec0:	f9 f0       	breq	.+62     	; 0x1f00 <lcd_show_new_refosc_data+0x284>
    1ec2:	44 2d       	mov	r20, r4
    1ec4:	1e 14       	cp	r1, r14
    1ec6:	1f 04       	cpc	r1, r15
    1ec8:	0c f4       	brge	.+2      	; 0x1ecc <lcd_show_new_refosc_data+0x250>
    1eca:	40 e0       	ldi	r20, 0x00	; 0
    1ecc:	d4 2d       	mov	r29, r4
    1ece:	f7 fc       	sbrc	r15, 7
    1ed0:	d0 e0       	ldi	r29, 0x00	; 0
    1ed2:	97 e0       	ldi	r25, 0x07	; 7
    1ed4:	99 16       	cp	r9, r25
    1ed6:	09 f4       	brne	.+2      	; 0x1eda <lcd_show_new_refosc_data+0x25e>
    1ed8:	62 c0       	rjmp	.+196    	; 0x1f9e <lcd_show_new_refosc_data+0x322>
    1eda:	99 15       	cp	r25, r9
    1edc:	68 f0       	brcs	.+26     	; 0x1ef8 <lcd_show_new_refosc_data+0x27c>
    1ede:	8f ef       	ldi	r24, 0xFF	; 255
    1ee0:	89 0d       	add	r24, r9
    1ee2:	83 30       	cpi	r24, 0x03	; 3
    1ee4:	08 f0       	brcs	.+2      	; 0x1ee8 <lcd_show_new_refosc_data+0x26c>
    1ee6:	96 c0       	rjmp	.+300    	; 0x2014 <lcd_show_new_refosc_data+0x398>
    1ee8:	01 e0       	ldi	r16, 0x01	; 1
    1eea:	21 e0       	ldi	r18, 0x01	; 1
    1eec:	48 e9       	ldi	r20, 0x98	; 152
    1eee:	6a e7       	ldi	r22, 0x7A	; 122
    1ef0:	8a e4       	ldi	r24, 0x4A	; 74
    1ef2:	0e 94 92 04 	call	0x924	; 0x924 <gfx_mono_generic_draw_filled_rect>
    1ef6:	8e c0       	rjmp	.+284    	; 0x2014 <lcd_show_new_refosc_data+0x398>
    1ef8:	8f e0       	ldi	r24, 0x0F	; 15
    1efa:	98 16       	cp	r9, r24
    1efc:	99 f0       	breq	.+38     	; 0x1f24 <lcd_show_new_refosc_data+0x2a8>
    1efe:	8a c0       	rjmp	.+276    	; 0x2014 <lcd_show_new_refosc_data+0x398>
    1f00:	00 e0       	ldi	r16, 0x00	; 0
    1f02:	25 e0       	ldi	r18, 0x05	; 5
    1f04:	40 ea       	ldi	r20, 0xA0	; 160
    1f06:	68 e7       	ldi	r22, 0x78	; 120
    1f08:	86 e4       	ldi	r24, 0x46	; 70
    1f0a:	0e 94 92 04 	call	0x924	; 0x924 <gfx_mono_generic_draw_filled_rect>
    1f0e:	c1 14       	cp	r12, r1
    1f10:	d1 04       	cpc	r13, r1
    1f12:	b9 f6       	brne	.-82     	; 0x1ec2 <lcd_show_new_refosc_data+0x246>
    1f14:	01 e0       	ldi	r16, 0x01	; 1
    1f16:	2c e7       	ldi	r18, 0x7C	; 124
    1f18:	46 e9       	ldi	r20, 0x96	; 150
    1f1a:	68 e7       	ldi	r22, 0x78	; 120
    1f1c:	86 e9       	ldi	r24, 0x96	; 150
    1f1e:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    1f22:	78 c0       	rjmp	.+240    	; 0x2014 <lcd_show_new_refosc_data+0x398>
    1f24:	40 5b       	subi	r20, 0xB0	; 176
    1f26:	00 e0       	ldi	r16, 0x00	; 0
    1f28:	25 e0       	ldi	r18, 0x05	; 5
    1f2a:	68 e7       	ldi	r22, 0x78	; 120
    1f2c:	86 e4       	ldi	r24, 0x46	; 70
    1f2e:	0e 94 92 04 	call	0x924	; 0x924 <gfx_mono_generic_draw_filled_rect>
    1f32:	f7 fe       	sbrs	r15, 7
    1f34:	0f c0       	rjmp	.+30     	; 0x1f54 <lcd_show_new_refosc_data+0x2d8>
    1f36:	01 e0       	ldi	r16, 0x01	; 1
    1f38:	28 e7       	ldi	r18, 0x78	; 120
    1f3a:	48 2d       	mov	r20, r8
    1f3c:	6a e7       	ldi	r22, 0x7A	; 122
    1f3e:	cc ef       	ldi	r28, 0xFC	; 252
    1f40:	c8 0d       	add	r28, r8
    1f42:	8c 2f       	mov	r24, r28
    1f44:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    1f48:	2c e7       	ldi	r18, 0x7C	; 124
    1f4a:	48 2d       	mov	r20, r8
    1f4c:	6a e7       	ldi	r22, 0x7A	; 122
    1f4e:	8c 2f       	mov	r24, r28
    1f50:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    1f54:	01 e0       	ldi	r16, 0x01	; 1
    1f56:	25 e0       	ldi	r18, 0x05	; 5
    1f58:	4c 2d       	mov	r20, r12
    1f5a:	68 e7       	ldi	r22, 0x78	; 120
    1f5c:	88 2d       	mov	r24, r8
    1f5e:	0e 94 92 04 	call	0x924	; 0x924 <gfx_mono_generic_draw_filled_rect>
    1f62:	40 e5       	ldi	r20, 0x50	; 80
    1f64:	4d 1b       	sub	r20, r29
    1f66:	00 e0       	ldi	r16, 0x00	; 0
    1f68:	25 e0       	ldi	r18, 0x05	; 5
    1f6a:	68 e7       	ldi	r22, 0x78	; 120
    1f6c:	86 e9       	ldi	r24, 0x96	; 150
    1f6e:	8d 0f       	add	r24, r29
    1f70:	0e 94 92 04 	call	0x924	; 0x924 <gfx_mono_generic_draw_filled_rect>
    1f74:	1e 14       	cp	r1, r14
    1f76:	1f 04       	cpc	r1, r15
    1f78:	0c f0       	brlt	.+2      	; 0x1f7c <lcd_show_new_refosc_data+0x300>
    1f7a:	4c c0       	rjmp	.+152    	; 0x2014 <lcd_show_new_refosc_data+0x398>
    1f7c:	c5 e9       	ldi	r28, 0x95	; 149
    1f7e:	cd 0f       	add	r28, r29
    1f80:	d7 56       	subi	r29, 0x67	; 103
    1f82:	01 e0       	ldi	r16, 0x01	; 1
    1f84:	28 e7       	ldi	r18, 0x78	; 120
    1f86:	4c 2f       	mov	r20, r28
    1f88:	6a e7       	ldi	r22, 0x7A	; 122
    1f8a:	8d 2f       	mov	r24, r29
    1f8c:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    1f90:	2c e7       	ldi	r18, 0x7C	; 124
    1f92:	4c 2f       	mov	r20, r28
    1f94:	6a e7       	ldi	r22, 0x7A	; 122
    1f96:	8d 2f       	mov	r24, r29
    1f98:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    1f9c:	3b c0       	rjmp	.+118    	; 0x2014 <lcd_show_new_refosc_data+0x398>
    1f9e:	40 5b       	subi	r20, 0xB0	; 176
    1fa0:	00 e0       	ldi	r16, 0x00	; 0
    1fa2:	23 e0       	ldi	r18, 0x03	; 3
    1fa4:	69 e7       	ldi	r22, 0x79	; 121
    1fa6:	86 e4       	ldi	r24, 0x46	; 70
    1fa8:	0e 94 92 04 	call	0x924	; 0x924 <gfx_mono_generic_draw_filled_rect>
    1fac:	f7 fe       	sbrs	r15, 7
    1fae:	0f c0       	rjmp	.+30     	; 0x1fce <lcd_show_new_refosc_data+0x352>
    1fb0:	01 e0       	ldi	r16, 0x01	; 1
    1fb2:	29 e7       	ldi	r18, 0x79	; 121
    1fb4:	48 2d       	mov	r20, r8
    1fb6:	6a e7       	ldi	r22, 0x7A	; 122
    1fb8:	cc ef       	ldi	r28, 0xFC	; 252
    1fba:	c8 0d       	add	r28, r8
    1fbc:	8c 2f       	mov	r24, r28
    1fbe:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    1fc2:	2b e7       	ldi	r18, 0x7B	; 123
    1fc4:	48 2d       	mov	r20, r8
    1fc6:	6a e7       	ldi	r22, 0x7A	; 122
    1fc8:	8c 2f       	mov	r24, r28
    1fca:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    1fce:	01 e0       	ldi	r16, 0x01	; 1
    1fd0:	23 e0       	ldi	r18, 0x03	; 3
    1fd2:	4c 2d       	mov	r20, r12
    1fd4:	69 e7       	ldi	r22, 0x79	; 121
    1fd6:	88 2d       	mov	r24, r8
    1fd8:	0e 94 92 04 	call	0x924	; 0x924 <gfx_mono_generic_draw_filled_rect>
    1fdc:	40 e5       	ldi	r20, 0x50	; 80
    1fde:	4d 1b       	sub	r20, r29
    1fe0:	00 e0       	ldi	r16, 0x00	; 0
    1fe2:	23 e0       	ldi	r18, 0x03	; 3
    1fe4:	69 e7       	ldi	r22, 0x79	; 121
    1fe6:	86 e9       	ldi	r24, 0x96	; 150
    1fe8:	8d 0f       	add	r24, r29
    1fea:	0e 94 92 04 	call	0x924	; 0x924 <gfx_mono_generic_draw_filled_rect>
    1fee:	1e 14       	cp	r1, r14
    1ff0:	1f 04       	cpc	r1, r15
    1ff2:	84 f4       	brge	.+32     	; 0x2014 <lcd_show_new_refosc_data+0x398>
    1ff4:	c5 e9       	ldi	r28, 0x95	; 149
    1ff6:	cd 0f       	add	r28, r29
    1ff8:	d7 56       	subi	r29, 0x67	; 103
    1ffa:	01 e0       	ldi	r16, 0x01	; 1
    1ffc:	29 e7       	ldi	r18, 0x79	; 121
    1ffe:	4c 2f       	mov	r20, r28
    2000:	6a e7       	ldi	r22, 0x7A	; 122
    2002:	8d 2f       	mov	r24, r29
    2004:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    2008:	2b e7       	ldi	r18, 0x7B	; 123
    200a:	4c 2f       	mov	r20, r28
    200c:	6a e7       	ldi	r22, 0x7A	; 122
    200e:	8d 2f       	mov	r24, r29
    2010:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    2014:	90 92 56 03 	sts	0x0356, r9	; 0x800356 <clk_state_old.3550>
    2018:	8d ef       	ldi	r24, 0xFD	; 253
    201a:	74 c2       	rjmp	.+1256   	; 0x2504 <lcd_show_new_refosc_data+0x888>
    201c:	96 ff       	sbrs	r25, 6
    201e:	36 c0       	rjmp	.+108    	; 0x208c <lcd_show_new_refosc_data+0x410>
    2020:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <idx.3593>
    2024:	22 30       	cpi	r18, 0x02	; 2
    2026:	90 f5       	brcc	.+100    	; 0x208c <lcd_show_new_refosc_data+0x410>
    2028:	9f 7b       	andi	r25, 0xBF	; 191
    202a:	90 93 33 04 	sts	0x0433, r25	; 0x800433 <g_showData>
    202e:	80 91 68 04 	lds	r24, 0x0468	; 0x800468 <g_showData+0x35>
    2032:	1f 92       	push	r1
    2034:	8f 93       	push	r24
    2036:	80 91 67 04 	lds	r24, 0x0467	; 0x800467 <g_showData+0x34>
    203a:	1f 92       	push	r1
    203c:	8f 93       	push	r24
    203e:	80 91 66 04 	lds	r24, 0x0466	; 0x800466 <g_showData+0x33>
    2042:	1f 92       	push	r1
    2044:	8f 93       	push	r24
    2046:	84 e9       	ldi	r24, 0x94	; 148
    2048:	92 e0       	ldi	r25, 0x02	; 2
    204a:	9f 93       	push	r25
    204c:	8f 93       	push	r24
    204e:	1f 92       	push	r1
    2050:	80 e3       	ldi	r24, 0x30	; 48
    2052:	8f 93       	push	r24
    2054:	8c ed       	ldi	r24, 0xDC	; 220
    2056:	93 e0       	ldi	r25, 0x03	; 3
    2058:	9f 93       	push	r25
    205a:	8f 93       	push	r24
    205c:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    2060:	cf bf       	out	0x3f, r28	; 63
    2062:	23 e0       	ldi	r18, 0x03	; 3
    2064:	31 e0       	ldi	r19, 0x01	; 1
    2066:	41 e4       	ldi	r20, 0x41	; 65
    2068:	6d e5       	ldi	r22, 0x5D	; 93
    206a:	8c ed       	ldi	r24, 0xDC	; 220
    206c:	93 e0       	ldi	r25, 0x03	; 3
    206e:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <gfx_mono_draw_string>
    2072:	82 e0       	ldi	r24, 0x02	; 2
    2074:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3593>
    2078:	8d b7       	in	r24, 0x3d	; 61
    207a:	9e b7       	in	r25, 0x3e	; 62
    207c:	0c 96       	adiw	r24, 0x0c	; 12
    207e:	0f b6       	in	r0, 0x3f	; 63
    2080:	f8 94       	cli
    2082:	9e bf       	out	0x3e, r25	; 62
    2084:	0f be       	out	0x3f, r0	; 63
    2086:	8d bf       	out	0x3d, r24	; 61
    2088:	81 e0       	ldi	r24, 0x01	; 1
    208a:	3c c2       	rjmp	.+1144   	; 0x2504 <lcd_show_new_refosc_data+0x888>
    208c:	97 ff       	sbrs	r25, 7
    208e:	47 c0       	rjmp	.+142    	; 0x211e <lcd_show_new_refosc_data+0x4a2>
    2090:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <idx.3593>
    2094:	23 30       	cpi	r18, 0x03	; 3
    2096:	08 f0       	brcs	.+2      	; 0x209a <lcd_show_new_refosc_data+0x41e>
    2098:	42 c0       	rjmp	.+132    	; 0x211e <lcd_show_new_refosc_data+0x4a2>
    209a:	80 91 33 04 	lds	r24, 0x0433	; 0x800433 <g_showData>
    209e:	8f 77       	andi	r24, 0x7F	; 127
    20a0:	80 93 33 04 	sts	0x0433, r24	; 0x800433 <g_showData>
    20a4:	20 91 55 04 	lds	r18, 0x0455	; 0x800455 <g_showData+0x22>
    20a8:	30 91 56 04 	lds	r19, 0x0456	; 0x800456 <g_showData+0x23>
    20ac:	c9 01       	movw	r24, r18
    20ae:	64 e6       	ldi	r22, 0x64	; 100
    20b0:	70 e0       	ldi	r23, 0x00	; 0
    20b2:	0e 94 23 22 	call	0x4446	; 0x4446 <__udivmodhi4>
    20b6:	9f 93       	push	r25
    20b8:	8f 93       	push	r24
    20ba:	b9 01       	movw	r22, r18
    20bc:	80 e0       	ldi	r24, 0x00	; 0
    20be:	90 e0       	ldi	r25, 0x00	; 0
    20c0:	0e 94 ab 20 	call	0x4156	; 0x4156 <__floatunsisf>
    20c4:	20 e0       	ldi	r18, 0x00	; 0
    20c6:	30 e0       	ldi	r19, 0x00	; 0
    20c8:	48 ec       	ldi	r20, 0xC8	; 200
    20ca:	52 e4       	ldi	r21, 0x42	; 66
    20cc:	0e 94 12 20 	call	0x4024	; 0x4024 <__divsf3>
    20d0:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__fixsfsi>
    20d4:	7f 93       	push	r23
    20d6:	6f 93       	push	r22
    20d8:	85 ed       	ldi	r24, 0xD5	; 213
    20da:	91 e0       	ldi	r25, 0x01	; 1
    20dc:	9f 93       	push	r25
    20de:	8f 93       	push	r24
    20e0:	1f 92       	push	r1
    20e2:	80 e3       	ldi	r24, 0x30	; 48
    20e4:	8f 93       	push	r24
    20e6:	8c ed       	ldi	r24, 0xDC	; 220
    20e8:	93 e0       	ldi	r25, 0x03	; 3
    20ea:	9f 93       	push	r25
    20ec:	8f 93       	push	r24
    20ee:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    20f2:	cf bf       	out	0x3f, r28	; 63
    20f4:	23 e0       	ldi	r18, 0x03	; 3
    20f6:	31 e0       	ldi	r19, 0x01	; 1
    20f8:	4a e4       	ldi	r20, 0x4A	; 74
    20fa:	6f e3       	ldi	r22, 0x3F	; 63
    20fc:	8c ed       	ldi	r24, 0xDC	; 220
    20fe:	93 e0       	ldi	r25, 0x03	; 3
    2100:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <gfx_mono_draw_string>
    2104:	83 e0       	ldi	r24, 0x03	; 3
    2106:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3593>
    210a:	8d b7       	in	r24, 0x3d	; 61
    210c:	9e b7       	in	r25, 0x3e	; 62
    210e:	0a 96       	adiw	r24, 0x0a	; 10
    2110:	0f b6       	in	r0, 0x3f	; 63
    2112:	f8 94       	cli
    2114:	9e bf       	out	0x3e, r25	; 62
    2116:	0f be       	out	0x3f, r0	; 63
    2118:	8d bf       	out	0x3d, r24	; 61
    211a:	82 e0       	ldi	r24, 0x02	; 2
    211c:	f3 c1       	rjmp	.+998    	; 0x2504 <lcd_show_new_refosc_data+0x888>
    211e:	20 91 34 04 	lds	r18, 0x0434	; 0x800434 <g_showData+0x1>
    2122:	20 ff       	sbrs	r18, 0
    2124:	32 c0       	rjmp	.+100    	; 0x218a <lcd_show_new_refosc_data+0x50e>
    2126:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <idx.3593>
    212a:	34 30       	cpi	r19, 0x04	; 4
    212c:	70 f5       	brcc	.+92     	; 0x218a <lcd_show_new_refosc_data+0x50e>
    212e:	2e 7f       	andi	r18, 0xFE	; 254
    2130:	20 93 34 04 	sts	0x0434, r18	; 0x800434 <g_showData+0x1>
    2134:	80 91 6a 04 	lds	r24, 0x046A	; 0x80046a <g_showData+0x37>
    2138:	1f 92       	push	r1
    213a:	8f 93       	push	r24
    213c:	80 91 69 04 	lds	r24, 0x0469	; 0x800469 <g_showData+0x36>
    2140:	1f 92       	push	r1
    2142:	8f 93       	push	r24
    2144:	8c ee       	ldi	r24, 0xEC	; 236
    2146:	91 e0       	ldi	r25, 0x01	; 1
    2148:	9f 93       	push	r25
    214a:	8f 93       	push	r24
    214c:	1f 92       	push	r1
    214e:	80 e3       	ldi	r24, 0x30	; 48
    2150:	8f 93       	push	r24
    2152:	8c ed       	ldi	r24, 0xDC	; 220
    2154:	93 e0       	ldi	r25, 0x03	; 3
    2156:	9f 93       	push	r25
    2158:	8f 93       	push	r24
    215a:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    215e:	cf bf       	out	0x3f, r28	; 63
    2160:	23 e0       	ldi	r18, 0x03	; 3
    2162:	31 e0       	ldi	r19, 0x01	; 1
    2164:	43 e5       	ldi	r20, 0x53	; 83
    2166:	61 e5       	ldi	r22, 0x51	; 81
    2168:	8c ed       	ldi	r24, 0xDC	; 220
    216a:	93 e0       	ldi	r25, 0x03	; 3
    216c:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <gfx_mono_draw_string>
    2170:	84 e0       	ldi	r24, 0x04	; 4
    2172:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3593>
    2176:	8d b7       	in	r24, 0x3d	; 61
    2178:	9e b7       	in	r25, 0x3e	; 62
    217a:	0a 96       	adiw	r24, 0x0a	; 10
    217c:	0f b6       	in	r0, 0x3f	; 63
    217e:	f8 94       	cli
    2180:	9e bf       	out	0x3e, r25	; 62
    2182:	0f be       	out	0x3f, r0	; 63
    2184:	8d bf       	out	0x3d, r24	; 61
    2186:	83 e0       	ldi	r24, 0x03	; 3
    2188:	bd c1       	rjmp	.+890    	; 0x2504 <lcd_show_new_refosc_data+0x888>
    218a:	21 ff       	sbrs	r18, 1
    218c:	41 c0       	rjmp	.+130    	; 0x2210 <lcd_show_new_refosc_data+0x594>
    218e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <idx.3593>
    2192:	35 30       	cpi	r19, 0x05	; 5
    2194:	e8 f5       	brcc	.+122    	; 0x2210 <lcd_show_new_refosc_data+0x594>
    2196:	80 91 34 04 	lds	r24, 0x0434	; 0x800434 <g_showData+0x1>
    219a:	8d 7f       	andi	r24, 0xFD	; 253
    219c:	80 93 34 04 	sts	0x0434, r24	; 0x800434 <g_showData+0x1>
    21a0:	80 91 58 04 	lds	r24, 0x0458	; 0x800458 <g_showData+0x25>
    21a4:	8f 93       	push	r24
    21a6:	80 91 57 04 	lds	r24, 0x0457	; 0x800457 <g_showData+0x24>
    21aa:	8f 93       	push	r24
    21ac:	80 91 6d 04 	lds	r24, 0x046D	; 0x80046d <g_showData+0x3a>
    21b0:	1f 92       	push	r1
    21b2:	8f 93       	push	r24
    21b4:	1f 92       	push	r1
    21b6:	8e e7       	ldi	r24, 0x7E	; 126
    21b8:	8f 93       	push	r24
    21ba:	80 91 6c 04 	lds	r24, 0x046C	; 0x80046c <g_showData+0x39>
    21be:	1f 92       	push	r1
    21c0:	8f 93       	push	r24
    21c2:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <g_showData+0x38>
    21c6:	1f 92       	push	r1
    21c8:	8f 93       	push	r24
    21ca:	8d ea       	ldi	r24, 0xAD	; 173
    21cc:	92 e0       	ldi	r25, 0x02	; 2
    21ce:	9f 93       	push	r25
    21d0:	8f 93       	push	r24
    21d2:	1f 92       	push	r1
    21d4:	80 e3       	ldi	r24, 0x30	; 48
    21d6:	8f 93       	push	r24
    21d8:	8c ed       	ldi	r24, 0xDC	; 220
    21da:	93 e0       	ldi	r25, 0x03	; 3
    21dc:	9f 93       	push	r25
    21de:	8f 93       	push	r24
    21e0:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    21e4:	cf bf       	out	0x3f, r28	; 63
    21e6:	23 e0       	ldi	r18, 0x03	; 3
    21e8:	31 e0       	ldi	r19, 0x01	; 1
    21ea:	4c e5       	ldi	r20, 0x5C	; 92
    21ec:	6f e3       	ldi	r22, 0x3F	; 63
    21ee:	8c ed       	ldi	r24, 0xDC	; 220
    21f0:	93 e0       	ldi	r25, 0x03	; 3
    21f2:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <gfx_mono_draw_string>
    21f6:	85 e0       	ldi	r24, 0x05	; 5
    21f8:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3593>
    21fc:	8d b7       	in	r24, 0x3d	; 61
    21fe:	9e b7       	in	r25, 0x3e	; 62
    2200:	40 96       	adiw	r24, 0x10	; 16
    2202:	0f b6       	in	r0, 0x3f	; 63
    2204:	f8 94       	cli
    2206:	9e bf       	out	0x3e, r25	; 62
    2208:	0f be       	out	0x3f, r0	; 63
    220a:	8d bf       	out	0x3d, r24	; 61
    220c:	84 e0       	ldi	r24, 0x04	; 4
    220e:	7a c1       	rjmp	.+756    	; 0x2504 <lcd_show_new_refosc_data+0x888>
    2210:	22 ff       	sbrs	r18, 2
    2212:	41 c0       	rjmp	.+130    	; 0x2296 <lcd_show_new_refosc_data+0x61a>
    2214:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <idx.3593>
    2218:	36 30       	cpi	r19, 0x06	; 6
    221a:	e8 f5       	brcc	.+122    	; 0x2296 <lcd_show_new_refosc_data+0x61a>
    221c:	80 91 34 04 	lds	r24, 0x0434	; 0x800434 <g_showData+0x1>
    2220:	8b 7f       	andi	r24, 0xFB	; 251
    2222:	80 93 34 04 	sts	0x0434, r24	; 0x800434 <g_showData+0x1>
    2226:	80 91 5a 04 	lds	r24, 0x045A	; 0x80045a <g_showData+0x27>
    222a:	8f 93       	push	r24
    222c:	80 91 59 04 	lds	r24, 0x0459	; 0x800459 <g_showData+0x26>
    2230:	8f 93       	push	r24
    2232:	80 91 70 04 	lds	r24, 0x0470	; 0x800470 <g_showData+0x3d>
    2236:	1f 92       	push	r1
    2238:	8f 93       	push	r24
    223a:	1f 92       	push	r1
    223c:	8e e7       	ldi	r24, 0x7E	; 126
    223e:	8f 93       	push	r24
    2240:	80 91 6f 04 	lds	r24, 0x046F	; 0x80046f <g_showData+0x3c>
    2244:	1f 92       	push	r1
    2246:	8f 93       	push	r24
    2248:	80 91 6e 04 	lds	r24, 0x046E	; 0x80046e <g_showData+0x3b>
    224c:	1f 92       	push	r1
    224e:	8f 93       	push	r24
    2250:	81 ec       	ldi	r24, 0xC1	; 193
    2252:	92 e0       	ldi	r25, 0x02	; 2
    2254:	9f 93       	push	r25
    2256:	8f 93       	push	r24
    2258:	1f 92       	push	r1
    225a:	80 e3       	ldi	r24, 0x30	; 48
    225c:	8f 93       	push	r24
    225e:	8c ed       	ldi	r24, 0xDC	; 220
    2260:	93 e0       	ldi	r25, 0x03	; 3
    2262:	9f 93       	push	r25
    2264:	8f 93       	push	r24
    2266:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    226a:	cf bf       	out	0x3f, r28	; 63
    226c:	23 e0       	ldi	r18, 0x03	; 3
    226e:	31 e0       	ldi	r19, 0x01	; 1
    2270:	45 e6       	ldi	r20, 0x65	; 101
    2272:	6f e3       	ldi	r22, 0x3F	; 63
    2274:	8c ed       	ldi	r24, 0xDC	; 220
    2276:	93 e0       	ldi	r25, 0x03	; 3
    2278:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <gfx_mono_draw_string>
    227c:	86 e0       	ldi	r24, 0x06	; 6
    227e:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3593>
    2282:	8d b7       	in	r24, 0x3d	; 61
    2284:	9e b7       	in	r25, 0x3e	; 62
    2286:	40 96       	adiw	r24, 0x10	; 16
    2288:	0f b6       	in	r0, 0x3f	; 63
    228a:	f8 94       	cli
    228c:	9e bf       	out	0x3e, r25	; 62
    228e:	0f be       	out	0x3f, r0	; 63
    2290:	8d bf       	out	0x3d, r24	; 61
    2292:	85 e0       	ldi	r24, 0x05	; 5
    2294:	37 c1       	rjmp	.+622    	; 0x2504 <lcd_show_new_refosc_data+0x888>
    2296:	23 ff       	sbrs	r18, 3
    2298:	36 c0       	rjmp	.+108    	; 0x2306 <lcd_show_new_refosc_data+0x68a>
    229a:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <idx.3593>
    229e:	27 30       	cpi	r18, 0x07	; 7
    22a0:	90 f5       	brcc	.+100    	; 0x2306 <lcd_show_new_refosc_data+0x68a>
    22a2:	80 91 34 04 	lds	r24, 0x0434	; 0x800434 <g_showData+0x1>
    22a6:	87 7f       	andi	r24, 0xF7	; 247
    22a8:	80 93 34 04 	sts	0x0434, r24	; 0x800434 <g_showData+0x1>
    22ac:	80 91 71 04 	lds	r24, 0x0471	; 0x800471 <g_showData+0x3e>
    22b0:	1f 92       	push	r1
    22b2:	8f 93       	push	r24
    22b4:	80 91 5c 04 	lds	r24, 0x045C	; 0x80045c <g_showData+0x29>
    22b8:	8f 93       	push	r24
    22ba:	80 91 5b 04 	lds	r24, 0x045B	; 0x80045b <g_showData+0x28>
    22be:	8f 93       	push	r24
    22c0:	84 ed       	ldi	r24, 0xD4	; 212
    22c2:	92 e0       	ldi	r25, 0x02	; 2
    22c4:	9f 93       	push	r25
    22c6:	8f 93       	push	r24
    22c8:	1f 92       	push	r1
    22ca:	80 e3       	ldi	r24, 0x30	; 48
    22cc:	8f 93       	push	r24
    22ce:	8c ed       	ldi	r24, 0xDC	; 220
    22d0:	93 e0       	ldi	r25, 0x03	; 3
    22d2:	9f 93       	push	r25
    22d4:	8f 93       	push	r24
    22d6:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    22da:	cf bf       	out	0x3f, r28	; 63
    22dc:	23 e0       	ldi	r18, 0x03	; 3
    22de:	31 e0       	ldi	r19, 0x01	; 1
    22e0:	4e e6       	ldi	r20, 0x6E	; 110
    22e2:	6f e3       	ldi	r22, 0x3F	; 63
    22e4:	8c ed       	ldi	r24, 0xDC	; 220
    22e6:	93 e0       	ldi	r25, 0x03	; 3
    22e8:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <gfx_mono_draw_string>
    22ec:	87 e0       	ldi	r24, 0x07	; 7
    22ee:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3593>
    22f2:	8d b7       	in	r24, 0x3d	; 61
    22f4:	9e b7       	in	r25, 0x3e	; 62
    22f6:	0a 96       	adiw	r24, 0x0a	; 10
    22f8:	0f b6       	in	r0, 0x3f	; 63
    22fa:	f8 94       	cli
    22fc:	9e bf       	out	0x3e, r25	; 62
    22fe:	0f be       	out	0x3f, r0	; 63
    2300:	8d bf       	out	0x3d, r24	; 61
    2302:	86 e0       	ldi	r24, 0x06	; 6
    2304:	ff c0       	rjmp	.+510    	; 0x2504 <lcd_show_new_refosc_data+0x888>
    2306:	93 ff       	sbrs	r25, 3
    2308:	38 c0       	rjmp	.+112    	; 0x237a <lcd_show_new_refosc_data+0x6fe>
    230a:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <idx.3593>
    230e:	28 30       	cpi	r18, 0x08	; 8
    2310:	a0 f5       	brcc	.+104    	; 0x237a <lcd_show_new_refosc_data+0x6fe>
    2312:	80 91 33 04 	lds	r24, 0x0433	; 0x800433 <g_showData>
    2316:	87 7f       	andi	r24, 0xF7	; 247
    2318:	80 93 33 04 	sts	0x0433, r24	; 0x800433 <g_showData>
    231c:	80 91 52 04 	lds	r24, 0x0452	; 0x800452 <g_showData+0x1f>
    2320:	8f 93       	push	r24
    2322:	80 91 51 04 	lds	r24, 0x0451	; 0x800451 <g_showData+0x1e>
    2326:	8f 93       	push	r24
    2328:	80 91 50 04 	lds	r24, 0x0450	; 0x800450 <g_showData+0x1d>
    232c:	8f 93       	push	r24
    232e:	80 91 4f 04 	lds	r24, 0x044F	; 0x80044f <g_showData+0x1c>
    2332:	8f 93       	push	r24
    2334:	8d ed       	ldi	r24, 0xDD	; 221
    2336:	92 e0       	ldi	r25, 0x02	; 2
    2338:	9f 93       	push	r25
    233a:	8f 93       	push	r24
    233c:	1f 92       	push	r1
    233e:	80 e3       	ldi	r24, 0x30	; 48
    2340:	8f 93       	push	r24
    2342:	8c ed       	ldi	r24, 0xDC	; 220
    2344:	93 e0       	ldi	r25, 0x03	; 3
    2346:	9f 93       	push	r25
    2348:	8f 93       	push	r24
    234a:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    234e:	cf bf       	out	0x3f, r28	; 63
    2350:	23 e0       	ldi	r18, 0x03	; 3
    2352:	31 e0       	ldi	r19, 0x01	; 1
    2354:	46 e2       	ldi	r20, 0x26	; 38
    2356:	6f e3       	ldi	r22, 0x3F	; 63
    2358:	8c ed       	ldi	r24, 0xDC	; 220
    235a:	93 e0       	ldi	r25, 0x03	; 3
    235c:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <gfx_mono_draw_string>
    2360:	88 e0       	ldi	r24, 0x08	; 8
    2362:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3593>
    2366:	8d b7       	in	r24, 0x3d	; 61
    2368:	9e b7       	in	r25, 0x3e	; 62
    236a:	0a 96       	adiw	r24, 0x0a	; 10
    236c:	0f b6       	in	r0, 0x3f	; 63
    236e:	f8 94       	cli
    2370:	9e bf       	out	0x3e, r25	; 62
    2372:	0f be       	out	0x3f, r0	; 63
    2374:	8d bf       	out	0x3d, r24	; 61
    2376:	87 e0       	ldi	r24, 0x07	; 7
    2378:	c5 c0       	rjmp	.+394    	; 0x2504 <lcd_show_new_refosc_data+0x888>
    237a:	94 ff       	sbrs	r25, 4
    237c:	87 c0       	rjmp	.+270    	; 0x248c <lcd_show_new_refosc_data+0x810>
    237e:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <idx.3593>
    2382:	29 30       	cpi	r18, 0x09	; 9
    2384:	08 f0       	brcs	.+2      	; 0x2388 <lcd_show_new_refosc_data+0x70c>
    2386:	82 c0       	rjmp	.+260    	; 0x248c <lcd_show_new_refosc_data+0x810>
    2388:	f0 90 63 04 	lds	r15, 0x0463	; 0x800463 <g_showData+0x30>
    238c:	60 91 64 04 	lds	r22, 0x0464	; 0x800464 <g_showData+0x31>
    2390:	80 91 33 04 	lds	r24, 0x0433	; 0x800433 <g_showData>
    2394:	8f 7e       	andi	r24, 0xEF	; 239
    2396:	80 93 33 04 	sts	0x0433, r24	; 0x800433 <g_showData>
    239a:	cf bf       	out	0x3f, r28	; 63
    239c:	70 e0       	ldi	r23, 0x00	; 0
    239e:	80 e0       	ldi	r24, 0x00	; 0
    23a0:	90 e0       	ldi	r25, 0x00	; 0
    23a2:	0e 94 ad 20 	call	0x415a	; 0x415a <__floatsisf>
    23a6:	2b 01       	movw	r4, r22
    23a8:	3c 01       	movw	r6, r24
    23aa:	20 e0       	ldi	r18, 0x00	; 0
    23ac:	30 e0       	ldi	r19, 0x00	; 0
    23ae:	4a e7       	ldi	r20, 0x7A	; 122
    23b0:	50 e4       	ldi	r21, 0x40	; 64
    23b2:	0e 94 b4 21 	call	0x4368	; 0x4368 <__mulsf3>
    23b6:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__fixsfsi>
    23ba:	7f 93       	push	r23
    23bc:	6f 93       	push	r22
    23be:	1f 92       	push	r1
    23c0:	ff 92       	push	r15
    23c2:	07 ee       	ldi	r16, 0xE7	; 231
    23c4:	12 e0       	ldi	r17, 0x02	; 2
    23c6:	1f 93       	push	r17
    23c8:	0f 93       	push	r16
    23ca:	1f 92       	push	r1
    23cc:	80 e3       	ldi	r24, 0x30	; 48
    23ce:	b8 2e       	mov	r11, r24
    23d0:	bf 92       	push	r11
    23d2:	cc ed       	ldi	r28, 0xDC	; 220
    23d4:	d3 e0       	ldi	r29, 0x03	; 3
    23d6:	df 93       	push	r29
    23d8:	cf 93       	push	r28
    23da:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    23de:	23 e0       	ldi	r18, 0x03	; 3
    23e0:	31 e0       	ldi	r19, 0x01	; 1
    23e2:	4f e2       	ldi	r20, 0x2F	; 47
    23e4:	6f e3       	ldi	r22, 0x3F	; 63
    23e6:	ce 01       	movw	r24, r28
    23e8:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <gfx_mono_draw_string>
    23ec:	6f 2d       	mov	r22, r15
    23ee:	70 e0       	ldi	r23, 0x00	; 0
    23f0:	80 e0       	ldi	r24, 0x00	; 0
    23f2:	90 e0       	ldi	r25, 0x00	; 0
    23f4:	0e 94 ab 20 	call	0x4156	; 0x4156 <__floatunsisf>
    23f8:	6b 01       	movw	r12, r22
    23fa:	7c 01       	movw	r14, r24
    23fc:	20 e0       	ldi	r18, 0x00	; 0
    23fe:	30 e0       	ldi	r19, 0x00	; 0
    2400:	40 e8       	ldi	r20, 0x80	; 128
    2402:	5b e3       	ldi	r21, 0x3B	; 59
    2404:	c3 01       	movw	r24, r6
    2406:	b2 01       	movw	r22, r4
    2408:	0e 94 b4 21 	call	0x4368	; 0x4368 <__mulsf3>
    240c:	a7 01       	movw	r20, r14
    240e:	96 01       	movw	r18, r12
    2410:	0e 94 aa 1f 	call	0x3f54	; 0x3f54 <__addsf3>
    2414:	20 e0       	ldi	r18, 0x00	; 0
    2416:	30 e0       	ldi	r19, 0x00	; 0
    2418:	48 ec       	ldi	r20, 0xC8	; 200
    241a:	5e e3       	ldi	r21, 0x3E	; 62
    241c:	0e 94 b4 21 	call	0x4368	; 0x4368 <__mulsf3>
    2420:	6b 01       	movw	r12, r22
    2422:	7c 01       	movw	r14, r24
    2424:	0e 94 e8 20 	call	0x41d0	; 0x41d0 <floor>
    2428:	9b 01       	movw	r18, r22
    242a:	ac 01       	movw	r20, r24
    242c:	c7 01       	movw	r24, r14
    242e:	b6 01       	movw	r22, r12
    2430:	0e 94 a9 1f 	call	0x3f52	; 0x3f52 <__subsf3>
    2434:	20 e0       	ldi	r18, 0x00	; 0
    2436:	30 e0       	ldi	r19, 0x00	; 0
    2438:	4a e7       	ldi	r20, 0x7A	; 122
    243a:	54 e4       	ldi	r21, 0x44	; 68
    243c:	0e 94 b4 21 	call	0x4368	; 0x4368 <__mulsf3>
    2440:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__fixsfsi>
    2444:	7f 93       	push	r23
    2446:	6f 93       	push	r22
    2448:	c7 01       	movw	r24, r14
    244a:	b6 01       	movw	r22, r12
    244c:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__fixsfsi>
    2450:	7f 93       	push	r23
    2452:	6f 93       	push	r22
    2454:	1f 93       	push	r17
    2456:	0f 93       	push	r16
    2458:	1f 92       	push	r1
    245a:	bf 92       	push	r11
    245c:	df 93       	push	r29
    245e:	cf 93       	push	r28
    2460:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    2464:	23 e0       	ldi	r18, 0x03	; 3
    2466:	31 e0       	ldi	r19, 0x01	; 1
    2468:	4f e2       	ldi	r20, 0x2F	; 47
    246a:	6d e8       	ldi	r22, 0x8D	; 141
    246c:	ce 01       	movw	r24, r28
    246e:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <gfx_mono_draw_string>
    2472:	89 e0       	ldi	r24, 0x09	; 9
    2474:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3593>
    2478:	8d b7       	in	r24, 0x3d	; 61
    247a:	9e b7       	in	r25, 0x3e	; 62
    247c:	44 96       	adiw	r24, 0x14	; 20
    247e:	0f b6       	in	r0, 0x3f	; 63
    2480:	f8 94       	cli
    2482:	9e bf       	out	0x3e, r25	; 62
    2484:	0f be       	out	0x3f, r0	; 63
    2486:	8d bf       	out	0x3d, r24	; 61
    2488:	88 e0       	ldi	r24, 0x08	; 8
    248a:	3c c0       	rjmp	.+120    	; 0x2504 <lcd_show_new_refosc_data+0x888>
    248c:	95 ff       	sbrs	r25, 5
    248e:	36 c0       	rjmp	.+108    	; 0x24fc <lcd_show_new_refosc_data+0x880>
    2490:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <idx.3593>
    2494:	9a 30       	cpi	r25, 0x0A	; 10
    2496:	90 f5       	brcc	.+100    	; 0x24fc <lcd_show_new_refosc_data+0x880>
    2498:	80 91 33 04 	lds	r24, 0x0433	; 0x800433 <g_showData>
    249c:	8f 7d       	andi	r24, 0xDF	; 223
    249e:	80 93 33 04 	sts	0x0433, r24	; 0x800433 <g_showData>
    24a2:	80 91 54 04 	lds	r24, 0x0454	; 0x800454 <g_showData+0x21>
    24a6:	8f 93       	push	r24
    24a8:	80 91 53 04 	lds	r24, 0x0453	; 0x800453 <g_showData+0x20>
    24ac:	8f 93       	push	r24
    24ae:	80 91 65 04 	lds	r24, 0x0465	; 0x800465 <g_showData+0x32>
    24b2:	1f 92       	push	r1
    24b4:	8f 93       	push	r24
    24b6:	85 e8       	ldi	r24, 0x85	; 133
    24b8:	92 e0       	ldi	r25, 0x02	; 2
    24ba:	9f 93       	push	r25
    24bc:	8f 93       	push	r24
    24be:	1f 92       	push	r1
    24c0:	80 e3       	ldi	r24, 0x30	; 48
    24c2:	8f 93       	push	r24
    24c4:	8c ed       	ldi	r24, 0xDC	; 220
    24c6:	93 e0       	ldi	r25, 0x03	; 3
    24c8:	9f 93       	push	r25
    24ca:	8f 93       	push	r24
    24cc:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    24d0:	cf bf       	out	0x3f, r28	; 63
    24d2:	23 e0       	ldi	r18, 0x03	; 3
    24d4:	31 e0       	ldi	r19, 0x01	; 1
    24d6:	48 e3       	ldi	r20, 0x38	; 56
    24d8:	6f e3       	ldi	r22, 0x3F	; 63
    24da:	8c ed       	ldi	r24, 0xDC	; 220
    24dc:	93 e0       	ldi	r25, 0x03	; 3
    24de:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <gfx_mono_draw_string>
    24e2:	8a e0       	ldi	r24, 0x0A	; 10
    24e4:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3593>
    24e8:	8d b7       	in	r24, 0x3d	; 61
    24ea:	9e b7       	in	r25, 0x3e	; 62
    24ec:	0a 96       	adiw	r24, 0x0a	; 10
    24ee:	0f b6       	in	r0, 0x3f	; 63
    24f0:	f8 94       	cli
    24f2:	9e bf       	out	0x3e, r25	; 62
    24f4:	0f be       	out	0x3f, r0	; 63
    24f6:	8d bf       	out	0x3d, r24	; 61
    24f8:	89 e0       	ldi	r24, 0x09	; 9
    24fa:	04 c0       	rjmp	.+8      	; 0x2504 <lcd_show_new_refosc_data+0x888>
    24fc:	91 e0       	ldi	r25, 0x01	; 1
    24fe:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <idx.3593>
    2502:	cf bf       	out	0x3f, r28	; 63
    2504:	df 91       	pop	r29
    2506:	cf 91       	pop	r28
    2508:	1f 91       	pop	r17
    250a:	0f 91       	pop	r16
    250c:	ff 90       	pop	r15
    250e:	ef 90       	pop	r14
    2510:	df 90       	pop	r13
    2512:	cf 90       	pop	r12
    2514:	bf 90       	pop	r11
    2516:	af 90       	pop	r10
    2518:	9f 90       	pop	r9
    251a:	8f 90       	pop	r8
    251c:	7f 90       	pop	r7
    251e:	6f 90       	pop	r6
    2520:	5f 90       	pop	r5
    2522:	4f 90       	pop	r4
    2524:	3f 90       	pop	r3
    2526:	08 95       	ret

00002528 <lcd_animation_prepare>:
    2528:	ef 92       	push	r14
    252a:	ff 92       	push	r15
    252c:	0f 93       	push	r16
    252e:	1f 93       	push	r17
    2530:	cf 93       	push	r28
    2532:	df 93       	push	r29
    2534:	83 ec       	ldi	r24, 0xC3	; 195
    2536:	9f ef       	ldi	r25, 0xFF	; 255
    2538:	90 93 db 03 	sts	0x03DB, r25	; 0x8003db <s_animation_train_origin+0x1>
    253c:	80 93 da 03 	sts	0x03DA, r24	; 0x8003da <s_animation_train_origin>
    2540:	81 e0       	ldi	r24, 0x01	; 1
    2542:	80 93 d9 03 	sts	0x03D9, r24	; 0x8003d9 <s_animation_dx>
    2546:	20 e0       	ldi	r18, 0x00	; 0
    2548:	30 e0       	ldi	r19, 0x00	; 0
    254a:	8b e0       	ldi	r24, 0x0B	; 11
    254c:	e8 2e       	mov	r14, r24
    254e:	f1 2c       	mov	r15, r1
    2550:	c0 e4       	ldi	r28, 0x40	; 64
    2552:	48 ef       	ldi	r20, 0xF8	; 248
    2554:	d8 ec       	ldi	r29, 0xC8	; 200
    2556:	18 ed       	ldi	r17, 0xD8	; 216
    2558:	0f ed       	ldi	r16, 0xDF	; 223
    255a:	21 15       	cp	r18, r1
    255c:	31 05       	cpc	r19, r1
    255e:	19 f4       	brne	.+6      	; 0x2566 <lcd_animation_prepare+0x3e>
    2560:	10 92 94 03 	sts	0x0394, r1	; 0x800394 <s_animation_train_left>
    2564:	43 c0       	rjmp	.+134    	; 0x25ec <lcd_animation_prepare+0xc4>
    2566:	23 30       	cpi	r18, 0x03	; 3
    2568:	31 05       	cpc	r19, r1
    256a:	5c f4       	brge	.+22     	; 0x2582 <lcd_animation_prepare+0x5a>
    256c:	f9 01       	movw	r30, r18
    256e:	ec 56       	subi	r30, 0x6C	; 108
    2570:	fc 4f       	sbci	r31, 0xFC	; 252
    2572:	40 83       	st	Z, r20
    2574:	2f 5f       	subi	r18, 0xFF	; 255
    2576:	3f 4f       	sbci	r19, 0xFF	; 255
    2578:	f9 01       	movw	r30, r18
    257a:	ec 56       	subi	r30, 0x6C	; 108
    257c:	fc 4f       	sbci	r31, 0xFC	; 252
    257e:	10 83       	st	Z, r17
    2580:	35 c0       	rjmp	.+106    	; 0x25ec <lcd_animation_prepare+0xc4>
    2582:	25 30       	cpi	r18, 0x05	; 5
    2584:	31 05       	cpc	r19, r1
    2586:	2c f4       	brge	.+10     	; 0x2592 <lcd_animation_prepare+0x6a>
    2588:	f9 01       	movw	r30, r18
    258a:	ec 56       	subi	r30, 0x6C	; 108
    258c:	fc 4f       	sbci	r31, 0xFC	; 252
    258e:	00 83       	st	Z, r16
    2590:	2d c0       	rjmp	.+90     	; 0x25ec <lcd_animation_prepare+0xc4>
    2592:	2b 30       	cpi	r18, 0x0B	; 11
    2594:	31 05       	cpc	r19, r1
    2596:	2c f4       	brge	.+10     	; 0x25a2 <lcd_animation_prepare+0x7a>
    2598:	f9 01       	movw	r30, r18
    259a:	ec 56       	subi	r30, 0x6C	; 108
    259c:	fc 4f       	sbci	r31, 0xFC	; 252
    259e:	10 83       	st	Z, r17
    25a0:	25 c0       	rjmp	.+74     	; 0x25ec <lcd_animation_prepare+0xc4>
    25a2:	20 31       	cpi	r18, 0x10	; 16
    25a4:	31 05       	cpc	r19, r1
    25a6:	e4 f0       	brlt	.+56     	; 0x25e0 <lcd_animation_prepare+0xb8>
    25a8:	2c 33       	cpi	r18, 0x3C	; 60
    25aa:	31 05       	cpc	r19, r1
    25ac:	19 f4       	brne	.+6      	; 0x25b4 <lcd_animation_prepare+0x8c>
    25ae:	10 92 d0 03 	sts	0x03D0, r1	; 0x8003d0 <s_animation_train_left+0x3c>
    25b2:	1c c0       	rjmp	.+56     	; 0x25ec <lcd_animation_prepare+0xc4>
    25b4:	c9 01       	movw	r24, r18
    25b6:	40 97       	sbiw	r24, 0x10	; 16
    25b8:	b7 01       	movw	r22, r14
    25ba:	0e 94 37 22 	call	0x446e	; 0x446e <__divmodhi4>
    25be:	f9 01       	movw	r30, r18
    25c0:	ec 56       	subi	r30, 0x6C	; 108
    25c2:	fc 4f       	sbci	r31, 0xFC	; 252
    25c4:	89 2b       	or	r24, r25
    25c6:	89 f4       	brne	.+34     	; 0x25ea <lcd_animation_prepare+0xc2>
    25c8:	c0 83       	st	Z, r28
    25ca:	c1 83       	std	Z+1, r28	; 0x01
    25cc:	c2 83       	std	Z+2, r28	; 0x02
    25ce:	43 83       	std	Z+3, r20	; 0x03
    25d0:	44 83       	std	Z+4, r20	; 0x04
    25d2:	d5 83       	std	Z+5, r29	; 0x05
    25d4:	46 83       	std	Z+6, r20	; 0x06
    25d6:	47 83       	std	Z+7, r20	; 0x07
    25d8:	d0 87       	std	Z+8, r29	; 0x08
    25da:	41 87       	std	Z+9, r20	; 0x09
    25dc:	26 5f       	subi	r18, 0xF6	; 246
    25de:	3f 4f       	sbci	r19, 0xFF	; 255
    25e0:	f9 01       	movw	r30, r18
    25e2:	ec 56       	subi	r30, 0x6C	; 108
    25e4:	fc 4f       	sbci	r31, 0xFC	; 252
    25e6:	40 83       	st	Z, r20
    25e8:	01 c0       	rjmp	.+2      	; 0x25ec <lcd_animation_prepare+0xc4>
    25ea:	10 82       	st	Z, r1
    25ec:	2f 5f       	subi	r18, 0xFF	; 255
    25ee:	3f 4f       	sbci	r19, 0xFF	; 255
    25f0:	2d 33       	cpi	r18, 0x3D	; 61
    25f2:	31 05       	cpc	r19, r1
    25f4:	0c f4       	brge	.+2      	; 0x25f8 <lcd_animation_prepare+0xd0>
    25f6:	b1 cf       	rjmp	.-158    	; 0x255a <lcd_animation_prepare+0x32>
    25f8:	a4 e9       	ldi	r26, 0x94	; 148
    25fa:	b3 e0       	ldi	r27, 0x03	; 3
    25fc:	e4 e9       	ldi	r30, 0x94	; 148
    25fe:	f3 e0       	ldi	r31, 0x03	; 3
    2600:	8d 91       	ld	r24, X+
    2602:	82 93       	st	-Z, r24
    2604:	83 e0       	ldi	r24, 0x03	; 3
    2606:	e7 35       	cpi	r30, 0x57	; 87
    2608:	f8 07       	cpc	r31, r24
    260a:	d1 f7       	brne	.-12     	; 0x2600 <lcd_animation_prepare+0xd8>
    260c:	00 e0       	ldi	r16, 0x00	; 0
    260e:	28 e0       	ldi	r18, 0x08	; 8
    2610:	40 ef       	ldi	r20, 0xF0	; 240
    2612:	68 e7       	ldi	r22, 0x78	; 120
    2614:	80 e0       	ldi	r24, 0x00	; 0
    2616:	0e 94 92 04 	call	0x924	; 0x924 <gfx_mono_generic_draw_filled_rect>
    261a:	df 91       	pop	r29
    261c:	cf 91       	pop	r28
    261e:	1f 91       	pop	r17
    2620:	0f 91       	pop	r16
    2622:	ff 90       	pop	r15
    2624:	ef 90       	pop	r14
    2626:	08 95       	ret

00002628 <lcd_animation_loop>:
    2628:	2f 92       	push	r2
    262a:	3f 92       	push	r3
    262c:	4f 92       	push	r4
    262e:	5f 92       	push	r5
    2630:	6f 92       	push	r6
    2632:	7f 92       	push	r7
    2634:	8f 92       	push	r8
    2636:	9f 92       	push	r9
    2638:	af 92       	push	r10
    263a:	bf 92       	push	r11
    263c:	cf 92       	push	r12
    263e:	df 92       	push	r13
    2640:	ef 92       	push	r14
    2642:	ff 92       	push	r15
    2644:	0f 93       	push	r16
    2646:	1f 93       	push	r17
    2648:	cf 93       	push	r28
    264a:	df 93       	push	r29
    264c:	17 d9       	rcall	.-3538   	; 0x187c <cpu_irq_save>
    264e:	90 91 72 04 	lds	r25, 0x0472	; 0x800472 <g_status>
    2652:	91 70       	andi	r25, 0x01	; 1
    2654:	8f bf       	out	0x3f, r24	; 63
    2656:	84 e9       	ldi	r24, 0x94	; 148
    2658:	28 2e       	mov	r2, r24
    265a:	83 e0       	ldi	r24, 0x03	; 3
    265c:	38 2e       	mov	r3, r24
    265e:	2a e0       	ldi	r18, 0x0A	; 10
    2660:	a2 2e       	mov	r10, r18
    2662:	b1 2c       	mov	r11, r1
    2664:	31 e0       	ldi	r19, 0x01	; 1
    2666:	e3 2e       	mov	r14, r19
    2668:	33 e0       	ldi	r19, 0x03	; 3
    266a:	f3 2e       	mov	r15, r19
    266c:	cc ed       	ldi	r28, 0xDC	; 220
    266e:	d3 e0       	ldi	r29, 0x03	; 3
    2670:	44 e6       	ldi	r20, 0x64	; 100
    2672:	84 2e       	mov	r8, r20
    2674:	91 2c       	mov	r9, r1
    2676:	50 ef       	ldi	r21, 0xF0	; 240
    2678:	c5 2e       	mov	r12, r21
    267a:	52 e0       	ldi	r21, 0x02	; 2
    267c:	d5 2e       	mov	r13, r21
    267e:	13 e0       	ldi	r17, 0x03	; 3
    2680:	99 23       	and	r25, r25
    2682:	09 f4       	brne	.+2      	; 0x2686 <lcd_animation_loop+0x5e>
    2684:	92 c1       	rjmp	.+804    	; 0x29aa <lcd_animation_loop+0x382>
    2686:	80 91 d9 03 	lds	r24, 0x03D9	; 0x8003d9 <s_animation_dx>
    268a:	88 23       	and	r24, r24
    268c:	09 f4       	brne	.+2      	; 0x2690 <lcd_animation_loop+0x68>
    268e:	8d c1       	rjmp	.+794    	; 0x29aa <lcd_animation_loop+0x382>
    2690:	0e 94 30 1d 	call	0x3a60	; 0x3a60 <get_abs_time>
    2694:	2b 01       	movw	r4, r22
    2696:	3c 01       	movw	r6, r24
    2698:	20 91 d1 03 	lds	r18, 0x03D1	; 0x8003d1 <s_animation_time_last_train>
    269c:	30 91 d2 03 	lds	r19, 0x03D2	; 0x8003d2 <s_animation_time_last_train+0x1>
    26a0:	40 91 d3 03 	lds	r20, 0x03D3	; 0x8003d3 <s_animation_time_last_train+0x2>
    26a4:	50 91 d4 03 	lds	r21, 0x03D4	; 0x8003d4 <s_animation_time_last_train+0x3>
    26a8:	0e 94 a9 1f 	call	0x3f52	; 0x3f52 <__subsf3>
    26ac:	2a e0       	ldi	r18, 0x0A	; 10
    26ae:	37 ed       	ldi	r19, 0xD7	; 215
    26b0:	43 e2       	ldi	r20, 0x23	; 35
    26b2:	5d e3       	ldi	r21, 0x3D	; 61
    26b4:	0e 94 b0 21 	call	0x4360	; 0x4360 <__gesf2>
    26b8:	87 fd       	sbrc	r24, 7
    26ba:	60 c0       	rjmp	.+192    	; 0x277c <lcd_animation_loop+0x154>
    26bc:	40 92 d1 03 	sts	0x03D1, r4	; 0x8003d1 <s_animation_time_last_train>
    26c0:	50 92 d2 03 	sts	0x03D2, r5	; 0x8003d2 <s_animation_time_last_train+0x1>
    26c4:	60 92 d3 03 	sts	0x03D3, r6	; 0x8003d3 <s_animation_time_last_train+0x2>
    26c8:	70 92 d4 03 	sts	0x03D4, r7	; 0x8003d4 <s_animation_time_last_train+0x3>
    26cc:	20 91 d9 03 	lds	r18, 0x03D9	; 0x8003d9 <s_animation_dx>
    26d0:	80 91 da 03 	lds	r24, 0x03DA	; 0x8003da <s_animation_train_origin>
    26d4:	90 91 db 03 	lds	r25, 0x03DB	; 0x8003db <s_animation_train_origin+0x1>
    26d8:	82 0f       	add	r24, r18
    26da:	91 1d       	adc	r25, r1
    26dc:	27 fd       	sbrc	r18, 7
    26de:	9a 95       	dec	r25
    26e0:	90 93 db 03 	sts	0x03DB, r25	; 0x8003db <s_animation_train_origin+0x1>
    26e4:	80 93 da 03 	sts	0x03DA, r24	; 0x8003da <s_animation_train_origin>
    26e8:	8a 3b       	cpi	r24, 0xBA	; 186
    26ea:	2f ef       	ldi	r18, 0xFF	; 255
    26ec:	92 07       	cpc	r25, r18
    26ee:	24 f4       	brge	.+8      	; 0x26f8 <lcd_animation_loop+0xd0>
    26f0:	e1 e0       	ldi	r30, 0x01	; 1
    26f2:	e0 93 d9 03 	sts	0x03D9, r30	; 0x8003d9 <s_animation_dx>
    26f6:	06 c0       	rjmp	.+12     	; 0x2704 <lcd_animation_loop+0xdc>
    26f8:	8a 3f       	cpi	r24, 0xFA	; 250
    26fa:	91 05       	cpc	r25, r1
    26fc:	1c f0       	brlt	.+6      	; 0x2704 <lcd_animation_loop+0xdc>
    26fe:	ff ef       	ldi	r31, 0xFF	; 255
    2700:	f0 93 d9 03 	sts	0x03D9, r31	; 0x8003d9 <s_animation_dx>
    2704:	20 91 d9 03 	lds	r18, 0x03D9	; 0x8003d9 <s_animation_dx>
    2708:	27 ff       	sbrs	r18, 7
    270a:	1c c0       	rjmp	.+56     	; 0x2744 <lcd_animation_loop+0x11c>
    270c:	80 3f       	cpi	r24, 0xF0	; 240
    270e:	91 05       	cpc	r25, r1
    2710:	40 f4       	brcc	.+16     	; 0x2722 <lcd_animation_loop+0xfa>
    2712:	2d e3       	ldi	r18, 0x3D	; 61
    2714:	48 2f       	mov	r20, r24
    2716:	6f e0       	ldi	r22, 0x0F	; 15
    2718:	84 e9       	ldi	r24, 0x94	; 148
    271a:	93 e0       	ldi	r25, 0x03	; 3
    271c:	0e 94 f7 05 	call	0xbee	; 0xbee <gfx_mono_lcd_uc1608_put_page>
    2720:	2d c0       	rjmp	.+90     	; 0x277c <lcd_animation_loop+0x154>
    2722:	9c 01       	movw	r18, r24
    2724:	24 5c       	subi	r18, 0xC4	; 196
    2726:	3f 4f       	sbci	r19, 0xFF	; 255
    2728:	2c 33       	cpi	r18, 0x3C	; 60
    272a:	31 05       	cpc	r19, r1
    272c:	38 f5       	brcc	.+78     	; 0x277c <lcd_animation_loop+0x154>
    272e:	2d e3       	ldi	r18, 0x3D	; 61
    2730:	28 0f       	add	r18, r24
    2732:	40 e0       	ldi	r20, 0x00	; 0
    2734:	6f e0       	ldi	r22, 0x0F	; 15
    2736:	f1 01       	movw	r30, r2
    2738:	e8 1b       	sub	r30, r24
    273a:	f9 0b       	sbc	r31, r25
    273c:	cf 01       	movw	r24, r30
    273e:	0e 94 f7 05 	call	0xbee	; 0xbee <gfx_mono_lcd_uc1608_put_page>
    2742:	1c c0       	rjmp	.+56     	; 0x277c <lcd_animation_loop+0x154>
    2744:	80 3f       	cpi	r24, 0xF0	; 240
    2746:	91 05       	cpc	r25, r1
    2748:	40 f4       	brcc	.+16     	; 0x275a <lcd_animation_loop+0x132>
    274a:	2d e3       	ldi	r18, 0x3D	; 61
    274c:	48 2f       	mov	r20, r24
    274e:	6f e0       	ldi	r22, 0x0F	; 15
    2750:	87 e5       	ldi	r24, 0x57	; 87
    2752:	93 e0       	ldi	r25, 0x03	; 3
    2754:	0e 94 f7 05 	call	0xbee	; 0xbee <gfx_mono_lcd_uc1608_put_page>
    2758:	11 c0       	rjmp	.+34     	; 0x277c <lcd_animation_loop+0x154>
    275a:	9c 01       	movw	r18, r24
    275c:	24 5c       	subi	r18, 0xC4	; 196
    275e:	3f 4f       	sbci	r19, 0xFF	; 255
    2760:	2c 33       	cpi	r18, 0x3C	; 60
    2762:	31 05       	cpc	r19, r1
    2764:	58 f4       	brcc	.+22     	; 0x277c <lcd_animation_loop+0x154>
    2766:	2d e3       	ldi	r18, 0x3D	; 61
    2768:	28 0f       	add	r18, r24
    276a:	40 e0       	ldi	r20, 0x00	; 0
    276c:	6f e0       	ldi	r22, 0x0F	; 15
    276e:	e7 e5       	ldi	r30, 0x57	; 87
    2770:	f3 e0       	ldi	r31, 0x03	; 3
    2772:	e8 1b       	sub	r30, r24
    2774:	f9 0b       	sbc	r31, r25
    2776:	cf 01       	movw	r24, r30
    2778:	0e 94 f7 05 	call	0xbee	; 0xbee <gfx_mono_lcd_uc1608_put_page>
    277c:	20 91 d5 03 	lds	r18, 0x03D5	; 0x8003d5 <s_animation_time_last_temp>
    2780:	30 91 d6 03 	lds	r19, 0x03D6	; 0x8003d6 <s_animation_time_last_temp+0x1>
    2784:	40 91 d7 03 	lds	r20, 0x03D7	; 0x8003d7 <s_animation_time_last_temp+0x2>
    2788:	50 91 d8 03 	lds	r21, 0x03D8	; 0x8003d8 <s_animation_time_last_temp+0x3>
    278c:	c3 01       	movw	r24, r6
    278e:	b2 01       	movw	r22, r4
    2790:	0e 94 a9 1f 	call	0x3f52	; 0x3f52 <__subsf3>
    2794:	20 e0       	ldi	r18, 0x00	; 0
    2796:	30 e0       	ldi	r19, 0x00	; 0
    2798:	40 e0       	ldi	r20, 0x00	; 0
    279a:	5f e3       	ldi	r21, 0x3F	; 63
    279c:	0e 94 b0 21 	call	0x4360	; 0x4360 <__gesf2>
    27a0:	87 fd       	sbrc	r24, 7
    27a2:	c3 c0       	rjmp	.+390    	; 0x292a <lcd_animation_loop+0x302>
    27a4:	40 92 d5 03 	sts	0x03D5, r4	; 0x8003d5 <s_animation_time_last_temp>
    27a8:	50 92 d6 03 	sts	0x03D6, r5	; 0x8003d6 <s_animation_time_last_temp+0x1>
    27ac:	60 92 d7 03 	sts	0x03D7, r6	; 0x8003d7 <s_animation_time_last_temp+0x2>
    27b0:	70 92 d8 03 	sts	0x03D8, r7	; 0x8003d8 <s_animation_time_last_temp+0x3>
    27b4:	0e 94 98 1d 	call	0x3b30	; 0x3b30 <task>
    27b8:	61 d8       	rcall	.-3902   	; 0x187c <cpu_irq_save>
    27ba:	40 90 79 04 	lds	r4, 0x0479	; 0x800479 <g_temp>
    27be:	50 90 7a 04 	lds	r5, 0x047A	; 0x80047a <g_temp+0x1>
    27c2:	60 90 7b 04 	lds	r6, 0x047B	; 0x80047b <g_temp+0x2>
    27c6:	70 90 7c 04 	lds	r7, 0x047C	; 0x80047c <g_temp+0x3>
    27ca:	8f bf       	out	0x3f, r24	; 63
    27cc:	20 e0       	ldi	r18, 0x00	; 0
    27ce:	30 e0       	ldi	r19, 0x00	; 0
    27d0:	a9 01       	movw	r20, r18
    27d2:	c3 01       	movw	r24, r6
    27d4:	b2 01       	movw	r22, r4
    27d6:	0e 94 0e 20 	call	0x401c	; 0x401c <__cmpsf2>
    27da:	87 ff       	sbrs	r24, 7
    27dc:	03 c0       	rjmp	.+6      	; 0x27e4 <lcd_animation_loop+0x1bc>
    27de:	41 2c       	mov	r4, r1
    27e0:	51 2c       	mov	r5, r1
    27e2:	32 01       	movw	r6, r4
    27e4:	20 91 52 03 	lds	r18, 0x0352	; 0x800352 <t_last.3614>
    27e8:	30 91 53 03 	lds	r19, 0x0353	; 0x800353 <t_last.3614+0x1>
    27ec:	40 91 54 03 	lds	r20, 0x0354	; 0x800354 <t_last.3614+0x2>
    27f0:	50 91 55 03 	lds	r21, 0x0355	; 0x800355 <t_last.3614+0x3>
    27f4:	c3 01       	movw	r24, r6
    27f6:	b2 01       	movw	r22, r4
    27f8:	0e 94 a9 1f 	call	0x3f52	; 0x3f52 <__subsf3>
    27fc:	9f 77       	andi	r25, 0x7F	; 127
    27fe:	2a e0       	ldi	r18, 0x0A	; 10
    2800:	37 ed       	ldi	r19, 0xD7	; 215
    2802:	43 e2       	ldi	r20, 0x23	; 35
    2804:	5c e3       	ldi	r21, 0x3C	; 60
    2806:	0e 94 0e 20 	call	0x401c	; 0x401c <__cmpsf2>
    280a:	87 fd       	sbrc	r24, 7
    280c:	37 c0       	rjmp	.+110    	; 0x287c <lcd_animation_loop+0x254>
    280e:	40 92 52 03 	sts	0x0352, r4	; 0x800352 <t_last.3614>
    2812:	50 92 53 03 	sts	0x0353, r5	; 0x800353 <t_last.3614+0x1>
    2816:	60 92 54 03 	sts	0x0354, r6	; 0x800354 <t_last.3614+0x2>
    281a:	70 92 55 03 	sts	0x0355, r7	; 0x800355 <t_last.3614+0x3>
    281e:	20 e0       	ldi	r18, 0x00	; 0
    2820:	30 e0       	ldi	r19, 0x00	; 0
    2822:	48 ec       	ldi	r20, 0xC8	; 200
    2824:	52 e4       	ldi	r21, 0x42	; 66
    2826:	c3 01       	movw	r24, r6
    2828:	b2 01       	movw	r22, r4
    282a:	0e 94 b4 21 	call	0x4368	; 0x4368 <__mulsf3>
    282e:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__fixsfsi>
    2832:	cb 01       	movw	r24, r22
    2834:	b4 01       	movw	r22, r8
    2836:	0e 94 37 22 	call	0x446e	; 0x446e <__divmodhi4>
    283a:	9f 93       	push	r25
    283c:	8f 93       	push	r24
    283e:	c3 01       	movw	r24, r6
    2840:	b2 01       	movw	r22, r4
    2842:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__fixsfsi>
    2846:	7f 93       	push	r23
    2848:	6f 93       	push	r22
    284a:	df 92       	push	r13
    284c:	cf 92       	push	r12
    284e:	1f 92       	push	r1
    2850:	f0 e3       	ldi	r31, 0x30	; 48
    2852:	ff 93       	push	r31
    2854:	df 93       	push	r29
    2856:	cf 93       	push	r28
    2858:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    285c:	23 e0       	ldi	r18, 0x03	; 3
    285e:	31 e0       	ldi	r19, 0x01	; 1
    2860:	49 e6       	ldi	r20, 0x69	; 105
    2862:	60 ea       	ldi	r22, 0xA0	; 160
    2864:	8c ed       	ldi	r24, 0xDC	; 220
    2866:	93 e0       	ldi	r25, 0x03	; 3
    2868:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <gfx_mono_draw_string>
    286c:	ed b7       	in	r30, 0x3d	; 61
    286e:	fe b7       	in	r31, 0x3e	; 62
    2870:	3a 96       	adiw	r30, 0x0a	; 10
    2872:	0f b6       	in	r0, 0x3f	; 63
    2874:	f8 94       	cli
    2876:	fe bf       	out	0x3e, r31	; 62
    2878:	0f be       	out	0x3f, r0	; 63
    287a:	ed bf       	out	0x3d, r30	; 61
    287c:	0e 94 3e 0c 	call	0x187c	; 0x187c <cpu_irq_save>
    2880:	40 90 81 04 	lds	r4, 0x0481	; 0x800481 <g_adc_light>
    2884:	50 90 82 04 	lds	r5, 0x0482	; 0x800482 <g_adc_light+0x1>
    2888:	60 90 83 04 	lds	r6, 0x0483	; 0x800483 <g_adc_light+0x2>
    288c:	70 90 84 04 	lds	r7, 0x0484	; 0x800484 <g_adc_light+0x3>
    2890:	8f bf       	out	0x3f, r24	; 63
    2892:	20 91 4e 03 	lds	r18, 0x034E	; 0x80034e <l_last.3620>
    2896:	30 91 4f 03 	lds	r19, 0x034F	; 0x80034f <l_last.3620+0x1>
    289a:	40 91 50 03 	lds	r20, 0x0350	; 0x800350 <l_last.3620+0x2>
    289e:	50 91 51 03 	lds	r21, 0x0351	; 0x800351 <l_last.3620+0x3>
    28a2:	c3 01       	movw	r24, r6
    28a4:	b2 01       	movw	r22, r4
    28a6:	0e 94 a9 1f 	call	0x3f52	; 0x3f52 <__subsf3>
    28aa:	9f 77       	andi	r25, 0x7F	; 127
    28ac:	2d ec       	ldi	r18, 0xCD	; 205
    28ae:	3c ec       	ldi	r19, 0xCC	; 204
    28b0:	4c ec       	ldi	r20, 0xCC	; 204
    28b2:	5d e3       	ldi	r21, 0x3D	; 61
    28b4:	0e 94 0e 20 	call	0x401c	; 0x401c <__cmpsf2>
    28b8:	87 fd       	sbrc	r24, 7
    28ba:	37 c0       	rjmp	.+110    	; 0x292a <lcd_animation_loop+0x302>
    28bc:	40 92 4e 03 	sts	0x034E, r4	; 0x80034e <l_last.3620>
    28c0:	50 92 4f 03 	sts	0x034F, r5	; 0x80034f <l_last.3620+0x1>
    28c4:	60 92 50 03 	sts	0x0350, r6	; 0x800350 <l_last.3620+0x2>
    28c8:	70 92 51 03 	sts	0x0351, r7	; 0x800351 <l_last.3620+0x3>
    28cc:	20 e0       	ldi	r18, 0x00	; 0
    28ce:	30 e0       	ldi	r19, 0x00	; 0
    28d0:	40 e2       	ldi	r20, 0x20	; 32
    28d2:	51 e4       	ldi	r21, 0x41	; 65
    28d4:	c3 01       	movw	r24, r6
    28d6:	b2 01       	movw	r22, r4
    28d8:	0e 94 b4 21 	call	0x4368	; 0x4368 <__mulsf3>
    28dc:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__fixsfsi>
    28e0:	cb 01       	movw	r24, r22
    28e2:	b5 01       	movw	r22, r10
    28e4:	0e 94 37 22 	call	0x446e	; 0x446e <__divmodhi4>
    28e8:	9f 93       	push	r25
    28ea:	8f 93       	push	r24
    28ec:	c3 01       	movw	r24, r6
    28ee:	b2 01       	movw	r22, r4
    28f0:	0e 94 7a 20 	call	0x40f4	; 0x40f4 <__fixsfsi>
    28f4:	7f 93       	push	r23
    28f6:	6f 93       	push	r22
    28f8:	ff 92       	push	r15
    28fa:	ef 92       	push	r14
    28fc:	1f 92       	push	r1
    28fe:	f0 e3       	ldi	r31, 0x30	; 48
    2900:	ff 93       	push	r31
    2902:	df 93       	push	r29
    2904:	cf 93       	push	r28
    2906:	0e 94 62 22 	call	0x44c4	; 0x44c4 <snprintf>
    290a:	23 e0       	ldi	r18, 0x03	; 3
    290c:	31 e0       	ldi	r19, 0x01	; 1
    290e:	4f e5       	ldi	r20, 0x5F	; 95
    2910:	60 ea       	ldi	r22, 0xA0	; 160
    2912:	8c ed       	ldi	r24, 0xDC	; 220
    2914:	93 e0       	ldi	r25, 0x03	; 3
    2916:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <gfx_mono_draw_string>
    291a:	ed b7       	in	r30, 0x3d	; 61
    291c:	fe b7       	in	r31, 0x3e	; 62
    291e:	3a 96       	adiw	r30, 0x0a	; 10
    2920:	0f b6       	in	r0, 0x3f	; 63
    2922:	f8 94       	cli
    2924:	fe bf       	out	0x3e, r31	; 62
    2926:	0f be       	out	0x3f, r0	; 63
    2928:	ed bf       	out	0x3d, r30	; 61
    292a:	20 91 4c 03 	lds	r18, 0x034C	; 0x80034c <loop.3605>
    292e:	30 91 4d 03 	lds	r19, 0x034D	; 0x80034d <loop.3605+0x1>
    2932:	f9 01       	movw	r30, r18
    2934:	31 96       	adiw	r30, 0x01	; 1
    2936:	f0 93 4d 03 	sts	0x034D, r31	; 0x80034d <loop.3605+0x1>
    293a:	e0 93 4c 03 	sts	0x034C, r30	; 0x80034c <loop.3605>
    293e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    2942:	22 31       	cpi	r18, 0x12	; 18
    2944:	31 05       	cpc	r19, r1
    2946:	6c f4       	brge	.+26     	; 0x2962 <lcd_animation_loop+0x33a>
    2948:	61 2f       	mov	r22, r17
    294a:	0e 94 17 22 	call	0x442e	; 0x442e <__udivmodqi4>
    294e:	2b e1       	ldi	r18, 0x1B	; 27
    2950:	2e 1b       	sub	r18, r30
    2952:	6a e0       	ldi	r22, 0x0A	; 10
    2954:	6e 0f       	add	r22, r30
    2956:	09 2f       	mov	r16, r25
    2958:	4f ee       	ldi	r20, 0xEF	; 239
    295a:	80 e0       	ldi	r24, 0x00	; 0
    295c:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    2960:	1d c0       	rjmp	.+58     	; 0x299c <lcd_animation_loop+0x374>
    2962:	e2 30       	cpi	r30, 0x02	; 2
    2964:	21 e0       	ldi	r18, 0x01	; 1
    2966:	f2 07       	cpc	r31, r18
    2968:	6c f4       	brge	.+26     	; 0x2984 <lcd_animation_loop+0x35c>
    296a:	61 2f       	mov	r22, r17
    296c:	0e 94 17 22 	call	0x442e	; 0x442e <__udivmodqi4>
    2970:	41 e0       	ldi	r20, 0x01	; 1
    2972:	4e 1b       	sub	r20, r30
    2974:	09 2f       	mov	r16, r25
    2976:	2a e0       	ldi	r18, 0x0A	; 10
    2978:	6b e1       	ldi	r22, 0x1B	; 27
    297a:	8e ee       	ldi	r24, 0xEE	; 238
    297c:	8e 0f       	add	r24, r30
    297e:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    2982:	0c c0       	rjmp	.+24     	; 0x299c <lcd_animation_loop+0x374>
    2984:	10 92 4d 03 	sts	0x034D, r1	; 0x80034d <loop.3605+0x1>
    2988:	10 92 4c 03 	sts	0x034C, r1	; 0x80034c <loop.3605>
    298c:	8f 5f       	subi	r24, 0xFF	; 255
    298e:	83 30       	cpi	r24, 0x03	; 3
    2990:	18 f4       	brcc	.+6      	; 0x2998 <lcd_animation_loop+0x370>
    2992:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    2996:	02 c0       	rjmp	.+4      	; 0x299c <lcd_animation_loop+0x374>
    2998:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
    299c:	0e 94 3e 0c 	call	0x187c	; 0x187c <cpu_irq_save>
    29a0:	90 91 72 04 	lds	r25, 0x0472	; 0x800472 <g_status>
    29a4:	91 70       	andi	r25, 0x01	; 1
    29a6:	8f bf       	out	0x3f, r24	; 63
    29a8:	6b ce       	rjmp	.-810    	; 0x2680 <lcd_animation_loop+0x58>
    29aa:	0e 94 3e 0c 	call	0x187c	; 0x187c <cpu_irq_save>
    29ae:	90 91 72 04 	lds	r25, 0x0472	; 0x800472 <g_status>
    29b2:	9e 7f       	andi	r25, 0xFE	; 254
    29b4:	90 93 72 04 	sts	0x0472, r25	; 0x800472 <g_status>
    29b8:	8f bf       	out	0x3f, r24	; 63
    29ba:	df 91       	pop	r29
    29bc:	cf 91       	pop	r28
    29be:	1f 91       	pop	r17
    29c0:	0f 91       	pop	r16
    29c2:	ff 90       	pop	r15
    29c4:	ef 90       	pop	r14
    29c6:	df 90       	pop	r13
    29c8:	cf 90       	pop	r12
    29ca:	bf 90       	pop	r11
    29cc:	af 90       	pop	r10
    29ce:	9f 90       	pop	r9
    29d0:	8f 90       	pop	r8
    29d2:	7f 90       	pop	r7
    29d4:	6f 90       	pop	r6
    29d6:	5f 90       	pop	r5
    29d8:	4f 90       	pop	r4
    29da:	3f 90       	pop	r3
    29dc:	2f 90       	pop	r2
    29de:	08 95       	ret

000029e0 <lcd_test>:
    29e0:	ef 92       	push	r14
    29e2:	ff 92       	push	r15
    29e4:	0f 93       	push	r16
    29e6:	1f 93       	push	r17
    29e8:	cf 93       	push	r28
    29ea:	c8 2f       	mov	r28, r24
    29ec:	0e 94 3e 0c 	call	0x187c	; 0x187c <cpu_irq_save>
    29f0:	90 91 72 04 	lds	r25, 0x0472	; 0x800472 <g_status>
    29f4:	9e 7f       	andi	r25, 0xFE	; 254
    29f6:	9d 7f       	andi	r25, 0xFD	; 253
    29f8:	90 93 72 04 	sts	0x0472, r25	; 0x800472 <g_status>
    29fc:	8f bf       	out	0x3f, r24	; 63
    29fe:	c0 fd       	sbrc	r28, 0
    2a00:	03 c0       	rjmp	.+6      	; 0x2a08 <lcd_test+0x28>
    2a02:	c1 ff       	sbrs	r28, 1
    2a04:	2a c0       	rjmp	.+84     	; 0x2a5a <lcd_test+0x7a>
    2a06:	08 c0       	rjmp	.+16     	; 0x2a18 <lcd_test+0x38>
    2a08:	10 e0       	ldi	r17, 0x00	; 0
    2a0a:	81 2f       	mov	r24, r17
    2a0c:	0e 94 6f 0c 	call	0x18de	; 0x18de <lcd_bus_write_ram>
    2a10:	1f 5f       	subi	r17, 0xFF	; 255
    2a12:	10 3f       	cpi	r17, 0xF0	; 240
    2a14:	d1 f7       	brne	.-12     	; 0x2a0a <lcd_test+0x2a>
    2a16:	f5 cf       	rjmp	.-22     	; 0x2a02 <lcd_test+0x22>
    2a18:	82 eb       	ldi	r24, 0xB2	; 178
    2a1a:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <lcd_bus_write_cmd>
    2a1e:	81 e0       	ldi	r24, 0x01	; 1
    2a20:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <s_lcd_ram_read_nonvalid>
    2a24:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <lcd_cr>
    2a28:	00 e0       	ldi	r16, 0x00	; 0
    2a2a:	10 e0       	ldi	r17, 0x00	; 0
    2a2c:	87 e0       	ldi	r24, 0x07	; 7
    2a2e:	e8 2e       	mov	r14, r24
    2a30:	f1 2c       	mov	r15, r1
    2a32:	c8 01       	movw	r24, r16
    2a34:	b7 01       	movw	r22, r14
    2a36:	0e 94 37 22 	call	0x446e	; 0x446e <__divmodhi4>
    2a3a:	89 2b       	or	r24, r25
    2a3c:	19 f4       	brne	.+6      	; 0x2a44 <lcd_test+0x64>
    2a3e:	80 e0       	ldi	r24, 0x00	; 0
    2a40:	0e 94 6f 0c 	call	0x18de	; 0x18de <lcd_bus_write_ram>
    2a44:	f8 01       	movw	r30, r16
    2a46:	e2 5e       	subi	r30, 0xE2	; 226
    2a48:	fb 4f       	sbci	r31, 0xFB	; 251
    2a4a:	84 91       	lpm	r24, Z
    2a4c:	0e 94 6f 0c 	call	0x18de	; 0x18de <lcd_bus_write_ram>
    2a50:	0f 5f       	subi	r16, 0xFF	; 255
    2a52:	1f 4f       	sbci	r17, 0xFF	; 255
    2a54:	00 3f       	cpi	r16, 0xF0	; 240
    2a56:	11 05       	cpc	r17, r1
    2a58:	61 f7       	brne	.-40     	; 0x2a32 <lcd_test+0x52>
    2a5a:	c2 ff       	sbrs	r28, 2
    2a5c:	2d c0       	rjmp	.+90     	; 0x2ab8 <lcd_test+0xd8>
    2a5e:	41 e0       	ldi	r20, 0x01	; 1
    2a60:	68 e2       	ldi	r22, 0x28	; 40
    2a62:	84 e0       	ldi	r24, 0x04	; 4
    2a64:	0e 94 64 06 	call	0xcc8	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
    2a68:	41 e0       	ldi	r20, 0x01	; 1
    2a6a:	69 e2       	ldi	r22, 0x29	; 41
    2a6c:	85 e0       	ldi	r24, 0x05	; 5
    2a6e:	0e 94 64 06 	call	0xcc8	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
    2a72:	41 e0       	ldi	r20, 0x01	; 1
    2a74:	6a e2       	ldi	r22, 0x2A	; 42
    2a76:	86 e0       	ldi	r24, 0x06	; 6
    2a78:	0e 94 64 06 	call	0xcc8	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
    2a7c:	41 e0       	ldi	r20, 0x01	; 1
    2a7e:	6b e2       	ldi	r22, 0x2B	; 43
    2a80:	87 e0       	ldi	r24, 0x07	; 7
    2a82:	0e 94 64 06 	call	0xcc8	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
    2a86:	41 e0       	ldi	r20, 0x01	; 1
    2a88:	6c e2       	ldi	r22, 0x2C	; 44
    2a8a:	86 e0       	ldi	r24, 0x06	; 6
    2a8c:	0e 94 64 06 	call	0xcc8	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
    2a90:	41 e0       	ldi	r20, 0x01	; 1
    2a92:	6d e2       	ldi	r22, 0x2D	; 45
    2a94:	85 e0       	ldi	r24, 0x05	; 5
    2a96:	0e 94 64 06 	call	0xcc8	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
    2a9a:	41 e0       	ldi	r20, 0x01	; 1
    2a9c:	6e e2       	ldi	r22, 0x2E	; 46
    2a9e:	86 e0       	ldi	r24, 0x06	; 6
    2aa0:	0e 94 64 06 	call	0xcc8	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
    2aa4:	41 e0       	ldi	r20, 0x01	; 1
    2aa6:	6f e2       	ldi	r22, 0x2F	; 47
    2aa8:	87 e0       	ldi	r24, 0x07	; 7
    2aaa:	0e 94 64 06 	call	0xcc8	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
    2aae:	41 e0       	ldi	r20, 0x01	; 1
    2ab0:	60 e3       	ldi	r22, 0x30	; 48
    2ab2:	88 e0       	ldi	r24, 0x08	; 8
    2ab4:	0e 94 64 06 	call	0xcc8	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel>
    2ab8:	c3 ff       	sbrs	r28, 3
    2aba:	07 c0       	rjmp	.+14     	; 0x2aca <lcd_test+0xea>
    2abc:	01 e0       	ldi	r16, 0x01	; 1
    2abe:	2f e1       	ldi	r18, 0x1F	; 31
    2ac0:	4f ee       	ldi	r20, 0xEF	; 239
    2ac2:	60 e1       	ldi	r22, 0x10	; 16
    2ac4:	80 e0       	ldi	r24, 0x00	; 0
    2ac6:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    2aca:	c4 ff       	sbrs	r28, 4
    2acc:	0d c0       	rjmp	.+26     	; 0x2ae8 <lcd_test+0x108>
    2ace:	01 e0       	ldi	r16, 0x01	; 1
    2ad0:	28 e2       	ldi	r18, 0x28	; 40
    2ad2:	48 e2       	ldi	r20, 0x28	; 40
    2ad4:	60 e3       	ldi	r22, 0x30	; 48
    2ad6:	86 e4       	ldi	r24, 0x46	; 70
    2ad8:	0e 94 6f 04 	call	0x8de	; 0x8de <gfx_mono_generic_draw_rect>
    2adc:	28 e2       	ldi	r18, 0x28	; 40
    2ade:	48 e2       	ldi	r20, 0x28	; 40
    2ae0:	60 e3       	ldi	r22, 0x30	; 48
    2ae2:	8a ea       	ldi	r24, 0xAA	; 170
    2ae4:	0e 94 92 04 	call	0x924	; 0x924 <gfx_mono_generic_draw_filled_rect>
    2ae8:	c5 ff       	sbrs	r28, 5
    2aea:	0d c0       	rjmp	.+26     	; 0x2b06 <lcd_test+0x126>
    2aec:	0f ef       	ldi	r16, 0xFF	; 255
    2aee:	21 e0       	ldi	r18, 0x01	; 1
    2af0:	4a e0       	ldi	r20, 0x0A	; 10
    2af2:	60 e5       	ldi	r22, 0x50	; 80
    2af4:	8a e0       	ldi	r24, 0x0A	; 10
    2af6:	0e 94 ac 04 	call	0x958	; 0x958 <gfx_mono_generic_draw_circle>
    2afa:	21 e0       	ldi	r18, 0x01	; 1
    2afc:	4a e0       	ldi	r20, 0x0A	; 10
    2afe:	60 e5       	ldi	r22, 0x50	; 80
    2b00:	88 e2       	ldi	r24, 0x28	; 40
    2b02:	0e 94 5a 05 	call	0xab4	; 0xab4 <gfx_mono_generic_draw_filled_circle>
    2b06:	c6 ff       	sbrs	r28, 6
    2b08:	08 c0       	rjmp	.+16     	; 0x2b1a <lcd_test+0x13a>
    2b0a:	23 e0       	ldi	r18, 0x03	; 3
    2b0c:	31 e0       	ldi	r19, 0x01	; 1
    2b0e:	40 e2       	ldi	r20, 0x20	; 32
    2b10:	66 e4       	ldi	r22, 0x46	; 70
    2b12:	8f e0       	ldi	r24, 0x0F	; 15
    2b14:	93 e0       	ldi	r25, 0x03	; 3
    2b16:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <gfx_mono_draw_string>
    2b1a:	c7 ff       	sbrs	r28, 7
    2b1c:	0f c0       	rjmp	.+30     	; 0x2b3c <lcd_test+0x15c>
    2b1e:	04 dd       	rcall	.-1528   	; 0x2528 <lcd_animation_prepare>
    2b20:	0e 94 3e 0c 	call	0x187c	; 0x187c <cpu_irq_save>
    2b24:	90 91 72 04 	lds	r25, 0x0472	; 0x800472 <g_status>
    2b28:	91 60       	ori	r25, 0x01	; 1
    2b2a:	90 93 72 04 	sts	0x0472, r25	; 0x800472 <g_status>
    2b2e:	8f bf       	out	0x3f, r24	; 63
    2b30:	cf 91       	pop	r28
    2b32:	1f 91       	pop	r17
    2b34:	0f 91       	pop	r16
    2b36:	ff 90       	pop	r15
    2b38:	ef 90       	pop	r14
    2b3a:	76 cd       	rjmp	.-1300   	; 0x2628 <lcd_animation_loop>
    2b3c:	cf 91       	pop	r28
    2b3e:	1f 91       	pop	r17
    2b40:	0f 91       	pop	r16
    2b42:	ff 90       	pop	r15
    2b44:	ef 90       	pop	r14
    2b46:	08 95       	ret

00002b48 <isr_lcd_write>:
    2b48:	0f 93       	push	r16
    2b4a:	1f 93       	push	r17
    2b4c:	cf 93       	push	r28
    2b4e:	df 93       	push	r29
    2b50:	00 97       	sbiw	r24, 0x00	; 0
    2b52:	a9 f0       	breq	.+42     	; 0x2b7e <isr_lcd_write+0x36>
    2b54:	04 2f       	mov	r16, r20
    2b56:	16 2f       	mov	r17, r22
    2b58:	ec 01       	movw	r28, r24
    2b5a:	6f ef       	ldi	r22, 0xFF	; 255
    2b5c:	70 e0       	ldi	r23, 0x00	; 0
    2b5e:	0e 94 57 22 	call	0x44ae	; 0x44ae <strnlen>
    2b62:	81 50       	subi	r24, 0x01	; 1
    2b64:	8e 3f       	cpi	r24, 0xFE	; 254
    2b66:	58 f4       	brcc	.+22     	; 0x2b7e <isr_lcd_write+0x36>
    2b68:	23 e0       	ldi	r18, 0x03	; 3
    2b6a:	31 e0       	ldi	r19, 0x01	; 1
    2b6c:	40 2f       	mov	r20, r16
    2b6e:	61 2f       	mov	r22, r17
    2b70:	ce 01       	movw	r24, r28
    2b72:	df 91       	pop	r29
    2b74:	cf 91       	pop	r28
    2b76:	1f 91       	pop	r17
    2b78:	0f 91       	pop	r16
    2b7a:	0c 94 d9 06 	jmp	0xdb2	; 0xdb2 <gfx_mono_draw_string>
    2b7e:	df 91       	pop	r29
    2b80:	cf 91       	pop	r28
    2b82:	1f 91       	pop	r17
    2b84:	0f 91       	pop	r16
    2b86:	08 95       	ret

00002b88 <lcd_show_new_smartlcd_data>:
    2b88:	df 92       	push	r13
    2b8a:	ef 92       	push	r14
    2b8c:	ff 92       	push	r15
    2b8e:	0f 93       	push	r16
    2b90:	1f 93       	push	r17
    2b92:	cf 93       	push	r28
    2b94:	df 93       	push	r29
    2b96:	cd b7       	in	r28, 0x3d	; 61
    2b98:	de b7       	in	r29, 0x3e	; 62
    2b9a:	28 97       	sbiw	r28, 0x08	; 8
    2b9c:	0f b6       	in	r0, 0x3f	; 63
    2b9e:	f8 94       	cli
    2ba0:	de bf       	out	0x3e, r29	; 62
    2ba2:	0f be       	out	0x3f, r0	; 63
    2ba4:	cd bf       	out	0x3d, r28	; 61
    2ba6:	0e 94 3e 0c 	call	0x187c	; 0x187c <cpu_irq_save>
    2baa:	f8 2e       	mov	r15, r24
    2bac:	10 91 35 04 	lds	r17, 0x0435	; 0x800435 <g_showData+0x2>
    2bb0:	12 33       	cpi	r17, 0x32	; 50
    2bb2:	09 f4       	brne	.+2      	; 0x2bb6 <lcd_show_new_smartlcd_data+0x2e>
    2bb4:	70 c0       	rjmp	.+224    	; 0x2c96 <lcd_show_new_smartlcd_data+0x10e>
    2bb6:	d8 f4       	brcc	.+54     	; 0x2bee <lcd_show_new_smartlcd_data+0x66>
    2bb8:	14 31       	cpi	r17, 0x14	; 20
    2bba:	09 f4       	brne	.+2      	; 0x2bbe <lcd_show_new_smartlcd_data+0x36>
    2bbc:	44 c0       	rjmp	.+136    	; 0x2c46 <lcd_show_new_smartlcd_data+0xbe>
    2bbe:	48 f4       	brcc	.+18     	; 0x2bd2 <lcd_show_new_smartlcd_data+0x4a>
    2bc0:	10 31       	cpi	r17, 0x10	; 16
    2bc2:	09 f0       	breq	.+2      	; 0x2bc6 <lcd_show_new_smartlcd_data+0x3e>
    2bc4:	9d c0       	rjmp	.+314    	; 0x2d00 <lcd_show_new_smartlcd_data+0x178>
    2bc6:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <lcd_cls>
    2bca:	10 92 35 04 	sts	0x0435, r1	; 0x800435 <g_showData+0x2>
    2bce:	ff be       	out	0x3f, r15	; 63
    2bd0:	99 c0       	rjmp	.+306    	; 0x2d04 <lcd_show_new_smartlcd_data+0x17c>
    2bd2:	10 32       	cpi	r17, 0x20	; 32
    2bd4:	09 f4       	brne	.+2      	; 0x2bd8 <lcd_show_new_smartlcd_data+0x50>
    2bd6:	3f c0       	rjmp	.+126    	; 0x2c56 <lcd_show_new_smartlcd_data+0xce>
    2bd8:	10 33       	cpi	r17, 0x30	; 48
    2bda:	09 f0       	breq	.+2      	; 0x2bde <lcd_show_new_smartlcd_data+0x56>
    2bdc:	91 c0       	rjmp	.+290    	; 0x2d00 <lcd_show_new_smartlcd_data+0x178>
    2bde:	20 91 36 04 	lds	r18, 0x0436	; 0x800436 <g_showData+0x3>
    2be2:	a7 e3       	ldi	r26, 0x37	; 55
    2be4:	b4 e0       	ldi	r27, 0x04	; 4
    2be6:	ce 01       	movw	r24, r28
    2be8:	01 96       	adiw	r24, 0x01	; 1
    2bea:	fc 01       	movw	r30, r24
    2bec:	40 c0       	rjmp	.+128    	; 0x2c6e <lcd_show_new_smartlcd_data+0xe6>
    2bee:	16 33       	cpi	r17, 0x36	; 54
    2bf0:	09 f4       	brne	.+2      	; 0x2bf4 <lcd_show_new_smartlcd_data+0x6c>
    2bf2:	67 c0       	rjmp	.+206    	; 0x2cc2 <lcd_show_new_smartlcd_data+0x13a>
    2bf4:	98 f4       	brcc	.+38     	; 0x2c1c <lcd_show_new_smartlcd_data+0x94>
    2bf6:	14 33       	cpi	r17, 0x34	; 52
    2bf8:	09 f0       	breq	.+2      	; 0x2bfc <lcd_show_new_smartlcd_data+0x74>
    2bfa:	82 c0       	rjmp	.+260    	; 0x2d00 <lcd_show_new_smartlcd_data+0x178>
    2bfc:	00 91 46 04 	lds	r16, 0x0446	; 0x800446 <g_showData+0x13>
    2c00:	20 91 37 04 	lds	r18, 0x0437	; 0x800437 <g_showData+0x4>
    2c04:	40 91 36 04 	lds	r20, 0x0436	; 0x800436 <g_showData+0x3>
    2c08:	60 91 48 04 	lds	r22, 0x0448	; 0x800448 <g_showData+0x15>
    2c0c:	80 91 47 04 	lds	r24, 0x0447	; 0x800447 <g_showData+0x14>
    2c10:	0e 94 6f 04 	call	0x8de	; 0x8de <gfx_mono_generic_draw_rect>
    2c14:	10 92 35 04 	sts	0x0435, r1	; 0x800435 <g_showData+0x2>
    2c18:	ff be       	out	0x3f, r15	; 63
    2c1a:	74 c0       	rjmp	.+232    	; 0x2d04 <lcd_show_new_smartlcd_data+0x17c>
    2c1c:	18 33       	cpi	r17, 0x38	; 56
    2c1e:	09 f4       	brne	.+2      	; 0x2c22 <lcd_show_new_smartlcd_data+0x9a>
    2c20:	60 c0       	rjmp	.+192    	; 0x2ce2 <lcd_show_new_smartlcd_data+0x15a>
    2c22:	1a 33       	cpi	r17, 0x3A	; 58
    2c24:	09 f0       	breq	.+2      	; 0x2c28 <lcd_show_new_smartlcd_data+0xa0>
    2c26:	6c c0       	rjmp	.+216    	; 0x2d00 <lcd_show_new_smartlcd_data+0x178>
    2c28:	0f ef       	ldi	r16, 0xFF	; 255
    2c2a:	20 91 46 04 	lds	r18, 0x0446	; 0x800446 <g_showData+0x13>
    2c2e:	40 91 36 04 	lds	r20, 0x0436	; 0x800436 <g_showData+0x3>
    2c32:	60 91 48 04 	lds	r22, 0x0448	; 0x800448 <g_showData+0x15>
    2c36:	80 91 47 04 	lds	r24, 0x0447	; 0x800447 <g_showData+0x14>
    2c3a:	0e 94 5a 05 	call	0xab4	; 0xab4 <gfx_mono_generic_draw_filled_circle>
    2c3e:	10 92 35 04 	sts	0x0435, r1	; 0x800435 <g_showData+0x2>
    2c42:	ff be       	out	0x3f, r15	; 63
    2c44:	5f c0       	rjmp	.+190    	; 0x2d04 <lcd_show_new_smartlcd_data+0x17c>
    2c46:	80 91 36 04 	lds	r24, 0x0436	; 0x800436 <g_showData+0x3>
    2c4a:	80 93 46 04 	sts	0x0446, r24	; 0x800446 <g_showData+0x13>
    2c4e:	10 92 35 04 	sts	0x0435, r1	; 0x800435 <g_showData+0x2>
    2c52:	ff be       	out	0x3f, r15	; 63
    2c54:	57 c0       	rjmp	.+174    	; 0x2d04 <lcd_show_new_smartlcd_data+0x17c>
    2c56:	80 91 36 04 	lds	r24, 0x0436	; 0x800436 <g_showData+0x3>
    2c5a:	80 93 47 04 	sts	0x0447, r24	; 0x800447 <g_showData+0x14>
    2c5e:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <g_showData+0x4>
    2c62:	80 93 48 04 	sts	0x0448, r24	; 0x800448 <g_showData+0x15>
    2c66:	10 92 35 04 	sts	0x0435, r1	; 0x800435 <g_showData+0x2>
    2c6a:	ff be       	out	0x3f, r15	; 63
    2c6c:	4b c0       	rjmp	.+150    	; 0x2d04 <lcd_show_new_smartlcd_data+0x17c>
    2c6e:	3e 2f       	mov	r19, r30
    2c70:	38 1b       	sub	r19, r24
    2c72:	32 17       	cp	r19, r18
    2c74:	18 f4       	brcc	.+6      	; 0x2c7c <lcd_show_new_smartlcd_data+0xf4>
    2c76:	3d 91       	ld	r19, X+
    2c78:	31 93       	st	Z+, r19
    2c7a:	f9 cf       	rjmp	.-14     	; 0x2c6e <lcd_show_new_smartlcd_data+0xe6>
    2c7c:	fc 01       	movw	r30, r24
    2c7e:	e2 0f       	add	r30, r18
    2c80:	f1 1d       	adc	r31, r1
    2c82:	10 82       	st	Z, r1
    2c84:	40 91 48 04 	lds	r20, 0x0448	; 0x800448 <g_showData+0x15>
    2c88:	60 91 47 04 	lds	r22, 0x0447	; 0x800447 <g_showData+0x14>
    2c8c:	5d df       	rcall	.-326    	; 0x2b48 <isr_lcd_write>
    2c8e:	10 92 35 04 	sts	0x0435, r1	; 0x800435 <g_showData+0x2>
    2c92:	ff be       	out	0x3f, r15	; 63
    2c94:	37 c0       	rjmp	.+110    	; 0x2d04 <lcd_show_new_smartlcd_data+0x17c>
    2c96:	d0 90 36 04 	lds	r13, 0x0436	; 0x800436 <g_showData+0x3>
    2c9a:	e0 90 37 04 	lds	r14, 0x0437	; 0x800437 <g_showData+0x4>
    2c9e:	00 91 46 04 	lds	r16, 0x0446	; 0x800446 <g_showData+0x13>
    2ca2:	2e 2d       	mov	r18, r14
    2ca4:	4d 2d       	mov	r20, r13
    2ca6:	60 91 48 04 	lds	r22, 0x0448	; 0x800448 <g_showData+0x15>
    2caa:	80 91 47 04 	lds	r24, 0x0447	; 0x800447 <g_showData+0x14>
    2cae:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    2cb2:	d0 92 47 04 	sts	0x0447, r13	; 0x800447 <g_showData+0x14>
    2cb6:	e0 92 48 04 	sts	0x0448, r14	; 0x800448 <g_showData+0x15>
    2cba:	10 92 35 04 	sts	0x0435, r1	; 0x800435 <g_showData+0x2>
    2cbe:	ff be       	out	0x3f, r15	; 63
    2cc0:	21 c0       	rjmp	.+66     	; 0x2d04 <lcd_show_new_smartlcd_data+0x17c>
    2cc2:	00 91 46 04 	lds	r16, 0x0446	; 0x800446 <g_showData+0x13>
    2cc6:	20 91 37 04 	lds	r18, 0x0437	; 0x800437 <g_showData+0x4>
    2cca:	40 91 36 04 	lds	r20, 0x0436	; 0x800436 <g_showData+0x3>
    2cce:	60 91 48 04 	lds	r22, 0x0448	; 0x800448 <g_showData+0x15>
    2cd2:	80 91 47 04 	lds	r24, 0x0447	; 0x800447 <g_showData+0x14>
    2cd6:	0e 94 92 04 	call	0x924	; 0x924 <gfx_mono_generic_draw_filled_rect>
    2cda:	10 92 35 04 	sts	0x0435, r1	; 0x800435 <g_showData+0x2>
    2cde:	ff be       	out	0x3f, r15	; 63
    2ce0:	11 c0       	rjmp	.+34     	; 0x2d04 <lcd_show_new_smartlcd_data+0x17c>
    2ce2:	0f ef       	ldi	r16, 0xFF	; 255
    2ce4:	20 91 46 04 	lds	r18, 0x0446	; 0x800446 <g_showData+0x13>
    2ce8:	40 91 36 04 	lds	r20, 0x0436	; 0x800436 <g_showData+0x3>
    2cec:	60 91 48 04 	lds	r22, 0x0448	; 0x800448 <g_showData+0x15>
    2cf0:	80 91 47 04 	lds	r24, 0x0447	; 0x800447 <g_showData+0x14>
    2cf4:	0e 94 ac 04 	call	0x958	; 0x958 <gfx_mono_generic_draw_circle>
    2cf8:	10 92 35 04 	sts	0x0435, r1	; 0x800435 <g_showData+0x2>
    2cfc:	ff be       	out	0x3f, r15	; 63
    2cfe:	02 c0       	rjmp	.+4      	; 0x2d04 <lcd_show_new_smartlcd_data+0x17c>
    2d00:	ff be       	out	0x3f, r15	; 63
    2d02:	10 e0       	ldi	r17, 0x00	; 0
    2d04:	81 2f       	mov	r24, r17
    2d06:	28 96       	adiw	r28, 0x08	; 8
    2d08:	0f b6       	in	r0, 0x3f	; 63
    2d0a:	f8 94       	cli
    2d0c:	de bf       	out	0x3e, r29	; 62
    2d0e:	0f be       	out	0x3f, r0	; 63
    2d10:	cd bf       	out	0x3d, r28	; 61
    2d12:	df 91       	pop	r29
    2d14:	cf 91       	pop	r28
    2d16:	1f 91       	pop	r17
    2d18:	0f 91       	pop	r16
    2d1a:	ff 90       	pop	r15
    2d1c:	ef 90       	pop	r14
    2d1e:	df 90       	pop	r13
    2d20:	08 95       	ret

00002d22 <isr_smartlcd_cmd>:
    2d22:	80 93 35 04 	sts	0x0435, r24	; 0x800435 <g_showData+0x2>
    2d26:	08 95       	ret

00002d28 <isr_smartlcd_cmd_data1>:
    2d28:	e3 e3       	ldi	r30, 0x33	; 51
    2d2a:	f4 e0       	ldi	r31, 0x04	; 4
    2d2c:	82 83       	std	Z+2, r24	; 0x02
    2d2e:	63 83       	std	Z+3, r22	; 0x03
    2d30:	08 95       	ret

00002d32 <isr_smartlcd_cmd_data2>:
    2d32:	e3 e3       	ldi	r30, 0x33	; 51
    2d34:	f4 e0       	ldi	r31, 0x04	; 4
    2d36:	82 83       	std	Z+2, r24	; 0x02
    2d38:	63 83       	std	Z+3, r22	; 0x03
    2d3a:	44 83       	std	Z+4, r20	; 0x04
    2d3c:	08 95       	ret

00002d3e <isr_smartlcd_cmd_data3>:
    2d3e:	e3 e3       	ldi	r30, 0x33	; 51
    2d40:	f4 e0       	ldi	r31, 0x04	; 4
    2d42:	82 83       	std	Z+2, r24	; 0x02
    2d44:	63 83       	std	Z+3, r22	; 0x03
    2d46:	44 83       	std	Z+4, r20	; 0x04
    2d48:	25 83       	std	Z+5, r18	; 0x05
    2d4a:	08 95       	ret

00002d4c <isr_smartlcd_cmd_data4>:
    2d4c:	0f 93       	push	r16
    2d4e:	e3 e3       	ldi	r30, 0x33	; 51
    2d50:	f4 e0       	ldi	r31, 0x04	; 4
    2d52:	82 83       	std	Z+2, r24	; 0x02
    2d54:	63 83       	std	Z+3, r22	; 0x03
    2d56:	44 83       	std	Z+4, r20	; 0x04
    2d58:	25 83       	std	Z+5, r18	; 0x05
    2d5a:	06 83       	std	Z+6, r16	; 0x06
    2d5c:	0f 91       	pop	r16
    2d5e:	08 95       	ret

00002d60 <isr_smartlcd_cmd_data5>:
    2d60:	ef 92       	push	r14
    2d62:	0f 93       	push	r16
    2d64:	e3 e3       	ldi	r30, 0x33	; 51
    2d66:	f4 e0       	ldi	r31, 0x04	; 4
    2d68:	82 83       	std	Z+2, r24	; 0x02
    2d6a:	63 83       	std	Z+3, r22	; 0x03
    2d6c:	44 83       	std	Z+4, r20	; 0x04
    2d6e:	25 83       	std	Z+5, r18	; 0x05
    2d70:	06 83       	std	Z+6, r16	; 0x06
    2d72:	e7 82       	std	Z+7, r14	; 0x07
    2d74:	0f 91       	pop	r16
    2d76:	ef 90       	pop	r14
    2d78:	08 95       	ret

00002d7a <isr_smartlcd_cmd_data6>:
    2d7a:	cf 92       	push	r12
    2d7c:	ef 92       	push	r14
    2d7e:	0f 93       	push	r16
    2d80:	e3 e3       	ldi	r30, 0x33	; 51
    2d82:	f4 e0       	ldi	r31, 0x04	; 4
    2d84:	82 83       	std	Z+2, r24	; 0x02
    2d86:	63 83       	std	Z+3, r22	; 0x03
    2d88:	44 83       	std	Z+4, r20	; 0x04
    2d8a:	25 83       	std	Z+5, r18	; 0x05
    2d8c:	06 83       	std	Z+6, r16	; 0x06
    2d8e:	e7 82       	std	Z+7, r14	; 0x07
    2d90:	c0 86       	std	Z+8, r12	; 0x08
    2d92:	0f 91       	pop	r16
    2d94:	ef 90       	pop	r14
    2d96:	cf 90       	pop	r12
    2d98:	08 95       	ret

00002d9a <isr_smartlcd_cmd_data7>:
    2d9a:	af 92       	push	r10
    2d9c:	cf 92       	push	r12
    2d9e:	ef 92       	push	r14
    2da0:	0f 93       	push	r16
    2da2:	e3 e3       	ldi	r30, 0x33	; 51
    2da4:	f4 e0       	ldi	r31, 0x04	; 4
    2da6:	82 83       	std	Z+2, r24	; 0x02
    2da8:	63 83       	std	Z+3, r22	; 0x03
    2daa:	44 83       	std	Z+4, r20	; 0x04
    2dac:	25 83       	std	Z+5, r18	; 0x05
    2dae:	06 83       	std	Z+6, r16	; 0x06
    2db0:	e7 82       	std	Z+7, r14	; 0x07
    2db2:	c0 86       	std	Z+8, r12	; 0x08
    2db4:	a1 86       	std	Z+9, r10	; 0x09
    2db6:	0f 91       	pop	r16
    2db8:	ef 90       	pop	r14
    2dba:	cf 90       	pop	r12
    2dbc:	af 90       	pop	r10
    2dbe:	08 95       	ret

00002dc0 <isr_smartlcd_cmd_data8>:
    2dc0:	8f 92       	push	r8
    2dc2:	af 92       	push	r10
    2dc4:	cf 92       	push	r12
    2dc6:	ef 92       	push	r14
    2dc8:	0f 93       	push	r16
    2dca:	cf 93       	push	r28
    2dcc:	df 93       	push	r29
    2dce:	cd b7       	in	r28, 0x3d	; 61
    2dd0:	de b7       	in	r29, 0x3e	; 62
    2dd2:	e3 e3       	ldi	r30, 0x33	; 51
    2dd4:	f4 e0       	ldi	r31, 0x04	; 4
    2dd6:	82 83       	std	Z+2, r24	; 0x02
    2dd8:	63 83       	std	Z+3, r22	; 0x03
    2dda:	44 83       	std	Z+4, r20	; 0x04
    2ddc:	25 83       	std	Z+5, r18	; 0x05
    2dde:	06 83       	std	Z+6, r16	; 0x06
    2de0:	e7 82       	std	Z+7, r14	; 0x07
    2de2:	c0 86       	std	Z+8, r12	; 0x08
    2de4:	a1 86       	std	Z+9, r10	; 0x09
    2de6:	82 86       	std	Z+10, r8	; 0x0a
    2de8:	df 91       	pop	r29
    2dea:	cf 91       	pop	r28
    2dec:	0f 91       	pop	r16
    2dee:	ef 90       	pop	r14
    2df0:	cf 90       	pop	r12
    2df2:	af 90       	pop	r10
    2df4:	8f 90       	pop	r8
    2df6:	08 95       	ret

00002df8 <isr_smartlcd_cmd_data9>:
    2df8:	8f 92       	push	r8
    2dfa:	af 92       	push	r10
    2dfc:	cf 92       	push	r12
    2dfe:	ef 92       	push	r14
    2e00:	0f 93       	push	r16
    2e02:	cf 93       	push	r28
    2e04:	df 93       	push	r29
    2e06:	cd b7       	in	r28, 0x3d	; 61
    2e08:	de b7       	in	r29, 0x3e	; 62
    2e0a:	e3 e3       	ldi	r30, 0x33	; 51
    2e0c:	f4 e0       	ldi	r31, 0x04	; 4
    2e0e:	82 83       	std	Z+2, r24	; 0x02
    2e10:	63 83       	std	Z+3, r22	; 0x03
    2e12:	44 83       	std	Z+4, r20	; 0x04
    2e14:	25 83       	std	Z+5, r18	; 0x05
    2e16:	06 83       	std	Z+6, r16	; 0x06
    2e18:	e7 82       	std	Z+7, r14	; 0x07
    2e1a:	c0 86       	std	Z+8, r12	; 0x08
    2e1c:	a1 86       	std	Z+9, r10	; 0x09
    2e1e:	82 86       	std	Z+10, r8	; 0x0a
    2e20:	8a 85       	ldd	r24, Y+10	; 0x0a
    2e22:	83 87       	std	Z+11, r24	; 0x0b
    2e24:	df 91       	pop	r29
    2e26:	cf 91       	pop	r28
    2e28:	0f 91       	pop	r16
    2e2a:	ef 90       	pop	r14
    2e2c:	cf 90       	pop	r12
    2e2e:	af 90       	pop	r10
    2e30:	8f 90       	pop	r8
    2e32:	08 95       	ret

00002e34 <isr_smartlcd_cmd_data10>:
    2e34:	8f 92       	push	r8
    2e36:	af 92       	push	r10
    2e38:	cf 92       	push	r12
    2e3a:	ef 92       	push	r14
    2e3c:	0f 93       	push	r16
    2e3e:	cf 93       	push	r28
    2e40:	df 93       	push	r29
    2e42:	cd b7       	in	r28, 0x3d	; 61
    2e44:	de b7       	in	r29, 0x3e	; 62
    2e46:	e3 e3       	ldi	r30, 0x33	; 51
    2e48:	f4 e0       	ldi	r31, 0x04	; 4
    2e4a:	82 83       	std	Z+2, r24	; 0x02
    2e4c:	63 83       	std	Z+3, r22	; 0x03
    2e4e:	44 83       	std	Z+4, r20	; 0x04
    2e50:	25 83       	std	Z+5, r18	; 0x05
    2e52:	06 83       	std	Z+6, r16	; 0x06
    2e54:	e7 82       	std	Z+7, r14	; 0x07
    2e56:	c0 86       	std	Z+8, r12	; 0x08
    2e58:	a1 86       	std	Z+9, r10	; 0x09
    2e5a:	82 86       	std	Z+10, r8	; 0x0a
    2e5c:	8a 85       	ldd	r24, Y+10	; 0x0a
    2e5e:	83 87       	std	Z+11, r24	; 0x0b
    2e60:	8b 85       	ldd	r24, Y+11	; 0x0b
    2e62:	84 87       	std	Z+12, r24	; 0x0c
    2e64:	df 91       	pop	r29
    2e66:	cf 91       	pop	r28
    2e68:	0f 91       	pop	r16
    2e6a:	ef 90       	pop	r14
    2e6c:	cf 90       	pop	r12
    2e6e:	af 90       	pop	r10
    2e70:	8f 90       	pop	r8
    2e72:	08 95       	ret

00002e74 <isr_smartlcd_cmd_data11>:
    2e74:	8f 92       	push	r8
    2e76:	af 92       	push	r10
    2e78:	cf 92       	push	r12
    2e7a:	ef 92       	push	r14
    2e7c:	0f 93       	push	r16
    2e7e:	cf 93       	push	r28
    2e80:	df 93       	push	r29
    2e82:	cd b7       	in	r28, 0x3d	; 61
    2e84:	de b7       	in	r29, 0x3e	; 62
    2e86:	e3 e3       	ldi	r30, 0x33	; 51
    2e88:	f4 e0       	ldi	r31, 0x04	; 4
    2e8a:	82 83       	std	Z+2, r24	; 0x02
    2e8c:	63 83       	std	Z+3, r22	; 0x03
    2e8e:	44 83       	std	Z+4, r20	; 0x04
    2e90:	25 83       	std	Z+5, r18	; 0x05
    2e92:	06 83       	std	Z+6, r16	; 0x06
    2e94:	e7 82       	std	Z+7, r14	; 0x07
    2e96:	c0 86       	std	Z+8, r12	; 0x08
    2e98:	a1 86       	std	Z+9, r10	; 0x09
    2e9a:	82 86       	std	Z+10, r8	; 0x0a
    2e9c:	8a 85       	ldd	r24, Y+10	; 0x0a
    2e9e:	83 87       	std	Z+11, r24	; 0x0b
    2ea0:	8b 85       	ldd	r24, Y+11	; 0x0b
    2ea2:	84 87       	std	Z+12, r24	; 0x0c
    2ea4:	8c 85       	ldd	r24, Y+12	; 0x0c
    2ea6:	85 87       	std	Z+13, r24	; 0x0d
    2ea8:	df 91       	pop	r29
    2eaa:	cf 91       	pop	r28
    2eac:	0f 91       	pop	r16
    2eae:	ef 90       	pop	r14
    2eb0:	cf 90       	pop	r12
    2eb2:	af 90       	pop	r10
    2eb4:	8f 90       	pop	r8
    2eb6:	08 95       	ret

00002eb8 <isr_smartlcd_cmd_data12>:
    2eb8:	8f 92       	push	r8
    2eba:	af 92       	push	r10
    2ebc:	cf 92       	push	r12
    2ebe:	ef 92       	push	r14
    2ec0:	0f 93       	push	r16
    2ec2:	cf 93       	push	r28
    2ec4:	df 93       	push	r29
    2ec6:	cd b7       	in	r28, 0x3d	; 61
    2ec8:	de b7       	in	r29, 0x3e	; 62
    2eca:	e3 e3       	ldi	r30, 0x33	; 51
    2ecc:	f4 e0       	ldi	r31, 0x04	; 4
    2ece:	82 83       	std	Z+2, r24	; 0x02
    2ed0:	63 83       	std	Z+3, r22	; 0x03
    2ed2:	44 83       	std	Z+4, r20	; 0x04
    2ed4:	25 83       	std	Z+5, r18	; 0x05
    2ed6:	06 83       	std	Z+6, r16	; 0x06
    2ed8:	e7 82       	std	Z+7, r14	; 0x07
    2eda:	c0 86       	std	Z+8, r12	; 0x08
    2edc:	a1 86       	std	Z+9, r10	; 0x09
    2ede:	82 86       	std	Z+10, r8	; 0x0a
    2ee0:	8a 85       	ldd	r24, Y+10	; 0x0a
    2ee2:	83 87       	std	Z+11, r24	; 0x0b
    2ee4:	8b 85       	ldd	r24, Y+11	; 0x0b
    2ee6:	84 87       	std	Z+12, r24	; 0x0c
    2ee8:	8c 85       	ldd	r24, Y+12	; 0x0c
    2eea:	85 87       	std	Z+13, r24	; 0x0d
    2eec:	8d 85       	ldd	r24, Y+13	; 0x0d
    2eee:	86 87       	std	Z+14, r24	; 0x0e
    2ef0:	df 91       	pop	r29
    2ef2:	cf 91       	pop	r28
    2ef4:	0f 91       	pop	r16
    2ef6:	ef 90       	pop	r14
    2ef8:	cf 90       	pop	r12
    2efa:	af 90       	pop	r10
    2efc:	8f 90       	pop	r8
    2efe:	08 95       	ret

00002f00 <isr_smartlcd_cmd_data13>:
    2f00:	8f 92       	push	r8
    2f02:	af 92       	push	r10
    2f04:	cf 92       	push	r12
    2f06:	ef 92       	push	r14
    2f08:	0f 93       	push	r16
    2f0a:	cf 93       	push	r28
    2f0c:	df 93       	push	r29
    2f0e:	cd b7       	in	r28, 0x3d	; 61
    2f10:	de b7       	in	r29, 0x3e	; 62
    2f12:	e3 e3       	ldi	r30, 0x33	; 51
    2f14:	f4 e0       	ldi	r31, 0x04	; 4
    2f16:	82 83       	std	Z+2, r24	; 0x02
    2f18:	63 83       	std	Z+3, r22	; 0x03
    2f1a:	44 83       	std	Z+4, r20	; 0x04
    2f1c:	25 83       	std	Z+5, r18	; 0x05
    2f1e:	06 83       	std	Z+6, r16	; 0x06
    2f20:	e7 82       	std	Z+7, r14	; 0x07
    2f22:	c0 86       	std	Z+8, r12	; 0x08
    2f24:	a1 86       	std	Z+9, r10	; 0x09
    2f26:	82 86       	std	Z+10, r8	; 0x0a
    2f28:	8a 85       	ldd	r24, Y+10	; 0x0a
    2f2a:	83 87       	std	Z+11, r24	; 0x0b
    2f2c:	8b 85       	ldd	r24, Y+11	; 0x0b
    2f2e:	84 87       	std	Z+12, r24	; 0x0c
    2f30:	8c 85       	ldd	r24, Y+12	; 0x0c
    2f32:	85 87       	std	Z+13, r24	; 0x0d
    2f34:	8d 85       	ldd	r24, Y+13	; 0x0d
    2f36:	86 87       	std	Z+14, r24	; 0x0e
    2f38:	8e 85       	ldd	r24, Y+14	; 0x0e
    2f3a:	87 87       	std	Z+15, r24	; 0x0f
    2f3c:	df 91       	pop	r29
    2f3e:	cf 91       	pop	r28
    2f40:	0f 91       	pop	r16
    2f42:	ef 90       	pop	r14
    2f44:	cf 90       	pop	r12
    2f46:	af 90       	pop	r10
    2f48:	8f 90       	pop	r8
    2f4a:	08 95       	ret

00002f4c <isr_smartlcd_cmd_data14>:
    2f4c:	8f 92       	push	r8
    2f4e:	af 92       	push	r10
    2f50:	cf 92       	push	r12
    2f52:	ef 92       	push	r14
    2f54:	0f 93       	push	r16
    2f56:	cf 93       	push	r28
    2f58:	df 93       	push	r29
    2f5a:	cd b7       	in	r28, 0x3d	; 61
    2f5c:	de b7       	in	r29, 0x3e	; 62
    2f5e:	e3 e3       	ldi	r30, 0x33	; 51
    2f60:	f4 e0       	ldi	r31, 0x04	; 4
    2f62:	82 83       	std	Z+2, r24	; 0x02
    2f64:	63 83       	std	Z+3, r22	; 0x03
    2f66:	44 83       	std	Z+4, r20	; 0x04
    2f68:	25 83       	std	Z+5, r18	; 0x05
    2f6a:	06 83       	std	Z+6, r16	; 0x06
    2f6c:	e7 82       	std	Z+7, r14	; 0x07
    2f6e:	c0 86       	std	Z+8, r12	; 0x08
    2f70:	a1 86       	std	Z+9, r10	; 0x09
    2f72:	82 86       	std	Z+10, r8	; 0x0a
    2f74:	8a 85       	ldd	r24, Y+10	; 0x0a
    2f76:	83 87       	std	Z+11, r24	; 0x0b
    2f78:	8b 85       	ldd	r24, Y+11	; 0x0b
    2f7a:	84 87       	std	Z+12, r24	; 0x0c
    2f7c:	8c 85       	ldd	r24, Y+12	; 0x0c
    2f7e:	85 87       	std	Z+13, r24	; 0x0d
    2f80:	8d 85       	ldd	r24, Y+13	; 0x0d
    2f82:	86 87       	std	Z+14, r24	; 0x0e
    2f84:	8e 85       	ldd	r24, Y+14	; 0x0e
    2f86:	87 87       	std	Z+15, r24	; 0x0f
    2f88:	8f 85       	ldd	r24, Y+15	; 0x0f
    2f8a:	80 8b       	std	Z+16, r24	; 0x10
    2f8c:	df 91       	pop	r29
    2f8e:	cf 91       	pop	r28
    2f90:	0f 91       	pop	r16
    2f92:	ef 90       	pop	r14
    2f94:	cf 90       	pop	r12
    2f96:	af 90       	pop	r10
    2f98:	8f 90       	pop	r8
    2f9a:	08 95       	ret

00002f9c <isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100>:
    2f9c:	90 91 5d 04 	lds	r25, 0x045D	; 0x80045d <g_showData+0x2a>
    2fa0:	98 13       	cpse	r25, r24
    2fa2:	0e c0       	rjmp	.+28     	; 0x2fc0 <isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100+0x24>
    2fa4:	20 91 49 04 	lds	r18, 0x0449	; 0x800449 <g_showData+0x16>
    2fa8:	30 91 4a 04 	lds	r19, 0x044A	; 0x80044a <g_showData+0x17>
    2fac:	26 17       	cp	r18, r22
    2fae:	37 07       	cpc	r19, r23
    2fb0:	39 f4       	brne	.+14     	; 0x2fc0 <isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100+0x24>
    2fb2:	20 91 4b 04 	lds	r18, 0x044B	; 0x80044b <g_showData+0x18>
    2fb6:	30 91 4c 04 	lds	r19, 0x044C	; 0x80044c <g_showData+0x19>
    2fba:	24 17       	cp	r18, r20
    2fbc:	35 07       	cpc	r19, r21
    2fbe:	79 f0       	breq	.+30     	; 0x2fde <isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100+0x42>
    2fc0:	90 91 33 04 	lds	r25, 0x0433	; 0x800433 <g_showData>
    2fc4:	91 60       	ori	r25, 0x01	; 1
    2fc6:	90 93 33 04 	sts	0x0433, r25	; 0x800433 <g_showData>
    2fca:	80 93 5d 04 	sts	0x045D, r24	; 0x80045d <g_showData+0x2a>
    2fce:	70 93 4a 04 	sts	0x044A, r23	; 0x80044a <g_showData+0x17>
    2fd2:	60 93 49 04 	sts	0x0449, r22	; 0x800449 <g_showData+0x16>
    2fd6:	50 93 4c 04 	sts	0x044C, r21	; 0x80044c <g_showData+0x19>
    2fda:	40 93 4b 04 	sts	0x044B, r20	; 0x80044b <g_showData+0x18>
    2fde:	08 95       	ret

00002fe0 <isr_lcd_10mhz_ref_osc_show_date>:
    2fe0:	20 91 4d 04 	lds	r18, 0x044D	; 0x80044d <g_showData+0x1a>
    2fe4:	30 91 4e 04 	lds	r19, 0x044E	; 0x80044e <g_showData+0x1b>
    2fe8:	28 17       	cp	r18, r24
    2fea:	39 07       	cpc	r19, r25
    2fec:	71 f4       	brne	.+28     	; 0x300a <isr_lcd_10mhz_ref_osc_show_date+0x2a>
    2fee:	20 91 5e 04 	lds	r18, 0x045E	; 0x80045e <g_showData+0x2b>
    2ff2:	30 e0       	ldi	r19, 0x00	; 0
    2ff4:	e6 2f       	mov	r30, r22
    2ff6:	06 2e       	mov	r0, r22
    2ff8:	00 0c       	add	r0, r0
    2ffa:	ff 0b       	sbc	r31, r31
    2ffc:	2e 17       	cp	r18, r30
    2ffe:	3f 07       	cpc	r19, r31
    3000:	21 f4       	brne	.+8      	; 0x300a <isr_lcd_10mhz_ref_osc_show_date+0x2a>
    3002:	20 91 5f 04 	lds	r18, 0x045F	; 0x80045f <g_showData+0x2c>
    3006:	24 17       	cp	r18, r20
    3008:	69 f0       	breq	.+26     	; 0x3024 <isr_lcd_10mhz_ref_osc_show_date+0x44>
    300a:	20 91 33 04 	lds	r18, 0x0433	; 0x800433 <g_showData>
    300e:	22 60       	ori	r18, 0x02	; 2
    3010:	20 93 33 04 	sts	0x0433, r18	; 0x800433 <g_showData>
    3014:	90 93 4e 04 	sts	0x044E, r25	; 0x80044e <g_showData+0x1b>
    3018:	80 93 4d 04 	sts	0x044D, r24	; 0x80044d <g_showData+0x1a>
    301c:	60 93 5e 04 	sts	0x045E, r22	; 0x80045e <g_showData+0x2b>
    3020:	40 93 5f 04 	sts	0x045F, r20	; 0x80045f <g_showData+0x2c>
    3024:	08 95       	ret

00003026 <isr_lcd_10mhz_ref_osc_show_time>:
    3026:	90 91 60 04 	lds	r25, 0x0460	; 0x800460 <g_showData+0x2d>
    302a:	98 13       	cpse	r25, r24
    302c:	0e c0       	rjmp	.+28     	; 0x304a <isr_lcd_10mhz_ref_osc_show_time+0x24>
    302e:	20 91 61 04 	lds	r18, 0x0461	; 0x800461 <g_showData+0x2e>
    3032:	30 e0       	ldi	r19, 0x00	; 0
    3034:	e6 2f       	mov	r30, r22
    3036:	06 2e       	mov	r0, r22
    3038:	00 0c       	add	r0, r0
    303a:	ff 0b       	sbc	r31, r31
    303c:	2e 17       	cp	r18, r30
    303e:	3f 07       	cpc	r19, r31
    3040:	21 f4       	brne	.+8      	; 0x304a <isr_lcd_10mhz_ref_osc_show_time+0x24>
    3042:	90 91 62 04 	lds	r25, 0x0462	; 0x800462 <g_showData+0x2f>
    3046:	94 17       	cp	r25, r20
    3048:	59 f0       	breq	.+22     	; 0x3060 <isr_lcd_10mhz_ref_osc_show_time+0x3a>
    304a:	90 91 33 04 	lds	r25, 0x0433	; 0x800433 <g_showData>
    304e:	94 60       	ori	r25, 0x04	; 4
    3050:	90 93 33 04 	sts	0x0433, r25	; 0x800433 <g_showData>
    3054:	80 93 60 04 	sts	0x0460, r24	; 0x800460 <g_showData+0x2d>
    3058:	60 93 61 04 	sts	0x0461, r22	; 0x800461 <g_showData+0x2e>
    305c:	40 93 62 04 	sts	0x0462, r20	; 0x800462 <g_showData+0x2f>
    3060:	08 95       	ret

00003062 <isr_lcd_10mhz_ref_osc_show_ppm>:
    3062:	20 91 4f 04 	lds	r18, 0x044F	; 0x80044f <g_showData+0x1c>
    3066:	30 91 50 04 	lds	r19, 0x0450	; 0x800450 <g_showData+0x1d>
    306a:	28 17       	cp	r18, r24
    306c:	39 07       	cpc	r19, r25
    306e:	39 f4       	brne	.+14     	; 0x307e <isr_lcd_10mhz_ref_osc_show_ppm+0x1c>
    3070:	20 91 51 04 	lds	r18, 0x0451	; 0x800451 <g_showData+0x1e>
    3074:	30 91 52 04 	lds	r19, 0x0452	; 0x800452 <g_showData+0x1f>
    3078:	26 17       	cp	r18, r22
    307a:	37 07       	cpc	r19, r23
    307c:	69 f0       	breq	.+26     	; 0x3098 <isr_lcd_10mhz_ref_osc_show_ppm+0x36>
    307e:	20 91 33 04 	lds	r18, 0x0433	; 0x800433 <g_showData>
    3082:	28 60       	ori	r18, 0x08	; 8
    3084:	20 93 33 04 	sts	0x0433, r18	; 0x800433 <g_showData>
    3088:	90 93 50 04 	sts	0x0450, r25	; 0x800450 <g_showData+0x1d>
    308c:	80 93 4f 04 	sts	0x044F, r24	; 0x80044f <g_showData+0x1c>
    3090:	70 93 52 04 	sts	0x0452, r23	; 0x800452 <g_showData+0x1f>
    3094:	60 93 51 04 	sts	0x0451, r22	; 0x800451 <g_showData+0x1e>
    3098:	08 95       	ret

0000309a <isr_lcd_10mhz_ref_osc_show_pwm>:
    309a:	90 91 63 04 	lds	r25, 0x0463	; 0x800463 <g_showData+0x30>
    309e:	98 13       	cpse	r25, r24
    30a0:	04 c0       	rjmp	.+8      	; 0x30aa <isr_lcd_10mhz_ref_osc_show_pwm+0x10>
    30a2:	90 91 64 04 	lds	r25, 0x0464	; 0x800464 <g_showData+0x31>
    30a6:	96 17       	cp	r25, r22
    30a8:	49 f0       	breq	.+18     	; 0x30bc <isr_lcd_10mhz_ref_osc_show_pwm+0x22>
    30aa:	90 91 33 04 	lds	r25, 0x0433	; 0x800433 <g_showData>
    30ae:	90 61       	ori	r25, 0x10	; 16
    30b0:	90 93 33 04 	sts	0x0433, r25	; 0x800433 <g_showData>
    30b4:	80 93 63 04 	sts	0x0463, r24	; 0x800463 <g_showData+0x30>
    30b8:	60 93 64 04 	sts	0x0464, r22	; 0x800464 <g_showData+0x31>
    30bc:	08 95       	ret

000030be <isr_lcd_10mhz_ref_osc_show_pv>:
    30be:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <g_showData+0x32>
    30c2:	98 13       	cpse	r25, r24
    30c4:	07 c0       	rjmp	.+14     	; 0x30d4 <isr_lcd_10mhz_ref_osc_show_pv+0x16>
    30c6:	20 91 53 04 	lds	r18, 0x0453	; 0x800453 <g_showData+0x20>
    30ca:	30 91 54 04 	lds	r19, 0x0454	; 0x800454 <g_showData+0x21>
    30ce:	26 17       	cp	r18, r22
    30d0:	37 07       	cpc	r19, r23
    30d2:	59 f0       	breq	.+22     	; 0x30ea <isr_lcd_10mhz_ref_osc_show_pv+0x2c>
    30d4:	90 91 33 04 	lds	r25, 0x0433	; 0x800433 <g_showData>
    30d8:	90 62       	ori	r25, 0x20	; 32
    30da:	90 93 33 04 	sts	0x0433, r25	; 0x800433 <g_showData>
    30de:	80 93 65 04 	sts	0x0465, r24	; 0x800465 <g_showData+0x32>
    30e2:	70 93 54 04 	sts	0x0454, r23	; 0x800454 <g_showData+0x21>
    30e6:	60 93 53 04 	sts	0x0453, r22	; 0x800453 <g_showData+0x20>
    30ea:	08 95       	ret

000030ec <isr_lcd_10mhz_ref_osc_show_sat_use>:
    30ec:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <g_showData+0x33>
    30f0:	98 13       	cpse	r25, r24
    30f2:	08 c0       	rjmp	.+16     	; 0x3104 <isr_lcd_10mhz_ref_osc_show_sat_use+0x18>
    30f4:	90 91 67 04 	lds	r25, 0x0467	; 0x800467 <g_showData+0x34>
    30f8:	96 13       	cpse	r25, r22
    30fa:	04 c0       	rjmp	.+8      	; 0x3104 <isr_lcd_10mhz_ref_osc_show_sat_use+0x18>
    30fc:	90 91 68 04 	lds	r25, 0x0468	; 0x800468 <g_showData+0x35>
    3100:	94 17       	cp	r25, r20
    3102:	59 f0       	breq	.+22     	; 0x311a <isr_lcd_10mhz_ref_osc_show_sat_use+0x2e>
    3104:	90 91 33 04 	lds	r25, 0x0433	; 0x800433 <g_showData>
    3108:	90 64       	ori	r25, 0x40	; 64
    310a:	90 93 33 04 	sts	0x0433, r25	; 0x800433 <g_showData>
    310e:	80 93 66 04 	sts	0x0466, r24	; 0x800466 <g_showData+0x33>
    3112:	60 93 67 04 	sts	0x0467, r22	; 0x800467 <g_showData+0x34>
    3116:	40 93 68 04 	sts	0x0468, r20	; 0x800468 <g_showData+0x35>
    311a:	08 95       	ret

0000311c <isr_lcd_10mhz_ref_osc_show_sat_dop>:
    311c:	20 91 55 04 	lds	r18, 0x0455	; 0x800455 <g_showData+0x22>
    3120:	30 91 56 04 	lds	r19, 0x0456	; 0x800456 <g_showData+0x23>
    3124:	28 17       	cp	r18, r24
    3126:	39 07       	cpc	r19, r25
    3128:	49 f0       	breq	.+18     	; 0x313c <isr_lcd_10mhz_ref_osc_show_sat_dop+0x20>
    312a:	20 91 33 04 	lds	r18, 0x0433	; 0x800433 <g_showData>
    312e:	20 68       	ori	r18, 0x80	; 128
    3130:	20 93 33 04 	sts	0x0433, r18	; 0x800433 <g_showData>
    3134:	90 93 56 04 	sts	0x0456, r25	; 0x800456 <g_showData+0x23>
    3138:	80 93 55 04 	sts	0x0455, r24	; 0x800455 <g_showData+0x22>
    313c:	08 95       	ret

0000313e <isr_lcd_10mhz_ref_osc_show_pos_state>:
    313e:	90 91 69 04 	lds	r25, 0x0469	; 0x800469 <g_showData+0x36>
    3142:	98 13       	cpse	r25, r24
    3144:	04 c0       	rjmp	.+8      	; 0x314e <isr_lcd_10mhz_ref_osc_show_pos_state+0x10>
    3146:	90 91 6a 04 	lds	r25, 0x046A	; 0x80046a <g_showData+0x37>
    314a:	96 17       	cp	r25, r22
    314c:	49 f0       	breq	.+18     	; 0x3160 <isr_lcd_10mhz_ref_osc_show_pos_state+0x22>
    314e:	90 91 34 04 	lds	r25, 0x0434	; 0x800434 <g_showData+0x1>
    3152:	91 60       	ori	r25, 0x01	; 1
    3154:	90 93 34 04 	sts	0x0434, r25	; 0x800434 <g_showData+0x1>
    3158:	80 93 69 04 	sts	0x0469, r24	; 0x800469 <g_showData+0x36>
    315c:	60 93 6a 04 	sts	0x046A, r22	; 0x80046a <g_showData+0x37>
    3160:	08 95       	ret

00003162 <isr_lcd_10mhz_ref_osc_show_pos_lat>:
    3162:	90 91 6b 04 	lds	r25, 0x046B	; 0x80046b <g_showData+0x38>
    3166:	98 13       	cpse	r25, r24
    3168:	0f c0       	rjmp	.+30     	; 0x3188 <isr_lcd_10mhz_ref_osc_show_pos_lat+0x26>
    316a:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <g_showData+0x39>
    316e:	96 13       	cpse	r25, r22
    3170:	0b c0       	rjmp	.+22     	; 0x3188 <isr_lcd_10mhz_ref_osc_show_pos_lat+0x26>
    3172:	90 91 6d 04 	lds	r25, 0x046D	; 0x80046d <g_showData+0x3a>
    3176:	94 13       	cpse	r25, r20
    3178:	07 c0       	rjmp	.+14     	; 0x3188 <isr_lcd_10mhz_ref_osc_show_pos_lat+0x26>
    317a:	e0 91 57 04 	lds	r30, 0x0457	; 0x800457 <g_showData+0x24>
    317e:	f0 91 58 04 	lds	r31, 0x0458	; 0x800458 <g_showData+0x25>
    3182:	e2 17       	cp	r30, r18
    3184:	f3 07       	cpc	r31, r19
    3186:	79 f0       	breq	.+30     	; 0x31a6 <isr_lcd_10mhz_ref_osc_show_pos_lat+0x44>
    3188:	90 91 34 04 	lds	r25, 0x0434	; 0x800434 <g_showData+0x1>
    318c:	92 60       	ori	r25, 0x02	; 2
    318e:	90 93 34 04 	sts	0x0434, r25	; 0x800434 <g_showData+0x1>
    3192:	80 93 6b 04 	sts	0x046B, r24	; 0x80046b <g_showData+0x38>
    3196:	60 93 6c 04 	sts	0x046C, r22	; 0x80046c <g_showData+0x39>
    319a:	40 93 6d 04 	sts	0x046D, r20	; 0x80046d <g_showData+0x3a>
    319e:	30 93 58 04 	sts	0x0458, r19	; 0x800458 <g_showData+0x25>
    31a2:	20 93 57 04 	sts	0x0457, r18	; 0x800457 <g_showData+0x24>
    31a6:	08 95       	ret

000031a8 <isr_lcd_10mhz_ref_osc_show_pos_lon>:
    31a8:	90 91 6e 04 	lds	r25, 0x046E	; 0x80046e <g_showData+0x3b>
    31ac:	98 13       	cpse	r25, r24
    31ae:	0f c0       	rjmp	.+30     	; 0x31ce <isr_lcd_10mhz_ref_osc_show_pos_lon+0x26>
    31b0:	90 91 6f 04 	lds	r25, 0x046F	; 0x80046f <g_showData+0x3c>
    31b4:	96 13       	cpse	r25, r22
    31b6:	0b c0       	rjmp	.+22     	; 0x31ce <isr_lcd_10mhz_ref_osc_show_pos_lon+0x26>
    31b8:	90 91 70 04 	lds	r25, 0x0470	; 0x800470 <g_showData+0x3d>
    31bc:	94 13       	cpse	r25, r20
    31be:	07 c0       	rjmp	.+14     	; 0x31ce <isr_lcd_10mhz_ref_osc_show_pos_lon+0x26>
    31c0:	e0 91 59 04 	lds	r30, 0x0459	; 0x800459 <g_showData+0x26>
    31c4:	f0 91 5a 04 	lds	r31, 0x045A	; 0x80045a <g_showData+0x27>
    31c8:	e2 17       	cp	r30, r18
    31ca:	f3 07       	cpc	r31, r19
    31cc:	79 f0       	breq	.+30     	; 0x31ec <isr_lcd_10mhz_ref_osc_show_pos_lon+0x44>
    31ce:	90 91 34 04 	lds	r25, 0x0434	; 0x800434 <g_showData+0x1>
    31d2:	94 60       	ori	r25, 0x04	; 4
    31d4:	90 93 34 04 	sts	0x0434, r25	; 0x800434 <g_showData+0x1>
    31d8:	80 93 6e 04 	sts	0x046E, r24	; 0x80046e <g_showData+0x3b>
    31dc:	60 93 6f 04 	sts	0x046F, r22	; 0x80046f <g_showData+0x3c>
    31e0:	40 93 70 04 	sts	0x0470, r20	; 0x800470 <g_showData+0x3d>
    31e4:	30 93 5a 04 	sts	0x045A, r19	; 0x80045a <g_showData+0x27>
    31e8:	20 93 59 04 	sts	0x0459, r18	; 0x800459 <g_showData+0x26>
    31ec:	08 95       	ret

000031ee <isr_lcd_10mhz_ref_osc_show_pos_height>:
    31ee:	20 91 5b 04 	lds	r18, 0x045B	; 0x80045b <g_showData+0x28>
    31f2:	30 91 5c 04 	lds	r19, 0x045C	; 0x80045c <g_showData+0x29>
    31f6:	28 17       	cp	r18, r24
    31f8:	39 07       	cpc	r19, r25
    31fa:	21 f4       	brne	.+8      	; 0x3204 <isr_lcd_10mhz_ref_osc_show_pos_height+0x16>
    31fc:	20 91 71 04 	lds	r18, 0x0471	; 0x800471 <g_showData+0x3e>
    3200:	26 17       	cp	r18, r22
    3202:	59 f0       	breq	.+22     	; 0x321a <isr_lcd_10mhz_ref_osc_show_pos_height+0x2c>
    3204:	20 91 34 04 	lds	r18, 0x0434	; 0x800434 <g_showData+0x1>
    3208:	28 60       	ori	r18, 0x08	; 8
    320a:	20 93 34 04 	sts	0x0434, r18	; 0x800434 <g_showData+0x1>
    320e:	90 93 5c 04 	sts	0x045C, r25	; 0x80045c <g_showData+0x29>
    3212:	80 93 5b 04 	sts	0x045B, r24	; 0x80045b <g_showData+0x28>
    3216:	60 93 71 04 	sts	0x0471, r22	; 0x800471 <g_showData+0x3e>
    321a:	08 95       	ret

0000321c <lcd_get_sysfont>:
    321c:	83 e0       	ldi	r24, 0x03	; 3
    321e:	91 e0       	ldi	r25, 0x01	; 1
    3220:	08 95       	ret

00003222 <lcd_init>:
    3222:	82 ee       	ldi	r24, 0xE2	; 226
    3224:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <lcd_bus_write_cmd>
    3228:	6b e2       	ldi	r22, 0x2B	; 43
    322a:	78 e6       	ldi	r23, 0x68	; 104
    322c:	80 e0       	ldi	r24, 0x00	; 0
    322e:	90 e0       	ldi	r25, 0x00	; 0
    3230:	0e 94 4b 0c 	call	0x1896	; 0x1896 <__portable_avr_delay_cycles>
    3234:	0e 94 56 0c 	call	0x18ac	; 0x18ac <lcd_bus_read_status>
    3238:	87 fd       	sbrc	r24, 7
    323a:	06 c0       	rjmp	.+12     	; 0x3248 <lcd_init+0x26>
    323c:	0e 94 98 0c 	call	0x1930	; 0x1930 <lcd_enable.part.0>
    3240:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <lcd_cls>
    3244:	80 e0       	ldi	r24, 0x00	; 0
    3246:	08 95       	ret
    3248:	81 e0       	ldi	r24, 0x01	; 1
    324a:	08 95       	ret

0000324c <isr_lcd_set_mode>:
    324c:	80 93 32 04 	sts	0x0432, r24	; 0x800432 <g_SmartLCD_mode>
    3250:	88 23       	and	r24, r24
    3252:	31 f0       	breq	.+12     	; 0x3260 <isr_lcd_set_mode+0x14>
    3254:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <g_status>
    3258:	8e 7f       	andi	r24, 0xFE	; 254
    325a:	80 93 72 04 	sts	0x0472, r24	; 0x800472 <g_status>
    325e:	08 95       	ret
    3260:	e0 df       	rcall	.-64     	; 0x3222 <lcd_init>
    3262:	81 ef       	ldi	r24, 0xF1	; 241
    3264:	bd cb       	rjmp	.-2182   	; 0x29e0 <lcd_test>

00003266 <lcd_shutdown>:
    3266:	82 ee       	ldi	r24, 0xE2	; 226
    3268:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <lcd_bus_write_cmd>
    326c:	6b e6       	ldi	r22, 0x6B	; 107
    326e:	7a e0       	ldi	r23, 0x0A	; 10
    3270:	80 e0       	ldi	r24, 0x00	; 0
    3272:	90 e0       	ldi	r25, 0x00	; 0
    3274:	0c 94 4b 0c 	jmp	0x1896	; 0x1896 <__portable_avr_delay_cycles>

00003278 <s_twi_tx_done>:
#endif

static void s_twi_tx_done(void)
{
	// Called when  s_tx_lock == 0
	if (s_tx_next_len) {
    3278:	e0 91 2c 04 	lds	r30, 0x042C	; 0x80042c <s_tx_next_len>
    327c:	ee 23       	and	r30, r30
    327e:	51 f0       	breq	.+20     	; 0x3294 <s_twi_tx_done+0x1c>
    3280:	f0 e0       	ldi	r31, 0x00	; 0
    3282:	eb 5d       	subi	r30, 0xDB	; 219
    3284:	fb 4f       	sbci	r31, 0xFB	; 251
		// Load	next master message
		for (int idx = s_tx_next_len; idx >= 0; --idx) {
			s_tx_d[idx] = s_tx_next_d[idx];
    3286:	12 92       	st	-Z, r1
static void s_twi_tx_done(void)
{
	// Called when  s_tx_lock == 0
	if (s_tx_next_len) {
		// Load	next master message
		for (int idx = s_tx_next_len; idx >= 0; --idx) {
    3288:	84 e0       	ldi	r24, 0x04	; 4
    328a:	e4 32       	cpi	r30, 0x24	; 36
    328c:	f8 07       	cpc	r31, r24
    328e:	d9 f7       	brne	.-10     	; 0x3286 <s_twi_tx_done+0xe>
			s_tx_d[idx] = s_tx_next_d[idx];
		}
		s_tx_len = s_tx_next_len;
		s_tx_next_len = 0;
    3290:	10 92 2c 04 	sts	0x042C, r1	; 0x80042c <s_tx_next_len>
    3294:	08 95       	ret

00003296 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2>:
	uint8_t err = 1;
	// TODO: implementation
	return err;
}

static void s_isr_twi_rcvd_command_closed_form(uint8_t data[], uint8_t cnt)
    3296:	8f 92       	push	r8
    3298:	af 92       	push	r10
    329a:	cf 92       	push	r12
    329c:	ef 92       	push	r14
    329e:	0f 93       	push	r16
				// do nothing
			}
		}
	}  // if (isGCA)

	else if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD)) {
    32a0:	80 91 14 04 	lds	r24, 0x0414	; 0x800414 <s_rx_d>
    32a4:	82 32       	cpi	r24, 0x22	; 34
    32a6:	09 f0       	breq	.+2      	; 0x32aa <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x14>
    32a8:	4d c2       	rjmp	.+1178   	; 0x3744 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
}

static void s_isr_twi_rcvd_command_closed_form(uint8_t data[], uint8_t cnt)
{
	uint8_t isGCA	= !data[0];
	uint8_t cmd		=  data[1];
    32aa:	e0 91 15 04 	lds	r30, 0x0415	; 0x800415 <s_rx_d+0x1>
		}
	}  // if (isGCA)

	else if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD)) {
		/* unique command section for all modes */
		switch (cmd) {
    32ae:	e2 30       	cpi	r30, 0x02	; 2
    32b0:	51 f0       	breq	.+20     	; 0x32c6 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x30>
    32b2:	e3 30       	cpi	r30, 0x03	; 3
    32b4:	81 f0       	breq	.+32     	; 0x32d6 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x40>
    32b6:	e1 30       	cpi	r30, 0x01	; 1
    32b8:	d9 f4       	brne	.+54     	; 0x32f0 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x5a>
			case TWI_SMART_LCD_CMD_GET_VER:
			s_rx_ret_d[0] = VERSION;
    32ba:	81 e1       	ldi	r24, 0x11	; 17
    32bc:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <s_rx_ret_d>
			s_rx_ret_len = 1;
    32c0:	e0 93 11 04 	sts	0x0411, r30	; 0x800411 <s_rx_ret_len>
    32c4:	3f c2       	rjmp	.+1150   	; 0x3744 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
			return;

			case TWI_SMART_LCD_CMD_SET_MODE:
			isr_lcd_set_mode(data[2]);
    32c6:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <s_rx_d+0x2>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    32ca:	0f 91       	pop	r16
    32cc:	ef 90       	pop	r14
    32ce:	cf 90       	pop	r12
    32d0:	af 90       	pop	r10
			s_rx_ret_d[0] = VERSION;
			s_rx_ret_len = 1;
			return;

			case TWI_SMART_LCD_CMD_SET_MODE:
			isr_lcd_set_mode(data[2]);
    32d2:	8f 90       	pop	r8
			return;

			case TWI_SMART_LCD_CMD_GET_STATE:
			s_rx_ret_d[0] = g_showData.cmd ?  0x81 : 0x80;		// (Valid << 7) | (Busy << 0)
    32d4:	bb cf       	rjmp	.-138    	; 0x324c <isr_lcd_set_mode>
    32d6:	80 91 35 04 	lds	r24, 0x0435	; 0x800435 <g_showData+0x2>
    32da:	88 23       	and	r24, r24
    32dc:	11 f0       	breq	.+4      	; 0x32e2 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4c>
    32de:	81 e8       	ldi	r24, 0x81	; 129
    32e0:	01 c0       	rjmp	.+2      	; 0x32e4 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4e>
    32e2:	80 e8       	ldi	r24, 0x80	; 128
    32e4:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <s_rx_ret_d>
			s_rx_ret_len = 1;
    32e8:	81 e0       	ldi	r24, 0x01	; 1
    32ea:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <s_rx_ret_len>
			return;

			default:
			s_rx_ret_len = 0;
    32ee:	2a c2       	rjmp	.+1108   	; 0x3744 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    32f0:	10 92 11 04 	sts	0x0411, r1	; 0x800411 <s_rx_ret_len>
		}

		if (g_SmartLCD_mode == C_SMART_LCD_MODE_SMARTLCD) {
    32f4:	80 91 32 04 	lds	r24, 0x0432	; 0x800432 <g_SmartLCD_mode>
    32f8:	80 31       	cpi	r24, 0x10	; 16
    32fa:	09 f0       	breq	.+2      	; 0x32fe <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x68>
			if (!(g_showData.cmd)) {							// Do when no command in process only
    32fc:	7a c1       	rjmp	.+756    	; 0x35f2 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x35c>
    32fe:	80 91 35 04 	lds	r24, 0x0435	; 0x800435 <g_showData+0x2>
    3302:	81 11       	cpse	r24, r1
				switch (cmd) {
    3304:	1f c2       	rjmp	.+1086   	; 0x3744 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    3306:	e2 33       	cpi	r30, 0x32	; 50
    3308:	09 f4       	brne	.+2      	; 0x330c <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x76>
    330a:	5e c1       	rjmp	.+700    	; 0x35c8 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x332>
    330c:	90 f4       	brcc	.+36     	; 0x3332 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x9c>
    330e:	e4 31       	cpi	r30, 0x14	; 20
    3310:	39 f1       	breq	.+78     	; 0x3360 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xca>
    3312:	50 f4       	brcc	.+20     	; 0x3328 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x92>
    3314:	e0 31       	cpi	r30, 0x10	; 16
    3316:	09 f0       	breq	.+2      	; 0x331a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x84>
					case TWI_SMART_LCD_CMD_CLS:					// Clear screen
						isr_smartlcd_cmd(cmd);
    3318:	15 c2       	rjmp	.+1066   	; 0x3744 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    331a:	80 e1       	ldi	r24, 0x10	; 16
    331c:	0f 91       	pop	r16
    331e:	ef 90       	pop	r14
    3320:	cf 90       	pop	r12

		if (g_SmartLCD_mode == C_SMART_LCD_MODE_SMARTLCD) {
			if (!(g_showData.cmd)) {							// Do when no command in process only
				switch (cmd) {
					case TWI_SMART_LCD_CMD_CLS:					// Clear screen
						isr_smartlcd_cmd(cmd);
    3322:	af 90       	pop	r10
    3324:	8f 90       	pop	r8
			s_rx_ret_len = 0;
		}

		if (g_SmartLCD_mode == C_SMART_LCD_MODE_SMARTLCD) {
			if (!(g_showData.cmd)) {							// Do when no command in process only
				switch (cmd) {
    3326:	fd cc       	rjmp	.-1542   	; 0x2d22 <isr_smartlcd_cmd>
    3328:	e0 32       	cpi	r30, 0x20	; 32
    332a:	f1 f0       	breq	.+60     	; 0x3368 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xd2>
    332c:	e0 33       	cpi	r30, 0x30	; 48
    332e:	11 f1       	breq	.+68     	; 0x3374 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xde>
    3330:	09 c2       	rjmp	.+1042   	; 0x3744 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    3332:	e6 33       	cpi	r30, 0x36	; 54
    3334:	09 f4       	brne	.+2      	; 0x3338 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xa2>
    3336:	4e c1       	rjmp	.+668    	; 0x35d4 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x33e>
    3338:	48 f4       	brcc	.+18     	; 0x334c <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xb6>
    333a:	e4 33       	cpi	r30, 0x34	; 52
    333c:	09 f0       	breq	.+2      	; 0x3340 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xaa>
					case TWI_SMART_LCD_CMD_DRAW_LINE:			// Draw line from current pencil position to next position (x, y)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
					break;

					case TWI_SMART_LCD_CMD_DRAW_RECT:			// Draw rectangular frame with pencil's start position with dimension (width, height)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
    333e:	02 c2       	rjmp	.+1028   	; 0x3744 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    3340:	40 91 17 04 	lds	r20, 0x0417	; 0x800417 <s_rx_d+0x3>
    3344:	60 91 16 04 	lds	r22, 0x0416	; 0x800416 <s_rx_d+0x2>
    3348:	84 e3       	ldi	r24, 0x34	; 52
			s_rx_ret_len = 0;
		}

		if (g_SmartLCD_mode == C_SMART_LCD_MODE_SMARTLCD) {
			if (!(g_showData.cmd)) {							// Do when no command in process only
				switch (cmd) {
    334a:	26 c0       	rjmp	.+76     	; 0x3398 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x102>
    334c:	e8 33       	cpi	r30, 0x38	; 56
    334e:	09 f4       	brne	.+2      	; 0x3352 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xbc>
    3350:	47 c1       	rjmp	.+654    	; 0x35e0 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x34a>
    3352:	ea 33       	cpi	r30, 0x3A	; 58
    3354:	09 f0       	breq	.+2      	; 0x3358 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xc2>
					case TWI_SMART_LCD_CMD_DRAW_CIRC:			// Draw circle or ellipse from the pencil's center point with (radius)
						isr_smartlcd_cmd_data1(cmd, data[2]);
					break;

					case TWI_SMART_LCD_CMD_DRAW_FILLED_CIRC:	// Draw filled circle or ellipse from the pencil's center point with (radius)
						isr_smartlcd_cmd_data1(cmd, data[2]);
    3356:	f6 c1       	rjmp	.+1004   	; 0x3744 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    3358:	60 91 16 04 	lds	r22, 0x0416	; 0x800416 <s_rx_d+0x2>
    335c:	8a e3       	ldi	r24, 0x3A	; 58
					case TWI_SMART_LCD_CMD_CLS:					// Clear screen
						isr_smartlcd_cmd(cmd);
					break;

					case TWI_SMART_LCD_CMD_SET_PIXEL_TYPE:		// Set next pixels (OFF / ON / XOR)
						isr_smartlcd_cmd_data1(cmd, data[2]);
    335e:	43 c1       	rjmp	.+646    	; 0x35e6 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x350>
    3360:	60 91 16 04 	lds	r22, 0x0416	; 0x800416 <s_rx_d+0x2>
    3364:	84 e1       	ldi	r24, 0x14	; 20
					break;

					case TWI_SMART_LCD_CMD_SET_POS_X_Y:			// Set pencil position (x, y)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
    3366:	3f c1       	rjmp	.+638    	; 0x35e6 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x350>
    3368:	40 91 17 04 	lds	r20, 0x0417	; 0x800417 <s_rx_d+0x3>
    336c:	60 91 16 04 	lds	r22, 0x0416	; 0x800416 <s_rx_d+0x2>
    3370:	80 e2       	ldi	r24, 0x20	; 32
					break;

					case TWI_SMART_LCD_CMD_WRITE:				// Write text of length (length, buffer...)
					{
						switch (data[2]) {
    3372:	12 c0       	rjmp	.+36     	; 0x3398 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x102>
    3374:	e0 91 16 04 	lds	r30, 0x0416	; 0x800416 <s_rx_d+0x2>
    3378:	8e 2f       	mov	r24, r30
    337a:	90 e0       	ldi	r25, 0x00	; 0
    337c:	fc 01       	movw	r30, r24
    337e:	31 97       	sbiw	r30, 0x01	; 1
    3380:	ed 30       	cpi	r30, 0x0D	; 13
    3382:	f1 05       	cpc	r31, r1
    3384:	08 f0       	brcs	.+2      	; 0x3388 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xf2>
    3386:	de c1       	rjmp	.+956    	; 0x3744 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    3388:	ec 5c       	subi	r30, 0xCC	; 204
    338a:	ff 4f       	sbci	r31, 0xFF	; 255
    338c:	0c 94 4a 22 	jmp	0x4494	; 0x4494 <__tablejump2__>
							case 1:
								isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
    3390:	40 91 17 04 	lds	r20, 0x0417	; 0x800417 <s_rx_d+0x3>
    3394:	61 e0       	ldi	r22, 0x01	; 1
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3396:	80 e3       	ldi	r24, 0x30	; 48
    3398:	0f 91       	pop	r16
    339a:	ef 90       	pop	r14
    339c:	cf 90       	pop	r12

					case TWI_SMART_LCD_CMD_WRITE:				// Write text of length (length, buffer...)
					{
						switch (data[2]) {
							case 1:
								isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
    339e:	af 90       	pop	r10
    33a0:	8f 90       	pop	r8
							break;

							case 2:
								isr_smartlcd_cmd_data3(cmd, data[2], data[3], data[4]);
    33a2:	c7 cc       	rjmp	.-1650   	; 0x2d32 <isr_smartlcd_cmd_data2>
    33a4:	20 91 18 04 	lds	r18, 0x0418	; 0x800418 <s_rx_d+0x4>
    33a8:	40 91 17 04 	lds	r20, 0x0417	; 0x800417 <s_rx_d+0x3>
    33ac:	62 e0       	ldi	r22, 0x02	; 2
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    33ae:	80 e3       	ldi	r24, 0x30	; 48
    33b0:	0f 91       	pop	r16
    33b2:	ef 90       	pop	r14
    33b4:	cf 90       	pop	r12
							case 1:
								isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
							break;

							case 2:
								isr_smartlcd_cmd_data3(cmd, data[2], data[3], data[4]);
    33b6:	af 90       	pop	r10
    33b8:	8f 90       	pop	r8
							break;

							case 3:
								isr_smartlcd_cmd_data4(cmd, data[2], data[3], data[4], data[5]);
    33ba:	c1 cc       	rjmp	.-1662   	; 0x2d3e <isr_smartlcd_cmd_data3>
    33bc:	00 91 19 04 	lds	r16, 0x0419	; 0x800419 <s_rx_d+0x5>
    33c0:	20 91 18 04 	lds	r18, 0x0418	; 0x800418 <s_rx_d+0x4>
    33c4:	40 91 17 04 	lds	r20, 0x0417	; 0x800417 <s_rx_d+0x3>
    33c8:	63 e0       	ldi	r22, 0x03	; 3
    33ca:	80 e3       	ldi	r24, 0x30	; 48
    33cc:	bf dc       	rcall	.-1666   	; 0x2d4c <isr_smartlcd_cmd_data4>
							break;

							case 4:
								isr_smartlcd_cmd_data5(cmd, data[2], data[3], data[4], data[5], data[6]);
    33ce:	ba c1       	rjmp	.+884    	; 0x3744 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    33d0:	e0 90 1a 04 	lds	r14, 0x041A	; 0x80041a <s_rx_d+0x6>
    33d4:	00 91 19 04 	lds	r16, 0x0419	; 0x800419 <s_rx_d+0x5>
    33d8:	20 91 18 04 	lds	r18, 0x0418	; 0x800418 <s_rx_d+0x4>
    33dc:	40 91 17 04 	lds	r20, 0x0417	; 0x800417 <s_rx_d+0x3>
    33e0:	64 e0       	ldi	r22, 0x04	; 4
    33e2:	80 e3       	ldi	r24, 0x30	; 48
    33e4:	bd dc       	rcall	.-1670   	; 0x2d60 <isr_smartlcd_cmd_data5>
							break;

							case 5:
								isr_smartlcd_cmd_data6(cmd, data[2], data[3], data[4], data[5], data[6], data[7]);
    33e6:	ae c1       	rjmp	.+860    	; 0x3744 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    33e8:	c0 90 1b 04 	lds	r12, 0x041B	; 0x80041b <s_rx_d+0x7>
    33ec:	e0 90 1a 04 	lds	r14, 0x041A	; 0x80041a <s_rx_d+0x6>
    33f0:	00 91 19 04 	lds	r16, 0x0419	; 0x800419 <s_rx_d+0x5>
    33f4:	20 91 18 04 	lds	r18, 0x0418	; 0x800418 <s_rx_d+0x4>
    33f8:	40 91 17 04 	lds	r20, 0x0417	; 0x800417 <s_rx_d+0x3>
    33fc:	65 e0       	ldi	r22, 0x05	; 5
    33fe:	80 e3       	ldi	r24, 0x30	; 48
    3400:	bc dc       	rcall	.-1672   	; 0x2d7a <isr_smartlcd_cmd_data6>
							break;

							case 6:
								isr_smartlcd_cmd_data7(cmd, data[2], data[3], data[4], data[5], data[6], data[7], data[8]);
    3402:	a0 c1       	rjmp	.+832    	; 0x3744 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    3404:	a0 90 1c 04 	lds	r10, 0x041C	; 0x80041c <s_rx_d+0x8>
    3408:	c0 90 1b 04 	lds	r12, 0x041B	; 0x80041b <s_rx_d+0x7>
    340c:	e0 90 1a 04 	lds	r14, 0x041A	; 0x80041a <s_rx_d+0x6>
    3410:	00 91 19 04 	lds	r16, 0x0419	; 0x800419 <s_rx_d+0x5>
    3414:	20 91 18 04 	lds	r18, 0x0418	; 0x800418 <s_rx_d+0x4>
    3418:	40 91 17 04 	lds	r20, 0x0417	; 0x800417 <s_rx_d+0x3>
    341c:	66 e0       	ldi	r22, 0x06	; 6
    341e:	80 e3       	ldi	r24, 0x30	; 48
    3420:	bc dc       	rcall	.-1672   	; 0x2d9a <isr_smartlcd_cmd_data7>
							break;

							case 7:
								isr_smartlcd_cmd_data8(cmd, data[2], data[3], data[4], data[5], data[6], data[7], data[8], data[9]);
    3422:	90 c1       	rjmp	.+800    	; 0x3744 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    3424:	80 90 1d 04 	lds	r8, 0x041D	; 0x80041d <s_rx_d+0x9>
    3428:	a0 90 1c 04 	lds	r10, 0x041C	; 0x80041c <s_rx_d+0x8>
    342c:	c0 90 1b 04 	lds	r12, 0x041B	; 0x80041b <s_rx_d+0x7>
    3430:	e0 90 1a 04 	lds	r14, 0x041A	; 0x80041a <s_rx_d+0x6>
    3434:	00 91 19 04 	lds	r16, 0x0419	; 0x800419 <s_rx_d+0x5>
    3438:	20 91 18 04 	lds	r18, 0x0418	; 0x800418 <s_rx_d+0x4>
    343c:	40 91 17 04 	lds	r20, 0x0417	; 0x800417 <s_rx_d+0x3>
    3440:	67 e0       	ldi	r22, 0x07	; 7
    3442:	80 e3       	ldi	r24, 0x30	; 48
    3444:	bd dc       	rcall	.-1670   	; 0x2dc0 <isr_smartlcd_cmd_data8>
							break;

							case 8:
								isr_smartlcd_cmd_data9(cmd, data[2], data[3], data[4], data[5], data[6], data[7], data[8], data[9], data[10]);
    3446:	7e c1       	rjmp	.+764    	; 0x3744 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    3448:	80 91 1e 04 	lds	r24, 0x041E	; 0x80041e <s_rx_d+0xa>
    344c:	8f 93       	push	r24
    344e:	80 90 1d 04 	lds	r8, 0x041D	; 0x80041d <s_rx_d+0x9>
    3452:	a0 90 1c 04 	lds	r10, 0x041C	; 0x80041c <s_rx_d+0x8>
    3456:	c0 90 1b 04 	lds	r12, 0x041B	; 0x80041b <s_rx_d+0x7>
    345a:	e0 90 1a 04 	lds	r14, 0x041A	; 0x80041a <s_rx_d+0x6>
    345e:	00 91 19 04 	lds	r16, 0x0419	; 0x800419 <s_rx_d+0x5>
    3462:	20 91 18 04 	lds	r18, 0x0418	; 0x800418 <s_rx_d+0x4>
    3466:	40 91 17 04 	lds	r20, 0x0417	; 0x800417 <s_rx_d+0x3>
    346a:	68 e0       	ldi	r22, 0x08	; 8
    346c:	80 e3       	ldi	r24, 0x30	; 48
    346e:	c4 dc       	rcall	.-1656   	; 0x2df8 <isr_smartlcd_cmd_data9>
    3470:	0f 90       	pop	r0
							break;

							case 9:
								isr_smartlcd_cmd_data10(cmd, data[2], data[3], data[4], data[5], data[6], data[7], data[8], data[9], data[10], data[11]);
    3472:	68 c1       	rjmp	.+720    	; 0x3744 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    3474:	80 91 1f 04 	lds	r24, 0x041F	; 0x80041f <s_rx_d+0xb>
    3478:	8f 93       	push	r24
    347a:	80 91 1e 04 	lds	r24, 0x041E	; 0x80041e <s_rx_d+0xa>
    347e:	8f 93       	push	r24
    3480:	80 90 1d 04 	lds	r8, 0x041D	; 0x80041d <s_rx_d+0x9>
    3484:	a0 90 1c 04 	lds	r10, 0x041C	; 0x80041c <s_rx_d+0x8>
    3488:	c0 90 1b 04 	lds	r12, 0x041B	; 0x80041b <s_rx_d+0x7>
    348c:	e0 90 1a 04 	lds	r14, 0x041A	; 0x80041a <s_rx_d+0x6>
    3490:	00 91 19 04 	lds	r16, 0x0419	; 0x800419 <s_rx_d+0x5>
    3494:	20 91 18 04 	lds	r18, 0x0418	; 0x800418 <s_rx_d+0x4>
    3498:	40 91 17 04 	lds	r20, 0x0417	; 0x800417 <s_rx_d+0x3>
    349c:	69 e0       	ldi	r22, 0x09	; 9
    349e:	80 e3       	ldi	r24, 0x30	; 48
    34a0:	c9 dc       	rcall	.-1646   	; 0x2e34 <isr_smartlcd_cmd_data10>
    34a2:	0f 90       	pop	r0
    34a4:	0f 90       	pop	r0
							break;

							case 10:
								isr_smartlcd_cmd_data11(cmd, data[2], data[3], data[4], data[5], data[6], data[7], data[8], data[9], data[10], data[11], data[12]);
    34a6:	4e c1       	rjmp	.+668    	; 0x3744 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    34a8:	80 91 20 04 	lds	r24, 0x0420	; 0x800420 <s_rx_d+0xc>
    34ac:	8f 93       	push	r24
    34ae:	80 91 1f 04 	lds	r24, 0x041F	; 0x80041f <s_rx_d+0xb>
    34b2:	8f 93       	push	r24
    34b4:	80 91 1e 04 	lds	r24, 0x041E	; 0x80041e <s_rx_d+0xa>
    34b8:	8f 93       	push	r24
    34ba:	80 90 1d 04 	lds	r8, 0x041D	; 0x80041d <s_rx_d+0x9>
    34be:	a0 90 1c 04 	lds	r10, 0x041C	; 0x80041c <s_rx_d+0x8>
    34c2:	c0 90 1b 04 	lds	r12, 0x041B	; 0x80041b <s_rx_d+0x7>
    34c6:	e0 90 1a 04 	lds	r14, 0x041A	; 0x80041a <s_rx_d+0x6>
    34ca:	00 91 19 04 	lds	r16, 0x0419	; 0x800419 <s_rx_d+0x5>
    34ce:	20 91 18 04 	lds	r18, 0x0418	; 0x800418 <s_rx_d+0x4>
    34d2:	40 91 17 04 	lds	r20, 0x0417	; 0x800417 <s_rx_d+0x3>
    34d6:	6a e0       	ldi	r22, 0x0A	; 10
    34d8:	80 e3       	ldi	r24, 0x30	; 48
    34da:	cc dc       	rcall	.-1640   	; 0x2e74 <isr_smartlcd_cmd_data11>
    34dc:	0f 90       	pop	r0
    34de:	0f 90       	pop	r0
    34e0:	0f 90       	pop	r0
							break;

							case 11:
								isr_smartlcd_cmd_data12(cmd, data[2], data[3], data[4], data[5], data[6], data[7], data[8], data[9], data[10], data[11], data[12], data[13]);
    34e2:	30 c1       	rjmp	.+608    	; 0x3744 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    34e4:	80 91 21 04 	lds	r24, 0x0421	; 0x800421 <s_rx_d+0xd>
    34e8:	8f 93       	push	r24
    34ea:	80 91 20 04 	lds	r24, 0x0420	; 0x800420 <s_rx_d+0xc>
    34ee:	8f 93       	push	r24
    34f0:	80 91 1f 04 	lds	r24, 0x041F	; 0x80041f <s_rx_d+0xb>
    34f4:	8f 93       	push	r24
    34f6:	80 91 1e 04 	lds	r24, 0x041E	; 0x80041e <s_rx_d+0xa>
    34fa:	8f 93       	push	r24
    34fc:	80 90 1d 04 	lds	r8, 0x041D	; 0x80041d <s_rx_d+0x9>
    3500:	a0 90 1c 04 	lds	r10, 0x041C	; 0x80041c <s_rx_d+0x8>
    3504:	c0 90 1b 04 	lds	r12, 0x041B	; 0x80041b <s_rx_d+0x7>
    3508:	e0 90 1a 04 	lds	r14, 0x041A	; 0x80041a <s_rx_d+0x6>
    350c:	00 91 19 04 	lds	r16, 0x0419	; 0x800419 <s_rx_d+0x5>
    3510:	20 91 18 04 	lds	r18, 0x0418	; 0x800418 <s_rx_d+0x4>
    3514:	40 91 17 04 	lds	r20, 0x0417	; 0x800417 <s_rx_d+0x3>
    3518:	6b e0       	ldi	r22, 0x0B	; 11
    351a:	80 e3       	ldi	r24, 0x30	; 48
    351c:	cd dc       	rcall	.-1638   	; 0x2eb8 <isr_smartlcd_cmd_data12>
    351e:	0f 90       	pop	r0
    3520:	0f 90       	pop	r0
    3522:	0f 90       	pop	r0
    3524:	0f 90       	pop	r0
							break;

							case 12:
								isr_smartlcd_cmd_data13(cmd, data[2], data[3], data[4], data[5], data[6], data[7], data[8], data[9], data[10], data[11], data[12], data[13], data[14]);
    3526:	0e c1       	rjmp	.+540    	; 0x3744 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    3528:	80 91 22 04 	lds	r24, 0x0422	; 0x800422 <s_rx_d+0xe>
    352c:	8f 93       	push	r24
    352e:	80 91 21 04 	lds	r24, 0x0421	; 0x800421 <s_rx_d+0xd>
    3532:	8f 93       	push	r24
    3534:	80 91 20 04 	lds	r24, 0x0420	; 0x800420 <s_rx_d+0xc>
    3538:	8f 93       	push	r24
    353a:	80 91 1f 04 	lds	r24, 0x041F	; 0x80041f <s_rx_d+0xb>
    353e:	8f 93       	push	r24
    3540:	80 91 1e 04 	lds	r24, 0x041E	; 0x80041e <s_rx_d+0xa>
    3544:	8f 93       	push	r24
    3546:	80 90 1d 04 	lds	r8, 0x041D	; 0x80041d <s_rx_d+0x9>
    354a:	a0 90 1c 04 	lds	r10, 0x041C	; 0x80041c <s_rx_d+0x8>
    354e:	c0 90 1b 04 	lds	r12, 0x041B	; 0x80041b <s_rx_d+0x7>
    3552:	e0 90 1a 04 	lds	r14, 0x041A	; 0x80041a <s_rx_d+0x6>
    3556:	00 91 19 04 	lds	r16, 0x0419	; 0x800419 <s_rx_d+0x5>
    355a:	20 91 18 04 	lds	r18, 0x0418	; 0x800418 <s_rx_d+0x4>
    355e:	40 91 17 04 	lds	r20, 0x0417	; 0x800417 <s_rx_d+0x3>
    3562:	6c e0       	ldi	r22, 0x0C	; 12
    3564:	80 e3       	ldi	r24, 0x30	; 48
    3566:	cc dc       	rcall	.-1640   	; 0x2f00 <isr_smartlcd_cmd_data13>
    3568:	0f 90       	pop	r0
    356a:	0f 90       	pop	r0
    356c:	0f 90       	pop	r0
    356e:	0f 90       	pop	r0
    3570:	0f 90       	pop	r0
							break;

							case 13:
								isr_smartlcd_cmd_data14(cmd, data[2], data[3], data[4], data[5], data[6], data[7], data[8], data[9], data[10], data[11], data[12], data[13], data[14], data[15]);
    3572:	e8 c0       	rjmp	.+464    	; 0x3744 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    3574:	80 91 23 04 	lds	r24, 0x0423	; 0x800423 <s_rx_d+0xf>
    3578:	8f 93       	push	r24
    357a:	80 91 22 04 	lds	r24, 0x0422	; 0x800422 <s_rx_d+0xe>
    357e:	8f 93       	push	r24
    3580:	80 91 21 04 	lds	r24, 0x0421	; 0x800421 <s_rx_d+0xd>
    3584:	8f 93       	push	r24
    3586:	80 91 20 04 	lds	r24, 0x0420	; 0x800420 <s_rx_d+0xc>
    358a:	8f 93       	push	r24
    358c:	80 91 1f 04 	lds	r24, 0x041F	; 0x80041f <s_rx_d+0xb>
    3590:	8f 93       	push	r24
    3592:	80 91 1e 04 	lds	r24, 0x041E	; 0x80041e <s_rx_d+0xa>
    3596:	8f 93       	push	r24
    3598:	80 90 1d 04 	lds	r8, 0x041D	; 0x80041d <s_rx_d+0x9>
    359c:	a0 90 1c 04 	lds	r10, 0x041C	; 0x80041c <s_rx_d+0x8>
    35a0:	c0 90 1b 04 	lds	r12, 0x041B	; 0x80041b <s_rx_d+0x7>
    35a4:	e0 90 1a 04 	lds	r14, 0x041A	; 0x80041a <s_rx_d+0x6>
    35a8:	00 91 19 04 	lds	r16, 0x0419	; 0x800419 <s_rx_d+0x5>
    35ac:	20 91 18 04 	lds	r18, 0x0418	; 0x800418 <s_rx_d+0x4>
    35b0:	40 91 17 04 	lds	r20, 0x0417	; 0x800417 <s_rx_d+0x3>
    35b4:	6d e0       	ldi	r22, 0x0D	; 13
    35b6:	80 e3       	ldi	r24, 0x30	; 48
    35b8:	c9 dc       	rcall	.-1646   	; 0x2f4c <isr_smartlcd_cmd_data14>
    35ba:	0f 90       	pop	r0
    35bc:	0f 90       	pop	r0
    35be:	0f 90       	pop	r0
    35c0:	0f 90       	pop	r0
    35c2:	0f 90       	pop	r0
    35c4:	0f 90       	pop	r0
						}  // switch (data[2])
					}
					break;

					case TWI_SMART_LCD_CMD_DRAW_LINE:			// Draw line from current pencil position to next position (x, y)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
    35c6:	be c0       	rjmp	.+380    	; 0x3744 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    35c8:	40 91 17 04 	lds	r20, 0x0417	; 0x800417 <s_rx_d+0x3>
    35cc:	60 91 16 04 	lds	r22, 0x0416	; 0x800416 <s_rx_d+0x2>
					case TWI_SMART_LCD_CMD_DRAW_RECT:			// Draw rectangular frame with pencil's start position with dimension (width, height)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
					break;

					case TWI_SMART_LCD_CMD_DRAW_FILLED_RECT:	// Draw filled rectangular frame with pencil's start position with dimension (width, height)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
    35d0:	82 e3       	ldi	r24, 0x32	; 50
    35d2:	e2 ce       	rjmp	.-572    	; 0x3398 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x102>
    35d4:	40 91 17 04 	lds	r20, 0x0417	; 0x800417 <s_rx_d+0x3>
    35d8:	60 91 16 04 	lds	r22, 0x0416	; 0x800416 <s_rx_d+0x2>
					break;

					case TWI_SMART_LCD_CMD_DRAW_CIRC:			// Draw circle or ellipse from the pencil's center point with (radius)
						isr_smartlcd_cmd_data1(cmd, data[2]);
    35dc:	86 e3       	ldi	r24, 0x36	; 54
    35de:	dc ce       	rjmp	.-584    	; 0x3398 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x102>
    35e0:	60 91 16 04 	lds	r22, 0x0416	; 0x800416 <s_rx_d+0x2>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    35e4:	88 e3       	ldi	r24, 0x38	; 56
    35e6:	0f 91       	pop	r16
    35e8:	ef 90       	pop	r14
					case TWI_SMART_LCD_CMD_DRAW_FILLED_RECT:	// Draw filled rectangular frame with pencil's start position with dimension (width, height)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
					break;

					case TWI_SMART_LCD_CMD_DRAW_CIRC:			// Draw circle or ellipse from the pencil's center point with (radius)
						isr_smartlcd_cmd_data1(cmd, data[2]);
    35ea:	cf 90       	pop	r12
					}
				}  // switch (cmd)
			}  // if (!(g_showData.cmd))
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_SMARTLCD)

		else if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC) {
    35ec:	af 90       	pop	r10
    35ee:	8f 90       	pop	r8
    35f0:	9b cb       	rjmp	.-2250   	; 0x2d28 <isr_smartlcd_cmd_data1>
			switch (cmd) {
    35f2:	80 32       	cpi	r24, 0x20	; 32
    35f4:	09 f0       	breq	.+2      	; 0x35f8 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x362>
    35f6:	a6 c0       	rjmp	.+332    	; 0x3744 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    35f8:	8e 2f       	mov	r24, r30
    35fa:	90 e0       	ldi	r25, 0x00	; 0
    35fc:	fc 01       	movw	r30, r24
    35fe:	e0 58       	subi	r30, 0x80	; 128
    3600:	f1 09       	sbc	r31, r1
    3602:	ee 30       	cpi	r30, 0x0E	; 14
    3604:	f1 05       	cpc	r31, r1
    3606:	08 f0       	brcs	.+2      	; 0x360a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x374>
    3608:	9d c0       	rjmp	.+314    	; 0x3744 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
				case TWI_SMART_LCD_CMD_SHOW_CLK_STATE:
					isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100(data[2], (uint16_t) (data[3] | (data[4] << 8)), (int16_t) (data[5] | (data[6] << 8)));
    360a:	ef 5b       	subi	r30, 0xBF	; 191
    360c:	ff 4f       	sbci	r31, 0xFF	; 255
    360e:	42 c7       	rjmp	.+3716   	; 0x4494 <__tablejump2__>
    3610:	40 91 19 04 	lds	r20, 0x0419	; 0x800419 <s_rx_d+0x5>
    3614:	50 91 1a 04 	lds	r21, 0x041A	; 0x80041a <s_rx_d+0x6>
    3618:	60 91 17 04 	lds	r22, 0x0417	; 0x800417 <s_rx_d+0x3>
    361c:	70 91 18 04 	lds	r23, 0x0418	; 0x800418 <s_rx_d+0x4>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3620:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <s_rx_d+0x2>
    3624:	0f 91       	pop	r16
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_SMARTLCD)

		else if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC) {
			switch (cmd) {
				case TWI_SMART_LCD_CMD_SHOW_CLK_STATE:
					isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100(data[2], (uint16_t) (data[3] | (data[4] << 8)), (int16_t) (data[5] | (data[6] << 8)));
    3626:	ef 90       	pop	r14
    3628:	cf 90       	pop	r12
				break;

				case TWI_SMART_LCD_CMD_SHOW_YEAR_MON_DAY:
					isr_lcd_10mhz_ref_osc_show_date(data[2] | (data[3] << 8), data[4], data[5]);
    362a:	af 90       	pop	r10
    362c:	8f 90       	pop	r8
    362e:	b6 cc       	rjmp	.-1684   	; 0x2f9c <isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100>
    3630:	40 91 19 04 	lds	r20, 0x0419	; 0x800419 <s_rx_d+0x5>
    3634:	60 91 18 04 	lds	r22, 0x0418	; 0x800418 <s_rx_d+0x4>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3638:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <s_rx_d+0x2>
    363c:	90 91 17 04 	lds	r25, 0x0417	; 0x800417 <s_rx_d+0x3>
    3640:	0f 91       	pop	r16
				case TWI_SMART_LCD_CMD_SHOW_CLK_STATE:
					isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100(data[2], (uint16_t) (data[3] | (data[4] << 8)), (int16_t) (data[5] | (data[6] << 8)));
				break;

				case TWI_SMART_LCD_CMD_SHOW_YEAR_MON_DAY:
					isr_lcd_10mhz_ref_osc_show_date(data[2] | (data[3] << 8), data[4], data[5]);
    3642:	ef 90       	pop	r14
    3644:	cf 90       	pop	r12
				break;

				case TWI_SMART_LCD_CMD_SHOW_HR_MIN_SEC:
					isr_lcd_10mhz_ref_osc_show_time(data[2], data[3], data[4]);
    3646:	af 90       	pop	r10
    3648:	8f 90       	pop	r8
    364a:	ca cc       	rjmp	.-1644   	; 0x2fe0 <isr_lcd_10mhz_ref_osc_show_date>
    364c:	40 91 18 04 	lds	r20, 0x0418	; 0x800418 <s_rx_d+0x4>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3650:	60 91 17 04 	lds	r22, 0x0417	; 0x800417 <s_rx_d+0x3>
    3654:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <s_rx_d+0x2>
				case TWI_SMART_LCD_CMD_SHOW_YEAR_MON_DAY:
					isr_lcd_10mhz_ref_osc_show_date(data[2] | (data[3] << 8), data[4], data[5]);
				break;

				case TWI_SMART_LCD_CMD_SHOW_HR_MIN_SEC:
					isr_lcd_10mhz_ref_osc_show_time(data[2], data[3], data[4]);
    3658:	0f 91       	pop	r16
    365a:	ef 90       	pop	r14
				break;

				case TWI_SMART_LCD_CMD_SHOW_PPB:
					isr_lcd_10mhz_ref_osc_show_ppm((int16_t) (data[2] | (data[3] << 8)), data[4] | (data[5] << 8));
    365c:	cf 90       	pop	r12
    365e:	af 90       	pop	r10
    3660:	8f 90       	pop	r8
    3662:	e1 cc       	rjmp	.-1598   	; 0x3026 <isr_lcd_10mhz_ref_osc_show_time>
    3664:	60 91 18 04 	lds	r22, 0x0418	; 0x800418 <s_rx_d+0x4>
    3668:	70 91 19 04 	lds	r23, 0x0419	; 0x800419 <s_rx_d+0x5>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    366c:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <s_rx_d+0x2>
    3670:	90 91 17 04 	lds	r25, 0x0417	; 0x800417 <s_rx_d+0x3>
				case TWI_SMART_LCD_CMD_SHOW_HR_MIN_SEC:
					isr_lcd_10mhz_ref_osc_show_time(data[2], data[3], data[4]);
				break;

				case TWI_SMART_LCD_CMD_SHOW_PPB:
					isr_lcd_10mhz_ref_osc_show_ppm((int16_t) (data[2] | (data[3] << 8)), data[4] | (data[5] << 8));
    3674:	0f 91       	pop	r16
				break;

				case TWI_SMART_LCD_CMD_SHOW_TCXO_PWM:
					isr_lcd_10mhz_ref_osc_show_pwm(data[2], data[3]);
    3676:	ef 90       	pop	r14
    3678:	cf 90       	pop	r12
    367a:	af 90       	pop	r10
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    367c:	8f 90       	pop	r8
    367e:	f1 cc       	rjmp	.-1566   	; 0x3062 <isr_lcd_10mhz_ref_osc_show_ppm>
    3680:	60 91 17 04 	lds	r22, 0x0417	; 0x800417 <s_rx_d+0x3>
    3684:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <s_rx_d+0x2>
				case TWI_SMART_LCD_CMD_SHOW_PPB:
					isr_lcd_10mhz_ref_osc_show_ppm((int16_t) (data[2] | (data[3] << 8)), data[4] | (data[5] << 8));
				break;

				case TWI_SMART_LCD_CMD_SHOW_TCXO_PWM:
					isr_lcd_10mhz_ref_osc_show_pwm(data[2], data[3]);
    3688:	0f 91       	pop	r16
				break;

				case TWI_SMART_LCD_CMD_SHOW_TCXO_VC:
					isr_lcd_10mhz_ref_osc_show_pv(data[2], data[3] | (data[4] << 8));
    368a:	ef 90       	pop	r14
    368c:	cf 90       	pop	r12
    368e:	af 90       	pop	r10
    3690:	8f 90       	pop	r8
    3692:	03 cd       	rjmp	.-1530   	; 0x309a <isr_lcd_10mhz_ref_osc_show_pwm>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3694:	60 91 17 04 	lds	r22, 0x0417	; 0x800417 <s_rx_d+0x3>
    3698:	70 91 18 04 	lds	r23, 0x0418	; 0x800418 <s_rx_d+0x4>
				case TWI_SMART_LCD_CMD_SHOW_TCXO_PWM:
					isr_lcd_10mhz_ref_osc_show_pwm(data[2], data[3]);
				break;

				case TWI_SMART_LCD_CMD_SHOW_TCXO_VC:
					isr_lcd_10mhz_ref_osc_show_pv(data[2], data[3] | (data[4] << 8));
    369c:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <s_rx_d+0x2>
				break;

				case TWI_SMART_LCD_CMD_SHOW_SATS:
					isr_lcd_10mhz_ref_osc_show_sat_use(data[2], data[3], data[4]);
    36a0:	0f 91       	pop	r16
    36a2:	ef 90       	pop	r14
    36a4:	cf 90       	pop	r12
    36a6:	af 90       	pop	r10
    36a8:	8f 90       	pop	r8
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    36aa:	09 cd       	rjmp	.-1518   	; 0x30be <isr_lcd_10mhz_ref_osc_show_pv>
    36ac:	40 91 18 04 	lds	r20, 0x0418	; 0x800418 <s_rx_d+0x4>
    36b0:	60 91 17 04 	lds	r22, 0x0417	; 0x800417 <s_rx_d+0x3>
				case TWI_SMART_LCD_CMD_SHOW_TCXO_VC:
					isr_lcd_10mhz_ref_osc_show_pv(data[2], data[3] | (data[4] << 8));
				break;

				case TWI_SMART_LCD_CMD_SHOW_SATS:
					isr_lcd_10mhz_ref_osc_show_sat_use(data[2], data[3], data[4]);
    36b4:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <s_rx_d+0x2>
				break;

				case TWI_SMART_LCD_CMD_SHOW_DOP:
					isr_lcd_10mhz_ref_osc_show_sat_dop(data[2] | (data[3] << 8));
    36b8:	0f 91       	pop	r16
    36ba:	ef 90       	pop	r14
    36bc:	cf 90       	pop	r12
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    36be:	af 90       	pop	r10
    36c0:	8f 90       	pop	r8
    36c2:	14 cd       	rjmp	.-1496   	; 0x30ec <isr_lcd_10mhz_ref_osc_show_sat_use>
    36c4:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <s_rx_d+0x2>
				case TWI_SMART_LCD_CMD_SHOW_SATS:
					isr_lcd_10mhz_ref_osc_show_sat_use(data[2], data[3], data[4]);
				break;

				case TWI_SMART_LCD_CMD_SHOW_DOP:
					isr_lcd_10mhz_ref_osc_show_sat_dop(data[2] | (data[3] << 8));
    36c8:	90 91 17 04 	lds	r25, 0x0417	; 0x800417 <s_rx_d+0x3>
				break;

				case TWI_SMART_LCD_CMD_SHOW_POS_STATE:
					isr_lcd_10mhz_ref_osc_show_pos_state(data[2], data[3]);
    36cc:	0f 91       	pop	r16
    36ce:	ef 90       	pop	r14
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    36d0:	cf 90       	pop	r12
    36d2:	af 90       	pop	r10
    36d4:	8f 90       	pop	r8
    36d6:	22 cd       	rjmp	.-1468   	; 0x311c <isr_lcd_10mhz_ref_osc_show_sat_dop>
    36d8:	60 91 17 04 	lds	r22, 0x0417	; 0x800417 <s_rx_d+0x3>
				case TWI_SMART_LCD_CMD_SHOW_DOP:
					isr_lcd_10mhz_ref_osc_show_sat_dop(data[2] | (data[3] << 8));
				break;

				case TWI_SMART_LCD_CMD_SHOW_POS_STATE:
					isr_lcd_10mhz_ref_osc_show_pos_state(data[2], data[3]);
    36dc:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <s_rx_d+0x2>
				break;

				case TWI_SMART_LCD_CMD_SHOW_POS_LAT:
					isr_lcd_10mhz_ref_osc_show_pos_lat(data[2], data[3], data[4], data[5] | (data[6] << 8));
    36e0:	0f 91       	pop	r16
    36e2:	ef 90       	pop	r14
    36e4:	cf 90       	pop	r12
    36e6:	af 90       	pop	r10
    36e8:	8f 90       	pop	r8
    36ea:	29 cd       	rjmp	.-1454   	; 0x313e <isr_lcd_10mhz_ref_osc_show_pos_state>
    36ec:	20 91 19 04 	lds	r18, 0x0419	; 0x800419 <s_rx_d+0x5>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    36f0:	30 91 1a 04 	lds	r19, 0x041A	; 0x80041a <s_rx_d+0x6>
    36f4:	40 91 18 04 	lds	r20, 0x0418	; 0x800418 <s_rx_d+0x4>
    36f8:	60 91 17 04 	lds	r22, 0x0417	; 0x800417 <s_rx_d+0x3>
				case TWI_SMART_LCD_CMD_SHOW_POS_LAT:
					isr_lcd_10mhz_ref_osc_show_pos_lat(data[2], data[3], data[4], data[5] | (data[6] << 8));
				break;

				case TWI_SMART_LCD_CMD_SHOW_POS_LON:
					isr_lcd_10mhz_ref_osc_show_pos_lon(data[2], data[3], data[4], data[5] | (data[6] << 8));
    36fc:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <s_rx_d+0x2>
    3700:	0f 91       	pop	r16
    3702:	ef 90       	pop	r14
    3704:	cf 90       	pop	r12
    3706:	af 90       	pop	r10
    3708:	8f 90       	pop	r8
    370a:	2b cd       	rjmp	.-1450   	; 0x3162 <isr_lcd_10mhz_ref_osc_show_pos_lat>
    370c:	20 91 19 04 	lds	r18, 0x0419	; 0x800419 <s_rx_d+0x5>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3710:	30 91 1a 04 	lds	r19, 0x041A	; 0x80041a <s_rx_d+0x6>
    3714:	40 91 18 04 	lds	r20, 0x0418	; 0x800418 <s_rx_d+0x4>
				case TWI_SMART_LCD_CMD_SHOW_POS_LAT:
					isr_lcd_10mhz_ref_osc_show_pos_lat(data[2], data[3], data[4], data[5] | (data[6] << 8));
				break;

				case TWI_SMART_LCD_CMD_SHOW_POS_LON:
					isr_lcd_10mhz_ref_osc_show_pos_lon(data[2], data[3], data[4], data[5] | (data[6] << 8));
    3718:	60 91 17 04 	lds	r22, 0x0417	; 0x800417 <s_rx_d+0x3>
				break;

				case TWI_SMART_LCD_CMD_SHOW_POS_HEIGHT:
					isr_lcd_10mhz_ref_osc_show_pos_height((data[2] | (data[3] << 8)), data[4]);
    371c:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <s_rx_d+0x2>
    3720:	0f 91       	pop	r16
    3722:	ef 90       	pop	r14
    3724:	cf 90       	pop	r12
    3726:	af 90       	pop	r10
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3728:	8f 90       	pop	r8
    372a:	3e cd       	rjmp	.-1412   	; 0x31a8 <isr_lcd_10mhz_ref_osc_show_pos_lon>
    372c:	60 91 18 04 	lds	r22, 0x0418	; 0x800418 <s_rx_d+0x4>
    3730:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <s_rx_d+0x2>
				case TWI_SMART_LCD_CMD_SHOW_POS_LON:
					isr_lcd_10mhz_ref_osc_show_pos_lon(data[2], data[3], data[4], data[5] | (data[6] << 8));
				break;

				case TWI_SMART_LCD_CMD_SHOW_POS_HEIGHT:
					isr_lcd_10mhz_ref_osc_show_pos_height((data[2] | (data[3] << 8)), data[4]);
    3734:	90 91 17 04 	lds	r25, 0x0417	; 0x800417 <s_rx_d+0x3>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3738:	0f 91       	pop	r16
    373a:	ef 90       	pop	r14
    373c:	cf 90       	pop	r12
    373e:	af 90       	pop	r10
    3740:	8f 90       	pop	r8
    3742:	55 cd       	rjmp	.-1366   	; 0x31ee <isr_lcd_10mhz_ref_osc_show_pos_height>
    3744:	0f 91       	pop	r16
    3746:	ef 90       	pop	r14
    3748:	cf 90       	pop	r12
    374a:	af 90       	pop	r10
    374c:	8f 90       	pop	r8
    374e:	08 95       	ret

00003750 <__vector_24__bottom>:


uint8_t __vector_24__bottom(uint8_t tws, uint8_t twd, uint8_t twcr_cur)
{
    3750:	cf 93       	push	r28
    3752:	df 93       	push	r29
    3754:	d6 2f       	mov	r29, r22
	static uint8_t pos_i	= 0;
	static uint8_t pos_o	= 0;
	static uint8_t cnt_i	= 0;
	static uint8_t cnt_o	= 0;
	uint8_t twcr_new = twcr_cur & 0b01000101;
    3756:	c4 2f       	mov	r28, r20
    3758:	c5 74       	andi	r28, 0x45	; 69

	switch(tws) {
    375a:	88 36       	cpi	r24, 0x68	; 104
    375c:	09 f4       	brne	.+2      	; 0x3760 <__vector_24__bottom+0x10>
    375e:	8b c0       	rjmp	.+278    	; 0x3876 <__vector_24__bottom+0x126>
    3760:	08 f0       	brcs	.+2      	; 0x3764 <__vector_24__bottom+0x14>
    3762:	42 c0       	rjmp	.+132    	; 0x37e8 <__vector_24__bottom+0x98>
    3764:	80 33       	cpi	r24, 0x30	; 48
    3766:	09 f4       	brne	.+2      	; 0x376a <__vector_24__bottom+0x1a>
    3768:	7f c0       	rjmp	.+254    	; 0x3868 <__vector_24__bottom+0x118>
    376a:	48 f5       	brcc	.+82     	; 0x37be <__vector_24__bottom+0x6e>
    376c:	80 31       	cpi	r24, 0x10	; 16
    376e:	09 f4       	brne	.+2      	; 0x3772 <__vector_24__bottom+0x22>
    3770:	66 c0       	rjmp	.+204    	; 0x383e <__vector_24__bottom+0xee>
    3772:	d8 f4       	brcc	.+54     	; 0x37aa <__vector_24__bottom+0x5a>
    3774:	88 23       	and	r24, r24
    3776:	09 f4       	brne	.+2      	; 0x377a <__vector_24__bottom+0x2a>
    3778:	61 c1       	rjmp	.+706    	; 0x3a3c <__vector_24__bottom+0x2ec>
    377a:	88 30       	cpi	r24, 0x08	; 8
    377c:	09 f0       	breq	.+2      	; 0x3780 <__vector_24__bottom+0x30>
    377e:	5e c1       	rjmp	.+700    	; 0x3a3c <__vector_24__bottom+0x2ec>

	/* Master Transmitter Mode */

	case TWI_TWSR_START:						// Start condition transmitted
		s_tx_lock = 1;
		pos_o = 0;
    3780:	10 92 10 04 	sts	0x0410, r1	; 0x800410 <pos_o.3082>

		cnt_o = 2;								// TEST
    3784:	82 e0       	ldi	r24, 0x02	; 2
    3786:	80 93 0f 04 	sts	0x040F, r24	; 0x80040f <cnt_o.3084>
		s_tx_d[0] = (0x12 << TWD1) | (0b0 << TWD0);	// TEST
    378a:	84 e2       	ldi	r24, 0x24	; 36
    378c:	80 93 24 04 	sts	0x0424, r24	; 0x800424 <s_tx_d>
		s_tx_d[1] = 0x34;						// TEST
    3790:	84 e3       	ldi	r24, 0x34	; 52
    3792:	80 93 25 04 	sts	0x0425, r24	; 0x800425 <s_tx_d+0x1>
		s_tx_d[2] = 0x56;						// TEST
    3796:	86 e5       	ldi	r24, 0x56	; 86
    3798:	80 93 26 04 	sts	0x0426, r24	; 0x800426 <s_tx_d+0x2>
		s_tx_d[3] = 0x78;						// TEST
    379c:	88 e7       	ldi	r24, 0x78	; 120
    379e:	80 93 27 04 	sts	0x0427, r24	; 0x800427 <s_tx_d+0x3>
		s_tx_d[4] = 0x9a;						// TEST
    37a2:	8a e9       	ldi	r24, 0x9A	; 154
    37a4:	80 93 28 04 	sts	0x0428, r24	; 0x800428 <s_tx_d+0x4>
    37a8:	4a c0       	rjmp	.+148    	; 0x383e <__vector_24__bottom+0xee>
	static uint8_t pos_o	= 0;
	static uint8_t cnt_i	= 0;
	static uint8_t cnt_o	= 0;
	uint8_t twcr_new = twcr_cur & 0b01000101;

	switch(tws) {
    37aa:	80 32       	cpi	r24, 0x20	; 32
    37ac:	09 f4       	brne	.+2      	; 0x37b0 <__vector_24__bottom+0x60>
    37ae:	5d c0       	rjmp	.+186    	; 0x386a <__vector_24__bottom+0x11a>
    37b0:	88 32       	cpi	r24, 0x28	; 40
    37b2:	09 f4       	brne	.+2      	; 0x37b6 <__vector_24__bottom+0x66>
    37b4:	48 c0       	rjmp	.+144    	; 0x3846 <__vector_24__bottom+0xf6>
    37b6:	88 31       	cpi	r24, 0x18	; 24
    37b8:	09 f0       	breq	.+2      	; 0x37bc <__vector_24__bottom+0x6c>
    37ba:	40 c1       	rjmp	.+640    	; 0x3a3c <__vector_24__bottom+0x2ec>
    37bc:	41 c0       	rjmp	.+130    	; 0x3840 <__vector_24__bottom+0xf0>
    37be:	88 34       	cpi	r24, 0x48	; 72
    37c0:	09 f4       	brne	.+2      	; 0x37c4 <__vector_24__bottom+0x74>
    37c2:	57 c0       	rjmp	.+174    	; 0x3872 <__vector_24__bottom+0x122>
    37c4:	38 f4       	brcc	.+14     	; 0x37d4 <__vector_24__bottom+0x84>
    37c6:	88 33       	cpi	r24, 0x38	; 56
    37c8:	09 f4       	brne	.+2      	; 0x37cc <__vector_24__bottom+0x7c>
    37ca:	51 c0       	rjmp	.+162    	; 0x386e <__vector_24__bottom+0x11e>
    37cc:	80 34       	cpi	r24, 0x40	; 64
    37ce:	09 f4       	brne	.+2      	; 0x37d2 <__vector_24__bottom+0x82>
    37d0:	50 c0       	rjmp	.+160    	; 0x3872 <__vector_24__bottom+0x122>
    37d2:	34 c1       	rjmp	.+616    	; 0x3a3c <__vector_24__bottom+0x2ec>
    37d4:	88 35       	cpi	r24, 0x58	; 88
    37d6:	09 f4       	brne	.+2      	; 0x37da <__vector_24__bottom+0x8a>
    37d8:	4c c0       	rjmp	.+152    	; 0x3872 <__vector_24__bottom+0x122>
    37da:	80 36       	cpi	r24, 0x60	; 96
    37dc:	09 f4       	brne	.+2      	; 0x37e0 <__vector_24__bottom+0x90>
    37de:	4b c0       	rjmp	.+150    	; 0x3876 <__vector_24__bottom+0x126>
    37e0:	80 35       	cpi	r24, 0x50	; 80
    37e2:	09 f4       	brne	.+2      	; 0x37e6 <__vector_24__bottom+0x96>
    37e4:	46 c0       	rjmp	.+140    	; 0x3872 <__vector_24__bottom+0x122>
    37e6:	2a c1       	rjmp	.+596    	; 0x3a3c <__vector_24__bottom+0x2ec>
    37e8:	80 3a       	cpi	r24, 0xA0	; 160
    37ea:	09 f4       	brne	.+2      	; 0x37ee <__vector_24__bottom+0x9e>
    37ec:	03 c1       	rjmp	.+518    	; 0x39f4 <__vector_24__bottom+0x2a4>
    37ee:	a8 f4       	brcc	.+42     	; 0x381a <__vector_24__bottom+0xca>
    37f0:	80 38       	cpi	r24, 0x80	; 128
    37f2:	09 f4       	brne	.+2      	; 0x37f6 <__vector_24__bottom+0xa6>
    37f4:	4d c0       	rjmp	.+154    	; 0x3890 <__vector_24__bottom+0x140>
    37f6:	38 f4       	brcc	.+14     	; 0x3806 <__vector_24__bottom+0xb6>
    37f8:	80 37       	cpi	r24, 0x70	; 112
    37fa:	09 f4       	brne	.+2      	; 0x37fe <__vector_24__bottom+0xae>
    37fc:	41 c0       	rjmp	.+130    	; 0x3880 <__vector_24__bottom+0x130>
    37fe:	88 37       	cpi	r24, 0x78	; 120
    3800:	09 f4       	brne	.+2      	; 0x3804 <__vector_24__bottom+0xb4>
    3802:	3e c0       	rjmp	.+124    	; 0x3880 <__vector_24__bottom+0x130>
    3804:	1b c1       	rjmp	.+566    	; 0x3a3c <__vector_24__bottom+0x2ec>
    3806:	80 39       	cpi	r24, 0x90	; 144
    3808:	09 f4       	brne	.+2      	; 0x380c <__vector_24__bottom+0xbc>
    380a:	42 c0       	rjmp	.+132    	; 0x3890 <__vector_24__bottom+0x140>
    380c:	88 39       	cpi	r24, 0x98	; 152
    380e:	09 f4       	brne	.+2      	; 0x3812 <__vector_24__bottom+0xc2>
    3810:	e1 c0       	rjmp	.+450    	; 0x39d4 <__vector_24__bottom+0x284>
    3812:	88 38       	cpi	r24, 0x88	; 136
    3814:	09 f0       	breq	.+2      	; 0x3818 <__vector_24__bottom+0xc8>
    3816:	12 c1       	rjmp	.+548    	; 0x3a3c <__vector_24__bottom+0x2ec>
    3818:	dd c0       	rjmp	.+442    	; 0x39d4 <__vector_24__bottom+0x284>
    381a:	88 3b       	cpi	r24, 0xB8	; 184
    381c:	09 f4       	brne	.+2      	; 0x3820 <__vector_24__bottom+0xd0>
    381e:	f3 c0       	rjmp	.+486    	; 0x3a06 <__vector_24__bottom+0x2b6>
    3820:	20 f4       	brcc	.+8      	; 0x382a <__vector_24__bottom+0xda>
    3822:	88 3a       	cpi	r24, 0xA8	; 168
    3824:	09 f4       	brne	.+2      	; 0x3828 <__vector_24__bottom+0xd8>
    3826:	ef c0       	rjmp	.+478    	; 0x3a06 <__vector_24__bottom+0x2b6>
    3828:	09 c1       	rjmp	.+530    	; 0x3a3c <__vector_24__bottom+0x2ec>
    382a:	88 3c       	cpi	r24, 0xC8	; 200
    382c:	09 f4       	brne	.+2      	; 0x3830 <__vector_24__bottom+0xe0>
    382e:	04 c1       	rjmp	.+520    	; 0x3a38 <__vector_24__bottom+0x2e8>
    3830:	88 3f       	cpi	r24, 0xF8	; 248
    3832:	09 f4       	brne	.+2      	; 0x3836 <__vector_24__bottom+0xe6>
    3834:	03 c1       	rjmp	.+518    	; 0x3a3c <__vector_24__bottom+0x2ec>
    3836:	80 3c       	cpi	r24, 0xC0	; 192
    3838:	09 f4       	brne	.+2      	; 0x383c <__vector_24__bottom+0xec>
    383a:	fe c0       	rjmp	.+508    	; 0x3a38 <__vector_24__bottom+0x2e8>
    383c:	ff c0       	rjmp	.+510    	; 0x3a3c <__vector_24__bottom+0x2ec>
		s_tx_d[2] = 0x56;						// TEST
		s_tx_d[3] = 0x78;						// TEST
		s_tx_d[4] = 0x9a;						// TEST
		// fall-through.
	case TWI_TWSR_REPEATEDSTART:				// Repeated start condition transmitted
		nop();
    383e:	00 00       	nop
		// fall-through.
	case TWI_TWSR_M_SLAW_ADDR_ACK:				// SLA+W transmitted and ACK received
		TWDR = s_tx_d[pos_o++];
    3840:	e0 91 10 04 	lds	r30, 0x0410	; 0x800410 <pos_o.3082>
    3844:	06 c0       	rjmp	.+12     	; 0x3852 <__vector_24__bottom+0x102>
	case TWI_TWSR_M_SLAW_ADDR_NACK:				// SLA+W transmitted and NACK received
		twcr_new |= _BV(TWSTO);					// Send STOP
	break;

	case TWI_TWSR_M_SLAW_DATA_ACK:				// Data byte sent and ACK received
		if (pos_o < cnt_o) {
    3846:	e0 91 10 04 	lds	r30, 0x0410	; 0x800410 <pos_o.3082>
    384a:	80 91 0f 04 	lds	r24, 0x040F	; 0x80040f <cnt_o.3084>
    384e:	e8 17       	cp	r30, r24
    3850:	58 f4       	brcc	.+22     	; 0x3868 <__vector_24__bottom+0x118>
			TWDR = s_tx_d[pos_o++];				// Send new data byte
    3852:	81 e0       	ldi	r24, 0x01	; 1
    3854:	8e 0f       	add	r24, r30
    3856:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <pos_o.3082>
    385a:	f0 e0       	ldi	r31, 0x00	; 0
    385c:	ec 5d       	subi	r30, 0xDC	; 220
    385e:	fb 4f       	sbci	r31, 0xFB	; 251
    3860:	80 81       	ld	r24, Z
    3862:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
		} else {
			s_tx_lock = 0;
			s_twi_tx_done();					// Message sent
    3866:	eb c0       	rjmp	.+470    	; 0x3a3e <__vector_24__bottom+0x2ee>
			twcr_new |= _BV(TWSTO);				// Send STOP - no more data available
    3868:	07 dd       	rcall	.-1522   	; 0x3278 <s_twi_tx_done>
    386a:	c0 61       	ori	r28, 0x10	; 16
		s_twi_tx_done();						// Message failure
		twcr_new |= _BV(TWSTO);					// Send STOP - due to an error or slave not ready situation
	break;

	case TWI_TWSR_M_SLAW_ARBIT_LOST:			// Arbitration lost
		twcr_new |= _BV(TWSTA);					// Send START (again)
    386c:	e8 c0       	rjmp	.+464    	; 0x3a3e <__vector_24__bottom+0x2ee>
	break;
    386e:	c0 62       	ori	r28, 0x20	; 32
	case TWI_TWSR_M_SLAR_DATA_ACK:
		nop();
	break;

	case TWI_TWSR_M_SLAR_DATA_NACK:
		nop();
    3870:	e6 c0       	rjmp	.+460    	; 0x3a3e <__vector_24__bottom+0x2ee>
	break;
    3872:	00 00       	nop

	/* Slave Receiver Mode */

	case TWI_TWSR_S_SLAW_MYADDR_RECEIVED:		// SLA+W received and ACK returned
	case TWI_TWSR_S_SLAW_MYADDR_ARBIT_LOST:
		mem_set(s_rx_d, TWI_SMART_LCD_SLAVE_BUF_LEN, 0x00);
    3874:	e4 c0       	rjmp	.+456    	; 0x3a3e <__vector_24__bottom+0x2ee>
    3876:	40 e0       	ldi	r20, 0x00	; 0
    3878:	60 e1       	ldi	r22, 0x10	; 16
    387a:	84 e1       	ldi	r24, 0x14	; 20
    387c:	94 e0       	ldi	r25, 0x04	; 4
		twcr_new |= _BV(TWEA);					// Send ACK
	break;

	case TWI_TWSR_S_SLAW_OMNIADDR_RECEIVED:		// GCA received and ACK sent
	case TWI_TWSR_S_SLAW_OMNIADDR_ARBIT_LOST:
		s_rx_d[0] = twd >> 1;					// GCA
    387e:	2d d1       	rcall	.+602    	; 0x3ada <mem_set>
    3880:	d6 95       	lsr	r29
    3882:	d0 93 14 04 	sts	0x0414, r29	; 0x800414 <s_rx_d>
		pos_i = 1;								// Starting of reception
    3886:	81 e0       	ldi	r24, 0x01	; 1
    3888:	80 93 0e 04 	sts	0x040E, r24	; 0x80040e <pos_i.3081>
		twcr_new |= _BV(TWEA);					// Send after next coming data byte ACK
	break;
    388c:	c0 64       	ori	r28, 0x40	; 64

	case TWI_TWSR_S_SLAW_MYADDR_DATA_ACK:		// Data after SLA+W received
	case TWI_TWSR_S_SLAW_OMNIADDR_DATA_ACK:
		if (cnt_i != 0b1111) {					// Closed parameter form
    388e:	d7 c0       	rjmp	.+430    	; 0x3a3e <__vector_24__bottom+0x2ee>
    3890:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <cnt_i.3083>
    3894:	8f 30       	cpi	r24, 0x0F	; 15
    3896:	09 f4       	brne	.+2      	; 0x389a <__vector_24__bottom+0x14a>
			if (pos_i < 0b1111) {
    3898:	96 c0       	rjmp	.+300    	; 0x39c6 <__vector_24__bottom+0x276>
    389a:	90 91 0e 04 	lds	r25, 0x040E	; 0x80040e <pos_i.3081>
    389e:	9f 30       	cpi	r25, 0x0F	; 15
    38a0:	08 f0       	brcs	.+2      	; 0x38a4 <__vector_24__bottom+0x154>
				s_rx_d[pos_i] = twd;			// [1]=cmd, [2..]=parameters
    38a2:	87 c0       	rjmp	.+270    	; 0x39b2 <__vector_24__bottom+0x262>
    38a4:	e9 2f       	mov	r30, r25
    38a6:	f0 e0       	ldi	r31, 0x00	; 0
    38a8:	ec 5e       	subi	r30, 0xEC	; 236
    38aa:	fb 4f       	sbci	r31, 0xFB	; 251
			}

			if (pos_i == 1) {
    38ac:	d0 83       	st	Z, r29
    38ae:	91 30       	cpi	r25, 0x01	; 1
    38b0:	09 f0       	breq	.+2      	; 0x38b4 <__vector_24__bottom+0x164>
				/* Load receive counter */
				if (s_rx_d[0] == TWI_SLAVE_ADDR_SMARTLCD) {
    38b2:	6b c0       	rjmp	.+214    	; 0x398a <__vector_24__bottom+0x23a>
    38b4:	80 91 14 04 	lds	r24, 0x0414	; 0x800414 <s_rx_d>
    38b8:	82 32       	cpi	r24, 0x22	; 34
    38ba:	09 f0       	breq	.+2      	; 0x38be <__vector_24__bottom+0x16e>
					cnt_i = 0;
    38bc:	7c c0       	rjmp	.+248    	; 0x39b6 <__vector_24__bottom+0x266>
    38be:	10 92 0d 04 	sts	0x040D, r1	; 0x80040d <cnt_i.3083>
					cnt_o = 0;
    38c2:	10 92 0f 04 	sts	0x040F, r1	; 0x80040f <cnt_o.3084>

					switch (s_rx_d[1]) {
    38c6:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <s_rx_d+0x1>
    38ca:	8a 33       	cpi	r24, 0x3A	; 58
    38cc:	09 f4       	brne	.+2      	; 0x38d0 <__vector_24__bottom+0x180>
    38ce:	6d c0       	rjmp	.+218    	; 0x39aa <__vector_24__bottom+0x25a>
    38d0:	10 f5       	brcc	.+68     	; 0x3916 <__vector_24__bottom+0x1c6>
    38d2:	80 32       	cpi	r24, 0x20	; 32
    38d4:	09 f4       	brne	.+2      	; 0x38d8 <__vector_24__bottom+0x188>
    38d6:	45 c0       	rjmp	.+138    	; 0x3962 <__vector_24__bottom+0x212>
    38d8:	78 f4       	brcc	.+30     	; 0x38f8 <__vector_24__bottom+0x1a8>
    38da:	82 30       	cpi	r24, 0x02	; 2
    38dc:	09 f4       	brne	.+2      	; 0x38e0 <__vector_24__bottom+0x190>
    38de:	65 c0       	rjmp	.+202    	; 0x39aa <__vector_24__bottom+0x25a>
    38e0:	28 f4       	brcc	.+10     	; 0x38ec <__vector_24__bottom+0x19c>
    38e2:	88 23       	and	r24, r24
    38e4:	a1 f1       	breq	.+104    	; 0x394e <__vector_24__bottom+0x1fe>
    38e6:	81 30       	cpi	r24, 0x01	; 1
    38e8:	b1 f1       	breq	.+108    	; 0x3956 <__vector_24__bottom+0x206>
    38ea:	65 c0       	rjmp	.+202    	; 0x39b6 <__vector_24__bottom+0x266>
    38ec:	83 30       	cpi	r24, 0x03	; 3
    38ee:	99 f1       	breq	.+102    	; 0x3956 <__vector_24__bottom+0x206>
    38f0:	84 31       	cpi	r24, 0x14	; 20
    38f2:	09 f4       	brne	.+2      	; 0x38f6 <__vector_24__bottom+0x1a6>
    38f4:	5a c0       	rjmp	.+180    	; 0x39aa <__vector_24__bottom+0x25a>
    38f6:	5f c0       	rjmp	.+190    	; 0x39b6 <__vector_24__bottom+0x266>
    38f8:	84 33       	cpi	r24, 0x34	; 52
    38fa:	99 f1       	breq	.+102    	; 0x3962 <__vector_24__bottom+0x212>
    38fc:	30 f4       	brcc	.+12     	; 0x390a <__vector_24__bottom+0x1ba>
    38fe:	80 33       	cpi	r24, 0x30	; 48
    3900:	09 f4       	brne	.+2      	; 0x3904 <__vector_24__bottom+0x1b4>
    3902:	3f c0       	rjmp	.+126    	; 0x3982 <__vector_24__bottom+0x232>
    3904:	82 33       	cpi	r24, 0x32	; 50
    3906:	69 f1       	breq	.+90     	; 0x3962 <__vector_24__bottom+0x212>
    3908:	56 c0       	rjmp	.+172    	; 0x39b6 <__vector_24__bottom+0x266>
    390a:	86 33       	cpi	r24, 0x36	; 54
    390c:	51 f1       	breq	.+84     	; 0x3962 <__vector_24__bottom+0x212>
    390e:	88 33       	cpi	r24, 0x38	; 56
    3910:	09 f4       	brne	.+2      	; 0x3914 <__vector_24__bottom+0x1c4>
    3912:	4b c0       	rjmp	.+150    	; 0x39aa <__vector_24__bottom+0x25a>
    3914:	50 c0       	rjmp	.+160    	; 0x39b6 <__vector_24__bottom+0x266>
    3916:	85 38       	cpi	r24, 0x85	; 133
    3918:	41 f1       	breq	.+80     	; 0x396a <__vector_24__bottom+0x21a>
    391a:	68 f4       	brcc	.+26     	; 0x3936 <__vector_24__bottom+0x1e6>
    391c:	82 38       	cpi	r24, 0x82	; 130
    391e:	29 f1       	breq	.+74     	; 0x396a <__vector_24__bottom+0x21a>
    3920:	28 f4       	brcc	.+10     	; 0x392c <__vector_24__bottom+0x1dc>
    3922:	80 38       	cpi	r24, 0x80	; 128
    3924:	51 f1       	breq	.+84     	; 0x397a <__vector_24__bottom+0x22a>
    3926:	81 38       	cpi	r24, 0x81	; 129
    3928:	21 f1       	breq	.+72     	; 0x3972 <__vector_24__bottom+0x222>
    392a:	45 c0       	rjmp	.+138    	; 0x39b6 <__vector_24__bottom+0x266>
    392c:	83 38       	cpi	r24, 0x83	; 131
    392e:	09 f1       	breq	.+66     	; 0x3972 <__vector_24__bottom+0x222>
    3930:	84 38       	cpi	r24, 0x84	; 132
    3932:	b9 f0       	breq	.+46     	; 0x3962 <__vector_24__bottom+0x212>
    3934:	40 c0       	rjmp	.+128    	; 0x39b6 <__vector_24__bottom+0x266>
    3936:	8b 38       	cpi	r24, 0x8B	; 139
    3938:	28 f4       	brcc	.+10     	; 0x3944 <__vector_24__bottom+0x1f4>
    393a:	89 38       	cpi	r24, 0x89	; 137
    393c:	90 f4       	brcc	.+36     	; 0x3962 <__vector_24__bottom+0x212>
    393e:	88 38       	cpi	r24, 0x88	; 136
    3940:	a1 f0       	breq	.+40     	; 0x396a <__vector_24__bottom+0x21a>
    3942:	39 c0       	rjmp	.+114    	; 0x39b6 <__vector_24__bottom+0x266>
    3944:	8d 38       	cpi	r24, 0x8D	; 141
    3946:	c8 f0       	brcs	.+50     	; 0x397a <__vector_24__bottom+0x22a>
    3948:	8d 38       	cpi	r24, 0x8D	; 141
    394a:	79 f0       	breq	.+30     	; 0x396a <__vector_24__bottom+0x21a>
						case TWI_SMART_LCD_CMD_NOOP:
							cnt_i = 1;
    394c:	34 c0       	rjmp	.+104    	; 0x39b6 <__vector_24__bottom+0x266>
    394e:	81 e0       	ldi	r24, 0x01	; 1
    3950:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <cnt_i.3083>
						break;


						case TWI_SMART_LCD_CMD_GET_VER:
						case TWI_SMART_LCD_CMD_GET_STATE:
							cnt_i = 1;
    3954:	30 c0       	rjmp	.+96     	; 0x39b6 <__vector_24__bottom+0x266>
    3956:	81 e0       	ldi	r24, 0x01	; 1
    3958:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <cnt_i.3083>
							cnt_o = 1;
    395c:	80 93 0f 04 	sts	0x040F, r24	; 0x80040f <cnt_o.3084>
						case TWI_SMART_LCD_CMD_DRAW_RECT:
						case TWI_SMART_LCD_CMD_DRAW_FILLED_RECT:
						case TWI_SMART_LCD_CMD_SHOW_DOP:
						case TWI_SMART_LCD_CMD_SHOW_POS_STATE:
						case TWI_SMART_LCD_CMD_SHOW_TCXO_PWM:
							cnt_i = 3;
    3960:	2a c0       	rjmp	.+84     	; 0x39b6 <__vector_24__bottom+0x266>
    3962:	83 e0       	ldi	r24, 0x03	; 3
    3964:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <cnt_i.3083>

						case TWI_SMART_LCD_CMD_SHOW_HR_MIN_SEC:
						case TWI_SMART_LCD_CMD_SHOW_POS_HEIGHT:
						case TWI_SMART_LCD_CMD_SHOW_SATS:
						case TWI_SMART_LCD_CMD_SHOW_TCXO_VC:
							cnt_i = 4;
    3968:	26 c0       	rjmp	.+76     	; 0x39b6 <__vector_24__bottom+0x266>
    396a:	84 e0       	ldi	r24, 0x04	; 4
    396c:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <cnt_i.3083>
						break;

						case TWI_SMART_LCD_CMD_SHOW_PPB:
						case TWI_SMART_LCD_CMD_SHOW_YEAR_MON_DAY:
							cnt_i = 5;
    3970:	22 c0       	rjmp	.+68     	; 0x39b6 <__vector_24__bottom+0x266>
    3972:	85 e0       	ldi	r24, 0x05	; 5
    3974:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <cnt_i.3083>
						break;

						case TWI_SMART_LCD_CMD_SHOW_CLK_STATE:
						case TWI_SMART_LCD_CMD_SHOW_POS_LAT:
						case TWI_SMART_LCD_CMD_SHOW_POS_LON:
							cnt_i = 6;
    3978:	1e c0       	rjmp	.+60     	; 0x39b6 <__vector_24__bottom+0x266>
    397a:	86 e0       	ldi	r24, 0x06	; 6
    397c:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <cnt_i.3083>
						break;
						
						case TWI_SMART_LCD_CMD_WRITE:
							cnt_i = TWI_SMART_LCD_SLAVE_BUF_LEN;	// Max length of incoming data
    3980:	1a c0       	rjmp	.+52     	; 0x39b6 <__vector_24__bottom+0x266>
    3982:	80 e1       	ldi	r24, 0x10	; 16
    3984:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <cnt_i.3083>
						break;
					}
				}
			}
			else if (pos_i == 2) {
    3988:	16 c0       	rjmp	.+44     	; 0x39b6 <__vector_24__bottom+0x266>
    398a:	92 30       	cpi	r25, 0x02	; 2
				if (s_rx_d[0] == TWI_SLAVE_ADDR_SMARTLCD) {
    398c:	91 f4       	brne	.+36     	; 0x39b2 <__vector_24__bottom+0x262>
    398e:	80 91 14 04 	lds	r24, 0x0414	; 0x800414 <s_rx_d>
    3992:	82 32       	cpi	r24, 0x22	; 34
					if (s_rx_d[1] == TWI_SMART_LCD_CMD_WRITE) {
    3994:	81 f4       	brne	.+32     	; 0x39b6 <__vector_24__bottom+0x266>
    3996:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <s_rx_d+0x1>
    399a:	80 33       	cpi	r24, 0x30	; 48
						/* Correct length of string to actual size */
						uint8_t str_len = s_rx_d[2];
    399c:	61 f4       	brne	.+24     	; 0x39b6 <__vector_24__bottom+0x266>
    399e:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <s_rx_d+0x2>
						cnt_i = ((str_len <= (TWI_SMART_LCD_SLAVE_BUF_LEN - 2)) && (str_len < 0b1111)) ?  (str_len + 2) : 2;
    39a2:	8f 30       	cpi	r24, 0x0F	; 15
    39a4:	10 f4       	brcc	.+4      	; 0x39aa <__vector_24__bottom+0x25a>
    39a6:	8e 5f       	subi	r24, 0xFE	; 254
    39a8:	01 c0       	rjmp	.+2      	; 0x39ac <__vector_24__bottom+0x25c>
    39aa:	82 e0       	ldi	r24, 0x02	; 2
    39ac:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <cnt_i.3083>
					}
				}
			}

			if (pos_i < 0b1110) {
    39b0:	02 c0       	rjmp	.+4      	; 0x39b6 <__vector_24__bottom+0x266>
    39b2:	9e 30       	cpi	r25, 0x0E	; 14
				if (++pos_i <= cnt_i) {
    39b4:	60 f4       	brcc	.+24     	; 0x39ce <__vector_24__bottom+0x27e>
    39b6:	9f 5f       	subi	r25, 0xFF	; 255
    39b8:	90 93 0e 04 	sts	0x040E, r25	; 0x80040e <pos_i.3081>
    39bc:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <cnt_i.3083>
    39c0:	89 17       	cp	r24, r25
    39c2:	28 f0       	brcs	.+10     	; 0x39ce <__vector_24__bottom+0x27e>
			} else {
				twcr_new &= ~_BV(TWEA);			// Send NACK
			}

		} else {								// Open parameter form
			s_rx_d[2] = twd;
    39c4:	39 c0       	rjmp	.+114    	; 0x3a38 <__vector_24__bottom+0x2e8>
    39c6:	d0 93 16 04 	sts	0x0416, r29	; 0x800416 <s_rx_d+0x2>
			if (!s_isr_twi_rcvd_command_open_form(s_rx_d, ++pos_i)) {
				twcr_new |= _BV(TWEA);			// Send ACK
			} else {
				pos_i = 0;
    39ca:	10 92 0e 04 	sts	0x040E, r1	; 0x80040e <pos_i.3081>
				twcr_new &= ~_BV(TWEA);			// Send NACK
    39ce:	c4 2f       	mov	r28, r20
    39d0:	c5 70       	andi	r28, 0x05	; 5
		}
	break;

	case TWI_TWSR_S_SLAW_MYADDR_DATA_NACK:		// NACK after last data byte sent
	case TWI_TWSR_S_SLAW_OMNIADDR_DATA_NACK:
		if (cnt_i != 0b1111) {
    39d2:	35 c0       	rjmp	.+106    	; 0x3a3e <__vector_24__bottom+0x2ee>
    39d4:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <cnt_i.3083>
			s_isr_twi_rcvd_command_closed_form(s_rx_d, pos_i);	// Call interpreter for closed form of parameters
    39d8:	8f 30       	cpi	r24, 0x0F	; 15
    39da:	09 f0       	breq	.+2      	; 0x39de <__vector_24__bottom+0x28e>
		} else {
			s_isr_twi_rcvd_command_open_form(s_rx_d, ++pos_i);	// Call interpreter for open form of parameters
		}
		pos_i = 0;
    39dc:	5c dc       	rcall	.-1864   	; 0x3296 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2>
    39de:	10 92 0e 04 	sts	0x040E, r1	; 0x80040e <pos_i.3081>
		cnt_i = 0;
    39e2:	10 92 0d 04 	sts	0x040D, r1	; 0x80040d <cnt_i.3083>
		mem_set(s_rx_d, 8, 0x00);
    39e6:	40 e0       	ldi	r20, 0x00	; 0
    39e8:	68 e0       	ldi	r22, 0x08	; 8
    39ea:	84 e1       	ldi	r24, 0x14	; 20
    39ec:	94 e0       	ldi	r25, 0x04	; 4
		twcr_new |= _BV(TWEA);					// TWI goes to unaddressed, be active again
    39ee:	75 d0       	rcall	.+234    	; 0x3ada <mem_set>
	break;

	case TWI_TWSR_S_SLAW_STOP_REPEATEDSTART_RECEIVED:	// STOP or RESTART received while still addressed as slave
		if (cnt_i != 0b1111) {
    39f0:	c0 64       	ori	r28, 0x40	; 64
    39f2:	25 c0       	rjmp	.+74     	; 0x3a3e <__vector_24__bottom+0x2ee>
    39f4:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <cnt_i.3083>
			s_isr_twi_rcvd_command_closed_form(s_rx_d, pos_i);	// Call interpreter for closed form of parameters
    39f8:	8f 30       	cpi	r24, 0x0F	; 15
		} else {
			s_isr_twi_rcvd_command_open_form(s_rx_d, ++pos_i);	// Call interpreter for open form of parameters
		}
		pos_i = 0;
    39fa:	09 f0       	breq	.+2      	; 0x39fe <__vector_24__bottom+0x2ae>
    39fc:	4c dc       	rcall	.-1896   	; 0x3296 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2>
		twcr_new |= _BV(TWEA);					// TWI goes to unaddressed, be active again
    39fe:	10 92 0e 04 	sts	0x040E, r1	; 0x80040e <pos_i.3081>

	/* Slave Transmitter Mode */

	case TWI_TWSR_S_SLAR_MYADDR_DATA_ACK:		// SLA+R received and ACK has been returned
	case TWI_TWSR_S_SLAR_OMNIADDR_DATA_ACK:		// Data sent and ACK has been returned
		pos_o = 0;
    3a02:	c0 64       	ori	r28, 0x40	; 64
    3a04:	1c c0       	rjmp	.+56     	; 0x3a3e <__vector_24__bottom+0x2ee>
		cnt_o = s_rx_ret_len;
    3a06:	10 92 10 04 	sts	0x0410, r1	; 0x800410 <pos_o.3082>
    3a0a:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <s_rx_ret_len>
		s_rx_ret_len = 0;
    3a0e:	80 93 0f 04 	sts	0x040F, r24	; 0x80040f <cnt_o.3084>
		TWDR = cnt_o > pos_o ?  s_rx_ret_d[pos_o++] : 0x00;
    3a12:	10 92 11 04 	sts	0x0411, r1	; 0x800411 <s_rx_ret_len>
    3a16:	88 23       	and	r24, r24
    3a18:	31 f0       	breq	.+12     	; 0x3a26 <__vector_24__bottom+0x2d6>
    3a1a:	81 e0       	ldi	r24, 0x01	; 1
    3a1c:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <pos_o.3082>
    3a20:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <s_rx_ret_d>
    3a24:	01 c0       	rjmp	.+2      	; 0x3a28 <__vector_24__bottom+0x2d8>
    3a26:	80 e0       	ldi	r24, 0x00	; 0
		if (cnt_o > pos_o) {
    3a28:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    3a2c:	90 91 0f 04 	lds	r25, 0x040F	; 0x80040f <cnt_o.3084>
    3a30:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <pos_o.3082>
		twcr_new |= _BV(TWEA);					// TWI goes to unaddressed, be active again
	break;

	case TWI_TWSR_S_SLAR_MYADDR_LASTDATA_ACK:	// Last data sent and ACK has been returned
		/* message transmitted successfully in slave mode */
		twcr_new |= _BV(TWEA);					// TWI goes to unaddressed, be active again
    3a34:	89 17       	cp	r24, r25
	break;
    3a36:	58 f6       	brcc	.-106    	; 0x39ce <__vector_24__bottom+0x27e>
	case TWI_TWSR_BUS_ERROR_UNKNOWN:
		twcr_new |= _BV(TWSTO) | _BV(TWEA);		// TWI goes to unaddressed, be active again
	break;

	default:
		twcr_new |= _BV(TWSTO) | _BV(TWEA);		// TWI goes to unaddressed, be active again
    3a38:	c0 64       	ori	r28, 0x40	; 64
	}

	return twcr_new;
}
    3a3a:	01 c0       	rjmp	.+2      	; 0x3a3e <__vector_24__bottom+0x2ee>
    3a3c:	c0 65       	ori	r28, 0x50	; 80
    3a3e:	8c 2f       	mov	r24, r28
    3a40:	df 91       	pop	r29
    3a42:	cf 91       	pop	r28
    3a44:	08 95       	ret

00003a46 <cpu_irq_save>:
    3a46:	cf 93       	push	r28
    3a48:	df 93       	push	r29
    3a4a:	1f 92       	push	r1
    3a4c:	cd b7       	in	r28, 0x3d	; 61
    3a4e:	de b7       	in	r29, 0x3e	; 62
    3a50:	8f b7       	in	r24, 0x3f	; 63
    3a52:	89 83       	std	Y+1, r24	; 0x01
    3a54:	f8 94       	cli
    3a56:	89 81       	ldd	r24, Y+1	; 0x01
    3a58:	0f 90       	pop	r0
    3a5a:	df 91       	pop	r29
    3a5c:	cf 91       	pop	r28
    3a5e:	08 95       	ret

00003a60 <get_abs_time>:
    3a60:	8f 92       	push	r8
    3a62:	9f 92       	push	r9
    3a64:	af 92       	push	r10
    3a66:	bf 92       	push	r11
    3a68:	cf 92       	push	r12
    3a6a:	df 92       	push	r13
    3a6c:	ef 92       	push	r14
    3a6e:	ff 92       	push	r15
    3a70:	ea df       	rcall	.-44     	; 0x3a46 <cpu_irq_save>
    3a72:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    3a76:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    3a7a:	c0 90 86 04 	lds	r12, 0x0486	; 0x800486 <g_timer_abs_msb>
    3a7e:	d0 90 87 04 	lds	r13, 0x0487	; 0x800487 <g_timer_abs_msb+0x1>
    3a82:	e0 90 88 04 	lds	r14, 0x0488	; 0x800488 <g_timer_abs_msb+0x2>
    3a86:	f0 90 89 04 	lds	r15, 0x0489	; 0x800489 <g_timer_abs_msb+0x3>
    3a8a:	8f bf       	out	0x3f, r24	; 63
    3a8c:	70 e0       	ldi	r23, 0x00	; 0
    3a8e:	79 2b       	or	r23, r25
    3a90:	07 2e       	mov	r0, r23
    3a92:	00 0c       	add	r0, r0
    3a94:	88 0b       	sbc	r24, r24
    3a96:	99 0b       	sbc	r25, r25
    3a98:	60 d3       	rcall	.+1728   	; 0x415a <__floatsisf>
    3a9a:	20 e0       	ldi	r18, 0x00	; 0
    3a9c:	34 e2       	ldi	r19, 0x24	; 36
    3a9e:	44 ef       	ldi	r20, 0xF4	; 244
    3aa0:	5a e4       	ldi	r21, 0x4A	; 74
    3aa2:	c0 d2       	rcall	.+1408   	; 0x4024 <__divsf3>
    3aa4:	4b 01       	movw	r8, r22
    3aa6:	5c 01       	movw	r10, r24
    3aa8:	c7 01       	movw	r24, r14
    3aaa:	b6 01       	movw	r22, r12
    3aac:	54 d3       	rcall	.+1704   	; 0x4156 <__floatunsisf>
    3aae:	20 e0       	ldi	r18, 0x00	; 0
    3ab0:	30 e0       	ldi	r19, 0x00	; 0
    3ab2:	40 e0       	ldi	r20, 0x00	; 0
    3ab4:	54 e4       	ldi	r21, 0x44	; 68
    3ab6:	58 d4       	rcall	.+2224   	; 0x4368 <__mulsf3>
    3ab8:	20 e0       	ldi	r18, 0x00	; 0
    3aba:	34 e2       	ldi	r19, 0x24	; 36
    3abc:	44 ef       	ldi	r20, 0xF4	; 244
    3abe:	5a e4       	ldi	r21, 0x4A	; 74
    3ac0:	b1 d2       	rcall	.+1378   	; 0x4024 <__divsf3>
    3ac2:	a5 01       	movw	r20, r10
    3ac4:	94 01       	movw	r18, r8
    3ac6:	46 d2       	rcall	.+1164   	; 0x3f54 <__addsf3>
    3ac8:	ff 90       	pop	r15
    3aca:	ef 90       	pop	r14
    3acc:	df 90       	pop	r13
    3ace:	cf 90       	pop	r12
    3ad0:	bf 90       	pop	r11
    3ad2:	af 90       	pop	r10
    3ad4:	9f 90       	pop	r9
    3ad6:	8f 90       	pop	r8
    3ad8:	08 95       	ret

00003ada <mem_set>:
    3ada:	70 e0       	ldi	r23, 0x00	; 0
    3adc:	61 15       	cp	r22, r1
    3ade:	71 05       	cpc	r23, r1
    3ae0:	31 f0       	breq	.+12     	; 0x3aee <mem_set+0x14>
    3ae2:	fc 01       	movw	r30, r24
    3ae4:	41 93       	st	Z+, r20
    3ae6:	cf 01       	movw	r24, r30
    3ae8:	61 50       	subi	r22, 0x01	; 1
    3aea:	71 09       	sbc	r23, r1
    3aec:	f7 cf       	rjmp	.-18     	; 0x3adc <mem_set+0x2>
    3aee:	08 95       	ret

00003af0 <eeprom_nvm_settings_write>:
    3af0:	cf 93       	push	r28
    3af2:	c8 2f       	mov	r28, r24
    3af4:	87 ff       	sbrs	r24, 7
    3af6:	04 c0       	rjmp	.+8      	; 0x3b00 <eeprom_nvm_settings_write+0x10>
    3af8:	61 e1       	ldi	r22, 0x11	; 17
    3afa:	80 e0       	ldi	r24, 0x00	; 0
    3afc:	90 e0       	ldi	r25, 0x00	; 0
    3afe:	8e d7       	rcall	.+3868   	; 0x4a1c <eeprom_write_byte>
    3b00:	c0 ff       	sbrs	r28, 0
    3b02:	07 c0       	rjmp	.+14     	; 0x3b12 <eeprom_nvm_settings_write+0x22>
    3b04:	60 91 77 04 	lds	r22, 0x0477	; 0x800477 <g_lcd_contrast_pm>
    3b08:	6f 73       	andi	r22, 0x3F	; 63
    3b0a:	80 e1       	ldi	r24, 0x10	; 16
    3b0c:	90 e0       	ldi	r25, 0x00	; 0
    3b0e:	cf 91       	pop	r28
    3b10:	85 c7       	rjmp	.+3850   	; 0x4a1c <eeprom_write_byte>
    3b12:	cf 91       	pop	r28
    3b14:	08 95       	ret

00003b16 <eeprom_nvm_settings_read>:
    3b16:	87 ff       	sbrs	r24, 7
    3b18:	07 c0       	rjmp	.+14     	; 0x3b28 <eeprom_nvm_settings_read+0x12>
    3b1a:	80 e0       	ldi	r24, 0x00	; 0
    3b1c:	90 e0       	ldi	r25, 0x00	; 0
    3b1e:	76 d7       	rcall	.+3820   	; 0x4a0c <eeprom_read_byte>
    3b20:	81 31       	cpi	r24, 0x11	; 17
    3b22:	11 f0       	breq	.+4      	; 0x3b28 <eeprom_nvm_settings_read+0x12>
    3b24:	80 e8       	ldi	r24, 0x80	; 128
    3b26:	e4 df       	rcall	.-56     	; 0x3af0 <eeprom_nvm_settings_write>
    3b28:	86 e1       	ldi	r24, 0x16	; 22
    3b2a:	80 93 77 04 	sts	0x0477, r24	; 0x800477 <g_lcd_contrast_pm>
    3b2e:	08 95       	ret

00003b30 <task>:
    3b30:	8f 92       	push	r8
    3b32:	9f 92       	push	r9
    3b34:	af 92       	push	r10
    3b36:	bf 92       	push	r11
    3b38:	cf 92       	push	r12
    3b3a:	df 92       	push	r13
    3b3c:	ef 92       	push	r14
    3b3e:	ff 92       	push	r15
    3b40:	0f 93       	push	r16
    3b42:	1f 93       	push	r17
    3b44:	cf 93       	push	r28
    3b46:	df 93       	push	r29
    3b48:	cd b7       	in	r28, 0x3d	; 61
    3b4a:	de b7       	in	r29, 0x3e	; 62
    3b4c:	a8 97       	sbiw	r28, 0x28	; 40
    3b4e:	0f b6       	in	r0, 0x3f	; 63
    3b50:	f8 94       	cli
    3b52:	de bf       	out	0x3e, r29	; 62
    3b54:	0f be       	out	0x3f, r0	; 63
    3b56:	cd bf       	out	0x3d, r28	; 61
    3b58:	76 df       	rcall	.-276    	; 0x3a46 <cpu_irq_save>
    3b5a:	80 90 7d 04 	lds	r8, 0x047D	; 0x80047d <g_adc_temp>
    3b5e:	90 90 7e 04 	lds	r9, 0x047E	; 0x80047e <g_adc_temp+0x1>
    3b62:	a0 90 7f 04 	lds	r10, 0x047F	; 0x80047f <g_adc_temp+0x2>
    3b66:	b0 90 80 04 	lds	r11, 0x0480	; 0x800480 <g_adc_temp+0x3>
    3b6a:	c0 90 81 04 	lds	r12, 0x0481	; 0x800481 <g_adc_light>
    3b6e:	d0 90 82 04 	lds	r13, 0x0482	; 0x800482 <g_adc_light+0x1>
    3b72:	e0 90 83 04 	lds	r14, 0x0483	; 0x800483 <g_adc_light+0x2>
    3b76:	f0 90 84 04 	lds	r15, 0x0484	; 0x800484 <g_adc_light+0x3>
    3b7a:	8f bf       	out	0x3f, r24	; 63
    3b7c:	64 df       	rcall	.-312    	; 0x3a46 <cpu_irq_save>
    3b7e:	18 2f       	mov	r17, r24
    3b80:	29 e1       	ldi	r18, 0x19	; 25
    3b82:	37 ec       	ldi	r19, 0xC7	; 199
    3b84:	4f ea       	ldi	r20, 0xAF	; 175
    3b86:	53 e4       	ldi	r21, 0x43	; 67
    3b88:	c5 01       	movw	r24, r10
    3b8a:	b4 01       	movw	r22, r8
    3b8c:	e2 d1       	rcall	.+964    	; 0x3f52 <__subsf3>
    3b8e:	20 e0       	ldi	r18, 0x00	; 0
    3b90:	30 ea       	ldi	r19, 0xA0	; 160
    3b92:	47 e8       	ldi	r20, 0x87	; 135
    3b94:	5f e3       	ldi	r21, 0x3F	; 63
    3b96:	e8 d3       	rcall	.+2000   	; 0x4368 <__mulsf3>
    3b98:	20 e0       	ldi	r18, 0x00	; 0
    3b9a:	30 e0       	ldi	r19, 0x00	; 0
    3b9c:	48 ec       	ldi	r20, 0xC8	; 200
    3b9e:	51 e4       	ldi	r21, 0x41	; 65
    3ba0:	d9 d1       	rcall	.+946    	; 0x3f54 <__addsf3>
    3ba2:	60 93 79 04 	sts	0x0479, r22	; 0x800479 <g_temp>
    3ba6:	70 93 7a 04 	sts	0x047A, r23	; 0x80047a <g_temp+0x1>
    3baa:	80 93 7b 04 	sts	0x047B, r24	; 0x80047b <g_temp+0x2>
    3bae:	90 93 7c 04 	sts	0x047C, r25	; 0x80047c <g_temp+0x3>
    3bb2:	1f bf       	out	0x3f, r17	; 63
    3bb4:	c7 01       	movw	r24, r14
    3bb6:	b6 01       	movw	r22, r12
    3bb8:	a2 d2       	rcall	.+1348   	; 0x40fe <__fixunssfsi>
    3bba:	66 3b       	cpi	r22, 0xB6	; 182
    3bbc:	23 e0       	ldi	r18, 0x03	; 3
    3bbe:	72 07       	cpc	r23, r18
    3bc0:	00 f5       	brcc	.+64     	; 0x3c02 <task+0xd2>
    3bc2:	80 e0       	ldi	r24, 0x00	; 0
    3bc4:	90 e0       	ldi	r25, 0x00	; 0
    3bc6:	c7 d2       	rcall	.+1422   	; 0x4156 <__floatunsisf>
    3bc8:	20 e0       	ldi	r18, 0x00	; 0
    3bca:	30 e0       	ldi	r19, 0x00	; 0
    3bcc:	40 e2       	ldi	r20, 0x20	; 32
    3bce:	51 e4       	ldi	r21, 0x41	; 65
    3bd0:	c0 d1       	rcall	.+896    	; 0x3f52 <__subsf3>
    3bd2:	20 e0       	ldi	r18, 0x00	; 0
    3bd4:	30 e8       	ldi	r19, 0x80	; 128
    3bd6:	4d e6       	ldi	r20, 0x6D	; 109
    3bd8:	54 e4       	ldi	r21, 0x44	; 68
    3bda:	24 d2       	rcall	.+1096   	; 0x4024 <__divsf3>
    3bdc:	20 e0       	ldi	r18, 0x00	; 0
    3bde:	30 e0       	ldi	r19, 0x00	; 0
    3be0:	45 e7       	ldi	r20, 0x75	; 117
    3be2:	53 e4       	ldi	r21, 0x43	; 67
    3be4:	c1 d3       	rcall	.+1922   	; 0x4368 <__mulsf3>
    3be6:	20 e0       	ldi	r18, 0x00	; 0
    3be8:	30 e0       	ldi	r19, 0x00	; 0
    3bea:	40 e2       	ldi	r20, 0x20	; 32
    3bec:	51 e4       	ldi	r21, 0x41	; 65
    3bee:	b2 d1       	rcall	.+868    	; 0x3f54 <__addsf3>
    3bf0:	86 d2       	rcall	.+1292   	; 0x40fe <__fixunssfsi>
    3bf2:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    3bf6:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3bfa:	80 68       	ori	r24, 0x80	; 128
    3bfc:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3c00:	07 c0       	rjmp	.+14     	; 0x3c10 <task+0xe0>
    3c02:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    3c06:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3c0a:	8f 73       	andi	r24, 0x3F	; 63
    3c0c:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3c10:	1a df       	rcall	.-460    	; 0x3a46 <cpu_irq_save>
    3c12:	10 91 32 04 	lds	r17, 0x0432	; 0x800432 <g_SmartLCD_mode>
    3c16:	90 91 72 04 	lds	r25, 0x0472	; 0x800472 <g_status>
    3c1a:	09 2f       	mov	r16, r25
    3c1c:	01 70       	andi	r16, 0x01	; 1
    3c1e:	96 95       	lsr	r25
    3c20:	91 70       	andi	r25, 0x01	; 1
    3c22:	8f bf       	out	0x3f, r24	; 63
    3c24:	99 23       	and	r25, r25
    3c26:	09 f4       	brne	.+2      	; 0x3c2a <task+0xfa>
    3c28:	46 c0       	rjmp	.+140    	; 0x3cb6 <task+0x186>
    3c2a:	10 31       	cpi	r17, 0x10	; 16
    3c2c:	21 f4       	brne	.+8      	; 0x3c36 <task+0x106>
    3c2e:	0e 94 c4 15 	call	0x2b88	; 0x2b88 <lcd_show_new_smartlcd_data>
    3c32:	f8 2e       	mov	r15, r24
    3c34:	06 c0       	rjmp	.+12     	; 0x3c42 <task+0x112>
    3c36:	10 32       	cpi	r17, 0x20	; 32
    3c38:	09 f0       	breq	.+2      	; 0x3c3c <task+0x10c>
    3c3a:	3d c0       	rjmp	.+122    	; 0x3cb6 <task+0x186>
    3c3c:	0e 94 3e 0e 	call	0x1c7c	; 0x1c7c <lcd_show_new_refosc_data>
    3c40:	f8 2e       	mov	r15, r24
    3c42:	01 11       	cpse	r16, r1
    3c44:	35 c0       	rjmp	.+106    	; 0x3cb0 <task+0x180>
    3c46:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <s_last_animation.3398>
    3c4a:	88 23       	and	r24, r24
    3c4c:	89 f1       	breq	.+98     	; 0x3cb0 <task+0x180>
    3c4e:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <s_last_animation.3398>
    3c52:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <lcd_cls>
    3c56:	10 31       	cpi	r17, 0x10	; 16
    3c58:	41 f4       	brne	.+16     	; 0x3c6a <task+0x13a>
    3c5a:	01 e0       	ldi	r16, 0x01	; 1
    3c5c:	20 e8       	ldi	r18, 0x80	; 128
    3c5e:	40 ef       	ldi	r20, 0xF0	; 240
    3c60:	60 e0       	ldi	r22, 0x00	; 0
    3c62:	80 e0       	ldi	r24, 0x00	; 0
    3c64:	0e 94 6f 04 	call	0x8de	; 0x8de <gfx_mono_generic_draw_rect>
    3c68:	1c c0       	rjmp	.+56     	; 0x3ca2 <task+0x172>
    3c6a:	10 32       	cpi	r17, 0x20	; 32
    3c6c:	d1 f4       	brne	.+52     	; 0x3ca2 <task+0x172>
    3c6e:	01 e0       	ldi	r16, 0x01	; 1
    3c70:	20 e8       	ldi	r18, 0x80	; 128
    3c72:	40 ef       	ldi	r20, 0xF0	; 240
    3c74:	60 e0       	ldi	r22, 0x00	; 0
    3c76:	80 e0       	ldi	r24, 0x00	; 0
    3c78:	0e 94 6f 04 	call	0x8de	; 0x8de <gfx_mono_generic_draw_rect>
    3c7c:	88 e2       	ldi	r24, 0x28	; 40
    3c7e:	e0 e2       	ldi	r30, 0x20	; 32
    3c80:	f3 e0       	ldi	r31, 0x03	; 3
    3c82:	de 01       	movw	r26, r28
    3c84:	11 96       	adiw	r26, 0x01	; 1
    3c86:	01 90       	ld	r0, Z+
    3c88:	0d 92       	st	X+, r0
    3c8a:	8a 95       	dec	r24
    3c8c:	e1 f7       	brne	.-8      	; 0x3c86 <task+0x156>
    3c8e:	c6 da       	rcall	.-2676   	; 0x321c <lcd_get_sysfont>
    3c90:	9c 01       	movw	r18, r24
    3c92:	42 e0       	ldi	r20, 0x02	; 2
    3c94:	63 e0       	ldi	r22, 0x03	; 3
    3c96:	ce 01       	movw	r24, r28
    3c98:	01 96       	adiw	r24, 0x01	; 1
    3c9a:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <gfx_mono_draw_string>
    3c9e:	0e 94 f2 0c 	call	0x19e4	; 0x19e4 <lcd_show_template>
    3ca2:	d1 de       	rcall	.-606    	; 0x3a46 <cpu_irq_save>
    3ca4:	90 91 72 04 	lds	r25, 0x0472	; 0x800472 <g_status>
    3ca8:	92 60       	ori	r25, 0x02	; 2
    3caa:	90 93 72 04 	sts	0x0472, r25	; 0x800472 <g_status>
    3cae:	8f bf       	out	0x3f, r24	; 63
    3cb0:	f1 10       	cpse	r15, r1
    3cb2:	ae cf       	rjmp	.-164    	; 0x3c10 <task+0xe0>
    3cb4:	04 c0       	rjmp	.+8      	; 0x3cbe <task+0x18e>
    3cb6:	01 11       	cpse	r16, r1
    3cb8:	02 c0       	rjmp	.+4      	; 0x3cbe <task+0x18e>
    3cba:	f1 2c       	mov	r15, r1
    3cbc:	c4 cf       	rjmp	.-120    	; 0x3c46 <task+0x116>
    3cbe:	a8 96       	adiw	r28, 0x28	; 40
    3cc0:	0f b6       	in	r0, 0x3f	; 63
    3cc2:	f8 94       	cli
    3cc4:	de bf       	out	0x3e, r29	; 62
    3cc6:	0f be       	out	0x3f, r0	; 63
    3cc8:	cd bf       	out	0x3d, r28	; 61
    3cca:	df 91       	pop	r29
    3ccc:	cf 91       	pop	r28
    3cce:	1f 91       	pop	r17
    3cd0:	0f 91       	pop	r16
    3cd2:	ff 90       	pop	r15
    3cd4:	ef 90       	pop	r14
    3cd6:	df 90       	pop	r13
    3cd8:	cf 90       	pop	r12
    3cda:	bf 90       	pop	r11
    3cdc:	af 90       	pop	r10
    3cde:	9f 90       	pop	r9
    3ce0:	8f 90       	pop	r8
    3ce2:	08 95       	ret

00003ce4 <main>:
    3ce4:	cf 93       	push	r28
    3ce6:	df 93       	push	r29
    3ce8:	8e e7       	ldi	r24, 0x7E	; 126
    3cea:	88 b9       	out	0x08, r24	; 8
    3cec:	88 e0       	ldi	r24, 0x08	; 8
    3cee:	87 b9       	out	0x07, r24	; 7
    3cf0:	84 e1       	ldi	r24, 0x14	; 20
    3cf2:	85 b9       	out	0x05, r24	; 5
    3cf4:	8b ef       	ldi	r24, 0xFB	; 251
    3cf6:	84 b9       	out	0x04, r24	; 4
    3cf8:	8f ef       	ldi	r24, 0xFF	; 255
    3cfa:	8b b9       	out	0x0b, r24	; 11
    3cfc:	1a b8       	out	0x0a, r1	; 10
    3cfe:	c1 e0       	ldi	r28, 0x01	; 1
    3d00:	c0 93 7e 00 	sts	0x007E, r28	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
    3d04:	0e 94 06 03 	call	0x60c	; 0x60c <sysclk_init>
    3d08:	8b ee       	ldi	r24, 0xEB	; 235
    3d0a:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    3d0e:	d3 e8       	ldi	r29, 0x83	; 131
    3d10:	d3 bd       	out	0x23, r29	; 35
    3d12:	68 e0       	ldi	r22, 0x08	; 8
    3d14:	80 e0       	ldi	r24, 0x00	; 0
    3d16:	0e 94 1f 03 	call	0x63e	; 0x63e <sysclk_enable_module>
    3d1a:	82 e8       	ldi	r24, 0x82	; 130
    3d1c:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    3d20:	89 e0       	ldi	r24, 0x09	; 9
    3d22:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    3d26:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    3d2a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    3d2e:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    3d32:	80 e8       	ldi	r24, 0x80	; 128
    3d34:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    3d38:	c0 93 6f 00 	sts	0x006F, r28	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    3d3c:	87 e2       	ldi	r24, 0x27	; 39
    3d3e:	86 bb       	out	0x16, r24	; 22
    3d40:	60 e4       	ldi	r22, 0x40	; 64
    3d42:	80 e0       	ldi	r24, 0x00	; 0
    3d44:	0e 94 1f 03 	call	0x63e	; 0x63e <sysclk_enable_module>
    3d48:	d0 93 b0 00 	sts	0x00B0, r29	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3d4c:	85 e0       	ldi	r24, 0x05	; 5
    3d4e:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    3d52:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
    3d56:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    3d5a:	c0 93 70 00 	sts	0x0070, r28	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
    3d5e:	87 e0       	ldi	r24, 0x07	; 7
    3d60:	87 bb       	out	0x17, r24	; 23
    3d62:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
    3d66:	61 e0       	ldi	r22, 0x01	; 1
    3d68:	80 e0       	ldi	r24, 0x00	; 0
    3d6a:	0e 94 1f 03 	call	0x63e	; 0x63e <sysclk_enable_module>
    3d6e:	c0 93 7e 00 	sts	0x007E, r28	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
    3d72:	87 e8       	ldi	r24, 0x87	; 135
    3d74:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3d78:	80 ec       	ldi	r24, 0xC0	; 192
    3d7a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    3d7e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3d82:	80 61       	ori	r24, 0x10	; 16
    3d84:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3d88:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3d8c:	88 60       	ori	r24, 0x08	; 8
    3d8e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3d92:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
    3d96:	88 7f       	andi	r24, 0xF8	; 248
    3d98:	86 60       	ori	r24, 0x06	; 6
    3d9a:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
    3d9e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3da2:	80 62       	ori	r24, 0x20	; 32
    3da4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3da8:	0e 94 05 03 	call	0x60a	; 0x60a <board_init>
    3dac:	84 b7       	in	r24, 0x34	; 52
    3dae:	98 2f       	mov	r25, r24
    3db0:	97 70       	andi	r25, 0x07	; 7
    3db2:	11 f4       	brne	.+4      	; 0x3db8 <main+0xd4>
    3db4:	81 11       	cpse	r24, r1
    3db6:	2b c0       	rjmp	.+86     	; 0x3e0e <main+0x12a>
    3db8:	46 de       	rcall	.-884    	; 0x3a46 <cpu_irq_save>
    3dba:	f8 94       	cli
    3dbc:	10 92 85 04 	sts	0x0485, r1	; 0x800485 <g_adc_state>
    3dc0:	10 92 81 04 	sts	0x0481, r1	; 0x800481 <g_adc_light>
    3dc4:	10 92 82 04 	sts	0x0482, r1	; 0x800482 <g_adc_light+0x1>
    3dc8:	10 92 83 04 	sts	0x0483, r1	; 0x800483 <g_adc_light+0x2>
    3dcc:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <g_adc_light+0x3>
    3dd0:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <g_adc_temp>
    3dd4:	10 92 7e 04 	sts	0x047E, r1	; 0x80047e <g_adc_temp+0x1>
    3dd8:	10 92 7f 04 	sts	0x047F, r1	; 0x80047f <g_adc_temp+0x2>
    3ddc:	10 92 80 04 	sts	0x0480, r1	; 0x800480 <g_adc_temp+0x3>
    3de0:	40 e0       	ldi	r20, 0x00	; 0
    3de2:	50 e0       	ldi	r21, 0x00	; 0
    3de4:	68 ec       	ldi	r22, 0xC8	; 200
    3de6:	71 e4       	ldi	r23, 0x41	; 65
    3de8:	40 93 79 04 	sts	0x0479, r20	; 0x800479 <g_temp>
    3dec:	50 93 7a 04 	sts	0x047A, r21	; 0x80047a <g_temp+0x1>
    3df0:	60 93 7b 04 	sts	0x047B, r22	; 0x80047b <g_temp+0x2>
    3df4:	70 93 7c 04 	sts	0x047C, r23	; 0x80047c <g_temp+0x3>
    3df8:	90 e4       	ldi	r25, 0x40	; 64
    3dfa:	90 93 78 04 	sts	0x0478, r25	; 0x800478 <g_lcdbl_dimmer>
    3dfe:	90 91 72 04 	lds	r25, 0x0472	; 0x800472 <g_status>
    3e02:	9e 7f       	andi	r25, 0xFE	; 254
    3e04:	9d 7f       	andi	r25, 0xFD	; 253
    3e06:	90 93 72 04 	sts	0x0472, r25	; 0x800472 <g_status>
    3e0a:	8f bf       	out	0x3f, r24	; 63
    3e0c:	0d c0       	rjmp	.+26     	; 0x3e28 <main+0x144>
    3e0e:	90 e0       	ldi	r25, 0x00	; 0
    3e10:	a0 e0       	ldi	r26, 0x00	; 0
    3e12:	b0 e0       	ldi	r27, 0x00	; 0
    3e14:	80 93 2e 04 	sts	0x042E, r24	; 0x80042e <g_u32_DEBUG21>
    3e18:	90 93 2f 04 	sts	0x042F, r25	; 0x80042f <g_u32_DEBUG21+0x1>
    3e1c:	a0 93 30 04 	sts	0x0430, r26	; 0x800430 <g_u32_DEBUG21+0x2>
    3e20:	b0 93 31 04 	sts	0x0431, r27	; 0x800431 <g_u32_DEBUG21+0x3>
    3e24:	0e 94 05 07 	call	0xe0a	; 0xe0a <asm_break>
    3e28:	8f ef       	ldi	r24, 0xFF	; 255
    3e2a:	75 de       	rcall	.-790    	; 0x3b16 <eeprom_nvm_settings_read>
    3e2c:	60 e8       	ldi	r22, 0x80	; 128
    3e2e:	80 e0       	ldi	r24, 0x00	; 0
    3e30:	0e 94 1f 03 	call	0x63e	; 0x63e <sysclk_enable_module>
    3e34:	08 de       	rcall	.-1008   	; 0x3a46 <cpu_irq_save>
    3e36:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    3e3a:	92 e0       	ldi	r25, 0x02	; 2
    3e3c:	90 93 b8 00 	sts	0x00B8, r25	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    3e40:	94 e4       	ldi	r25, 0x44	; 68
    3e42:	90 93 ba 00 	sts	0x00BA, r25	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7e00ba>
    3e46:	10 92 bd 00 	sts	0x00BD, r1	; 0x8000bd <__TEXT_REGION_LENGTH__+0x7e00bd>
    3e4a:	95 e4       	ldi	r25, 0x45	; 69
    3e4c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    3e50:	8f bf       	out	0x3f, r24	; 63
    3e52:	78 94       	sei
    3e54:	13 bc       	out	0x23, r1	; 35
    3e56:	e5 d9       	rcall	.-3126   	; 0x3222 <lcd_init>
    3e58:	81 ef       	ldi	r24, 0xF1	; 241
    3e5a:	0e 94 f0 14 	call	0x29e0	; 0x29e0 <lcd_test>
    3e5e:	81 e0       	ldi	r24, 0x01	; 1
    3e60:	80 93 2d 04 	sts	0x042D, r24	; 0x80042d <runmode>
    3e64:	c1 e0       	ldi	r28, 0x01	; 1
    3e66:	80 91 2d 04 	lds	r24, 0x042D	; 0x80042d <runmode>
    3e6a:	88 23       	and	r24, r24
    3e6c:	39 f0       	breq	.+14     	; 0x3e7c <main+0x198>
    3e6e:	60 de       	rcall	.-832    	; 0x3b30 <task>
    3e70:	c3 bf       	out	0x33, r28	; 51
    3e72:	88 95       	sleep
    3e74:	83 b7       	in	r24, 0x33	; 51
    3e76:	8e 7f       	andi	r24, 0xFE	; 254
    3e78:	83 bf       	out	0x33, r24	; 51
    3e7a:	f5 cf       	rjmp	.-22     	; 0x3e66 <main+0x182>
    3e7c:	f4 d9       	rcall	.-3096   	; 0x3266 <lcd_shutdown>
    3e7e:	f8 94       	cli
    3e80:	80 b7       	in	r24, 0x30	; 48
    3e82:	80 68       	ori	r24, 0x80	; 128
    3e84:	80 bf       	out	0x30, r24	; 48
    3e86:	64 e0       	ldi	r22, 0x04	; 4
    3e88:	80 e0       	ldi	r24, 0x00	; 0
    3e8a:	0e 94 35 03 	call	0x66a	; 0x66a <sysclk_disable_module>
    3e8e:	62 e0       	ldi	r22, 0x02	; 2
    3e90:	80 e0       	ldi	r24, 0x00	; 0
    3e92:	0e 94 35 03 	call	0x66a	; 0x66a <sysclk_disable_module>
    3e96:	d7 dd       	rcall	.-1106   	; 0x3a46 <cpu_irq_save>
    3e98:	94 e0       	ldi	r25, 0x04	; 4
    3e9a:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    3e9e:	3c 98       	cbi	0x07, 4	; 7
    3ea0:	44 9a       	sbi	0x08, 4	; 8
    3ea2:	3d 98       	cbi	0x07, 5	; 7
    3ea4:	45 9a       	sbi	0x08, 5	; 8
    3ea6:	10 92 bc 00 	sts	0x00BC, r1	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    3eaa:	8f bf       	out	0x3f, r24	; 63
    3eac:	60 e8       	ldi	r22, 0x80	; 128
    3eae:	80 e0       	ldi	r24, 0x00	; 0
    3eb0:	0e 94 35 03 	call	0x66a	; 0x66a <sysclk_disable_module>
    3eb4:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3eb8:	87 7f       	andi	r24, 0xF7	; 247
    3eba:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3ebe:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3ec2:	8f 7d       	andi	r24, 0xDF	; 223
    3ec4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3ec8:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
    3ecc:	88 7f       	andi	r24, 0xF8	; 248
    3ece:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
    3ed2:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    3ed6:	10 92 7e 00 	sts	0x007E, r1	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
    3eda:	61 e0       	ldi	r22, 0x01	; 1
    3edc:	80 e0       	ldi	r24, 0x00	; 0
    3ede:	0e 94 35 03 	call	0x66a	; 0x66a <sysclk_disable_module>
    3ee2:	b1 dd       	rcall	.-1182   	; 0x3a46 <cpu_irq_save>
    3ee4:	c8 2f       	mov	r28, r24
    3ee6:	60 e2       	ldi	r22, 0x20	; 32
    3ee8:	80 e0       	ldi	r24, 0x00	; 0
    3eea:	0e 94 35 03 	call	0x66a	; 0x66a <sysclk_disable_module>
    3eee:	21 98       	cbi	0x04, 1	; 4
    3ef0:	29 98       	cbi	0x05, 1	; 5
    3ef2:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    3ef6:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    3efa:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
    3efe:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    3f02:	68 e0       	ldi	r22, 0x08	; 8
    3f04:	80 e0       	ldi	r24, 0x00	; 0
    3f06:	0e 94 35 03 	call	0x66a	; 0x66a <sysclk_disable_module>
    3f0a:	23 9a       	sbi	0x04, 3	; 4
    3f0c:	2b 98       	cbi	0x05, 3	; 5
    3f0e:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3f12:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    3f16:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
    3f1a:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
    3f1e:	60 e4       	ldi	r22, 0x40	; 64
    3f20:	80 e0       	ldi	r24, 0x00	; 0
    3f22:	0e 94 35 03 	call	0x66a	; 0x66a <sysclk_disable_module>
    3f26:	8f dd       	rcall	.-1250   	; 0x3a46 <cpu_irq_save>
    3f28:	5f 93       	push	r21
    3f2a:	50 e8       	ldi	r21, 0x80	; 128
    3f2c:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    3f30:	50 e0       	ldi	r21, 0x00	; 0
    3f32:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    3f36:	5f 91       	pop	r21
    3f38:	8f bf       	out	0x3f, r24	; 63
    3f3a:	cf bf       	out	0x3f, r28	; 63
    3f3c:	89 e0       	ldi	r24, 0x09	; 9
    3f3e:	83 bf       	out	0x33, r24	; 51
    3f40:	88 95       	sleep
    3f42:	83 b7       	in	r24, 0x33	; 51
    3f44:	8e 7f       	andi	r24, 0xFE	; 254
    3f46:	83 bf       	out	0x33, r24	; 51
    3f48:	80 e0       	ldi	r24, 0x00	; 0
    3f4a:	90 e0       	ldi	r25, 0x00	; 0
    3f4c:	df 91       	pop	r29
    3f4e:	cf 91       	pop	r28
    3f50:	08 95       	ret

00003f52 <__subsf3>:
    3f52:	50 58       	subi	r21, 0x80	; 128

00003f54 <__addsf3>:
    3f54:	bb 27       	eor	r27, r27
    3f56:	aa 27       	eor	r26, r26
    3f58:	0e d0       	rcall	.+28     	; 0x3f76 <__addsf3x>
    3f5a:	b1 c1       	rjmp	.+866    	; 0x42be <__fp_round>
    3f5c:	a2 d1       	rcall	.+836    	; 0x42a2 <__fp_pscA>
    3f5e:	30 f0       	brcs	.+12     	; 0x3f6c <__addsf3+0x18>
    3f60:	a7 d1       	rcall	.+846    	; 0x42b0 <__fp_pscB>
    3f62:	20 f0       	brcs	.+8      	; 0x3f6c <__addsf3+0x18>
    3f64:	31 f4       	brne	.+12     	; 0x3f72 <__addsf3+0x1e>
    3f66:	9f 3f       	cpi	r25, 0xFF	; 255
    3f68:	11 f4       	brne	.+4      	; 0x3f6e <__addsf3+0x1a>
    3f6a:	1e f4       	brtc	.+6      	; 0x3f72 <__addsf3+0x1e>
    3f6c:	97 c1       	rjmp	.+814    	; 0x429c <__fp_nan>
    3f6e:	0e f4       	brtc	.+2      	; 0x3f72 <__addsf3+0x1e>
    3f70:	e0 95       	com	r30
    3f72:	e7 fb       	bst	r30, 7
    3f74:	64 c1       	rjmp	.+712    	; 0x423e <__fp_inf>

00003f76 <__addsf3x>:
    3f76:	e9 2f       	mov	r30, r25
    3f78:	b3 d1       	rcall	.+870    	; 0x42e0 <__fp_split3>
    3f7a:	80 f3       	brcs	.-32     	; 0x3f5c <__addsf3+0x8>
    3f7c:	ba 17       	cp	r27, r26
    3f7e:	62 07       	cpc	r22, r18
    3f80:	73 07       	cpc	r23, r19
    3f82:	84 07       	cpc	r24, r20
    3f84:	95 07       	cpc	r25, r21
    3f86:	18 f0       	brcs	.+6      	; 0x3f8e <__addsf3x+0x18>
    3f88:	71 f4       	brne	.+28     	; 0x3fa6 <__addsf3x+0x30>
    3f8a:	9e f5       	brtc	.+102    	; 0x3ff2 <__addsf3x+0x7c>
    3f8c:	e2 c1       	rjmp	.+964    	; 0x4352 <__fp_zero>
    3f8e:	0e f4       	brtc	.+2      	; 0x3f92 <__addsf3x+0x1c>
    3f90:	e0 95       	com	r30
    3f92:	0b 2e       	mov	r0, r27
    3f94:	ba 2f       	mov	r27, r26
    3f96:	a0 2d       	mov	r26, r0
    3f98:	0b 01       	movw	r0, r22
    3f9a:	b9 01       	movw	r22, r18
    3f9c:	90 01       	movw	r18, r0
    3f9e:	0c 01       	movw	r0, r24
    3fa0:	ca 01       	movw	r24, r20
    3fa2:	a0 01       	movw	r20, r0
    3fa4:	11 24       	eor	r1, r1
    3fa6:	ff 27       	eor	r31, r31
    3fa8:	59 1b       	sub	r21, r25
    3faa:	99 f0       	breq	.+38     	; 0x3fd2 <__addsf3x+0x5c>
    3fac:	59 3f       	cpi	r21, 0xF9	; 249
    3fae:	50 f4       	brcc	.+20     	; 0x3fc4 <__addsf3x+0x4e>
    3fb0:	50 3e       	cpi	r21, 0xE0	; 224
    3fb2:	68 f1       	brcs	.+90     	; 0x400e <__addsf3x+0x98>
    3fb4:	1a 16       	cp	r1, r26
    3fb6:	f0 40       	sbci	r31, 0x00	; 0
    3fb8:	a2 2f       	mov	r26, r18
    3fba:	23 2f       	mov	r18, r19
    3fbc:	34 2f       	mov	r19, r20
    3fbe:	44 27       	eor	r20, r20
    3fc0:	58 5f       	subi	r21, 0xF8	; 248
    3fc2:	f3 cf       	rjmp	.-26     	; 0x3faa <__addsf3x+0x34>
    3fc4:	46 95       	lsr	r20
    3fc6:	37 95       	ror	r19
    3fc8:	27 95       	ror	r18
    3fca:	a7 95       	ror	r26
    3fcc:	f0 40       	sbci	r31, 0x00	; 0
    3fce:	53 95       	inc	r21
    3fd0:	c9 f7       	brne	.-14     	; 0x3fc4 <__addsf3x+0x4e>
    3fd2:	7e f4       	brtc	.+30     	; 0x3ff2 <__addsf3x+0x7c>
    3fd4:	1f 16       	cp	r1, r31
    3fd6:	ba 0b       	sbc	r27, r26
    3fd8:	62 0b       	sbc	r22, r18
    3fda:	73 0b       	sbc	r23, r19
    3fdc:	84 0b       	sbc	r24, r20
    3fde:	ba f0       	brmi	.+46     	; 0x400e <__addsf3x+0x98>
    3fe0:	91 50       	subi	r25, 0x01	; 1
    3fe2:	a1 f0       	breq	.+40     	; 0x400c <__addsf3x+0x96>
    3fe4:	ff 0f       	add	r31, r31
    3fe6:	bb 1f       	adc	r27, r27
    3fe8:	66 1f       	adc	r22, r22
    3fea:	77 1f       	adc	r23, r23
    3fec:	88 1f       	adc	r24, r24
    3fee:	c2 f7       	brpl	.-16     	; 0x3fe0 <__addsf3x+0x6a>
    3ff0:	0e c0       	rjmp	.+28     	; 0x400e <__addsf3x+0x98>
    3ff2:	ba 0f       	add	r27, r26
    3ff4:	62 1f       	adc	r22, r18
    3ff6:	73 1f       	adc	r23, r19
    3ff8:	84 1f       	adc	r24, r20
    3ffa:	48 f4       	brcc	.+18     	; 0x400e <__addsf3x+0x98>
    3ffc:	87 95       	ror	r24
    3ffe:	77 95       	ror	r23
    4000:	67 95       	ror	r22
    4002:	b7 95       	ror	r27
    4004:	f7 95       	ror	r31
    4006:	9e 3f       	cpi	r25, 0xFE	; 254
    4008:	08 f0       	brcs	.+2      	; 0x400c <__addsf3x+0x96>
    400a:	b3 cf       	rjmp	.-154    	; 0x3f72 <__addsf3+0x1e>
    400c:	93 95       	inc	r25
    400e:	88 0f       	add	r24, r24
    4010:	08 f0       	brcs	.+2      	; 0x4014 <__addsf3x+0x9e>
    4012:	99 27       	eor	r25, r25
    4014:	ee 0f       	add	r30, r30
    4016:	97 95       	ror	r25
    4018:	87 95       	ror	r24
    401a:	08 95       	ret

0000401c <__cmpsf2>:
    401c:	ec d0       	rcall	.+472    	; 0x41f6 <__fp_cmp>
    401e:	08 f4       	brcc	.+2      	; 0x4022 <__cmpsf2+0x6>
    4020:	81 e0       	ldi	r24, 0x01	; 1
    4022:	08 95       	ret

00004024 <__divsf3>:
    4024:	0c d0       	rcall	.+24     	; 0x403e <__divsf3x>
    4026:	4b c1       	rjmp	.+662    	; 0x42be <__fp_round>
    4028:	43 d1       	rcall	.+646    	; 0x42b0 <__fp_pscB>
    402a:	40 f0       	brcs	.+16     	; 0x403c <__divsf3+0x18>
    402c:	3a d1       	rcall	.+628    	; 0x42a2 <__fp_pscA>
    402e:	30 f0       	brcs	.+12     	; 0x403c <__divsf3+0x18>
    4030:	21 f4       	brne	.+8      	; 0x403a <__divsf3+0x16>
    4032:	5f 3f       	cpi	r21, 0xFF	; 255
    4034:	19 f0       	breq	.+6      	; 0x403c <__divsf3+0x18>
    4036:	03 c1       	rjmp	.+518    	; 0x423e <__fp_inf>
    4038:	51 11       	cpse	r21, r1
    403a:	8c c1       	rjmp	.+792    	; 0x4354 <__fp_szero>
    403c:	2f c1       	rjmp	.+606    	; 0x429c <__fp_nan>

0000403e <__divsf3x>:
    403e:	50 d1       	rcall	.+672    	; 0x42e0 <__fp_split3>
    4040:	98 f3       	brcs	.-26     	; 0x4028 <__divsf3+0x4>

00004042 <__divsf3_pse>:
    4042:	99 23       	and	r25, r25
    4044:	c9 f3       	breq	.-14     	; 0x4038 <__divsf3+0x14>
    4046:	55 23       	and	r21, r21
    4048:	b1 f3       	breq	.-20     	; 0x4036 <__divsf3+0x12>
    404a:	95 1b       	sub	r25, r21
    404c:	55 0b       	sbc	r21, r21
    404e:	bb 27       	eor	r27, r27
    4050:	aa 27       	eor	r26, r26
    4052:	62 17       	cp	r22, r18
    4054:	73 07       	cpc	r23, r19
    4056:	84 07       	cpc	r24, r20
    4058:	38 f0       	brcs	.+14     	; 0x4068 <__divsf3_pse+0x26>
    405a:	9f 5f       	subi	r25, 0xFF	; 255
    405c:	5f 4f       	sbci	r21, 0xFF	; 255
    405e:	22 0f       	add	r18, r18
    4060:	33 1f       	adc	r19, r19
    4062:	44 1f       	adc	r20, r20
    4064:	aa 1f       	adc	r26, r26
    4066:	a9 f3       	breq	.-22     	; 0x4052 <__divsf3_pse+0x10>
    4068:	33 d0       	rcall	.+102    	; 0x40d0 <__divsf3_pse+0x8e>
    406a:	0e 2e       	mov	r0, r30
    406c:	3a f0       	brmi	.+14     	; 0x407c <__divsf3_pse+0x3a>
    406e:	e0 e8       	ldi	r30, 0x80	; 128
    4070:	30 d0       	rcall	.+96     	; 0x40d2 <__divsf3_pse+0x90>
    4072:	91 50       	subi	r25, 0x01	; 1
    4074:	50 40       	sbci	r21, 0x00	; 0
    4076:	e6 95       	lsr	r30
    4078:	00 1c       	adc	r0, r0
    407a:	ca f7       	brpl	.-14     	; 0x406e <__divsf3_pse+0x2c>
    407c:	29 d0       	rcall	.+82     	; 0x40d0 <__divsf3_pse+0x8e>
    407e:	fe 2f       	mov	r31, r30
    4080:	27 d0       	rcall	.+78     	; 0x40d0 <__divsf3_pse+0x8e>
    4082:	66 0f       	add	r22, r22
    4084:	77 1f       	adc	r23, r23
    4086:	88 1f       	adc	r24, r24
    4088:	bb 1f       	adc	r27, r27
    408a:	26 17       	cp	r18, r22
    408c:	37 07       	cpc	r19, r23
    408e:	48 07       	cpc	r20, r24
    4090:	ab 07       	cpc	r26, r27
    4092:	b0 e8       	ldi	r27, 0x80	; 128
    4094:	09 f0       	breq	.+2      	; 0x4098 <__divsf3_pse+0x56>
    4096:	bb 0b       	sbc	r27, r27
    4098:	80 2d       	mov	r24, r0
    409a:	bf 01       	movw	r22, r30
    409c:	ff 27       	eor	r31, r31
    409e:	93 58       	subi	r25, 0x83	; 131
    40a0:	5f 4f       	sbci	r21, 0xFF	; 255
    40a2:	2a f0       	brmi	.+10     	; 0x40ae <__divsf3_pse+0x6c>
    40a4:	9e 3f       	cpi	r25, 0xFE	; 254
    40a6:	51 05       	cpc	r21, r1
    40a8:	68 f0       	brcs	.+26     	; 0x40c4 <__divsf3_pse+0x82>
    40aa:	c9 c0       	rjmp	.+402    	; 0x423e <__fp_inf>
    40ac:	53 c1       	rjmp	.+678    	; 0x4354 <__fp_szero>
    40ae:	5f 3f       	cpi	r21, 0xFF	; 255
    40b0:	ec f3       	brlt	.-6      	; 0x40ac <__divsf3_pse+0x6a>
    40b2:	98 3e       	cpi	r25, 0xE8	; 232
    40b4:	dc f3       	brlt	.-10     	; 0x40ac <__divsf3_pse+0x6a>
    40b6:	86 95       	lsr	r24
    40b8:	77 95       	ror	r23
    40ba:	67 95       	ror	r22
    40bc:	b7 95       	ror	r27
    40be:	f7 95       	ror	r31
    40c0:	9f 5f       	subi	r25, 0xFF	; 255
    40c2:	c9 f7       	brne	.-14     	; 0x40b6 <__divsf3_pse+0x74>
    40c4:	88 0f       	add	r24, r24
    40c6:	91 1d       	adc	r25, r1
    40c8:	96 95       	lsr	r25
    40ca:	87 95       	ror	r24
    40cc:	97 f9       	bld	r25, 7
    40ce:	08 95       	ret
    40d0:	e1 e0       	ldi	r30, 0x01	; 1
    40d2:	66 0f       	add	r22, r22
    40d4:	77 1f       	adc	r23, r23
    40d6:	88 1f       	adc	r24, r24
    40d8:	bb 1f       	adc	r27, r27
    40da:	62 17       	cp	r22, r18
    40dc:	73 07       	cpc	r23, r19
    40de:	84 07       	cpc	r24, r20
    40e0:	ba 07       	cpc	r27, r26
    40e2:	20 f0       	brcs	.+8      	; 0x40ec <__divsf3_pse+0xaa>
    40e4:	62 1b       	sub	r22, r18
    40e6:	73 0b       	sbc	r23, r19
    40e8:	84 0b       	sbc	r24, r20
    40ea:	ba 0b       	sbc	r27, r26
    40ec:	ee 1f       	adc	r30, r30
    40ee:	88 f7       	brcc	.-30     	; 0x40d2 <__divsf3_pse+0x90>
    40f0:	e0 95       	com	r30
    40f2:	08 95       	ret

000040f4 <__fixsfsi>:
    40f4:	04 d0       	rcall	.+8      	; 0x40fe <__fixunssfsi>
    40f6:	68 94       	set
    40f8:	b1 11       	cpse	r27, r1
    40fa:	2c c1       	rjmp	.+600    	; 0x4354 <__fp_szero>
    40fc:	08 95       	ret

000040fe <__fixunssfsi>:
    40fe:	f8 d0       	rcall	.+496    	; 0x42f0 <__fp_splitA>
    4100:	88 f0       	brcs	.+34     	; 0x4124 <__fixunssfsi+0x26>
    4102:	9f 57       	subi	r25, 0x7F	; 127
    4104:	90 f0       	brcs	.+36     	; 0x412a <__fixunssfsi+0x2c>
    4106:	b9 2f       	mov	r27, r25
    4108:	99 27       	eor	r25, r25
    410a:	b7 51       	subi	r27, 0x17	; 23
    410c:	a0 f0       	brcs	.+40     	; 0x4136 <__fixunssfsi+0x38>
    410e:	d1 f0       	breq	.+52     	; 0x4144 <__fixunssfsi+0x46>
    4110:	66 0f       	add	r22, r22
    4112:	77 1f       	adc	r23, r23
    4114:	88 1f       	adc	r24, r24
    4116:	99 1f       	adc	r25, r25
    4118:	1a f0       	brmi	.+6      	; 0x4120 <__fixunssfsi+0x22>
    411a:	ba 95       	dec	r27
    411c:	c9 f7       	brne	.-14     	; 0x4110 <__fixunssfsi+0x12>
    411e:	12 c0       	rjmp	.+36     	; 0x4144 <__fixunssfsi+0x46>
    4120:	b1 30       	cpi	r27, 0x01	; 1
    4122:	81 f0       	breq	.+32     	; 0x4144 <__fixunssfsi+0x46>
    4124:	16 d1       	rcall	.+556    	; 0x4352 <__fp_zero>
    4126:	b1 e0       	ldi	r27, 0x01	; 1
    4128:	08 95       	ret
    412a:	13 c1       	rjmp	.+550    	; 0x4352 <__fp_zero>
    412c:	67 2f       	mov	r22, r23
    412e:	78 2f       	mov	r23, r24
    4130:	88 27       	eor	r24, r24
    4132:	b8 5f       	subi	r27, 0xF8	; 248
    4134:	39 f0       	breq	.+14     	; 0x4144 <__fixunssfsi+0x46>
    4136:	b9 3f       	cpi	r27, 0xF9	; 249
    4138:	cc f3       	brlt	.-14     	; 0x412c <__fixunssfsi+0x2e>
    413a:	86 95       	lsr	r24
    413c:	77 95       	ror	r23
    413e:	67 95       	ror	r22
    4140:	b3 95       	inc	r27
    4142:	d9 f7       	brne	.-10     	; 0x413a <__fixunssfsi+0x3c>
    4144:	3e f4       	brtc	.+14     	; 0x4154 <__fixunssfsi+0x56>
    4146:	90 95       	com	r25
    4148:	80 95       	com	r24
    414a:	70 95       	com	r23
    414c:	61 95       	neg	r22
    414e:	7f 4f       	sbci	r23, 0xFF	; 255
    4150:	8f 4f       	sbci	r24, 0xFF	; 255
    4152:	9f 4f       	sbci	r25, 0xFF	; 255
    4154:	08 95       	ret

00004156 <__floatunsisf>:
    4156:	e8 94       	clt
    4158:	09 c0       	rjmp	.+18     	; 0x416c <__floatsisf+0x12>

0000415a <__floatsisf>:
    415a:	97 fb       	bst	r25, 7
    415c:	3e f4       	brtc	.+14     	; 0x416c <__floatsisf+0x12>
    415e:	90 95       	com	r25
    4160:	80 95       	com	r24
    4162:	70 95       	com	r23
    4164:	61 95       	neg	r22
    4166:	7f 4f       	sbci	r23, 0xFF	; 255
    4168:	8f 4f       	sbci	r24, 0xFF	; 255
    416a:	9f 4f       	sbci	r25, 0xFF	; 255
    416c:	99 23       	and	r25, r25
    416e:	a9 f0       	breq	.+42     	; 0x419a <__floatsisf+0x40>
    4170:	f9 2f       	mov	r31, r25
    4172:	96 e9       	ldi	r25, 0x96	; 150
    4174:	bb 27       	eor	r27, r27
    4176:	93 95       	inc	r25
    4178:	f6 95       	lsr	r31
    417a:	87 95       	ror	r24
    417c:	77 95       	ror	r23
    417e:	67 95       	ror	r22
    4180:	b7 95       	ror	r27
    4182:	f1 11       	cpse	r31, r1
    4184:	f8 cf       	rjmp	.-16     	; 0x4176 <__floatsisf+0x1c>
    4186:	fa f4       	brpl	.+62     	; 0x41c6 <__floatsisf+0x6c>
    4188:	bb 0f       	add	r27, r27
    418a:	11 f4       	brne	.+4      	; 0x4190 <__floatsisf+0x36>
    418c:	60 ff       	sbrs	r22, 0
    418e:	1b c0       	rjmp	.+54     	; 0x41c6 <__floatsisf+0x6c>
    4190:	6f 5f       	subi	r22, 0xFF	; 255
    4192:	7f 4f       	sbci	r23, 0xFF	; 255
    4194:	8f 4f       	sbci	r24, 0xFF	; 255
    4196:	9f 4f       	sbci	r25, 0xFF	; 255
    4198:	16 c0       	rjmp	.+44     	; 0x41c6 <__floatsisf+0x6c>
    419a:	88 23       	and	r24, r24
    419c:	11 f0       	breq	.+4      	; 0x41a2 <__floatsisf+0x48>
    419e:	96 e9       	ldi	r25, 0x96	; 150
    41a0:	11 c0       	rjmp	.+34     	; 0x41c4 <__floatsisf+0x6a>
    41a2:	77 23       	and	r23, r23
    41a4:	21 f0       	breq	.+8      	; 0x41ae <__floatsisf+0x54>
    41a6:	9e e8       	ldi	r25, 0x8E	; 142
    41a8:	87 2f       	mov	r24, r23
    41aa:	76 2f       	mov	r23, r22
    41ac:	05 c0       	rjmp	.+10     	; 0x41b8 <__floatsisf+0x5e>
    41ae:	66 23       	and	r22, r22
    41b0:	71 f0       	breq	.+28     	; 0x41ce <__floatsisf+0x74>
    41b2:	96 e8       	ldi	r25, 0x86	; 134
    41b4:	86 2f       	mov	r24, r22
    41b6:	70 e0       	ldi	r23, 0x00	; 0
    41b8:	60 e0       	ldi	r22, 0x00	; 0
    41ba:	2a f0       	brmi	.+10     	; 0x41c6 <__floatsisf+0x6c>
    41bc:	9a 95       	dec	r25
    41be:	66 0f       	add	r22, r22
    41c0:	77 1f       	adc	r23, r23
    41c2:	88 1f       	adc	r24, r24
    41c4:	da f7       	brpl	.-10     	; 0x41bc <__floatsisf+0x62>
    41c6:	88 0f       	add	r24, r24
    41c8:	96 95       	lsr	r25
    41ca:	87 95       	ror	r24
    41cc:	97 f9       	bld	r25, 7
    41ce:	08 95       	ret

000041d0 <floor>:
    41d0:	a9 d0       	rcall	.+338    	; 0x4324 <__fp_trunc>
    41d2:	80 f0       	brcs	.+32     	; 0x41f4 <floor+0x24>
    41d4:	9f 37       	cpi	r25, 0x7F	; 127
    41d6:	40 f4       	brcc	.+16     	; 0x41e8 <floor+0x18>
    41d8:	91 11       	cpse	r25, r1
    41da:	0e f0       	brts	.+2      	; 0x41de <floor+0xe>
    41dc:	bb c0       	rjmp	.+374    	; 0x4354 <__fp_szero>
    41de:	60 e0       	ldi	r22, 0x00	; 0
    41e0:	70 e0       	ldi	r23, 0x00	; 0
    41e2:	80 e8       	ldi	r24, 0x80	; 128
    41e4:	9f eb       	ldi	r25, 0xBF	; 191
    41e6:	08 95       	ret
    41e8:	26 f4       	brtc	.+8      	; 0x41f2 <floor+0x22>
    41ea:	1b 16       	cp	r1, r27
    41ec:	61 1d       	adc	r22, r1
    41ee:	71 1d       	adc	r23, r1
    41f0:	81 1d       	adc	r24, r1
    41f2:	2b c0       	rjmp	.+86     	; 0x424a <__fp_mintl>
    41f4:	45 c0       	rjmp	.+138    	; 0x4280 <__fp_mpack>

000041f6 <__fp_cmp>:
    41f6:	99 0f       	add	r25, r25
    41f8:	00 08       	sbc	r0, r0
    41fa:	55 0f       	add	r21, r21
    41fc:	aa 0b       	sbc	r26, r26
    41fe:	e0 e8       	ldi	r30, 0x80	; 128
    4200:	fe ef       	ldi	r31, 0xFE	; 254
    4202:	16 16       	cp	r1, r22
    4204:	17 06       	cpc	r1, r23
    4206:	e8 07       	cpc	r30, r24
    4208:	f9 07       	cpc	r31, r25
    420a:	c0 f0       	brcs	.+48     	; 0x423c <__fp_cmp+0x46>
    420c:	12 16       	cp	r1, r18
    420e:	13 06       	cpc	r1, r19
    4210:	e4 07       	cpc	r30, r20
    4212:	f5 07       	cpc	r31, r21
    4214:	98 f0       	brcs	.+38     	; 0x423c <__fp_cmp+0x46>
    4216:	62 1b       	sub	r22, r18
    4218:	73 0b       	sbc	r23, r19
    421a:	84 0b       	sbc	r24, r20
    421c:	95 0b       	sbc	r25, r21
    421e:	39 f4       	brne	.+14     	; 0x422e <__fp_cmp+0x38>
    4220:	0a 26       	eor	r0, r26
    4222:	61 f0       	breq	.+24     	; 0x423c <__fp_cmp+0x46>
    4224:	23 2b       	or	r18, r19
    4226:	24 2b       	or	r18, r20
    4228:	25 2b       	or	r18, r21
    422a:	21 f4       	brne	.+8      	; 0x4234 <__fp_cmp+0x3e>
    422c:	08 95       	ret
    422e:	0a 26       	eor	r0, r26
    4230:	09 f4       	brne	.+2      	; 0x4234 <__fp_cmp+0x3e>
    4232:	a1 40       	sbci	r26, 0x01	; 1
    4234:	a6 95       	lsr	r26
    4236:	8f ef       	ldi	r24, 0xFF	; 255
    4238:	81 1d       	adc	r24, r1
    423a:	81 1d       	adc	r24, r1
    423c:	08 95       	ret

0000423e <__fp_inf>:
    423e:	97 f9       	bld	r25, 7
    4240:	9f 67       	ori	r25, 0x7F	; 127
    4242:	80 e8       	ldi	r24, 0x80	; 128
    4244:	70 e0       	ldi	r23, 0x00	; 0
    4246:	60 e0       	ldi	r22, 0x00	; 0
    4248:	08 95       	ret

0000424a <__fp_mintl>:
    424a:	88 23       	and	r24, r24
    424c:	71 f4       	brne	.+28     	; 0x426a <__fp_mintl+0x20>
    424e:	77 23       	and	r23, r23
    4250:	21 f0       	breq	.+8      	; 0x425a <__fp_mintl+0x10>
    4252:	98 50       	subi	r25, 0x08	; 8
    4254:	87 2b       	or	r24, r23
    4256:	76 2f       	mov	r23, r22
    4258:	07 c0       	rjmp	.+14     	; 0x4268 <__fp_mintl+0x1e>
    425a:	66 23       	and	r22, r22
    425c:	11 f4       	brne	.+4      	; 0x4262 <__fp_mintl+0x18>
    425e:	99 27       	eor	r25, r25
    4260:	0d c0       	rjmp	.+26     	; 0x427c <__fp_mintl+0x32>
    4262:	90 51       	subi	r25, 0x10	; 16
    4264:	86 2b       	or	r24, r22
    4266:	70 e0       	ldi	r23, 0x00	; 0
    4268:	60 e0       	ldi	r22, 0x00	; 0
    426a:	2a f0       	brmi	.+10     	; 0x4276 <__fp_mintl+0x2c>
    426c:	9a 95       	dec	r25
    426e:	66 0f       	add	r22, r22
    4270:	77 1f       	adc	r23, r23
    4272:	88 1f       	adc	r24, r24
    4274:	da f7       	brpl	.-10     	; 0x426c <__fp_mintl+0x22>
    4276:	88 0f       	add	r24, r24
    4278:	96 95       	lsr	r25
    427a:	87 95       	ror	r24
    427c:	97 f9       	bld	r25, 7
    427e:	08 95       	ret

00004280 <__fp_mpack>:
    4280:	9f 3f       	cpi	r25, 0xFF	; 255
    4282:	31 f0       	breq	.+12     	; 0x4290 <__fp_mpack_finite+0xc>

00004284 <__fp_mpack_finite>:
    4284:	91 50       	subi	r25, 0x01	; 1
    4286:	20 f4       	brcc	.+8      	; 0x4290 <__fp_mpack_finite+0xc>
    4288:	87 95       	ror	r24
    428a:	77 95       	ror	r23
    428c:	67 95       	ror	r22
    428e:	b7 95       	ror	r27
    4290:	88 0f       	add	r24, r24
    4292:	91 1d       	adc	r25, r1
    4294:	96 95       	lsr	r25
    4296:	87 95       	ror	r24
    4298:	97 f9       	bld	r25, 7
    429a:	08 95       	ret

0000429c <__fp_nan>:
    429c:	9f ef       	ldi	r25, 0xFF	; 255
    429e:	80 ec       	ldi	r24, 0xC0	; 192
    42a0:	08 95       	ret

000042a2 <__fp_pscA>:
    42a2:	00 24       	eor	r0, r0
    42a4:	0a 94       	dec	r0
    42a6:	16 16       	cp	r1, r22
    42a8:	17 06       	cpc	r1, r23
    42aa:	18 06       	cpc	r1, r24
    42ac:	09 06       	cpc	r0, r25
    42ae:	08 95       	ret

000042b0 <__fp_pscB>:
    42b0:	00 24       	eor	r0, r0
    42b2:	0a 94       	dec	r0
    42b4:	12 16       	cp	r1, r18
    42b6:	13 06       	cpc	r1, r19
    42b8:	14 06       	cpc	r1, r20
    42ba:	05 06       	cpc	r0, r21
    42bc:	08 95       	ret

000042be <__fp_round>:
    42be:	09 2e       	mov	r0, r25
    42c0:	03 94       	inc	r0
    42c2:	00 0c       	add	r0, r0
    42c4:	11 f4       	brne	.+4      	; 0x42ca <__fp_round+0xc>
    42c6:	88 23       	and	r24, r24
    42c8:	52 f0       	brmi	.+20     	; 0x42de <__fp_round+0x20>
    42ca:	bb 0f       	add	r27, r27
    42cc:	40 f4       	brcc	.+16     	; 0x42de <__fp_round+0x20>
    42ce:	bf 2b       	or	r27, r31
    42d0:	11 f4       	brne	.+4      	; 0x42d6 <__fp_round+0x18>
    42d2:	60 ff       	sbrs	r22, 0
    42d4:	04 c0       	rjmp	.+8      	; 0x42de <__fp_round+0x20>
    42d6:	6f 5f       	subi	r22, 0xFF	; 255
    42d8:	7f 4f       	sbci	r23, 0xFF	; 255
    42da:	8f 4f       	sbci	r24, 0xFF	; 255
    42dc:	9f 4f       	sbci	r25, 0xFF	; 255
    42de:	08 95       	ret

000042e0 <__fp_split3>:
    42e0:	57 fd       	sbrc	r21, 7
    42e2:	90 58       	subi	r25, 0x80	; 128
    42e4:	44 0f       	add	r20, r20
    42e6:	55 1f       	adc	r21, r21
    42e8:	59 f0       	breq	.+22     	; 0x4300 <__fp_splitA+0x10>
    42ea:	5f 3f       	cpi	r21, 0xFF	; 255
    42ec:	71 f0       	breq	.+28     	; 0x430a <__fp_splitA+0x1a>
    42ee:	47 95       	ror	r20

000042f0 <__fp_splitA>:
    42f0:	88 0f       	add	r24, r24
    42f2:	97 fb       	bst	r25, 7
    42f4:	99 1f       	adc	r25, r25
    42f6:	61 f0       	breq	.+24     	; 0x4310 <__fp_splitA+0x20>
    42f8:	9f 3f       	cpi	r25, 0xFF	; 255
    42fa:	79 f0       	breq	.+30     	; 0x431a <__fp_splitA+0x2a>
    42fc:	87 95       	ror	r24
    42fe:	08 95       	ret
    4300:	12 16       	cp	r1, r18
    4302:	13 06       	cpc	r1, r19
    4304:	14 06       	cpc	r1, r20
    4306:	55 1f       	adc	r21, r21
    4308:	f2 cf       	rjmp	.-28     	; 0x42ee <__fp_split3+0xe>
    430a:	46 95       	lsr	r20
    430c:	f1 df       	rcall	.-30     	; 0x42f0 <__fp_splitA>
    430e:	08 c0       	rjmp	.+16     	; 0x4320 <__fp_splitA+0x30>
    4310:	16 16       	cp	r1, r22
    4312:	17 06       	cpc	r1, r23
    4314:	18 06       	cpc	r1, r24
    4316:	99 1f       	adc	r25, r25
    4318:	f1 cf       	rjmp	.-30     	; 0x42fc <__fp_splitA+0xc>
    431a:	86 95       	lsr	r24
    431c:	71 05       	cpc	r23, r1
    431e:	61 05       	cpc	r22, r1
    4320:	08 94       	sec
    4322:	08 95       	ret

00004324 <__fp_trunc>:
    4324:	e5 df       	rcall	.-54     	; 0x42f0 <__fp_splitA>
    4326:	a0 f0       	brcs	.+40     	; 0x4350 <__fp_trunc+0x2c>
    4328:	be e7       	ldi	r27, 0x7E	; 126
    432a:	b9 17       	cp	r27, r25
    432c:	88 f4       	brcc	.+34     	; 0x4350 <__fp_trunc+0x2c>
    432e:	bb 27       	eor	r27, r27
    4330:	9f 38       	cpi	r25, 0x8F	; 143
    4332:	60 f4       	brcc	.+24     	; 0x434c <__fp_trunc+0x28>
    4334:	16 16       	cp	r1, r22
    4336:	b1 1d       	adc	r27, r1
    4338:	67 2f       	mov	r22, r23
    433a:	78 2f       	mov	r23, r24
    433c:	88 27       	eor	r24, r24
    433e:	98 5f       	subi	r25, 0xF8	; 248
    4340:	f7 cf       	rjmp	.-18     	; 0x4330 <__fp_trunc+0xc>
    4342:	86 95       	lsr	r24
    4344:	77 95       	ror	r23
    4346:	67 95       	ror	r22
    4348:	b1 1d       	adc	r27, r1
    434a:	93 95       	inc	r25
    434c:	96 39       	cpi	r25, 0x96	; 150
    434e:	c8 f3       	brcs	.-14     	; 0x4342 <__fp_trunc+0x1e>
    4350:	08 95       	ret

00004352 <__fp_zero>:
    4352:	e8 94       	clt

00004354 <__fp_szero>:
    4354:	bb 27       	eor	r27, r27
    4356:	66 27       	eor	r22, r22
    4358:	77 27       	eor	r23, r23
    435a:	cb 01       	movw	r24, r22
    435c:	97 f9       	bld	r25, 7
    435e:	08 95       	ret

00004360 <__gesf2>:
    4360:	4a df       	rcall	.-364    	; 0x41f6 <__fp_cmp>
    4362:	08 f4       	brcc	.+2      	; 0x4366 <__gesf2+0x6>
    4364:	8f ef       	ldi	r24, 0xFF	; 255
    4366:	08 95       	ret

00004368 <__mulsf3>:
    4368:	0b d0       	rcall	.+22     	; 0x4380 <__mulsf3x>
    436a:	a9 cf       	rjmp	.-174    	; 0x42be <__fp_round>
    436c:	9a df       	rcall	.-204    	; 0x42a2 <__fp_pscA>
    436e:	28 f0       	brcs	.+10     	; 0x437a <__mulsf3+0x12>
    4370:	9f df       	rcall	.-194    	; 0x42b0 <__fp_pscB>
    4372:	18 f0       	brcs	.+6      	; 0x437a <__mulsf3+0x12>
    4374:	95 23       	and	r25, r21
    4376:	09 f0       	breq	.+2      	; 0x437a <__mulsf3+0x12>
    4378:	62 cf       	rjmp	.-316    	; 0x423e <__fp_inf>
    437a:	90 cf       	rjmp	.-224    	; 0x429c <__fp_nan>
    437c:	11 24       	eor	r1, r1
    437e:	ea cf       	rjmp	.-44     	; 0x4354 <__fp_szero>

00004380 <__mulsf3x>:
    4380:	af df       	rcall	.-162    	; 0x42e0 <__fp_split3>
    4382:	a0 f3       	brcs	.-24     	; 0x436c <__mulsf3+0x4>

00004384 <__mulsf3_pse>:
    4384:	95 9f       	mul	r25, r21
    4386:	d1 f3       	breq	.-12     	; 0x437c <__mulsf3+0x14>
    4388:	95 0f       	add	r25, r21
    438a:	50 e0       	ldi	r21, 0x00	; 0
    438c:	55 1f       	adc	r21, r21
    438e:	62 9f       	mul	r22, r18
    4390:	f0 01       	movw	r30, r0
    4392:	72 9f       	mul	r23, r18
    4394:	bb 27       	eor	r27, r27
    4396:	f0 0d       	add	r31, r0
    4398:	b1 1d       	adc	r27, r1
    439a:	63 9f       	mul	r22, r19
    439c:	aa 27       	eor	r26, r26
    439e:	f0 0d       	add	r31, r0
    43a0:	b1 1d       	adc	r27, r1
    43a2:	aa 1f       	adc	r26, r26
    43a4:	64 9f       	mul	r22, r20
    43a6:	66 27       	eor	r22, r22
    43a8:	b0 0d       	add	r27, r0
    43aa:	a1 1d       	adc	r26, r1
    43ac:	66 1f       	adc	r22, r22
    43ae:	82 9f       	mul	r24, r18
    43b0:	22 27       	eor	r18, r18
    43b2:	b0 0d       	add	r27, r0
    43b4:	a1 1d       	adc	r26, r1
    43b6:	62 1f       	adc	r22, r18
    43b8:	73 9f       	mul	r23, r19
    43ba:	b0 0d       	add	r27, r0
    43bc:	a1 1d       	adc	r26, r1
    43be:	62 1f       	adc	r22, r18
    43c0:	83 9f       	mul	r24, r19
    43c2:	a0 0d       	add	r26, r0
    43c4:	61 1d       	adc	r22, r1
    43c6:	22 1f       	adc	r18, r18
    43c8:	74 9f       	mul	r23, r20
    43ca:	33 27       	eor	r19, r19
    43cc:	a0 0d       	add	r26, r0
    43ce:	61 1d       	adc	r22, r1
    43d0:	23 1f       	adc	r18, r19
    43d2:	84 9f       	mul	r24, r20
    43d4:	60 0d       	add	r22, r0
    43d6:	21 1d       	adc	r18, r1
    43d8:	82 2f       	mov	r24, r18
    43da:	76 2f       	mov	r23, r22
    43dc:	6a 2f       	mov	r22, r26
    43de:	11 24       	eor	r1, r1
    43e0:	9f 57       	subi	r25, 0x7F	; 127
    43e2:	50 40       	sbci	r21, 0x00	; 0
    43e4:	8a f0       	brmi	.+34     	; 0x4408 <__mulsf3_pse+0x84>
    43e6:	e1 f0       	breq	.+56     	; 0x4420 <__mulsf3_pse+0x9c>
    43e8:	88 23       	and	r24, r24
    43ea:	4a f0       	brmi	.+18     	; 0x43fe <__mulsf3_pse+0x7a>
    43ec:	ee 0f       	add	r30, r30
    43ee:	ff 1f       	adc	r31, r31
    43f0:	bb 1f       	adc	r27, r27
    43f2:	66 1f       	adc	r22, r22
    43f4:	77 1f       	adc	r23, r23
    43f6:	88 1f       	adc	r24, r24
    43f8:	91 50       	subi	r25, 0x01	; 1
    43fa:	50 40       	sbci	r21, 0x00	; 0
    43fc:	a9 f7       	brne	.-22     	; 0x43e8 <__mulsf3_pse+0x64>
    43fe:	9e 3f       	cpi	r25, 0xFE	; 254
    4400:	51 05       	cpc	r21, r1
    4402:	70 f0       	brcs	.+28     	; 0x4420 <__mulsf3_pse+0x9c>
    4404:	1c cf       	rjmp	.-456    	; 0x423e <__fp_inf>
    4406:	a6 cf       	rjmp	.-180    	; 0x4354 <__fp_szero>
    4408:	5f 3f       	cpi	r21, 0xFF	; 255
    440a:	ec f3       	brlt	.-6      	; 0x4406 <__mulsf3_pse+0x82>
    440c:	98 3e       	cpi	r25, 0xE8	; 232
    440e:	dc f3       	brlt	.-10     	; 0x4406 <__mulsf3_pse+0x82>
    4410:	86 95       	lsr	r24
    4412:	77 95       	ror	r23
    4414:	67 95       	ror	r22
    4416:	b7 95       	ror	r27
    4418:	f7 95       	ror	r31
    441a:	e7 95       	ror	r30
    441c:	9f 5f       	subi	r25, 0xFF	; 255
    441e:	c1 f7       	brne	.-16     	; 0x4410 <__mulsf3_pse+0x8c>
    4420:	fe 2b       	or	r31, r30
    4422:	88 0f       	add	r24, r24
    4424:	91 1d       	adc	r25, r1
    4426:	96 95       	lsr	r25
    4428:	87 95       	ror	r24
    442a:	97 f9       	bld	r25, 7
    442c:	08 95       	ret

0000442e <__udivmodqi4>:
    442e:	99 1b       	sub	r25, r25
    4430:	79 e0       	ldi	r23, 0x09	; 9
    4432:	04 c0       	rjmp	.+8      	; 0x443c <__udivmodqi4_ep>

00004434 <__udivmodqi4_loop>:
    4434:	99 1f       	adc	r25, r25
    4436:	96 17       	cp	r25, r22
    4438:	08 f0       	brcs	.+2      	; 0x443c <__udivmodqi4_ep>
    443a:	96 1b       	sub	r25, r22

0000443c <__udivmodqi4_ep>:
    443c:	88 1f       	adc	r24, r24
    443e:	7a 95       	dec	r23
    4440:	c9 f7       	brne	.-14     	; 0x4434 <__udivmodqi4_loop>
    4442:	80 95       	com	r24
    4444:	08 95       	ret

00004446 <__udivmodhi4>:
    4446:	aa 1b       	sub	r26, r26
    4448:	bb 1b       	sub	r27, r27
    444a:	51 e1       	ldi	r21, 0x11	; 17
    444c:	07 c0       	rjmp	.+14     	; 0x445c <__udivmodhi4_ep>

0000444e <__udivmodhi4_loop>:
    444e:	aa 1f       	adc	r26, r26
    4450:	bb 1f       	adc	r27, r27
    4452:	a6 17       	cp	r26, r22
    4454:	b7 07       	cpc	r27, r23
    4456:	10 f0       	brcs	.+4      	; 0x445c <__udivmodhi4_ep>
    4458:	a6 1b       	sub	r26, r22
    445a:	b7 0b       	sbc	r27, r23

0000445c <__udivmodhi4_ep>:
    445c:	88 1f       	adc	r24, r24
    445e:	99 1f       	adc	r25, r25
    4460:	5a 95       	dec	r21
    4462:	a9 f7       	brne	.-22     	; 0x444e <__udivmodhi4_loop>
    4464:	80 95       	com	r24
    4466:	90 95       	com	r25
    4468:	bc 01       	movw	r22, r24
    446a:	cd 01       	movw	r24, r26
    446c:	08 95       	ret

0000446e <__divmodhi4>:
    446e:	97 fb       	bst	r25, 7
    4470:	07 2e       	mov	r0, r23
    4472:	16 f4       	brtc	.+4      	; 0x4478 <__divmodhi4+0xa>
    4474:	00 94       	com	r0
    4476:	06 d0       	rcall	.+12     	; 0x4484 <__divmodhi4_neg1>
    4478:	77 fd       	sbrc	r23, 7
    447a:	08 d0       	rcall	.+16     	; 0x448c <__divmodhi4_neg2>
    447c:	e4 df       	rcall	.-56     	; 0x4446 <__udivmodhi4>
    447e:	07 fc       	sbrc	r0, 7
    4480:	05 d0       	rcall	.+10     	; 0x448c <__divmodhi4_neg2>
    4482:	3e f4       	brtc	.+14     	; 0x4492 <__divmodhi4_exit>

00004484 <__divmodhi4_neg1>:
    4484:	90 95       	com	r25
    4486:	81 95       	neg	r24
    4488:	9f 4f       	sbci	r25, 0xFF	; 255
    448a:	08 95       	ret

0000448c <__divmodhi4_neg2>:
    448c:	70 95       	com	r23
    448e:	61 95       	neg	r22
    4490:	7f 4f       	sbci	r23, 0xFF	; 255

00004492 <__divmodhi4_exit>:
    4492:	08 95       	ret

00004494 <__tablejump2__>:
    4494:	ee 0f       	add	r30, r30
    4496:	ff 1f       	adc	r31, r31
    4498:	05 90       	lpm	r0, Z+
    449a:	f4 91       	lpm	r31, Z
    449c:	e0 2d       	mov	r30, r0
    449e:	09 94       	ijmp

000044a0 <strcpy>:
    44a0:	fb 01       	movw	r30, r22
    44a2:	dc 01       	movw	r26, r24
    44a4:	01 90       	ld	r0, Z+
    44a6:	0d 92       	st	X+, r0
    44a8:	00 20       	and	r0, r0
    44aa:	e1 f7       	brne	.-8      	; 0x44a4 <strcpy+0x4>
    44ac:	08 95       	ret

000044ae <strnlen>:
    44ae:	fc 01       	movw	r30, r24
    44b0:	61 50       	subi	r22, 0x01	; 1
    44b2:	70 40       	sbci	r23, 0x00	; 0
    44b4:	01 90       	ld	r0, Z+
    44b6:	01 10       	cpse	r0, r1
    44b8:	d8 f7       	brcc	.-10     	; 0x44b0 <strnlen+0x2>
    44ba:	80 95       	com	r24
    44bc:	90 95       	com	r25
    44be:	8e 0f       	add	r24, r30
    44c0:	9f 1f       	adc	r25, r31
    44c2:	08 95       	ret

000044c4 <snprintf>:
    44c4:	ae e0       	ldi	r26, 0x0E	; 14
    44c6:	b0 e0       	ldi	r27, 0x00	; 0
    44c8:	e7 e6       	ldi	r30, 0x67	; 103
    44ca:	f2 e2       	ldi	r31, 0x22	; 34
    44cc:	c3 c2       	rjmp	.+1414   	; 0x4a54 <__prologue_saves__+0x1c>
    44ce:	0d 89       	ldd	r16, Y+21	; 0x15
    44d0:	1e 89       	ldd	r17, Y+22	; 0x16
    44d2:	8f 89       	ldd	r24, Y+23	; 0x17
    44d4:	98 8d       	ldd	r25, Y+24	; 0x18
    44d6:	26 e0       	ldi	r18, 0x06	; 6
    44d8:	2c 83       	std	Y+4, r18	; 0x04
    44da:	1a 83       	std	Y+2, r17	; 0x02
    44dc:	09 83       	std	Y+1, r16	; 0x01
    44de:	97 ff       	sbrs	r25, 7
    44e0:	02 c0       	rjmp	.+4      	; 0x44e6 <snprintf+0x22>
    44e2:	80 e0       	ldi	r24, 0x00	; 0
    44e4:	90 e8       	ldi	r25, 0x80	; 128
    44e6:	01 97       	sbiw	r24, 0x01	; 1
    44e8:	9e 83       	std	Y+6, r25	; 0x06
    44ea:	8d 83       	std	Y+5, r24	; 0x05
    44ec:	ae 01       	movw	r20, r28
    44ee:	45 5e       	subi	r20, 0xE5	; 229
    44f0:	5f 4f       	sbci	r21, 0xFF	; 255
    44f2:	69 8d       	ldd	r22, Y+25	; 0x19
    44f4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    44f6:	ce 01       	movw	r24, r28
    44f8:	01 96       	adiw	r24, 0x01	; 1
    44fa:	11 d0       	rcall	.+34     	; 0x451e <vfprintf>
    44fc:	4d 81       	ldd	r20, Y+5	; 0x05
    44fe:	5e 81       	ldd	r21, Y+6	; 0x06
    4500:	57 fd       	sbrc	r21, 7
    4502:	0a c0       	rjmp	.+20     	; 0x4518 <snprintf+0x54>
    4504:	2f 81       	ldd	r18, Y+7	; 0x07
    4506:	38 85       	ldd	r19, Y+8	; 0x08
    4508:	42 17       	cp	r20, r18
    450a:	53 07       	cpc	r21, r19
    450c:	0c f4       	brge	.+2      	; 0x4510 <snprintf+0x4c>
    450e:	9a 01       	movw	r18, r20
    4510:	f8 01       	movw	r30, r16
    4512:	e2 0f       	add	r30, r18
    4514:	f3 1f       	adc	r31, r19
    4516:	10 82       	st	Z, r1
    4518:	2e 96       	adiw	r28, 0x0e	; 14
    451a:	e4 e0       	ldi	r30, 0x04	; 4
    451c:	b7 c2       	rjmp	.+1390   	; 0x4a8c <__epilogue_restores__+0x1c>

0000451e <vfprintf>:
    451e:	ab e0       	ldi	r26, 0x0B	; 11
    4520:	b0 e0       	ldi	r27, 0x00	; 0
    4522:	e4 e9       	ldi	r30, 0x94	; 148
    4524:	f2 e2       	ldi	r31, 0x22	; 34
    4526:	88 c2       	rjmp	.+1296   	; 0x4a38 <__prologue_saves__>
    4528:	6c 01       	movw	r12, r24
    452a:	7b 01       	movw	r14, r22
    452c:	8a 01       	movw	r16, r20
    452e:	fc 01       	movw	r30, r24
    4530:	17 82       	std	Z+7, r1	; 0x07
    4532:	16 82       	std	Z+6, r1	; 0x06
    4534:	83 81       	ldd	r24, Z+3	; 0x03
    4536:	81 ff       	sbrs	r24, 1
    4538:	bf c1       	rjmp	.+894    	; 0x48b8 <vfprintf+0x39a>
    453a:	ce 01       	movw	r24, r28
    453c:	01 96       	adiw	r24, 0x01	; 1
    453e:	3c 01       	movw	r6, r24
    4540:	f6 01       	movw	r30, r12
    4542:	93 81       	ldd	r25, Z+3	; 0x03
    4544:	f7 01       	movw	r30, r14
    4546:	93 fd       	sbrc	r25, 3
    4548:	85 91       	lpm	r24, Z+
    454a:	93 ff       	sbrs	r25, 3
    454c:	81 91       	ld	r24, Z+
    454e:	7f 01       	movw	r14, r30
    4550:	88 23       	and	r24, r24
    4552:	09 f4       	brne	.+2      	; 0x4556 <vfprintf+0x38>
    4554:	ad c1       	rjmp	.+858    	; 0x48b0 <vfprintf+0x392>
    4556:	85 32       	cpi	r24, 0x25	; 37
    4558:	39 f4       	brne	.+14     	; 0x4568 <vfprintf+0x4a>
    455a:	93 fd       	sbrc	r25, 3
    455c:	85 91       	lpm	r24, Z+
    455e:	93 ff       	sbrs	r25, 3
    4560:	81 91       	ld	r24, Z+
    4562:	7f 01       	movw	r14, r30
    4564:	85 32       	cpi	r24, 0x25	; 37
    4566:	21 f4       	brne	.+8      	; 0x4570 <vfprintf+0x52>
    4568:	b6 01       	movw	r22, r12
    456a:	90 e0       	ldi	r25, 0x00	; 0
    456c:	b5 d1       	rcall	.+874    	; 0x48d8 <fputc>
    456e:	e8 cf       	rjmp	.-48     	; 0x4540 <vfprintf+0x22>
    4570:	91 2c       	mov	r9, r1
    4572:	21 2c       	mov	r2, r1
    4574:	31 2c       	mov	r3, r1
    4576:	ff e1       	ldi	r31, 0x1F	; 31
    4578:	f3 15       	cp	r31, r3
    457a:	d8 f0       	brcs	.+54     	; 0x45b2 <vfprintf+0x94>
    457c:	8b 32       	cpi	r24, 0x2B	; 43
    457e:	79 f0       	breq	.+30     	; 0x459e <vfprintf+0x80>
    4580:	38 f4       	brcc	.+14     	; 0x4590 <vfprintf+0x72>
    4582:	80 32       	cpi	r24, 0x20	; 32
    4584:	79 f0       	breq	.+30     	; 0x45a4 <vfprintf+0x86>
    4586:	83 32       	cpi	r24, 0x23	; 35
    4588:	a1 f4       	brne	.+40     	; 0x45b2 <vfprintf+0x94>
    458a:	23 2d       	mov	r18, r3
    458c:	20 61       	ori	r18, 0x10	; 16
    458e:	1d c0       	rjmp	.+58     	; 0x45ca <vfprintf+0xac>
    4590:	8d 32       	cpi	r24, 0x2D	; 45
    4592:	61 f0       	breq	.+24     	; 0x45ac <vfprintf+0x8e>
    4594:	80 33       	cpi	r24, 0x30	; 48
    4596:	69 f4       	brne	.+26     	; 0x45b2 <vfprintf+0x94>
    4598:	23 2d       	mov	r18, r3
    459a:	21 60       	ori	r18, 0x01	; 1
    459c:	16 c0       	rjmp	.+44     	; 0x45ca <vfprintf+0xac>
    459e:	83 2d       	mov	r24, r3
    45a0:	82 60       	ori	r24, 0x02	; 2
    45a2:	38 2e       	mov	r3, r24
    45a4:	e3 2d       	mov	r30, r3
    45a6:	e4 60       	ori	r30, 0x04	; 4
    45a8:	3e 2e       	mov	r3, r30
    45aa:	2a c0       	rjmp	.+84     	; 0x4600 <vfprintf+0xe2>
    45ac:	f3 2d       	mov	r31, r3
    45ae:	f8 60       	ori	r31, 0x08	; 8
    45b0:	1d c0       	rjmp	.+58     	; 0x45ec <vfprintf+0xce>
    45b2:	37 fc       	sbrc	r3, 7
    45b4:	2d c0       	rjmp	.+90     	; 0x4610 <vfprintf+0xf2>
    45b6:	20 ed       	ldi	r18, 0xD0	; 208
    45b8:	28 0f       	add	r18, r24
    45ba:	2a 30       	cpi	r18, 0x0A	; 10
    45bc:	40 f0       	brcs	.+16     	; 0x45ce <vfprintf+0xb0>
    45be:	8e 32       	cpi	r24, 0x2E	; 46
    45c0:	b9 f4       	brne	.+46     	; 0x45f0 <vfprintf+0xd2>
    45c2:	36 fc       	sbrc	r3, 6
    45c4:	75 c1       	rjmp	.+746    	; 0x48b0 <vfprintf+0x392>
    45c6:	23 2d       	mov	r18, r3
    45c8:	20 64       	ori	r18, 0x40	; 64
    45ca:	32 2e       	mov	r3, r18
    45cc:	19 c0       	rjmp	.+50     	; 0x4600 <vfprintf+0xe2>
    45ce:	36 fe       	sbrs	r3, 6
    45d0:	06 c0       	rjmp	.+12     	; 0x45de <vfprintf+0xc0>
    45d2:	8a e0       	ldi	r24, 0x0A	; 10
    45d4:	98 9e       	mul	r9, r24
    45d6:	20 0d       	add	r18, r0
    45d8:	11 24       	eor	r1, r1
    45da:	92 2e       	mov	r9, r18
    45dc:	11 c0       	rjmp	.+34     	; 0x4600 <vfprintf+0xe2>
    45de:	ea e0       	ldi	r30, 0x0A	; 10
    45e0:	2e 9e       	mul	r2, r30
    45e2:	20 0d       	add	r18, r0
    45e4:	11 24       	eor	r1, r1
    45e6:	22 2e       	mov	r2, r18
    45e8:	f3 2d       	mov	r31, r3
    45ea:	f0 62       	ori	r31, 0x20	; 32
    45ec:	3f 2e       	mov	r3, r31
    45ee:	08 c0       	rjmp	.+16     	; 0x4600 <vfprintf+0xe2>
    45f0:	8c 36       	cpi	r24, 0x6C	; 108
    45f2:	21 f4       	brne	.+8      	; 0x45fc <vfprintf+0xde>
    45f4:	83 2d       	mov	r24, r3
    45f6:	80 68       	ori	r24, 0x80	; 128
    45f8:	38 2e       	mov	r3, r24
    45fa:	02 c0       	rjmp	.+4      	; 0x4600 <vfprintf+0xe2>
    45fc:	88 36       	cpi	r24, 0x68	; 104
    45fe:	41 f4       	brne	.+16     	; 0x4610 <vfprintf+0xf2>
    4600:	f7 01       	movw	r30, r14
    4602:	93 fd       	sbrc	r25, 3
    4604:	85 91       	lpm	r24, Z+
    4606:	93 ff       	sbrs	r25, 3
    4608:	81 91       	ld	r24, Z+
    460a:	7f 01       	movw	r14, r30
    460c:	81 11       	cpse	r24, r1
    460e:	b3 cf       	rjmp	.-154    	; 0x4576 <vfprintf+0x58>
    4610:	98 2f       	mov	r25, r24
    4612:	9f 7d       	andi	r25, 0xDF	; 223
    4614:	95 54       	subi	r25, 0x45	; 69
    4616:	93 30       	cpi	r25, 0x03	; 3
    4618:	28 f4       	brcc	.+10     	; 0x4624 <vfprintf+0x106>
    461a:	0c 5f       	subi	r16, 0xFC	; 252
    461c:	1f 4f       	sbci	r17, 0xFF	; 255
    461e:	9f e3       	ldi	r25, 0x3F	; 63
    4620:	99 83       	std	Y+1, r25	; 0x01
    4622:	0d c0       	rjmp	.+26     	; 0x463e <vfprintf+0x120>
    4624:	83 36       	cpi	r24, 0x63	; 99
    4626:	31 f0       	breq	.+12     	; 0x4634 <vfprintf+0x116>
    4628:	83 37       	cpi	r24, 0x73	; 115
    462a:	71 f0       	breq	.+28     	; 0x4648 <vfprintf+0x12a>
    462c:	83 35       	cpi	r24, 0x53	; 83
    462e:	09 f0       	breq	.+2      	; 0x4632 <vfprintf+0x114>
    4630:	55 c0       	rjmp	.+170    	; 0x46dc <vfprintf+0x1be>
    4632:	20 c0       	rjmp	.+64     	; 0x4674 <vfprintf+0x156>
    4634:	f8 01       	movw	r30, r16
    4636:	80 81       	ld	r24, Z
    4638:	89 83       	std	Y+1, r24	; 0x01
    463a:	0e 5f       	subi	r16, 0xFE	; 254
    463c:	1f 4f       	sbci	r17, 0xFF	; 255
    463e:	88 24       	eor	r8, r8
    4640:	83 94       	inc	r8
    4642:	91 2c       	mov	r9, r1
    4644:	53 01       	movw	r10, r6
    4646:	12 c0       	rjmp	.+36     	; 0x466c <vfprintf+0x14e>
    4648:	28 01       	movw	r4, r16
    464a:	f2 e0       	ldi	r31, 0x02	; 2
    464c:	4f 0e       	add	r4, r31
    464e:	51 1c       	adc	r5, r1
    4650:	f8 01       	movw	r30, r16
    4652:	a0 80       	ld	r10, Z
    4654:	b1 80       	ldd	r11, Z+1	; 0x01
    4656:	36 fe       	sbrs	r3, 6
    4658:	03 c0       	rjmp	.+6      	; 0x4660 <vfprintf+0x142>
    465a:	69 2d       	mov	r22, r9
    465c:	70 e0       	ldi	r23, 0x00	; 0
    465e:	02 c0       	rjmp	.+4      	; 0x4664 <vfprintf+0x146>
    4660:	6f ef       	ldi	r22, 0xFF	; 255
    4662:	7f ef       	ldi	r23, 0xFF	; 255
    4664:	c5 01       	movw	r24, r10
    4666:	23 df       	rcall	.-442    	; 0x44ae <strnlen>
    4668:	4c 01       	movw	r8, r24
    466a:	82 01       	movw	r16, r4
    466c:	f3 2d       	mov	r31, r3
    466e:	ff 77       	andi	r31, 0x7F	; 127
    4670:	3f 2e       	mov	r3, r31
    4672:	15 c0       	rjmp	.+42     	; 0x469e <vfprintf+0x180>
    4674:	28 01       	movw	r4, r16
    4676:	22 e0       	ldi	r18, 0x02	; 2
    4678:	42 0e       	add	r4, r18
    467a:	51 1c       	adc	r5, r1
    467c:	f8 01       	movw	r30, r16
    467e:	a0 80       	ld	r10, Z
    4680:	b1 80       	ldd	r11, Z+1	; 0x01
    4682:	36 fe       	sbrs	r3, 6
    4684:	03 c0       	rjmp	.+6      	; 0x468c <vfprintf+0x16e>
    4686:	69 2d       	mov	r22, r9
    4688:	70 e0       	ldi	r23, 0x00	; 0
    468a:	02 c0       	rjmp	.+4      	; 0x4690 <vfprintf+0x172>
    468c:	6f ef       	ldi	r22, 0xFF	; 255
    468e:	7f ef       	ldi	r23, 0xFF	; 255
    4690:	c5 01       	movw	r24, r10
    4692:	17 d1       	rcall	.+558    	; 0x48c2 <strnlen_P>
    4694:	4c 01       	movw	r8, r24
    4696:	f3 2d       	mov	r31, r3
    4698:	f0 68       	ori	r31, 0x80	; 128
    469a:	3f 2e       	mov	r3, r31
    469c:	82 01       	movw	r16, r4
    469e:	33 fc       	sbrc	r3, 3
    46a0:	19 c0       	rjmp	.+50     	; 0x46d4 <vfprintf+0x1b6>
    46a2:	82 2d       	mov	r24, r2
    46a4:	90 e0       	ldi	r25, 0x00	; 0
    46a6:	88 16       	cp	r8, r24
    46a8:	99 06       	cpc	r9, r25
    46aa:	a0 f4       	brcc	.+40     	; 0x46d4 <vfprintf+0x1b6>
    46ac:	b6 01       	movw	r22, r12
    46ae:	80 e2       	ldi	r24, 0x20	; 32
    46b0:	90 e0       	ldi	r25, 0x00	; 0
    46b2:	12 d1       	rcall	.+548    	; 0x48d8 <fputc>
    46b4:	2a 94       	dec	r2
    46b6:	f5 cf       	rjmp	.-22     	; 0x46a2 <vfprintf+0x184>
    46b8:	f5 01       	movw	r30, r10
    46ba:	37 fc       	sbrc	r3, 7
    46bc:	85 91       	lpm	r24, Z+
    46be:	37 fe       	sbrs	r3, 7
    46c0:	81 91       	ld	r24, Z+
    46c2:	5f 01       	movw	r10, r30
    46c4:	b6 01       	movw	r22, r12
    46c6:	90 e0       	ldi	r25, 0x00	; 0
    46c8:	07 d1       	rcall	.+526    	; 0x48d8 <fputc>
    46ca:	21 10       	cpse	r2, r1
    46cc:	2a 94       	dec	r2
    46ce:	21 e0       	ldi	r18, 0x01	; 1
    46d0:	82 1a       	sub	r8, r18
    46d2:	91 08       	sbc	r9, r1
    46d4:	81 14       	cp	r8, r1
    46d6:	91 04       	cpc	r9, r1
    46d8:	79 f7       	brne	.-34     	; 0x46b8 <vfprintf+0x19a>
    46da:	e1 c0       	rjmp	.+450    	; 0x489e <vfprintf+0x380>
    46dc:	84 36       	cpi	r24, 0x64	; 100
    46de:	11 f0       	breq	.+4      	; 0x46e4 <vfprintf+0x1c6>
    46e0:	89 36       	cpi	r24, 0x69	; 105
    46e2:	39 f5       	brne	.+78     	; 0x4732 <vfprintf+0x214>
    46e4:	f8 01       	movw	r30, r16
    46e6:	37 fe       	sbrs	r3, 7
    46e8:	07 c0       	rjmp	.+14     	; 0x46f8 <vfprintf+0x1da>
    46ea:	60 81       	ld	r22, Z
    46ec:	71 81       	ldd	r23, Z+1	; 0x01
    46ee:	82 81       	ldd	r24, Z+2	; 0x02
    46f0:	93 81       	ldd	r25, Z+3	; 0x03
    46f2:	0c 5f       	subi	r16, 0xFC	; 252
    46f4:	1f 4f       	sbci	r17, 0xFF	; 255
    46f6:	08 c0       	rjmp	.+16     	; 0x4708 <vfprintf+0x1ea>
    46f8:	60 81       	ld	r22, Z
    46fa:	71 81       	ldd	r23, Z+1	; 0x01
    46fc:	07 2e       	mov	r0, r23
    46fe:	00 0c       	add	r0, r0
    4700:	88 0b       	sbc	r24, r24
    4702:	99 0b       	sbc	r25, r25
    4704:	0e 5f       	subi	r16, 0xFE	; 254
    4706:	1f 4f       	sbci	r17, 0xFF	; 255
    4708:	f3 2d       	mov	r31, r3
    470a:	ff 76       	andi	r31, 0x6F	; 111
    470c:	3f 2e       	mov	r3, r31
    470e:	97 ff       	sbrs	r25, 7
    4710:	09 c0       	rjmp	.+18     	; 0x4724 <vfprintf+0x206>
    4712:	90 95       	com	r25
    4714:	80 95       	com	r24
    4716:	70 95       	com	r23
    4718:	61 95       	neg	r22
    471a:	7f 4f       	sbci	r23, 0xFF	; 255
    471c:	8f 4f       	sbci	r24, 0xFF	; 255
    471e:	9f 4f       	sbci	r25, 0xFF	; 255
    4720:	f0 68       	ori	r31, 0x80	; 128
    4722:	3f 2e       	mov	r3, r31
    4724:	2a e0       	ldi	r18, 0x0A	; 10
    4726:	30 e0       	ldi	r19, 0x00	; 0
    4728:	a3 01       	movw	r20, r6
    472a:	12 d1       	rcall	.+548    	; 0x4950 <__ultoa_invert>
    472c:	88 2e       	mov	r8, r24
    472e:	86 18       	sub	r8, r6
    4730:	44 c0       	rjmp	.+136    	; 0x47ba <vfprintf+0x29c>
    4732:	85 37       	cpi	r24, 0x75	; 117
    4734:	31 f4       	brne	.+12     	; 0x4742 <vfprintf+0x224>
    4736:	23 2d       	mov	r18, r3
    4738:	2f 7e       	andi	r18, 0xEF	; 239
    473a:	b2 2e       	mov	r11, r18
    473c:	2a e0       	ldi	r18, 0x0A	; 10
    473e:	30 e0       	ldi	r19, 0x00	; 0
    4740:	25 c0       	rjmp	.+74     	; 0x478c <vfprintf+0x26e>
    4742:	93 2d       	mov	r25, r3
    4744:	99 7f       	andi	r25, 0xF9	; 249
    4746:	b9 2e       	mov	r11, r25
    4748:	8f 36       	cpi	r24, 0x6F	; 111
    474a:	c1 f0       	breq	.+48     	; 0x477c <vfprintf+0x25e>
    474c:	18 f4       	brcc	.+6      	; 0x4754 <vfprintf+0x236>
    474e:	88 35       	cpi	r24, 0x58	; 88
    4750:	79 f0       	breq	.+30     	; 0x4770 <vfprintf+0x252>
    4752:	ae c0       	rjmp	.+348    	; 0x48b0 <vfprintf+0x392>
    4754:	80 37       	cpi	r24, 0x70	; 112
    4756:	19 f0       	breq	.+6      	; 0x475e <vfprintf+0x240>
    4758:	88 37       	cpi	r24, 0x78	; 120
    475a:	21 f0       	breq	.+8      	; 0x4764 <vfprintf+0x246>
    475c:	a9 c0       	rjmp	.+338    	; 0x48b0 <vfprintf+0x392>
    475e:	e9 2f       	mov	r30, r25
    4760:	e0 61       	ori	r30, 0x10	; 16
    4762:	be 2e       	mov	r11, r30
    4764:	b4 fe       	sbrs	r11, 4
    4766:	0d c0       	rjmp	.+26     	; 0x4782 <vfprintf+0x264>
    4768:	fb 2d       	mov	r31, r11
    476a:	f4 60       	ori	r31, 0x04	; 4
    476c:	bf 2e       	mov	r11, r31
    476e:	09 c0       	rjmp	.+18     	; 0x4782 <vfprintf+0x264>
    4770:	34 fe       	sbrs	r3, 4
    4772:	0a c0       	rjmp	.+20     	; 0x4788 <vfprintf+0x26a>
    4774:	29 2f       	mov	r18, r25
    4776:	26 60       	ori	r18, 0x06	; 6
    4778:	b2 2e       	mov	r11, r18
    477a:	06 c0       	rjmp	.+12     	; 0x4788 <vfprintf+0x26a>
    477c:	28 e0       	ldi	r18, 0x08	; 8
    477e:	30 e0       	ldi	r19, 0x00	; 0
    4780:	05 c0       	rjmp	.+10     	; 0x478c <vfprintf+0x26e>
    4782:	20 e1       	ldi	r18, 0x10	; 16
    4784:	30 e0       	ldi	r19, 0x00	; 0
    4786:	02 c0       	rjmp	.+4      	; 0x478c <vfprintf+0x26e>
    4788:	20 e1       	ldi	r18, 0x10	; 16
    478a:	32 e0       	ldi	r19, 0x02	; 2
    478c:	f8 01       	movw	r30, r16
    478e:	b7 fe       	sbrs	r11, 7
    4790:	07 c0       	rjmp	.+14     	; 0x47a0 <vfprintf+0x282>
    4792:	60 81       	ld	r22, Z
    4794:	71 81       	ldd	r23, Z+1	; 0x01
    4796:	82 81       	ldd	r24, Z+2	; 0x02
    4798:	93 81       	ldd	r25, Z+3	; 0x03
    479a:	0c 5f       	subi	r16, 0xFC	; 252
    479c:	1f 4f       	sbci	r17, 0xFF	; 255
    479e:	06 c0       	rjmp	.+12     	; 0x47ac <vfprintf+0x28e>
    47a0:	60 81       	ld	r22, Z
    47a2:	71 81       	ldd	r23, Z+1	; 0x01
    47a4:	80 e0       	ldi	r24, 0x00	; 0
    47a6:	90 e0       	ldi	r25, 0x00	; 0
    47a8:	0e 5f       	subi	r16, 0xFE	; 254
    47aa:	1f 4f       	sbci	r17, 0xFF	; 255
    47ac:	a3 01       	movw	r20, r6
    47ae:	d0 d0       	rcall	.+416    	; 0x4950 <__ultoa_invert>
    47b0:	88 2e       	mov	r8, r24
    47b2:	86 18       	sub	r8, r6
    47b4:	fb 2d       	mov	r31, r11
    47b6:	ff 77       	andi	r31, 0x7F	; 127
    47b8:	3f 2e       	mov	r3, r31
    47ba:	36 fe       	sbrs	r3, 6
    47bc:	0d c0       	rjmp	.+26     	; 0x47d8 <vfprintf+0x2ba>
    47be:	23 2d       	mov	r18, r3
    47c0:	2e 7f       	andi	r18, 0xFE	; 254
    47c2:	a2 2e       	mov	r10, r18
    47c4:	89 14       	cp	r8, r9
    47c6:	58 f4       	brcc	.+22     	; 0x47de <vfprintf+0x2c0>
    47c8:	34 fe       	sbrs	r3, 4
    47ca:	0b c0       	rjmp	.+22     	; 0x47e2 <vfprintf+0x2c4>
    47cc:	32 fc       	sbrc	r3, 2
    47ce:	09 c0       	rjmp	.+18     	; 0x47e2 <vfprintf+0x2c4>
    47d0:	83 2d       	mov	r24, r3
    47d2:	8e 7e       	andi	r24, 0xEE	; 238
    47d4:	a8 2e       	mov	r10, r24
    47d6:	05 c0       	rjmp	.+10     	; 0x47e2 <vfprintf+0x2c4>
    47d8:	b8 2c       	mov	r11, r8
    47da:	a3 2c       	mov	r10, r3
    47dc:	03 c0       	rjmp	.+6      	; 0x47e4 <vfprintf+0x2c6>
    47de:	b8 2c       	mov	r11, r8
    47e0:	01 c0       	rjmp	.+2      	; 0x47e4 <vfprintf+0x2c6>
    47e2:	b9 2c       	mov	r11, r9
    47e4:	a4 fe       	sbrs	r10, 4
    47e6:	0f c0       	rjmp	.+30     	; 0x4806 <vfprintf+0x2e8>
    47e8:	fe 01       	movw	r30, r28
    47ea:	e8 0d       	add	r30, r8
    47ec:	f1 1d       	adc	r31, r1
    47ee:	80 81       	ld	r24, Z
    47f0:	80 33       	cpi	r24, 0x30	; 48
    47f2:	21 f4       	brne	.+8      	; 0x47fc <vfprintf+0x2de>
    47f4:	9a 2d       	mov	r25, r10
    47f6:	99 7e       	andi	r25, 0xE9	; 233
    47f8:	a9 2e       	mov	r10, r25
    47fa:	09 c0       	rjmp	.+18     	; 0x480e <vfprintf+0x2f0>
    47fc:	a2 fe       	sbrs	r10, 2
    47fe:	06 c0       	rjmp	.+12     	; 0x480c <vfprintf+0x2ee>
    4800:	b3 94       	inc	r11
    4802:	b3 94       	inc	r11
    4804:	04 c0       	rjmp	.+8      	; 0x480e <vfprintf+0x2f0>
    4806:	8a 2d       	mov	r24, r10
    4808:	86 78       	andi	r24, 0x86	; 134
    480a:	09 f0       	breq	.+2      	; 0x480e <vfprintf+0x2f0>
    480c:	b3 94       	inc	r11
    480e:	a3 fc       	sbrc	r10, 3
    4810:	10 c0       	rjmp	.+32     	; 0x4832 <vfprintf+0x314>
    4812:	a0 fe       	sbrs	r10, 0
    4814:	06 c0       	rjmp	.+12     	; 0x4822 <vfprintf+0x304>
    4816:	b2 14       	cp	r11, r2
    4818:	80 f4       	brcc	.+32     	; 0x483a <vfprintf+0x31c>
    481a:	28 0c       	add	r2, r8
    481c:	92 2c       	mov	r9, r2
    481e:	9b 18       	sub	r9, r11
    4820:	0d c0       	rjmp	.+26     	; 0x483c <vfprintf+0x31e>
    4822:	b2 14       	cp	r11, r2
    4824:	58 f4       	brcc	.+22     	; 0x483c <vfprintf+0x31e>
    4826:	b6 01       	movw	r22, r12
    4828:	80 e2       	ldi	r24, 0x20	; 32
    482a:	90 e0       	ldi	r25, 0x00	; 0
    482c:	55 d0       	rcall	.+170    	; 0x48d8 <fputc>
    482e:	b3 94       	inc	r11
    4830:	f8 cf       	rjmp	.-16     	; 0x4822 <vfprintf+0x304>
    4832:	b2 14       	cp	r11, r2
    4834:	18 f4       	brcc	.+6      	; 0x483c <vfprintf+0x31e>
    4836:	2b 18       	sub	r2, r11
    4838:	02 c0       	rjmp	.+4      	; 0x483e <vfprintf+0x320>
    483a:	98 2c       	mov	r9, r8
    483c:	21 2c       	mov	r2, r1
    483e:	a4 fe       	sbrs	r10, 4
    4840:	0f c0       	rjmp	.+30     	; 0x4860 <vfprintf+0x342>
    4842:	b6 01       	movw	r22, r12
    4844:	80 e3       	ldi	r24, 0x30	; 48
    4846:	90 e0       	ldi	r25, 0x00	; 0
    4848:	47 d0       	rcall	.+142    	; 0x48d8 <fputc>
    484a:	a2 fe       	sbrs	r10, 2
    484c:	16 c0       	rjmp	.+44     	; 0x487a <vfprintf+0x35c>
    484e:	a1 fc       	sbrc	r10, 1
    4850:	03 c0       	rjmp	.+6      	; 0x4858 <vfprintf+0x33a>
    4852:	88 e7       	ldi	r24, 0x78	; 120
    4854:	90 e0       	ldi	r25, 0x00	; 0
    4856:	02 c0       	rjmp	.+4      	; 0x485c <vfprintf+0x33e>
    4858:	88 e5       	ldi	r24, 0x58	; 88
    485a:	90 e0       	ldi	r25, 0x00	; 0
    485c:	b6 01       	movw	r22, r12
    485e:	0c c0       	rjmp	.+24     	; 0x4878 <vfprintf+0x35a>
    4860:	8a 2d       	mov	r24, r10
    4862:	86 78       	andi	r24, 0x86	; 134
    4864:	51 f0       	breq	.+20     	; 0x487a <vfprintf+0x35c>
    4866:	a1 fe       	sbrs	r10, 1
    4868:	02 c0       	rjmp	.+4      	; 0x486e <vfprintf+0x350>
    486a:	8b e2       	ldi	r24, 0x2B	; 43
    486c:	01 c0       	rjmp	.+2      	; 0x4870 <vfprintf+0x352>
    486e:	80 e2       	ldi	r24, 0x20	; 32
    4870:	a7 fc       	sbrc	r10, 7
    4872:	8d e2       	ldi	r24, 0x2D	; 45
    4874:	b6 01       	movw	r22, r12
    4876:	90 e0       	ldi	r25, 0x00	; 0
    4878:	2f d0       	rcall	.+94     	; 0x48d8 <fputc>
    487a:	89 14       	cp	r8, r9
    487c:	30 f4       	brcc	.+12     	; 0x488a <vfprintf+0x36c>
    487e:	b6 01       	movw	r22, r12
    4880:	80 e3       	ldi	r24, 0x30	; 48
    4882:	90 e0       	ldi	r25, 0x00	; 0
    4884:	29 d0       	rcall	.+82     	; 0x48d8 <fputc>
    4886:	9a 94       	dec	r9
    4888:	f8 cf       	rjmp	.-16     	; 0x487a <vfprintf+0x35c>
    488a:	8a 94       	dec	r8
    488c:	f3 01       	movw	r30, r6
    488e:	e8 0d       	add	r30, r8
    4890:	f1 1d       	adc	r31, r1
    4892:	80 81       	ld	r24, Z
    4894:	b6 01       	movw	r22, r12
    4896:	90 e0       	ldi	r25, 0x00	; 0
    4898:	1f d0       	rcall	.+62     	; 0x48d8 <fputc>
    489a:	81 10       	cpse	r8, r1
    489c:	f6 cf       	rjmp	.-20     	; 0x488a <vfprintf+0x36c>
    489e:	22 20       	and	r2, r2
    48a0:	09 f4       	brne	.+2      	; 0x48a4 <vfprintf+0x386>
    48a2:	4e ce       	rjmp	.-868    	; 0x4540 <vfprintf+0x22>
    48a4:	b6 01       	movw	r22, r12
    48a6:	80 e2       	ldi	r24, 0x20	; 32
    48a8:	90 e0       	ldi	r25, 0x00	; 0
    48aa:	16 d0       	rcall	.+44     	; 0x48d8 <fputc>
    48ac:	2a 94       	dec	r2
    48ae:	f7 cf       	rjmp	.-18     	; 0x489e <vfprintf+0x380>
    48b0:	f6 01       	movw	r30, r12
    48b2:	86 81       	ldd	r24, Z+6	; 0x06
    48b4:	97 81       	ldd	r25, Z+7	; 0x07
    48b6:	02 c0       	rjmp	.+4      	; 0x48bc <vfprintf+0x39e>
    48b8:	8f ef       	ldi	r24, 0xFF	; 255
    48ba:	9f ef       	ldi	r25, 0xFF	; 255
    48bc:	2b 96       	adiw	r28, 0x0b	; 11
    48be:	e2 e1       	ldi	r30, 0x12	; 18
    48c0:	d7 c0       	rjmp	.+430    	; 0x4a70 <__epilogue_restores__>

000048c2 <strnlen_P>:
    48c2:	fc 01       	movw	r30, r24
    48c4:	05 90       	lpm	r0, Z+
    48c6:	61 50       	subi	r22, 0x01	; 1
    48c8:	70 40       	sbci	r23, 0x00	; 0
    48ca:	01 10       	cpse	r0, r1
    48cc:	d8 f7       	brcc	.-10     	; 0x48c4 <strnlen_P+0x2>
    48ce:	80 95       	com	r24
    48d0:	90 95       	com	r25
    48d2:	8e 0f       	add	r24, r30
    48d4:	9f 1f       	adc	r25, r31
    48d6:	08 95       	ret

000048d8 <fputc>:
    48d8:	0f 93       	push	r16
    48da:	1f 93       	push	r17
    48dc:	cf 93       	push	r28
    48de:	df 93       	push	r29
    48e0:	fb 01       	movw	r30, r22
    48e2:	23 81       	ldd	r18, Z+3	; 0x03
    48e4:	21 fd       	sbrc	r18, 1
    48e6:	03 c0       	rjmp	.+6      	; 0x48ee <fputc+0x16>
    48e8:	8f ef       	ldi	r24, 0xFF	; 255
    48ea:	9f ef       	ldi	r25, 0xFF	; 255
    48ec:	2c c0       	rjmp	.+88     	; 0x4946 <fputc+0x6e>
    48ee:	22 ff       	sbrs	r18, 2
    48f0:	16 c0       	rjmp	.+44     	; 0x491e <fputc+0x46>
    48f2:	46 81       	ldd	r20, Z+6	; 0x06
    48f4:	57 81       	ldd	r21, Z+7	; 0x07
    48f6:	24 81       	ldd	r18, Z+4	; 0x04
    48f8:	35 81       	ldd	r19, Z+5	; 0x05
    48fa:	42 17       	cp	r20, r18
    48fc:	53 07       	cpc	r21, r19
    48fe:	44 f4       	brge	.+16     	; 0x4910 <fputc+0x38>
    4900:	a0 81       	ld	r26, Z
    4902:	b1 81       	ldd	r27, Z+1	; 0x01
    4904:	9d 01       	movw	r18, r26
    4906:	2f 5f       	subi	r18, 0xFF	; 255
    4908:	3f 4f       	sbci	r19, 0xFF	; 255
    490a:	31 83       	std	Z+1, r19	; 0x01
    490c:	20 83       	st	Z, r18
    490e:	8c 93       	st	X, r24
    4910:	26 81       	ldd	r18, Z+6	; 0x06
    4912:	37 81       	ldd	r19, Z+7	; 0x07
    4914:	2f 5f       	subi	r18, 0xFF	; 255
    4916:	3f 4f       	sbci	r19, 0xFF	; 255
    4918:	37 83       	std	Z+7, r19	; 0x07
    491a:	26 83       	std	Z+6, r18	; 0x06
    491c:	14 c0       	rjmp	.+40     	; 0x4946 <fputc+0x6e>
    491e:	8b 01       	movw	r16, r22
    4920:	ec 01       	movw	r28, r24
    4922:	fb 01       	movw	r30, r22
    4924:	00 84       	ldd	r0, Z+8	; 0x08
    4926:	f1 85       	ldd	r31, Z+9	; 0x09
    4928:	e0 2d       	mov	r30, r0
    492a:	09 95       	icall
    492c:	89 2b       	or	r24, r25
    492e:	e1 f6       	brne	.-72     	; 0x48e8 <fputc+0x10>
    4930:	d8 01       	movw	r26, r16
    4932:	16 96       	adiw	r26, 0x06	; 6
    4934:	8d 91       	ld	r24, X+
    4936:	9c 91       	ld	r25, X
    4938:	17 97       	sbiw	r26, 0x07	; 7
    493a:	01 96       	adiw	r24, 0x01	; 1
    493c:	17 96       	adiw	r26, 0x07	; 7
    493e:	9c 93       	st	X, r25
    4940:	8e 93       	st	-X, r24
    4942:	16 97       	sbiw	r26, 0x06	; 6
    4944:	ce 01       	movw	r24, r28
    4946:	df 91       	pop	r29
    4948:	cf 91       	pop	r28
    494a:	1f 91       	pop	r17
    494c:	0f 91       	pop	r16
    494e:	08 95       	ret

00004950 <__ultoa_invert>:
    4950:	fa 01       	movw	r30, r20
    4952:	aa 27       	eor	r26, r26
    4954:	28 30       	cpi	r18, 0x08	; 8
    4956:	51 f1       	breq	.+84     	; 0x49ac <__ultoa_invert+0x5c>
    4958:	20 31       	cpi	r18, 0x10	; 16
    495a:	81 f1       	breq	.+96     	; 0x49bc <__ultoa_invert+0x6c>
    495c:	e8 94       	clt
    495e:	6f 93       	push	r22
    4960:	6e 7f       	andi	r22, 0xFE	; 254
    4962:	6e 5f       	subi	r22, 0xFE	; 254
    4964:	7f 4f       	sbci	r23, 0xFF	; 255
    4966:	8f 4f       	sbci	r24, 0xFF	; 255
    4968:	9f 4f       	sbci	r25, 0xFF	; 255
    496a:	af 4f       	sbci	r26, 0xFF	; 255
    496c:	b1 e0       	ldi	r27, 0x01	; 1
    496e:	3e d0       	rcall	.+124    	; 0x49ec <__ultoa_invert+0x9c>
    4970:	b4 e0       	ldi	r27, 0x04	; 4
    4972:	3c d0       	rcall	.+120    	; 0x49ec <__ultoa_invert+0x9c>
    4974:	67 0f       	add	r22, r23
    4976:	78 1f       	adc	r23, r24
    4978:	89 1f       	adc	r24, r25
    497a:	9a 1f       	adc	r25, r26
    497c:	a1 1d       	adc	r26, r1
    497e:	68 0f       	add	r22, r24
    4980:	79 1f       	adc	r23, r25
    4982:	8a 1f       	adc	r24, r26
    4984:	91 1d       	adc	r25, r1
    4986:	a1 1d       	adc	r26, r1
    4988:	6a 0f       	add	r22, r26
    498a:	71 1d       	adc	r23, r1
    498c:	81 1d       	adc	r24, r1
    498e:	91 1d       	adc	r25, r1
    4990:	a1 1d       	adc	r26, r1
    4992:	20 d0       	rcall	.+64     	; 0x49d4 <__ultoa_invert+0x84>
    4994:	09 f4       	brne	.+2      	; 0x4998 <__ultoa_invert+0x48>
    4996:	68 94       	set
    4998:	3f 91       	pop	r19
    499a:	2a e0       	ldi	r18, 0x0A	; 10
    499c:	26 9f       	mul	r18, r22
    499e:	11 24       	eor	r1, r1
    49a0:	30 19       	sub	r19, r0
    49a2:	30 5d       	subi	r19, 0xD0	; 208
    49a4:	31 93       	st	Z+, r19
    49a6:	de f6       	brtc	.-74     	; 0x495e <__ultoa_invert+0xe>
    49a8:	cf 01       	movw	r24, r30
    49aa:	08 95       	ret
    49ac:	46 2f       	mov	r20, r22
    49ae:	47 70       	andi	r20, 0x07	; 7
    49b0:	40 5d       	subi	r20, 0xD0	; 208
    49b2:	41 93       	st	Z+, r20
    49b4:	b3 e0       	ldi	r27, 0x03	; 3
    49b6:	0f d0       	rcall	.+30     	; 0x49d6 <__ultoa_invert+0x86>
    49b8:	c9 f7       	brne	.-14     	; 0x49ac <__ultoa_invert+0x5c>
    49ba:	f6 cf       	rjmp	.-20     	; 0x49a8 <__ultoa_invert+0x58>
    49bc:	46 2f       	mov	r20, r22
    49be:	4f 70       	andi	r20, 0x0F	; 15
    49c0:	40 5d       	subi	r20, 0xD0	; 208
    49c2:	4a 33       	cpi	r20, 0x3A	; 58
    49c4:	18 f0       	brcs	.+6      	; 0x49cc <__ultoa_invert+0x7c>
    49c6:	49 5d       	subi	r20, 0xD9	; 217
    49c8:	31 fd       	sbrc	r19, 1
    49ca:	40 52       	subi	r20, 0x20	; 32
    49cc:	41 93       	st	Z+, r20
    49ce:	02 d0       	rcall	.+4      	; 0x49d4 <__ultoa_invert+0x84>
    49d0:	a9 f7       	brne	.-22     	; 0x49bc <__ultoa_invert+0x6c>
    49d2:	ea cf       	rjmp	.-44     	; 0x49a8 <__ultoa_invert+0x58>
    49d4:	b4 e0       	ldi	r27, 0x04	; 4
    49d6:	a6 95       	lsr	r26
    49d8:	97 95       	ror	r25
    49da:	87 95       	ror	r24
    49dc:	77 95       	ror	r23
    49de:	67 95       	ror	r22
    49e0:	ba 95       	dec	r27
    49e2:	c9 f7       	brne	.-14     	; 0x49d6 <__ultoa_invert+0x86>
    49e4:	00 97       	sbiw	r24, 0x00	; 0
    49e6:	61 05       	cpc	r22, r1
    49e8:	71 05       	cpc	r23, r1
    49ea:	08 95       	ret
    49ec:	9b 01       	movw	r18, r22
    49ee:	ac 01       	movw	r20, r24
    49f0:	0a 2e       	mov	r0, r26
    49f2:	06 94       	lsr	r0
    49f4:	57 95       	ror	r21
    49f6:	47 95       	ror	r20
    49f8:	37 95       	ror	r19
    49fa:	27 95       	ror	r18
    49fc:	ba 95       	dec	r27
    49fe:	c9 f7       	brne	.-14     	; 0x49f2 <__ultoa_invert+0xa2>
    4a00:	62 0f       	add	r22, r18
    4a02:	73 1f       	adc	r23, r19
    4a04:	84 1f       	adc	r24, r20
    4a06:	95 1f       	adc	r25, r21
    4a08:	a0 1d       	adc	r26, r0
    4a0a:	08 95       	ret

00004a0c <eeprom_read_byte>:
    4a0c:	f9 99       	sbic	0x1f, 1	; 31
    4a0e:	fe cf       	rjmp	.-4      	; 0x4a0c <eeprom_read_byte>
    4a10:	92 bd       	out	0x22, r25	; 34
    4a12:	81 bd       	out	0x21, r24	; 33
    4a14:	f8 9a       	sbi	0x1f, 0	; 31
    4a16:	99 27       	eor	r25, r25
    4a18:	80 b5       	in	r24, 0x20	; 32
    4a1a:	08 95       	ret

00004a1c <eeprom_write_byte>:
    4a1c:	26 2f       	mov	r18, r22

00004a1e <eeprom_write_r18>:
    4a1e:	f9 99       	sbic	0x1f, 1	; 31
    4a20:	fe cf       	rjmp	.-4      	; 0x4a1e <eeprom_write_r18>
    4a22:	1f ba       	out	0x1f, r1	; 31
    4a24:	92 bd       	out	0x22, r25	; 34
    4a26:	81 bd       	out	0x21, r24	; 33
    4a28:	20 bd       	out	0x20, r18	; 32
    4a2a:	0f b6       	in	r0, 0x3f	; 63
    4a2c:	f8 94       	cli
    4a2e:	fa 9a       	sbi	0x1f, 2	; 31
    4a30:	f9 9a       	sbi	0x1f, 1	; 31
    4a32:	0f be       	out	0x3f, r0	; 63
    4a34:	01 96       	adiw	r24, 0x01	; 1
    4a36:	08 95       	ret

00004a38 <__prologue_saves__>:
    4a38:	2f 92       	push	r2
    4a3a:	3f 92       	push	r3
    4a3c:	4f 92       	push	r4
    4a3e:	5f 92       	push	r5
    4a40:	6f 92       	push	r6
    4a42:	7f 92       	push	r7
    4a44:	8f 92       	push	r8
    4a46:	9f 92       	push	r9
    4a48:	af 92       	push	r10
    4a4a:	bf 92       	push	r11
    4a4c:	cf 92       	push	r12
    4a4e:	df 92       	push	r13
    4a50:	ef 92       	push	r14
    4a52:	ff 92       	push	r15
    4a54:	0f 93       	push	r16
    4a56:	1f 93       	push	r17
    4a58:	cf 93       	push	r28
    4a5a:	df 93       	push	r29
    4a5c:	cd b7       	in	r28, 0x3d	; 61
    4a5e:	de b7       	in	r29, 0x3e	; 62
    4a60:	ca 1b       	sub	r28, r26
    4a62:	db 0b       	sbc	r29, r27
    4a64:	0f b6       	in	r0, 0x3f	; 63
    4a66:	f8 94       	cli
    4a68:	de bf       	out	0x3e, r29	; 62
    4a6a:	0f be       	out	0x3f, r0	; 63
    4a6c:	cd bf       	out	0x3d, r28	; 61
    4a6e:	09 94       	ijmp

00004a70 <__epilogue_restores__>:
    4a70:	2a 88       	ldd	r2, Y+18	; 0x12
    4a72:	39 88       	ldd	r3, Y+17	; 0x11
    4a74:	48 88       	ldd	r4, Y+16	; 0x10
    4a76:	5f 84       	ldd	r5, Y+15	; 0x0f
    4a78:	6e 84       	ldd	r6, Y+14	; 0x0e
    4a7a:	7d 84       	ldd	r7, Y+13	; 0x0d
    4a7c:	8c 84       	ldd	r8, Y+12	; 0x0c
    4a7e:	9b 84       	ldd	r9, Y+11	; 0x0b
    4a80:	aa 84       	ldd	r10, Y+10	; 0x0a
    4a82:	b9 84       	ldd	r11, Y+9	; 0x09
    4a84:	c8 84       	ldd	r12, Y+8	; 0x08
    4a86:	df 80       	ldd	r13, Y+7	; 0x07
    4a88:	ee 80       	ldd	r14, Y+6	; 0x06
    4a8a:	fd 80       	ldd	r15, Y+5	; 0x05
    4a8c:	0c 81       	ldd	r16, Y+4	; 0x04
    4a8e:	1b 81       	ldd	r17, Y+3	; 0x03
    4a90:	aa 81       	ldd	r26, Y+2	; 0x02
    4a92:	b9 81       	ldd	r27, Y+1	; 0x01
    4a94:	ce 0f       	add	r28, r30
    4a96:	d1 1d       	adc	r29, r1
    4a98:	0f b6       	in	r0, 0x3f	; 63
    4a9a:	f8 94       	cli
    4a9c:	de bf       	out	0x3e, r29	; 62
    4a9e:	0f be       	out	0x3f, r0	; 63
    4aa0:	cd bf       	out	0x3d, r28	; 61
    4aa2:	ed 01       	movw	r28, r26
    4aa4:	08 95       	ret

00004aa6 <_exit>:
    4aa6:	f8 94       	cli

00004aa8 <__stop_program>:
    4aa8:	ff cf       	rjmp	.-2      	; 0x4aa8 <__stop_program>
