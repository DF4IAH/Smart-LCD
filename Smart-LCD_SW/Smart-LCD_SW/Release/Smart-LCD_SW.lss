
Smart-LCD_SW.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000248  00800100  00003e40  00003ed4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003e40  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000124  00800348  00800348  0000411c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000411c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004178  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003b0  00000000  00000000  000041b8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000071ad  00000000  00000000  00004568  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001c36  00000000  00000000  0000b715  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000330f  00000000  00000000  0000d34b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001664  00000000  00000000  0001065c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001dac  00000000  00000000  00011cc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000564d  00000000  00000000  00013a6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000348  00000000  00000000  000190b9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	cc c2       	rjmp	.+1432   	; 0x59a <__ctors_end>
       2:	00 00       	nop
       4:	0c 94 fb 0b 	jmp	0x17f6	; 0x17f6 <__vector_1>
       8:	0c 94 d8 0b 	jmp	0x17b0	; 0x17b0 <__vector_2>
       c:	0c 94 b5 0b 	jmp	0x176a	; 0x176a <__vector_3>
      10:	0c 94 92 0b 	jmp	0x1724	; 0x1724 <__vector_4>
      14:	0c 94 6f 0b 	jmp	0x16de	; 0x16de <__vector_5>
      18:	0c 94 4c 0b 	jmp	0x1698	; 0x1698 <__vector_6>
      1c:	0c 94 29 0b 	jmp	0x1652	; 0x1652 <__vector_7>
      20:	0c 94 06 0b 	jmp	0x160c	; 0x160c <__vector_8>
      24:	da c6       	rjmp	.+3508   	; 0xdda <__vector_9>
      26:	00 00       	nop
      28:	0c 94 e3 0a 	jmp	0x15c6	; 0x15c6 <__vector_10>
      2c:	0c 94 c0 0a 	jmp	0x1580	; 0x1580 <__vector_11>
      30:	0c 94 9d 0a 	jmp	0x153a	; 0x153a <__vector_12>
      34:	67 c7       	rjmp	.+3790   	; 0xf04 <__vector_13>
      36:	00 00       	nop
      38:	0c 94 7a 0a 	jmp	0x14f4	; 0x14f4 <__vector_14>
      3c:	0c 94 57 0a 	jmp	0x14ae	; 0x14ae <__vector_15>
      40:	0c 94 34 0a 	jmp	0x1468	; 0x1468 <__vector_16>
      44:	0c 94 11 0a 	jmp	0x1422	; 0x1422 <__vector_17>
      48:	0c 94 ee 09 	jmp	0x13dc	; 0x13dc <__vector_18>
      4c:	0c 94 cb 09 	jmp	0x1396	; 0x1396 <__vector_19>
      50:	0c 94 a8 09 	jmp	0x1350	; 0x1350 <__vector_20>
      54:	0c 94 a0 08 	jmp	0x1140	; 0x1140 <__vector_21>
      58:	0c 94 85 09 	jmp	0x130a	; 0x130a <__vector_22>
      5c:	0c 94 62 09 	jmp	0x12c4	; 0x12c4 <__vector_23>
      60:	0c 94 0d 09 	jmp	0x121a	; 0x121a <__vector_24>
      64:	0c 94 3f 09 	jmp	0x127e	; 0x127e <__vector_25>

00000068 <__trampolines_end>:
      68:	00 00       	nop
      6a:	00 00       	nop
      6c:	00 00       	nop
      6e:	00 20       	and	r0, r0
      70:	20 20       	and	r2, r0
      72:	20 20       	and	r2, r0
      74:	00 20       	and	r0, r0
      76:	50 50       	subi	r21, 0x00	; 0
      78:	50 00       	.word	0x0050	; ????
      7a:	00 00       	nop
      7c:	00 50       	subi	r16, 0x00	; 0
      7e:	50 f8       	bld	r5, 0
      80:	50 f8       	bld	r5, 0
      82:	50 50       	subi	r21, 0x00	; 0
      84:	20 78       	andi	r18, 0x80	; 128
      86:	a0 70       	andi	r26, 0x00	; 0
      88:	28 f0       	brcs	.+10     	; 0x94 <__trampolines_end+0x2c>
      8a:	20 c0       	rjmp	.+64     	; 0xcc <__trampolines_end+0x64>
      8c:	c8 10       	cpse	r12, r8
      8e:	20 40       	sbci	r18, 0x00	; 0
      90:	98 18       	sub	r9, r8
      92:	60 90 a0 40 	lds	r6, 0x40A0	; 0x8040a0 <__bss_end+0x3c34>
      96:	a8 90       	.word	0x90a8	; ????
      98:	68 60       	ori	r22, 0x08	; 8
      9a:	20 40       	sbci	r18, 0x00	; 0
      9c:	00 00       	nop
      9e:	00 00       	nop
      a0:	10 20       	and	r1, r0
      a2:	40 40       	sbci	r20, 0x00	; 0
      a4:	40 20       	and	r4, r0
      a6:	10 40       	sbci	r17, 0x00	; 0
      a8:	20 10       	cpse	r2, r0
      aa:	10 10       	cpse	r1, r0
      ac:	20 40       	sbci	r18, 0x00	; 0
      ae:	00 50       	subi	r16, 0x00	; 0
      b0:	20 f8       	bld	r2, 0
      b2:	20 50       	subi	r18, 0x00	; 0
      b4:	00 00       	nop
      b6:	20 20       	and	r2, r0
      b8:	f8 20       	and	r15, r8
      ba:	20 00       	.word	0x0020	; ????
      bc:	00 00       	nop
      be:	00 00       	nop
      c0:	60 20       	and	r6, r0
      c2:	40 00       	.word	0x0040	; ????
      c4:	00 00       	nop
      c6:	f8 00       	.word	0x00f8	; ????
      c8:	00 00       	nop
      ca:	00 00       	nop
      cc:	00 00       	nop
      ce:	00 60       	ori	r16, 0x00	; 0
      d0:	60 00       	.word	0x0060	; ????
      d2:	08 10       	cpse	r0, r8
      d4:	20 40       	sbci	r18, 0x00	; 0
      d6:	80 00       	.word	0x0080	; ????
      d8:	70 88       	ldd	r7, Z+16	; 0x10
      da:	98 a8       	ldd	r9, Y+48	; 0x30
      dc:	c8 88       	ldd	r12, Y+16	; 0x10
      de:	70 20       	and	r7, r0
      e0:	60 20       	and	r6, r0
      e2:	20 20       	and	r2, r0
      e4:	20 70       	andi	r18, 0x00	; 0
      e6:	70 88       	ldd	r7, Z+16	; 0x10
      e8:	08 10       	cpse	r0, r8
      ea:	20 40       	sbci	r18, 0x00	; 0
      ec:	f8 f8       	.word	0xf8f8	; ????
      ee:	10 20       	and	r1, r0
      f0:	10 08       	sbc	r1, r0
      f2:	88 70       	andi	r24, 0x08	; 8
      f4:	10 30       	cpi	r17, 0x00	; 0
      f6:	50 90 f8 10 	lds	r5, 0x10F8	; 0x8010f8 <__bss_end+0xc8c>
      fa:	10 f8       	bld	r1, 0
      fc:	80 f0       	brcs	.+32     	; 0x11e <__trampolines_end+0xb6>
      fe:	08 08       	sbc	r0, r8
     100:	88 70       	andi	r24, 0x08	; 8
     102:	30 40       	sbci	r19, 0x00	; 0
     104:	80 f0       	brcs	.+32     	; 0x126 <__trampolines_end+0xbe>
     106:	88 88       	ldd	r8, Y+16	; 0x10
     108:	70 f8       	bld	r7, 0
     10a:	08 10       	cpse	r0, r8
     10c:	20 40       	sbci	r18, 0x00	; 0
     10e:	40 40       	sbci	r20, 0x00	; 0
     110:	70 88       	ldd	r7, Z+16	; 0x10
     112:	88 70       	andi	r24, 0x08	; 8
     114:	88 88       	ldd	r8, Y+16	; 0x10
     116:	70 70       	andi	r23, 0x00	; 0
     118:	88 88       	ldd	r8, Y+16	; 0x10
     11a:	78 08       	sbc	r7, r8
     11c:	10 60       	ori	r17, 0x00	; 0
     11e:	00 60       	ori	r16, 0x00	; 0
     120:	60 00       	.word	0x0060	; ????
     122:	60 60       	ori	r22, 0x00	; 0
     124:	00 00       	nop
     126:	60 60       	ori	r22, 0x00	; 0
     128:	00 60       	ori	r16, 0x00	; 0
     12a:	20 40       	sbci	r18, 0x00	; 0
     12c:	08 10       	cpse	r0, r8
     12e:	20 40       	sbci	r18, 0x00	; 0
     130:	20 10       	cpse	r2, r0
     132:	08 00       	.word	0x0008	; ????
     134:	00 f8       	bld	r0, 0
     136:	00 f8       	bld	r0, 0
     138:	00 00       	nop
     13a:	80 40       	sbci	r24, 0x00	; 0
     13c:	20 10       	cpse	r2, r0
     13e:	20 40       	sbci	r18, 0x00	; 0
     140:	80 70       	andi	r24, 0x00	; 0
     142:	88 08       	sbc	r8, r8
     144:	10 20       	and	r1, r0
     146:	00 20       	and	r0, r0
     148:	70 88       	ldd	r7, Z+16	; 0x10
     14a:	08 68       	ori	r16, 0x88	; 136
     14c:	a8 a8       	ldd	r10, Y+48	; 0x30
     14e:	70 70       	andi	r23, 0x00	; 0
     150:	88 88       	ldd	r8, Y+16	; 0x10
     152:	88 f8       	.word	0xf888	; ????
     154:	88 88       	ldd	r8, Y+16	; 0x10
     156:	f0 88       	ldd	r15, Z+16	; 0x10
     158:	88 f0       	brcs	.+34     	; 0x17c <__trampolines_end+0x114>
     15a:	88 88       	ldd	r8, Y+16	; 0x10
     15c:	f0 70       	andi	r31, 0x00	; 0
     15e:	88 80       	ld	r8, Y
     160:	80 80       	ld	r8, Z
     162:	88 70       	andi	r24, 0x08	; 8
     164:	e0 90 88 88 	lds	r14, 0x8888	; 0x808888 <__bss_end+0x841c>
     168:	88 90       	.word	0x9088	; ????
     16a:	e0 f8       	bld	r14, 0
     16c:	80 80       	ld	r8, Z
     16e:	f0 80       	ld	r15, Z
     170:	80 f8       	bld	r8, 0
     172:	f8 80       	ld	r15, Y
     174:	80 e0       	ldi	r24, 0x00	; 0
     176:	80 80       	ld	r8, Z
     178:	80 70       	andi	r24, 0x00	; 0
     17a:	88 80       	ld	r8, Y
     17c:	80 98       	cbi	0x10, 0	; 16
     17e:	88 70       	andi	r24, 0x08	; 8
     180:	88 88       	ldd	r8, Y+16	; 0x10
     182:	88 f8       	.word	0xf888	; ????
     184:	88 88       	ldd	r8, Y+16	; 0x10
     186:	88 70       	andi	r24, 0x08	; 8
     188:	20 20       	and	r2, r0
     18a:	20 20       	and	r2, r0
     18c:	20 70       	andi	r18, 0x00	; 0
     18e:	38 10       	cpse	r3, r8
     190:	10 10       	cpse	r1, r0
     192:	10 90 60 88 	lds	r1, 0x8860	; 0x808860 <__bss_end+0x83f4>
     196:	90 a0       	ldd	r9, Z+32	; 0x20
     198:	c0 a0       	ldd	r12, Z+32	; 0x20
     19a:	90 88       	ldd	r9, Z+16	; 0x10
     19c:	80 80       	ld	r8, Z
     19e:	80 80       	ld	r8, Z
     1a0:	80 80       	ld	r8, Z
     1a2:	f8 88       	ldd	r15, Y+16	; 0x10
     1a4:	d8 a8       	ldd	r13, Y+48	; 0x30
     1a6:	88 88       	ldd	r8, Y+16	; 0x10
     1a8:	88 88       	ldd	r8, Y+16	; 0x10
     1aa:	88 88       	ldd	r8, Y+16	; 0x10
     1ac:	c8 a8       	ldd	r12, Y+48	; 0x30
     1ae:	98 88       	ldd	r9, Y+16	; 0x10
     1b0:	88 70       	andi	r24, 0x08	; 8
     1b2:	88 88       	ldd	r8, Y+16	; 0x10
     1b4:	88 88       	ldd	r8, Y+16	; 0x10
     1b6:	88 70       	andi	r24, 0x08	; 8
     1b8:	f0 88       	ldd	r15, Z+16	; 0x10
     1ba:	88 f0       	brcs	.+34     	; 0x1de <__trampolines_end+0x176>
     1bc:	80 80       	ld	r8, Z
     1be:	80 70       	andi	r24, 0x00	; 0
     1c0:	88 88       	ldd	r8, Y+16	; 0x10
     1c2:	88 a8       	ldd	r8, Y+48	; 0x30
     1c4:	90 68       	ori	r25, 0x80	; 128
     1c6:	f0 88       	ldd	r15, Z+16	; 0x10
     1c8:	88 f0       	brcs	.+34     	; 0x1ec <__trampolines_end+0x184>
     1ca:	a0 90 88 78 	lds	r10, 0x7888	; 0x807888 <__bss_end+0x741c>
     1ce:	80 80       	ld	r8, Z
     1d0:	70 08       	sbc	r7, r0
     1d2:	08 f0       	brcs	.+2      	; 0x1d6 <__trampolines_end+0x16e>
     1d4:	f8 20       	and	r15, r8
     1d6:	20 20       	and	r2, r0
     1d8:	20 20       	and	r2, r0
     1da:	20 88       	ldd	r2, Z+16	; 0x10
     1dc:	88 88       	ldd	r8, Y+16	; 0x10
     1de:	88 88       	ldd	r8, Y+16	; 0x10
     1e0:	88 70       	andi	r24, 0x08	; 8
     1e2:	88 88       	ldd	r8, Y+16	; 0x10
     1e4:	88 88       	ldd	r8, Y+16	; 0x10
     1e6:	88 50       	subi	r24, 0x08	; 8
     1e8:	20 88       	ldd	r2, Z+16	; 0x10
     1ea:	88 88       	ldd	r8, Y+16	; 0x10
     1ec:	a8 a8       	ldd	r10, Y+48	; 0x30
     1ee:	d8 88       	ldd	r13, Y+16	; 0x10
     1f0:	88 88       	ldd	r8, Y+16	; 0x10
     1f2:	50 20       	and	r5, r0
     1f4:	50 88       	ldd	r5, Z+16	; 0x10
     1f6:	88 88       	ldd	r8, Y+16	; 0x10
     1f8:	88 50       	subi	r24, 0x08	; 8
     1fa:	20 20       	and	r2, r0
     1fc:	20 20       	and	r2, r0
     1fe:	f8 08       	sbc	r15, r8
     200:	10 20       	and	r1, r0
     202:	40 80       	ld	r4, Z
     204:	f8 38       	cpi	r31, 0x88	; 136
     206:	20 20       	and	r2, r0
     208:	20 20       	and	r2, r0
     20a:	20 38       	cpi	r18, 0x80	; 128
     20c:	00 80       	ld	r0, Z
     20e:	40 20       	and	r4, r0
     210:	10 08       	sbc	r1, r0
     212:	00 e0       	ldi	r16, 0x00	; 0
     214:	20 20       	and	r2, r0
     216:	20 20       	and	r2, r0
     218:	20 e0       	ldi	r18, 0x00	; 0
     21a:	20 50       	subi	r18, 0x00	; 0
     21c:	88 00       	.word	0x0088	; ????
	...
     226:	00 f8       	bld	r0, 0
     228:	40 20       	and	r4, r0
     22a:	10 00       	.word	0x0010	; ????
     22c:	00 00       	nop
     22e:	00 00       	nop
     230:	00 70       	andi	r16, 0x00	; 0
     232:	08 78       	andi	r16, 0x88	; 136
     234:	88 78       	andi	r24, 0x88	; 136
     236:	80 80       	ld	r8, Z
     238:	b0 c8       	rjmp	.-3744   	; 0xfffff39a <__eeprom_end+0xff7ef39a>
     23a:	88 88       	ldd	r8, Y+16	; 0x10
     23c:	f0 00       	.word	0x00f0	; ????
     23e:	00 70       	andi	r16, 0x00	; 0
     240:	80 80       	ld	r8, Z
     242:	88 70       	andi	r24, 0x08	; 8
     244:	08 08       	sbc	r0, r8
     246:	68 98       	cbi	0x0d, 0	; 13
     248:	88 88       	ldd	r8, Y+16	; 0x10
     24a:	78 00       	.word	0x0078	; ????
     24c:	00 70       	andi	r16, 0x00	; 0
     24e:	88 f8       	.word	0xf888	; ????
     250:	80 70       	andi	r24, 0x00	; 0
     252:	30 48       	sbci	r19, 0x80	; 128
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	40 40       	sbci	r20, 0x00	; 0
     258:	40 00       	.word	0x0040	; ????
     25a:	00 78       	andi	r16, 0x80	; 128
     25c:	88 78       	andi	r24, 0x88	; 136
     25e:	08 30       	cpi	r16, 0x08	; 8
     260:	80 80       	ld	r8, Z
     262:	b0 c8       	rjmp	.-3744   	; 0xfffff3c4 <__eeprom_end+0xff7ef3c4>
     264:	88 88       	ldd	r8, Y+16	; 0x10
     266:	88 20       	and	r8, r8
     268:	00 60       	ori	r16, 0x00	; 0
     26a:	20 20       	and	r2, r0
     26c:	20 70       	andi	r18, 0x00	; 0
     26e:	10 00       	.word	0x0010	; ????
     270:	30 10       	cpse	r3, r0
     272:	10 90 60 40 	lds	r1, 0x4060	; 0x804060 <__bss_end+0x3bf4>
     276:	40 48       	sbci	r20, 0x80	; 128
     278:	50 60       	ori	r21, 0x00	; 0
     27a:	50 48       	sbci	r21, 0x80	; 128
     27c:	60 20       	and	r6, r0
     27e:	20 20       	and	r2, r0
     280:	20 20       	and	r2, r0
     282:	70 00       	.word	0x0070	; ????
     284:	00 d0       	rcall	.+0      	; 0x286 <__trampolines_end+0x21e>
     286:	a8 a8       	ldd	r10, Y+48	; 0x30
     288:	88 88       	ldd	r8, Y+16	; 0x10
     28a:	00 00       	nop
     28c:	b0 c8       	rjmp	.-3744   	; 0xfffff3ee <__eeprom_end+0xff7ef3ee>
     28e:	88 88       	ldd	r8, Y+16	; 0x10
     290:	88 00       	.word	0x0088	; ????
     292:	00 70       	andi	r16, 0x00	; 0
     294:	88 88       	ldd	r8, Y+16	; 0x10
     296:	88 70       	andi	r24, 0x08	; 8
     298:	00 00       	nop
     29a:	f0 88       	ldd	r15, Z+16	; 0x10
     29c:	f0 80       	ld	r15, Z
     29e:	80 00       	.word	0x0080	; ????
     2a0:	00 68       	ori	r16, 0x80	; 128
     2a2:	98 78       	andi	r25, 0x88	; 136
     2a4:	08 08       	sbc	r0, r8
     2a6:	00 00       	nop
     2a8:	b0 c8       	rjmp	.-3744   	; 0xfffff40a <__eeprom_end+0xff7ef40a>
     2aa:	80 80       	ld	r8, Z
     2ac:	80 00       	.word	0x0080	; ????
     2ae:	00 70       	andi	r16, 0x00	; 0
     2b0:	80 70       	andi	r24, 0x00	; 0
     2b2:	08 f0       	brcs	.+2      	; 0x2b6 <__trampolines_end+0x24e>
     2b4:	40 40       	sbci	r20, 0x00	; 0
     2b6:	e0 40       	sbci	r30, 0x00	; 0
     2b8:	40 48       	sbci	r20, 0x80	; 128
     2ba:	30 00       	.word	0x0030	; ????
     2bc:	00 88       	ldd	r0, Z+16	; 0x10
     2be:	88 88       	ldd	r8, Y+16	; 0x10
     2c0:	98 68       	ori	r25, 0x88	; 136
     2c2:	00 00       	nop
     2c4:	88 88       	ldd	r8, Y+16	; 0x10
     2c6:	88 50       	subi	r24, 0x08	; 8
     2c8:	20 00       	.word	0x0020	; ????
     2ca:	00 88       	ldd	r0, Z+16	; 0x10
     2cc:	88 a8       	ldd	r8, Y+48	; 0x30
     2ce:	a8 50       	subi	r26, 0x08	; 8
     2d0:	00 00       	nop
     2d2:	88 50       	subi	r24, 0x08	; 8
     2d4:	20 50       	subi	r18, 0x00	; 0
     2d6:	88 00       	.word	0x0088	; ????
     2d8:	00 88       	ldd	r0, Z+16	; 0x10
     2da:	88 78       	andi	r24, 0x88	; 136
     2dc:	08 70       	andi	r16, 0x08	; 8
     2de:	00 00       	nop
     2e0:	f8 10       	cpse	r15, r8
     2e2:	20 40       	sbci	r18, 0x00	; 0
     2e4:	f8 10       	cpse	r15, r8
     2e6:	20 20       	and	r2, r0
     2e8:	40 20       	and	r4, r0
     2ea:	20 10       	cpse	r2, r0
     2ec:	20 20       	and	r2, r0
     2ee:	20 20       	and	r2, r0
     2f0:	20 20       	and	r2, r0
     2f2:	20 40       	sbci	r18, 0x00	; 0
     2f4:	20 20       	and	r2, r0
     2f6:	10 20       	and	r1, r0
     2f8:	20 40       	sbci	r18, 0x00	; 0
     2fa:	20 50       	subi	r18, 0x00	; 0
     2fc:	20 00       	.word	0x0020	; ????
     2fe:	00 00       	nop
	...

00000301 <sysfont_glyphs>:
     301:	00 00 00 00 00 00 00 20 20 20 20 20 00 20 50 50     .......     . PP
     311:	50 00 00 00 00 50 50 f8 50 f8 50 50 20 78 a0 70     P....PP.P.PP x.p
     321:	28 f0 20 c0 c8 10 20 40 98 18 60 90 a0 40 a8 90     (. ... @..`..@..
     331:	68 60 20 40 00 00 00 00 10 20 40 40 40 20 10 40     h` @..... @@@ .@
     341:	20 10 10 10 20 40 00 50 20 f8 20 50 00 00 20 20      ... @.P . P..  
     351:	f8 20 20 00 00 00 00 00 60 20 40 00 00 00 f8 00     .  .....` @.....
     361:	00 00 00 00 00 00 00 60 60 00 08 10 20 40 80 00     .......``... @..
     371:	70 88 98 a8 c8 88 70 20 60 20 20 20 20 70 70 88     p.....p `    pp.
     381:	08 10 20 40 f8 f8 10 20 10 08 88 70 10 30 50 90     .. @... ...p.0P.
     391:	f8 10 10 f8 80 f0 08 08 88 70 30 40 80 f0 88 88     .........p0@....
     3a1:	70 f8 08 10 20 40 40 40 70 88 88 70 88 88 70 70     p... @@@p..p..pp
     3b1:	88 88 78 08 10 60 00 60 60 00 60 60 00 00 60 60     ..x..`.``.``..``
     3c1:	00 60 20 40 08 10 20 40 20 10 08 00 00 f8 00 f8     .` @.. @ .......
     3d1:	00 00 80 40 20 10 20 40 80 70 88 08 10 20 00 20     ...@ . @.p... . 
     3e1:	70 88 08 68 a8 a8 70 70 88 88 88 f8 88 88 f0 88     p..h..pp........
     3f1:	88 f0 88 88 f0 70 88 80 80 80 88 70 e0 90 88 88     .....p.....p....
     401:	88 90 e0 f8 80 80 f0 80 80 f8 f8 80 80 e0 80 80     ................
     411:	80 70 88 80 80 98 88 70 88 88 88 f8 88 88 88 70     .p.....p.......p
     421:	20 20 20 20 20 70 38 10 10 10 10 90 60 88 90 a0          p8.....`...
     431:	c0 a0 90 88 80 80 80 80 80 80 f8 88 d8 a8 88 88     ................
     441:	88 88 88 88 c8 a8 98 88 88 70 88 88 88 88 88 70     .........p.....p
     451:	f0 88 88 f0 80 80 80 70 88 88 88 a8 90 68 f0 88     .......p.....h..
     461:	88 f0 a0 90 88 78 80 80 70 08 08 f0 f8 20 20 20     .....x..p....   
     471:	20 20 20 88 88 88 88 88 88 70 88 88 88 88 88 50        ......p.....P
     481:	20 88 88 88 a8 a8 d8 88 88 88 50 20 50 88 88 88      .........P P...
     491:	88 50 20 20 20 20 f8 08 10 20 40 80 f8 38 20 20     .P    ... @..8  
     4a1:	20 20 20 38 00 80 40 20 10 08 00 e0 20 20 20 20        8..@ ....    
     4b1:	20 e0 20 50 88 00 00 00 00 00 00 00 00 00 00 f8      . P............
     4c1:	40 20 10 00 00 00 00 00 00 70 08 78 88 78 80 80     @ .......p.x.x..
     4d1:	b0 c8 88 88 f0 00 00 70 80 80 88 70 08 08 68 98     .......p...p..h.
     4e1:	88 88 78 00 00 70 88 f8 80 70 30 48 40 e0 40 40     ..x..p...p0H@.@@
     4f1:	40 00 00 78 88 78 08 30 80 80 b0 c8 88 88 88 20     @..x.x.0....... 
     501:	00 60 20 20 20 70 10 00 30 10 10 90 60 40 40 48     .`   p..0...`@@H
     511:	50 60 50 48 60 20 20 20 20 20 70 00 00 d0 a8 a8     P`PH`     p.....
     521:	88 88 00 00 b0 c8 88 88 88 00 00 70 88 88 88 70     ...........p...p
     531:	00 00 f0 88 f0 80 80 00 00 68 98 78 08 08 00 00     .........h.x....
     541:	b0 c8 80 80 80 00 00 70 80 70 08 f0 40 40 e0 40     .......p.p..@@.@
     551:	40 48 30 00 00 88 88 88 98 68 00 00 88 88 88 50     @H0......h.....P
     561:	20 00 00 88 88 a8 a8 50 00 00 88 50 20 50 88 00      ......P...P P..
     571:	00 88 88 78 08 70 00 00 f8 10 20 40 f8 10 20 20     ...x.p.... @..  
     581:	40 20 20 10 20 20 20 20 20 20 20 40 20 20 10 20     @  .       @  . 
     591:	20 40 20 50 20 00 00 00 00                           @ P ....

0000059a <__ctors_end>:
     59a:	11 24       	eor	r1, r1
     59c:	1f be       	out	0x3f, r1	; 63
     59e:	cf ef       	ldi	r28, 0xFF	; 255
     5a0:	d8 e0       	ldi	r29, 0x08	; 8
     5a2:	de bf       	out	0x3e, r29	; 62
     5a4:	cd bf       	out	0x3d, r28	; 61

000005a6 <__do_copy_data>:
     5a6:	13 e0       	ldi	r17, 0x03	; 3
     5a8:	a0 e0       	ldi	r26, 0x00	; 0
     5aa:	b1 e0       	ldi	r27, 0x01	; 1
     5ac:	e0 e4       	ldi	r30, 0x40	; 64
     5ae:	fe e3       	ldi	r31, 0x3E	; 62
     5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <__do_copy_data+0x10>
     5b2:	05 90       	lpm	r0, Z+
     5b4:	0d 92       	st	X+, r0
     5b6:	a8 34       	cpi	r26, 0x48	; 72
     5b8:	b1 07       	cpc	r27, r17
     5ba:	d9 f7       	brne	.-10     	; 0x5b2 <__do_copy_data+0xc>

000005bc <__do_clear_bss>:
     5bc:	24 e0       	ldi	r18, 0x04	; 4
     5be:	a8 e4       	ldi	r26, 0x48	; 72
     5c0:	b3 e0       	ldi	r27, 0x03	; 3
     5c2:	01 c0       	rjmp	.+2      	; 0x5c6 <.do_clear_bss_start>

000005c4 <.do_clear_bss_loop>:
     5c4:	1d 92       	st	X+, r1

000005c6 <.do_clear_bss_start>:
     5c6:	ac 36       	cpi	r26, 0x6C	; 108
     5c8:	b2 07       	cpc	r27, r18
     5ca:	e1 f7       	brne	.-8      	; 0x5c4 <.do_clear_bss_loop>
     5cc:	0e 94 44 18 	call	0x3088	; 0x3088 <main>
     5d0:	0c 94 1e 1f 	jmp	0x3e3c	; 0x3e3c <_exit>

000005d4 <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
     5d4:	08 95       	ret

000005d6 <sysclk_init>:

/**
 *  Function to initialize the clock and disable clock for not required modules.
 */
void sysclk_init(void)
{
     5d6:	cf 93       	push	r28
     5d8:	df 93       	push	r29
     5da:	1f 92       	push	r1
     5dc:	cd b7       	in	r28, 0x3d	; 61
     5de:	de b7       	in	r29, 0x3e	; 62
	/* Turn off all peripheral clocks that can be turned off.
	 * The debugWIRE system of some devices that shares system clock with the SPI module.
	 * Thus the PRSPI bit in the PRR register must not be set when debugging.
	 */
	for (i = 0; i < NUMBER_OF_POWER_REG; i++) {
		*(reg++) = 0xFF;
     5e0:	8f ef       	ldi	r24, 0xFF	; 255
     5e2:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
     5e6:	8f b7       	in	r24, 0x3f	; 63
     5e8:	89 83       	std	Y+1, r24	; 0x01
	cpu_irq_disable();
     5ea:	f8 94       	cli
	return flags;
     5ec:	89 81       	ldd	r24, Y+1	; 0x01
static inline void sysclk_set_prescalers(uint8_t psdiv)
{
#if !MEGA_UNSPECIFIED
	irqflags_t flags = cpu_irq_save();

	ASM(
     5ee:	5f 93       	push	r21
     5f0:	50 e8       	ldi	r21, 0x80	; 128
     5f2:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     5f6:	50 e0       	ldi	r21, 0x00	; 0
     5f8:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     5fc:	5f 91       	pop	r21
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     5fe:	8f bf       	out	0x3f, r24	; 63
	if ((CONFIG_SYSCLK_PSDIV != SYSCLK_PSDIV_8) ||
			(SYSCLK_PSDIV_8 != CLKPR)) {
		sysclk_set_prescalers(CONFIG_SYSCLK_PSDIV);
	}
#endif
}
     600:	0f 90       	pop	r0
     602:	df 91       	pop	r29
     604:	cf 91       	pop	r28
     606:	08 95       	ret

00000608 <sysclk_enable_module>:
 * \param port ID of the port to which the module is connected (one of
 * the \c power_red_id *definitions).
 * \param id The ID (bitmask) of the peripheral module to be enabled.
 */
void sysclk_enable_module(enum power_red_id port, uint8_t id)
{
     608:	cf 93       	push	r28
     60a:	df 93       	push	r29
     60c:	1f 92       	push	r1
     60e:	cd b7       	in	r28, 0x3d	; 61
     610:	de b7       	in	r29, 0x3e	; 62

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
     612:	9f b7       	in	r25, 0x3f	; 63
     614:	99 83       	std	Y+1, r25	; 0x01
	cpu_irq_disable();
     616:	f8 94       	cli
	return flags;
     618:	99 81       	ldd	r25, Y+1	; 0x01
#if !MEGA_UNSPECIFIED && !MEGA_XX
	uint8_t *reg = (uint8_t *)&(POWER_REG_ADD);
	irqflags_t flags = cpu_irq_save();

	if (port < NUMBER_OF_POWER_REG) {
     61a:	81 11       	cpse	r24, r1
     61c:	06 c0       	rjmp	.+12     	; 0x62a <sysclk_enable_module+0x22>
		*(reg + port)  &= ~id;
     61e:	60 95       	com	r22
     620:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
     624:	68 23       	and	r22, r24
     626:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     62a:	9f bf       	out	0x3f, r25	; 63
	}
	cpu_irq_restore(flags);
#endif
}
     62c:	0f 90       	pop	r0
     62e:	df 91       	pop	r29
     630:	cf 91       	pop	r28
     632:	08 95       	ret

00000634 <sysclk_disable_module>:
 * \param port ID of the port to which the module is connected (one of
 * the \c power_red_id *definitions).
 * \param id The ID (bit mask) of the peripheral module to be disabled.
 */
void sysclk_disable_module( enum power_red_id port, uint8_t id)
{
     634:	cf 93       	push	r28
     636:	df 93       	push	r29
     638:	1f 92       	push	r1
     63a:	cd b7       	in	r28, 0x3d	; 61
     63c:	de b7       	in	r29, 0x3e	; 62

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
     63e:	9f b7       	in	r25, 0x3f	; 63
     640:	99 83       	std	Y+1, r25	; 0x01
	cpu_irq_disable();
     642:	f8 94       	cli
	return flags;
     644:	99 81       	ldd	r25, Y+1	; 0x01
#if !MEGA_UNSPECIFIED && !MEGA_XX
	uint8_t *reg = (uint8_t *)&(POWER_REG_ADD);
	irqflags_t flags = cpu_irq_save();
	if (port < NUMBER_OF_POWER_REG) {
     646:	81 11       	cpse	r24, r1
     648:	05 c0       	rjmp	.+10     	; 0x654 <sysclk_disable_module+0x20>
		*(reg + port) |= id;
     64a:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
     64e:	68 2b       	or	r22, r24
     650:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     654:	9f bf       	out	0x3f, r25	; 63
	}
	cpu_irq_restore(flags);
#endif
}
     656:	0f 90       	pop	r0
     658:	df 91       	pop	r29
     65a:	cf 91       	pop	r28
     65c:	08 95       	ret

0000065e <gfx_mono_generic_draw_horizontal_line>:
 * \param  length     Length of the line in pixels.
 * \param  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
     65e:	ff 92       	push	r15
     660:	0f 93       	push	r16
     662:	1f 93       	push	r17
     664:	cf 93       	push	r28
     666:	df 93       	push	r29
     668:	08 2f       	mov	r16, r24
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
     66a:	84 2f       	mov	r24, r20
     66c:	90 e0       	ldi	r25, 0x00	; 0
     66e:	80 0f       	add	r24, r16
     670:	91 1d       	adc	r25, r1
     672:	81 3f       	cpi	r24, 0xF1	; 241
     674:	91 05       	cpc	r25, r1
     676:	14 f0       	brlt	.+4      	; 0x67c <gfx_mono_generic_draw_horizontal_line+0x1e>
		length = GFX_MONO_LCD_WIDTH - x;
     678:	40 ef       	ldi	r20, 0xF0	; 240
     67a:	40 1b       	sub	r20, r16
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
     67c:	44 23       	and	r20, r20
     67e:	09 f4       	brne	.+2      	; 0x682 <gfx_mono_generic_draw_horizontal_line+0x24>
     680:	47 c0       	rjmp	.+142    	; 0x710 <gfx_mono_generic_draw_horizontal_line+0xb2>
	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
		length = GFX_MONO_LCD_WIDTH - x;
	}

	page = y / 8;
     682:	d6 2f       	mov	r29, r22
     684:	d6 95       	lsr	r29
     686:	d6 95       	lsr	r29
     688:	d6 95       	lsr	r29
	pixelmask = (1 << (y - (page * 8)));
     68a:	70 e0       	ldi	r23, 0x00	; 0
     68c:	88 e0       	ldi	r24, 0x08	; 8
     68e:	d8 9f       	mul	r29, r24
     690:	60 19       	sub	r22, r0
     692:	71 09       	sbc	r23, r1
     694:	11 24       	eor	r1, r1
     696:	81 e0       	ldi	r24, 0x01	; 1
     698:	90 e0       	ldi	r25, 0x00	; 0
     69a:	01 c0       	rjmp	.+2      	; 0x69e <gfx_mono_generic_draw_horizontal_line+0x40>
     69c:	88 0f       	add	r24, r24
     69e:	6a 95       	dec	r22
     6a0:	ea f7       	brpl	.-6      	; 0x69c <gfx_mono_generic_draw_horizontal_line+0x3e>
     6a2:	f8 2e       	mov	r15, r24
	if (length == 0) {
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
     6a4:	21 30       	cpi	r18, 0x01	; 1
     6a6:	31 f0       	breq	.+12     	; 0x6b4 <gfx_mono_generic_draw_horizontal_line+0x56>
     6a8:	40 f0       	brcs	.+16     	; 0x6ba <gfx_mono_generic_draw_horizontal_line+0x5c>
     6aa:	22 30       	cpi	r18, 0x02	; 2
     6ac:	89 f5       	brne	.+98     	; 0x710 <gfx_mono_generic_draw_horizontal_line+0xb2>
     6ae:	cf ef       	ldi	r28, 0xFF	; 255
     6b0:	c4 0f       	add	r28, r20
     6b2:	22 c0       	rjmp	.+68     	; 0x6f8 <gfx_mono_generic_draw_horizontal_line+0x9a>
     6b4:	cf ef       	ldi	r28, 0xFF	; 255
     6b6:	c4 0f       	add	r28, r20
     6b8:	05 c0       	rjmp	.+10     	; 0x6c4 <gfx_mono_generic_draw_horizontal_line+0x66>
     6ba:	cf ef       	ldi	r28, 0xFF	; 255
     6bc:	c4 0f       	add	r28, r20
		break;

	case GFX_PIXEL_CLR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
			temp &= ~pixelmask;
     6be:	18 2f       	mov	r17, r24
     6c0:	10 95       	com	r17
     6c2:	0d c0       	rjmp	.+26     	; 0x6de <gfx_mono_generic_draw_horizontal_line+0x80>
     6c4:	10 2f       	mov	r17, r16
     6c6:	1c 0f       	add	r17, r28
	}

	switch (color) {
	case GFX_PIXEL_SET:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
     6c8:	61 2f       	mov	r22, r17
     6ca:	8d 2f       	mov	r24, r29
     6cc:	af d2       	rcall	.+1374   	; 0xc2c <gfx_mono_lcd_uc1608_get_byte>
			temp |= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
     6ce:	4f 2d       	mov	r20, r15
     6d0:	48 2b       	or	r20, r24
     6d2:	61 2f       	mov	r22, r17
     6d4:	8d 2f       	mov	r24, r29
     6d6:	98 d2       	rcall	.+1328   	; 0xc08 <gfx_mono_lcd_uc1608_put_byte>
     6d8:	c1 50       	subi	r28, 0x01	; 1
     6da:	a0 f7       	brcc	.-24     	; 0x6c4 <gfx_mono_generic_draw_horizontal_line+0x66>
     6dc:	19 c0       	rjmp	.+50     	; 0x710 <gfx_mono_generic_draw_horizontal_line+0xb2>
     6de:	f0 2e       	mov	r15, r16
		}
		break;

	case GFX_PIXEL_CLR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
     6e0:	fc 0e       	add	r15, r28
     6e2:	6f 2d       	mov	r22, r15
     6e4:	8d 2f       	mov	r24, r29
			temp &= ~pixelmask;
     6e6:	a2 d2       	rcall	.+1348   	; 0xc2c <gfx_mono_lcd_uc1608_get_byte>
			gfx_mono_put_byte(page, x + length, temp);
     6e8:	41 2f       	mov	r20, r17
     6ea:	48 23       	and	r20, r24
     6ec:	6f 2d       	mov	r22, r15
     6ee:	8d 2f       	mov	r24, r29
     6f0:	8b d2       	rcall	.+1302   	; 0xc08 <gfx_mono_lcd_uc1608_put_byte>
     6f2:	c1 50       	subi	r28, 0x01	; 1
     6f4:	a0 f7       	brcc	.-24     	; 0x6de <gfx_mono_generic_draw_horizontal_line+0x80>
     6f6:	0c c0       	rjmp	.+24     	; 0x710 <gfx_mono_generic_draw_horizontal_line+0xb2>
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
     6f8:	10 2f       	mov	r17, r16
     6fa:	1c 0f       	add	r17, r28
     6fc:	61 2f       	mov	r22, r17
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
     6fe:	8d 2f       	mov	r24, r29
     700:	95 d2       	rcall	.+1322   	; 0xc2c <gfx_mono_lcd_uc1608_get_byte>
     702:	4f 2d       	mov	r20, r15
     704:	48 27       	eor	r20, r24
     706:	61 2f       	mov	r22, r17
     708:	8d 2f       	mov	r24, r29
     70a:	7e d2       	rcall	.+1276   	; 0xc08 <gfx_mono_lcd_uc1608_put_byte>
     70c:	c1 50       	subi	r28, 0x01	; 1
		break;

	default:
		break;
	}
}
     70e:	a0 f7       	brcc	.-24     	; 0x6f8 <gfx_mono_generic_draw_horizontal_line+0x9a>
     710:	df 91       	pop	r29
     712:	cf 91       	pop	r28
     714:	1f 91       	pop	r17
     716:	0f 91       	pop	r16
     718:	ff 90       	pop	r15
     71a:	08 95       	ret

0000071c <gfx_mono_generic_draw_vertical_line>:
 * \param  length     Length of the line in pixels.
 * \param  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_vertical_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
     71c:	ef 92       	push	r14
     71e:	ff 92       	push	r15
     720:	0f 93       	push	r16
     722:	1f 93       	push	r17
     724:	cf 93       	push	r28
     726:	df 93       	push	r29
     728:	94 2f       	mov	r25, r20
	if (length == 0) {
     72a:	44 23       	and	r20, r20
     72c:	09 f4       	brne	.+2      	; 0x730 <gfx_mono_generic_draw_vertical_line+0x14>
     72e:	46 c0       	rjmp	.+140    	; 0x7bc <gfx_mono_generic_draw_vertical_line+0xa0>
		return;
	}

	gfx_coord_t y2 = y + length - 1;
     730:	4f ef       	ldi	r20, 0xFF	; 255
     732:	46 0f       	add	r20, r22
     734:	94 0f       	add	r25, r20

	if (y == y2) {
     736:	69 13       	cpse	r22, r25
     738:	08 c0       	rjmp	.+16     	; 0x74a <gfx_mono_generic_draw_vertical_line+0x2e>
		gfx_mono_draw_pixel(x, y, color);
     73a:	42 2f       	mov	r20, r18
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
		}

		gfx_mono_mask_byte(y2page, x, y2pixelmask, color);
	}
}
     73c:	df 91       	pop	r29
     73e:	cf 91       	pop	r28
     740:	1f 91       	pop	r17
     742:	0f 91       	pop	r16
     744:	ff 90       	pop	r15
	}

	gfx_coord_t y2 = y + length - 1;

	if (y == y2) {
		gfx_mono_draw_pixel(x, y, color);
     746:	ef 90       	pop	r14
		return;
	}

	if (y2 >= GFX_MONO_LCD_HEIGHT - 1) {
     748:	a4 c2       	rjmp	.+1352   	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
     74a:	9f 37       	cpi	r25, 0x7F	; 127
		y2 = GFX_MONO_LCD_HEIGHT - 1;
     74c:	08 f0       	brcs	.+2      	; 0x750 <gfx_mono_generic_draw_vertical_line+0x34>
	}

	gfx_coord_t y1page = y / 8;
     74e:	9f e7       	ldi	r25, 0x7F	; 127
     750:	16 2f       	mov	r17, r22
     752:	16 95       	lsr	r17
     754:	16 95       	lsr	r17
	gfx_coord_t y2page = y2 / 8;
     756:	16 95       	lsr	r17
     758:	09 2f       	mov	r16, r25
     75a:	06 95       	lsr	r16
     75c:	06 95       	lsr	r16

	uint8_t y1bitpos = y & 0x07;
	uint8_t y2bitpos = y2 & 0x07;

	uint8_t y1pixelmask = 0xFF << y1bitpos;
     75e:	06 95       	lsr	r16
     760:	67 70       	andi	r22, 0x07	; 7
     762:	ef ef       	ldi	r30, 0xFF	; 255
     764:	f0 e0       	ldi	r31, 0x00	; 0
     766:	af 01       	movw	r20, r30
     768:	01 c0       	rjmp	.+2      	; 0x76c <gfx_mono_generic_draw_vertical_line+0x50>
     76a:	44 0f       	add	r20, r20
     76c:	6a 95       	dec	r22
	uint8_t y2pixelmask = 0xFF >> (7 - y2bitpos);
     76e:	ea f7       	brpl	.-6      	; 0x76a <gfx_mono_generic_draw_vertical_line+0x4e>
     770:	97 70       	andi	r25, 0x07	; 7
     772:	67 e0       	ldi	r22, 0x07	; 7
     774:	70 e0       	ldi	r23, 0x00	; 0
     776:	69 1b       	sub	r22, r25
     778:	71 09       	sbc	r23, r1
     77a:	7f 01       	movw	r14, r30
     77c:	02 c0       	rjmp	.+4      	; 0x782 <gfx_mono_generic_draw_vertical_line+0x66>
     77e:	f5 94       	asr	r15
     780:	e7 94       	ror	r14
     782:	6a 95       	dec	r22

	/* The pixels are on the same page; combine masks */
	if (y1page == y2page) {
     784:	e2 f7       	brpl	.-8      	; 0x77e <gfx_mono_generic_draw_vertical_line+0x62>
     786:	10 13       	cpse	r17, r16
		uint8_t pixelmask = y1pixelmask & y2pixelmask;
		gfx_mono_mask_byte(y1page, x, pixelmask, color);
     788:	04 c0       	rjmp	.+8      	; 0x792 <gfx_mono_generic_draw_vertical_line+0x76>
     78a:	4e 21       	and	r20, r14
     78c:	68 2f       	mov	r22, r24
     78e:	81 2f       	mov	r24, r17
     790:	0e c0       	rjmp	.+28     	; 0x7ae <gfx_mono_generic_draw_vertical_line+0x92>
     792:	d2 2f       	mov	r29, r18
	} else {
		gfx_mono_mask_byte(y1page, x, y1pixelmask, color);

		while (++y1page < y2page) {
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
     794:	c8 2f       	mov	r28, r24
     796:	6c 2f       	mov	r22, r28
     798:	81 2f       	mov	r24, r17
		uint8_t pixelmask = y1pixelmask & y2pixelmask;
		gfx_mono_mask_byte(y1page, x, pixelmask, color);
	} else {
		gfx_mono_mask_byte(y1page, x, y1pixelmask, color);

		while (++y1page < y2page) {
     79a:	56 d2       	rcall	.+1196   	; 0xc48 <gfx_mono_lcd_uc1608_mask_byte>
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
     79c:	1f 5f       	subi	r17, 0xFF	; 255
		uint8_t pixelmask = y1pixelmask & y2pixelmask;
		gfx_mono_mask_byte(y1page, x, pixelmask, color);
	} else {
		gfx_mono_mask_byte(y1page, x, y1pixelmask, color);

		while (++y1page < y2page) {
     79e:	2d 2f       	mov	r18, r29
     7a0:	10 17       	cp	r17, r16
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
     7a2:	10 f4       	brcc	.+4      	; 0x7a8 <gfx_mono_generic_draw_vertical_line+0x8c>
     7a4:	4f ef       	ldi	r20, 0xFF	; 255
		}

		gfx_mono_mask_byte(y2page, x, y2pixelmask, color);
     7a6:	f7 cf       	rjmp	.-18     	; 0x796 <gfx_mono_generic_draw_vertical_line+0x7a>
     7a8:	4e 2d       	mov	r20, r14
     7aa:	6c 2f       	mov	r22, r28
	}
}
     7ac:	80 2f       	mov	r24, r16
     7ae:	df 91       	pop	r29
     7b0:	cf 91       	pop	r28
     7b2:	1f 91       	pop	r17
     7b4:	0f 91       	pop	r16

		while (++y1page < y2page) {
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
		}

		gfx_mono_mask_byte(y2page, x, y2pixelmask, color);
     7b6:	ff 90       	pop	r15
     7b8:	ef 90       	pop	r14
	}
}
     7ba:	46 c2       	rjmp	.+1164   	; 0xc48 <gfx_mono_lcd_uc1608_mask_byte>
     7bc:	df 91       	pop	r29
     7be:	cf 91       	pop	r28
     7c0:	1f 91       	pop	r17
     7c2:	0f 91       	pop	r16
     7c4:	ff 90       	pop	r15
     7c6:	ef 90       	pop	r14
     7c8:	08 95       	ret

000007ca <gfx_mono_generic_draw_line>:
 * \param  color       Pixel operation of the line.
 */
void gfx_mono_generic_draw_line(gfx_coord_t x1, gfx_coord_t y1,
		gfx_coord_t x2, gfx_coord_t y2,
		enum gfx_mono_color color)
{
     7ca:	8f 92       	push	r8
     7cc:	9f 92       	push	r9
     7ce:	af 92       	push	r10
     7d0:	bf 92       	push	r11
     7d2:	cf 92       	push	r12
     7d4:	df 92       	push	r13
     7d6:	ef 92       	push	r14
     7d8:	ff 92       	push	r15
     7da:	0f 93       	push	r16
     7dc:	1f 93       	push	r17
     7de:	cf 93       	push	r28
     7e0:	df 93       	push	r29
     7e2:	18 2f       	mov	r17, r24
     7e4:	b6 2e       	mov	r11, r22
	int16_t dx;
	int16_t dy;
	int16_t e;

	/* swap x1,y1  with x2,y2 */
	if (x1 > x2) {
     7e6:	48 17       	cp	r20, r24
     7e8:	28 f4       	brcc	.+10     	; 0x7f4 <gfx_mono_generic_draw_line+0x2a>
		dx = x1;
		x1 = x2;
		x2 = dx;
		dy = y1;
		y1 = y2;
     7ea:	b2 2e       	mov	r11, r18
		y2 = dy;
     7ec:	26 2f       	mov	r18, r22
	int16_t dx;
	int16_t dy;
	int16_t e;

	/* swap x1,y1  with x2,y2 */
	if (x1 > x2) {
     7ee:	81 2f       	mov	r24, r17
     7f0:	14 2f       	mov	r17, r20
     7f2:	48 2f       	mov	r20, r24
		dy = y1;
		y1 = y2;
		y2 = dy;
	}

	dx = x2 - x1;
     7f4:	c4 2f       	mov	r28, r20
     7f6:	d0 e0       	ldi	r29, 0x00	; 0
     7f8:	c1 1b       	sub	r28, r17
     7fa:	d1 09       	sbc	r29, r1
	dy = y2 - y1;
     7fc:	e2 2e       	mov	r14, r18
     7fe:	f1 2c       	mov	r15, r1
     800:	eb 18       	sub	r14, r11
     802:	f1 08       	sbc	r15, r1

	x = x1;
	y = y1;

	if (dx < 0) {
     804:	d7 ff       	sbrs	r29, 7
     806:	06 c0       	rjmp	.+12     	; 0x814 <gfx_mono_generic_draw_line+0x4a>
		xinc = -1;
		dx = -dx;
     808:	d1 95       	neg	r29
     80a:	c1 95       	neg	r28
     80c:	d1 09       	sbc	r29, r1

	x = x1;
	y = y1;

	if (dx < 0) {
		xinc = -1;
     80e:	99 24       	eor	r9, r9
     810:	9a 94       	dec	r9
     812:	02 c0       	rjmp	.+4      	; 0x818 <gfx_mono_generic_draw_line+0x4e>
		dx = -dx;
	} else {
		xinc = 1;
     814:	99 24       	eor	r9, r9
     816:	93 94       	inc	r9
	}

	if (dy < 0) {
     818:	f7 fe       	sbrs	r15, 7
     81a:	06 c0       	rjmp	.+12     	; 0x828 <gfx_mono_generic_draw_line+0x5e>
		yinc = -1;
		dy = -dy;
     81c:	f1 94       	neg	r15
     81e:	e1 94       	neg	r14
     820:	f1 08       	sbc	r15, r1
	} else {
		xinc = 1;
	}

	if (dy < 0) {
		yinc = -1;
     822:	88 24       	eor	r8, r8
     824:	8a 94       	dec	r8
     826:	02 c0       	rjmp	.+4      	; 0x82c <gfx_mono_generic_draw_line+0x62>
		dy = -dy;
	} else {
		yinc = 1;
     828:	88 24       	eor	r8, r8
     82a:	83 94       	inc	r8
	}

	if (dx > dy) {
     82c:	ec 16       	cp	r14, r28
     82e:	fd 06       	cpc	r15, r29
     830:	bc f4       	brge	.+46     	; 0x860 <gfx_mono_generic_draw_line+0x96>
		e = dy - dx;
     832:	67 01       	movw	r12, r14
     834:	cc 1a       	sub	r12, r28
     836:	dd 0a       	sbc	r13, r29
		for (i = 0; i <= dx; i++) {
     838:	a1 2c       	mov	r10, r1
     83a:	8a 2d       	mov	r24, r10
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	c8 17       	cp	r28, r24
     840:	d9 07       	cpc	r29, r25
     842:	2c f1       	brlt	.+74     	; 0x88e <gfx_mono_generic_draw_line+0xc4>
			gfx_mono_draw_pixel(x, y, color);
     844:	40 2f       	mov	r20, r16
     846:	6b 2d       	mov	r22, r11
     848:	81 2f       	mov	r24, r17
     84a:	23 d2       	rcall	.+1094   	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
			if (e >= 0) {
     84c:	d7 fc       	sbrc	r13, 7
     84e:	03 c0       	rjmp	.+6      	; 0x856 <gfx_mono_generic_draw_line+0x8c>
				e -= dx;
     850:	cc 1a       	sub	r12, r28
     852:	dd 0a       	sbc	r13, r29
				y += yinc;
     854:	b8 0c       	add	r11, r8
			}

			e += dy;
     856:	ce 0c       	add	r12, r14
     858:	df 1c       	adc	r13, r15
     85a:	19 0d       	add	r17, r9
		yinc = 1;
	}

	if (dx > dy) {
		e = dy - dx;
		for (i = 0; i <= dx; i++) {
     85c:	a3 94       	inc	r10
     85e:	ed cf       	rjmp	.-38     	; 0x83a <gfx_mono_generic_draw_line+0x70>

			e += dy;
			x += xinc;
		}
	} else {
		e = dx - dy;
     860:	6e 01       	movw	r12, r28
     862:	ce 18       	sub	r12, r14
     864:	df 08       	sbc	r13, r15
		for (i = 0; i <= dy; i++) {
     866:	a1 2c       	mov	r10, r1
     868:	8a 2d       	mov	r24, r10
     86a:	90 e0       	ldi	r25, 0x00	; 0
     86c:	e8 16       	cp	r14, r24
     86e:	f9 06       	cpc	r15, r25
     870:	74 f0       	brlt	.+28     	; 0x88e <gfx_mono_generic_draw_line+0xc4>
			gfx_mono_draw_pixel(x, y, color);
     872:	40 2f       	mov	r20, r16
     874:	6b 2d       	mov	r22, r11
     876:	81 2f       	mov	r24, r17
     878:	0c d2       	rcall	.+1048   	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
			if (e >= 0) {
     87a:	d7 fc       	sbrc	r13, 7
     87c:	03 c0       	rjmp	.+6      	; 0x884 <gfx_mono_generic_draw_line+0xba>
				e -= dy;
     87e:	ce 18       	sub	r12, r14
     880:	df 08       	sbc	r13, r15
				x += xinc;
     882:	19 0d       	add	r17, r9
			}

			e += dx;
     884:	cc 0e       	add	r12, r28
     886:	dd 1e       	adc	r13, r29
     888:	b8 0c       	add	r11, r8
			e += dy;
			x += xinc;
		}
	} else {
		e = dx - dy;
		for (i = 0; i <= dy; i++) {
     88a:	a3 94       	inc	r10
     88c:	ed cf       	rjmp	.-38     	; 0x868 <gfx_mono_generic_draw_line+0x9e>

			e += dx;
			y += yinc;
		}
	}
}
     88e:	df 91       	pop	r29
     890:	cf 91       	pop	r28
     892:	1f 91       	pop	r17
     894:	0f 91       	pop	r16
     896:	ff 90       	pop	r15
     898:	ef 90       	pop	r14
     89a:	df 90       	pop	r13
     89c:	cf 90       	pop	r12
     89e:	bf 90       	pop	r11
     8a0:	af 90       	pop	r10
     8a2:	9f 90       	pop	r9
     8a4:	8f 90       	pop	r8
     8a6:	08 95       	ret

000008a8 <gfx_mono_generic_draw_rect>:
 * \param  color       Pixel operation of the line.
 */
void gfx_mono_generic_draw_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
     8a8:	ff 92       	push	r15
     8aa:	0f 93       	push	r16
     8ac:	1f 93       	push	r17
     8ae:	cf 93       	push	r28
     8b0:	df 93       	push	r29
     8b2:	d8 2f       	mov	r29, r24
     8b4:	16 2f       	mov	r17, r22
     8b6:	c4 2f       	mov	r28, r20
     8b8:	f2 2e       	mov	r15, r18
	gfx_mono_draw_horizontal_line(x, y, width, color);
     8ba:	20 2f       	mov	r18, r16
     8bc:	d0 de       	rcall	.-608    	; 0x65e <gfx_mono_generic_draw_horizontal_line>
	gfx_mono_draw_horizontal_line(x, y + height - 1, width, color);
     8be:	6f ef       	ldi	r22, 0xFF	; 255
     8c0:	6f 0d       	add	r22, r15
     8c2:	61 0f       	add	r22, r17
     8c4:	20 2f       	mov	r18, r16
     8c6:	4c 2f       	mov	r20, r28
     8c8:	8d 2f       	mov	r24, r29
     8ca:	c9 de       	rcall	.-622    	; 0x65e <gfx_mono_generic_draw_horizontal_line>

	gfx_mono_draw_vertical_line(x, y, height, color);
     8cc:	20 2f       	mov	r18, r16
     8ce:	4f 2d       	mov	r20, r15
     8d0:	61 2f       	mov	r22, r17
     8d2:	8d 2f       	mov	r24, r29
     8d4:	23 df       	rcall	.-442    	; 0x71c <gfx_mono_generic_draw_vertical_line>
	gfx_mono_draw_vertical_line(x + width - 1, y, height, color);
     8d6:	8f ef       	ldi	r24, 0xFF	; 255
     8d8:	8c 0f       	add	r24, r28
     8da:	20 2f       	mov	r18, r16
     8dc:	4f 2d       	mov	r20, r15
     8de:	61 2f       	mov	r22, r17
     8e0:	8d 0f       	add	r24, r29
}
     8e2:	df 91       	pop	r29
     8e4:	cf 91       	pop	r28
     8e6:	1f 91       	pop	r17
     8e8:	0f 91       	pop	r16
{
	gfx_mono_draw_horizontal_line(x, y, width, color);
	gfx_mono_draw_horizontal_line(x, y + height - 1, width, color);

	gfx_mono_draw_vertical_line(x, y, height, color);
	gfx_mono_draw_vertical_line(x + width - 1, y, height, color);
     8ea:	ff 90       	pop	r15
     8ec:	17 cf       	rjmp	.-466    	; 0x71c <gfx_mono_generic_draw_vertical_line>

000008ee <gfx_mono_generic_draw_filled_rect>:
 * \param  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
     8ee:	ff 92       	push	r15
     8f0:	0f 93       	push	r16
     8f2:	1f 93       	push	r17
     8f4:	cf 93       	push	r28
     8f6:	df 93       	push	r29
	if (height == 0) {
     8f8:	22 23       	and	r18, r18
     8fa:	69 f0       	breq	.+26     	; 0x916 <__stack+0x17>
     8fc:	14 2f       	mov	r17, r20
     8fe:	f6 2e       	mov	r15, r22
     900:	d8 2f       	mov	r29, r24
     902:	cf ef       	ldi	r28, 0xFF	; 255
     904:	c2 0f       	add	r28, r18
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
     906:	6f 2d       	mov	r22, r15
     908:	6c 0f       	add	r22, r28
     90a:	20 2f       	mov	r18, r16
     90c:	41 2f       	mov	r20, r17
     90e:	8d 2f       	mov	r24, r29
     910:	a6 de       	rcall	.-692    	; 0x65e <gfx_mono_generic_draw_horizontal_line>
     912:	c1 50       	subi	r28, 0x01	; 1
     914:	c0 f7       	brcc	.-16     	; 0x906 <__stack+0x7>
	}
}
     916:	df 91       	pop	r29
     918:	cf 91       	pop	r28
     91a:	1f 91       	pop	r17
     91c:	0f 91       	pop	r16
     91e:	ff 90       	pop	r15
     920:	08 95       	ret

00000922 <gfx_mono_generic_draw_circle>:
 * \param  octant_mask Bitmask indicating which octants to draw.
 */
void gfx_mono_generic_draw_circle(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t radius, enum gfx_mono_color color,
		uint8_t octant_mask)
{
     922:	5f 92       	push	r5
     924:	6f 92       	push	r6
     926:	7f 92       	push	r7
     928:	8f 92       	push	r8
     92a:	9f 92       	push	r9
     92c:	af 92       	push	r10
     92e:	bf 92       	push	r11
     930:	cf 92       	push	r12
     932:	df 92       	push	r13
     934:	ef 92       	push	r14
     936:	ff 92       	push	r15
     938:	0f 93       	push	r16
     93a:	1f 93       	push	r17
     93c:	cf 93       	push	r28
     93e:	df 93       	push	r29
     940:	18 2f       	mov	r17, r24
     942:	f6 2e       	mov	r15, r22
     944:	c4 2f       	mov	r28, r20
     946:	e2 2e       	mov	r14, r18
	gfx_coord_t offset_x;
	gfx_coord_t offset_y;
	int16_t error;

	/* Draw only a pixel if radius is zero. */
	if (radius == 0) {
     948:	41 11       	cpse	r20, r1
     94a:	11 c0       	rjmp	.+34     	; 0x96e <gfx_mono_generic_draw_circle+0x4c>
		gfx_mono_draw_pixel(x, y, color);
     94c:	42 2f       	mov	r20, r18
		}

		/* Next X. */
		++offset_x;
	}
}
     94e:	df 91       	pop	r29
     950:	cf 91       	pop	r28
     952:	1f 91       	pop	r17
     954:	0f 91       	pop	r16
     956:	ff 90       	pop	r15
     958:	ef 90       	pop	r14
     95a:	df 90       	pop	r13
     95c:	cf 90       	pop	r12
     95e:	bf 90       	pop	r11
     960:	af 90       	pop	r10
     962:	9f 90       	pop	r9
     964:	8f 90       	pop	r8
     966:	7f 90       	pop	r7
     968:	6f 90       	pop	r6
	gfx_coord_t offset_y;
	int16_t error;

	/* Draw only a pixel if radius is zero. */
	if (radius == 0) {
		gfx_mono_draw_pixel(x, y, color);
     96a:	5f 90       	pop	r5
	}

	/* Set up start iterators. */
	offset_x = 0;
	offset_y = radius;
	error = 3 - 2 * radius;
     96c:	92 c1       	rjmp	.+804    	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
     96e:	83 e0       	ldi	r24, 0x03	; 3
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	6c 01       	movw	r12, r24
     974:	22 e0       	ldi	r18, 0x02	; 2
     976:	42 9f       	mul	r20, r18
     978:	c0 18       	sub	r12, r0
     97a:	d1 08       	sbc	r13, r1
		gfx_mono_draw_pixel(x, y, color);
		return;
	}

	/* Set up start iterators. */
	offset_x = 0;
     97c:	11 24       	eor	r1, r1
	error = 3 - 2 * radius;

	/* Iterate offsetX from 0 to radius. */
	while (offset_x <= offset_y) {
		/* Draw one pixel for each octant enabled in octant_mask. */
		if (octant_mask & GFX_OCTANT0) {
     97e:	d0 e0       	ldi	r29, 0x00	; 0
     980:	80 2f       	mov	r24, r16
     982:	81 70       	andi	r24, 0x01	; 1
			gfx_mono_draw_pixel(x + offset_y, y - offset_x, color);
		}

		if (octant_mask & GFX_OCTANT1) {
     984:	b8 2e       	mov	r11, r24
     986:	20 2f       	mov	r18, r16
     988:	22 70       	andi	r18, 0x02	; 2
			gfx_mono_draw_pixel(x + offset_x, y - offset_y, color);
		}

		if (octant_mask & GFX_OCTANT2) {
     98a:	a2 2e       	mov	r10, r18
     98c:	80 2f       	mov	r24, r16
     98e:	84 70       	andi	r24, 0x04	; 4
			gfx_mono_draw_pixel(x - offset_x, y - offset_y, color);
		}

		if (octant_mask & GFX_OCTANT3) {
     990:	98 2e       	mov	r9, r24
     992:	20 2f       	mov	r18, r16
     994:	28 70       	andi	r18, 0x08	; 8
			gfx_mono_draw_pixel(x - offset_y, y - offset_x, color);
		}

		if (octant_mask & GFX_OCTANT4) {
     996:	82 2e       	mov	r8, r18
     998:	80 2f       	mov	r24, r16
     99a:	80 71       	andi	r24, 0x10	; 16
			gfx_mono_draw_pixel(x - offset_y, y + offset_x, color);
		}

		if (octant_mask & GFX_OCTANT5) {
     99c:	78 2e       	mov	r7, r24
     99e:	20 2f       	mov	r18, r16
     9a0:	20 72       	andi	r18, 0x20	; 32
			gfx_mono_draw_pixel(x - offset_x, y + offset_y, color);
		}

		if (octant_mask & GFX_OCTANT6) {
     9a2:	62 2e       	mov	r6, r18
     9a4:	80 2f       	mov	r24, r16
     9a6:	80 74       	andi	r24, 0x40	; 64
	error = 3 - 2 * radius;

	/* Iterate offsetX from 0 to radius. */
	while (offset_x <= offset_y) {
		/* Draw one pixel for each octant enabled in octant_mask. */
		if (octant_mask & GFX_OCTANT0) {
     9a8:	58 2e       	mov	r5, r24
     9aa:	bb 20       	and	r11, r11
			gfx_mono_draw_pixel(x + offset_y, y - offset_x, color);
     9ac:	31 f0       	breq	.+12     	; 0x9ba <gfx_mono_generic_draw_circle+0x98>
     9ae:	4e 2d       	mov	r20, r14
     9b0:	6f 2d       	mov	r22, r15
     9b2:	6d 1b       	sub	r22, r29
     9b4:	81 2f       	mov	r24, r17
     9b6:	8c 0f       	add	r24, r28
		}

		if (octant_mask & GFX_OCTANT1) {
     9b8:	6c d1       	rcall	.+728    	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
     9ba:	aa 20       	and	r10, r10
			gfx_mono_draw_pixel(x + offset_x, y - offset_y, color);
     9bc:	31 f0       	breq	.+12     	; 0x9ca <gfx_mono_generic_draw_circle+0xa8>
     9be:	4e 2d       	mov	r20, r14
     9c0:	6f 2d       	mov	r22, r15
     9c2:	6c 1b       	sub	r22, r28
     9c4:	81 2f       	mov	r24, r17
     9c6:	8d 0f       	add	r24, r29
		}

		if (octant_mask & GFX_OCTANT2) {
     9c8:	64 d1       	rcall	.+712    	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
     9ca:	99 20       	and	r9, r9
			gfx_mono_draw_pixel(x - offset_x, y - offset_y, color);
     9cc:	31 f0       	breq	.+12     	; 0x9da <gfx_mono_generic_draw_circle+0xb8>
     9ce:	4e 2d       	mov	r20, r14
     9d0:	6f 2d       	mov	r22, r15
     9d2:	6c 1b       	sub	r22, r28
     9d4:	81 2f       	mov	r24, r17
     9d6:	8d 1b       	sub	r24, r29
		}

		if (octant_mask & GFX_OCTANT3) {
     9d8:	5c d1       	rcall	.+696    	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
     9da:	88 20       	and	r8, r8
			gfx_mono_draw_pixel(x - offset_y, y - offset_x, color);
     9dc:	31 f0       	breq	.+12     	; 0x9ea <gfx_mono_generic_draw_circle+0xc8>
     9de:	4e 2d       	mov	r20, r14
     9e0:	6f 2d       	mov	r22, r15
     9e2:	6d 1b       	sub	r22, r29
     9e4:	81 2f       	mov	r24, r17
     9e6:	8c 1b       	sub	r24, r28
		}

		if (octant_mask & GFX_OCTANT4) {
     9e8:	54 d1       	rcall	.+680    	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
			gfx_mono_draw_pixel(x - offset_y, y + offset_x, color);
     9ea:	77 20       	and	r7, r7
     9ec:	31 f0       	breq	.+12     	; 0x9fa <gfx_mono_generic_draw_circle+0xd8>
     9ee:	4e 2d       	mov	r20, r14
     9f0:	6f 2d       	mov	r22, r15
     9f2:	6d 0f       	add	r22, r29
     9f4:	81 2f       	mov	r24, r17
		}

		if (octant_mask & GFX_OCTANT5) {
     9f6:	8c 1b       	sub	r24, r28
			gfx_mono_draw_pixel(x - offset_x, y + offset_y, color);
     9f8:	4c d1       	rcall	.+664    	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
     9fa:	66 20       	and	r6, r6
     9fc:	31 f0       	breq	.+12     	; 0xa0a <gfx_mono_generic_draw_circle+0xe8>
     9fe:	4e 2d       	mov	r20, r14
     a00:	6f 2d       	mov	r22, r15
     a02:	6c 0f       	add	r22, r28
		}

		if (octant_mask & GFX_OCTANT6) {
     a04:	81 2f       	mov	r24, r17
			gfx_mono_draw_pixel(x + offset_x, y + offset_y, color);
     a06:	8d 1b       	sub	r24, r29
     a08:	44 d1       	rcall	.+648    	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
     a0a:	55 20       	and	r5, r5
     a0c:	31 f0       	breq	.+12     	; 0xa1a <gfx_mono_generic_draw_circle+0xf8>
     a0e:	4e 2d       	mov	r20, r14
     a10:	6f 2d       	mov	r22, r15
		}

		if (octant_mask & GFX_OCTANT7) {
     a12:	6c 0f       	add	r22, r28
     a14:	81 2f       	mov	r24, r17
			gfx_mono_draw_pixel(x + offset_y, y + offset_x, color);
     a16:	8d 0f       	add	r24, r29
     a18:	3c d1       	rcall	.+632    	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
     a1a:	07 ff       	sbrs	r16, 7
     a1c:	06 c0       	rjmp	.+12     	; 0xa2a <gfx_mono_generic_draw_circle+0x108>
     a1e:	4e 2d       	mov	r20, r14
     a20:	6f 2d       	mov	r22, r15
     a22:	6d 0f       	add	r22, r29
     a24:	81 2f       	mov	r24, r17
     a26:	8c 0f       	add	r24, r28
		}

		/* Update error value and step offset_y when required. */
		if (error < 0) {
     a28:	34 d1       	rcall	.+616    	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
     a2a:	8d 2f       	mov	r24, r29
			error += ((offset_x << 2) + 6);
     a2c:	90 e0       	ldi	r25, 0x00	; 0
     a2e:	d7 fe       	sbrs	r13, 7
     a30:	08 c0       	rjmp	.+16     	; 0xa42 <gfx_mono_generic_draw_circle+0x120>
     a32:	88 0f       	add	r24, r24
     a34:	99 1f       	adc	r25, r25
     a36:	88 0f       	add	r24, r24
     a38:	99 1f       	adc	r25, r25
     a3a:	06 96       	adiw	r24, 0x06	; 6
		} else {
			error += (((offset_x - offset_y) << 2) + 10);
     a3c:	c8 0e       	add	r12, r24
     a3e:	d9 1e       	adc	r13, r25
     a40:	0a c0       	rjmp	.+20     	; 0xa56 <gfx_mono_generic_draw_circle+0x134>
     a42:	8c 1b       	sub	r24, r28
     a44:	91 09       	sbc	r25, r1
     a46:	88 0f       	add	r24, r24
     a48:	99 1f       	adc	r25, r25
     a4a:	88 0f       	add	r24, r24
     a4c:	99 1f       	adc	r25, r25
			--offset_y;
     a4e:	0a 96       	adiw	r24, 0x0a	; 10
		}

		/* Next X. */
		++offset_x;
     a50:	c8 0e       	add	r12, r24
	offset_x = 0;
	offset_y = radius;
	error = 3 - 2 * radius;

	/* Iterate offsetX from 0 to radius. */
	while (offset_x <= offset_y) {
     a52:	d9 1e       	adc	r13, r25
     a54:	c1 50       	subi	r28, 0x01	; 1
     a56:	df 5f       	subi	r29, 0xFF	; 255
		}

		/* Next X. */
		++offset_x;
	}
}
     a58:	cd 17       	cp	r28, r29
     a5a:	08 f0       	brcs	.+2      	; 0xa5e <gfx_mono_generic_draw_circle+0x13c>
     a5c:	a6 cf       	rjmp	.-180    	; 0x9aa <gfx_mono_generic_draw_circle+0x88>
     a5e:	df 91       	pop	r29
     a60:	cf 91       	pop	r28
     a62:	1f 91       	pop	r17
     a64:	0f 91       	pop	r16
     a66:	ff 90       	pop	r15
     a68:	ef 90       	pop	r14
     a6a:	df 90       	pop	r13
     a6c:	cf 90       	pop	r12
     a6e:	bf 90       	pop	r11
     a70:	af 90       	pop	r10
     a72:	9f 90       	pop	r9
     a74:	8f 90       	pop	r8
     a76:	7f 90       	pop	r7
     a78:	6f 90       	pop	r6
     a7a:	5f 90       	pop	r5
     a7c:	08 95       	ret

00000a7e <gfx_mono_generic_draw_filled_circle>:
 * \param  quadrant_mask Bitmask indicating which quadrants to draw.
 */
void gfx_mono_generic_draw_filled_circle(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t radius, enum gfx_mono_color color,
		uint8_t quadrant_mask)
{
     a7e:	8f 92       	push	r8
     a80:	9f 92       	push	r9
     a82:	af 92       	push	r10
     a84:	bf 92       	push	r11
     a86:	cf 92       	push	r12
     a88:	df 92       	push	r13
     a8a:	ef 92       	push	r14
     a8c:	ff 92       	push	r15
     a8e:	0f 93       	push	r16
     a90:	1f 93       	push	r17
     a92:	cf 93       	push	r28
     a94:	df 93       	push	r29
     a96:	18 2f       	mov	r17, r24
     a98:	d6 2e       	mov	r13, r22
     a9a:	c4 2f       	mov	r28, r20
     a9c:	c2 2e       	mov	r12, r18
	gfx_coord_t offset_x;
	gfx_coord_t offset_y;
	int16_t error;

	/* Draw only a pixel if radius is zero. */
	if (radius == 0) {
     a9e:	41 11       	cpse	r20, r1
     aa0:	0e c0       	rjmp	.+28     	; 0xabe <gfx_mono_generic_draw_filled_circle+0x40>
		gfx_mono_draw_pixel(x, y, color);
     aa2:	42 2f       	mov	r20, r18
		}

		/* Next X. */
		++offset_x;
	}
}
     aa4:	df 91       	pop	r29
     aa6:	cf 91       	pop	r28
     aa8:	1f 91       	pop	r17
     aaa:	0f 91       	pop	r16
     aac:	ff 90       	pop	r15
     aae:	ef 90       	pop	r14
     ab0:	df 90       	pop	r13
     ab2:	cf 90       	pop	r12
     ab4:	bf 90       	pop	r11
     ab6:	af 90       	pop	r10
     ab8:	9f 90       	pop	r9
	gfx_coord_t offset_y;
	int16_t error;

	/* Draw only a pixel if radius is zero. */
	if (radius == 0) {
		gfx_mono_draw_pixel(x, y, color);
     aba:	8f 90       	pop	r8
	}

	/* Set up start iterators. */
	offset_x = 0;
	offset_y = radius;
	error = 3 - 2 * radius;
     abc:	ea c0       	rjmp	.+468    	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
     abe:	83 e0       	ldi	r24, 0x03	; 3
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	7c 01       	movw	r14, r24
     ac4:	22 e0       	ldi	r18, 0x02	; 2
     ac6:	42 9f       	mul	r20, r18
     ac8:	e0 18       	sub	r14, r0
     aca:	f1 08       	sbc	r15, r1
     acc:	11 24       	eor	r1, r1
     ace:	bb 24       	eor	r11, r11
		gfx_mono_draw_pixel(x, y, color);
		return;
	}

	/* Set up start iterators. */
	offset_x = 0;
     ad0:	b3 94       	inc	r11
	error = 3 - 2 * radius;

	/* Iterate offset_x from 0 to radius. */
	while (offset_x <= offset_y) {
		/* Draw vertical lines tracking each quadrant. */
		if (quadrant_mask & GFX_QUADRANT0) {
     ad2:	d0 e0       	ldi	r29, 0x00	; 0
     ad4:	80 2f       	mov	r24, r16
     ad6:	83 70       	andi	r24, 0x03	; 3
					y - offset_x, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x + offset_x,
					y - offset_y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT1) {
     ad8:	a8 2e       	mov	r10, r24
     ada:	20 2f       	mov	r18, r16
     adc:	2c 70       	andi	r18, 0x0C	; 12
					y - offset_x, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x - offset_x,
					y - offset_y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT2) {
     ade:	92 2e       	mov	r9, r18
     ae0:	80 2f       	mov	r24, r16
     ae2:	80 73       	andi	r24, 0x30	; 48
					y, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x - offset_x,
					y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT3) {
     ae4:	88 2e       	mov	r8, r24
	error = 3 - 2 * radius;

	/* Iterate offset_x from 0 to radius. */
	while (offset_x <= offset_y) {
		/* Draw vertical lines tracking each quadrant. */
		if (quadrant_mask & GFX_QUADRANT0) {
     ae6:	00 7c       	andi	r16, 0xC0	; 192
     ae8:	aa 20       	and	r10, r10
			gfx_mono_draw_vertical_line(x + offset_y,
     aea:	79 f0       	breq	.+30     	; 0xb0a <gfx_mono_generic_draw_filled_circle+0x8c>
     aec:	2c 2d       	mov	r18, r12
     aee:	4b 2d       	mov	r20, r11
     af0:	6d 2d       	mov	r22, r13
     af2:	6d 1b       	sub	r22, r29
     af4:	81 2f       	mov	r24, r17
     af6:	8c 0f       	add	r24, r28
					y - offset_x, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x + offset_x,
     af8:	11 de       	rcall	.-990    	; 0x71c <gfx_mono_generic_draw_vertical_line>
     afa:	2c 2d       	mov	r18, r12
     afc:	41 e0       	ldi	r20, 0x01	; 1
     afe:	4c 0f       	add	r20, r28
     b00:	6d 2d       	mov	r22, r13
     b02:	6c 1b       	sub	r22, r28
     b04:	81 2f       	mov	r24, r17
     b06:	8d 0f       	add	r24, r29
					y - offset_y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT1) {
     b08:	09 de       	rcall	.-1006   	; 0x71c <gfx_mono_generic_draw_vertical_line>
     b0a:	99 20       	and	r9, r9
			gfx_mono_draw_vertical_line(x - offset_y,
     b0c:	79 f0       	breq	.+30     	; 0xb2c <gfx_mono_generic_draw_filled_circle+0xae>
     b0e:	2c 2d       	mov	r18, r12
     b10:	4b 2d       	mov	r20, r11
     b12:	6d 2d       	mov	r22, r13
     b14:	6d 1b       	sub	r22, r29
     b16:	81 2f       	mov	r24, r17
     b18:	8c 1b       	sub	r24, r28
					y - offset_x, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x - offset_x,
     b1a:	00 de       	rcall	.-1024   	; 0x71c <gfx_mono_generic_draw_vertical_line>
     b1c:	2c 2d       	mov	r18, r12
     b1e:	41 e0       	ldi	r20, 0x01	; 1
     b20:	4c 0f       	add	r20, r28
     b22:	6d 2d       	mov	r22, r13
     b24:	6c 1b       	sub	r22, r28
     b26:	81 2f       	mov	r24, r17
     b28:	8d 1b       	sub	r24, r29
					y - offset_y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT2) {
     b2a:	f8 dd       	rcall	.-1040   	; 0x71c <gfx_mono_generic_draw_vertical_line>
			gfx_mono_draw_vertical_line(x - offset_y,
     b2c:	88 20       	and	r8, r8
     b2e:	69 f0       	breq	.+26     	; 0xb4a <gfx_mono_generic_draw_filled_circle+0xcc>
     b30:	2c 2d       	mov	r18, r12
     b32:	4b 2d       	mov	r20, r11
     b34:	6d 2d       	mov	r22, r13
					y, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x - offset_x,
     b36:	81 2f       	mov	r24, r17
     b38:	8c 1b       	sub	r24, r28
     b3a:	f0 dd       	rcall	.-1056   	; 0x71c <gfx_mono_generic_draw_vertical_line>
     b3c:	2c 2d       	mov	r18, r12
     b3e:	41 e0       	ldi	r20, 0x01	; 1
     b40:	4c 0f       	add	r20, r28
					y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT3) {
     b42:	6d 2d       	mov	r22, r13
			gfx_mono_draw_vertical_line(x + offset_y,
     b44:	81 2f       	mov	r24, r17
     b46:	8d 1b       	sub	r24, r29
     b48:	e9 dd       	rcall	.-1070   	; 0x71c <gfx_mono_generic_draw_vertical_line>
     b4a:	00 23       	and	r16, r16
     b4c:	69 f0       	breq	.+26     	; 0xb68 <gfx_mono_generic_draw_filled_circle+0xea>
     b4e:	2c 2d       	mov	r18, r12
					y, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x + offset_x,
     b50:	4b 2d       	mov	r20, r11
     b52:	6d 2d       	mov	r22, r13
     b54:	81 2f       	mov	r24, r17
     b56:	8c 0f       	add	r24, r28
     b58:	e1 dd       	rcall	.-1086   	; 0x71c <gfx_mono_generic_draw_vertical_line>
     b5a:	2c 2d       	mov	r18, r12
     b5c:	41 e0       	ldi	r20, 0x01	; 1
     b5e:	4c 0f       	add	r20, r28
     b60:	6d 2d       	mov	r22, r13
     b62:	81 2f       	mov	r24, r17
					y, offset_y + 1, color);
		}

		/* Update error value and step offset_y when required. */
		if (error < 0) {
     b64:	8d 0f       	add	r24, r29
     b66:	da dd       	rcall	.-1100   	; 0x71c <gfx_mono_generic_draw_vertical_line>
			error += ((offset_x << 2) + 6);
     b68:	8d 2f       	mov	r24, r29
     b6a:	90 e0       	ldi	r25, 0x00	; 0
     b6c:	f7 fe       	sbrs	r15, 7
     b6e:	08 c0       	rjmp	.+16     	; 0xb80 <gfx_mono_generic_draw_filled_circle+0x102>
     b70:	88 0f       	add	r24, r24
     b72:	99 1f       	adc	r25, r25
     b74:	88 0f       	add	r24, r24
     b76:	99 1f       	adc	r25, r25
		} else {
			error += (((offset_x - offset_y) << 2) + 10);
     b78:	06 96       	adiw	r24, 0x06	; 6
     b7a:	e8 0e       	add	r14, r24
     b7c:	f9 1e       	adc	r15, r25
     b7e:	0a c0       	rjmp	.+20     	; 0xb94 <gfx_mono_generic_draw_filled_circle+0x116>
     b80:	8c 1b       	sub	r24, r28
     b82:	91 09       	sbc	r25, r1
     b84:	88 0f       	add	r24, r24
     b86:	99 1f       	adc	r25, r25
     b88:	88 0f       	add	r24, r24
			--offset_y;
     b8a:	99 1f       	adc	r25, r25
		}

		/* Next X. */
		++offset_x;
     b8c:	0a 96       	adiw	r24, 0x0a	; 10
     b8e:	e8 0e       	add	r14, r24
	offset_x = 0;
	offset_y = radius;
	error = 3 - 2 * radius;

	/* Iterate offset_x from 0 to radius. */
	while (offset_x <= offset_y) {
     b90:	f9 1e       	adc	r15, r25
     b92:	c1 50       	subi	r28, 0x01	; 1
     b94:	df 5f       	subi	r29, 0xFF	; 255
		}

		/* Next X. */
		++offset_x;
	}
}
     b96:	b3 94       	inc	r11
     b98:	cd 17       	cp	r28, r29
     b9a:	08 f0       	brcs	.+2      	; 0xb9e <gfx_mono_generic_draw_filled_circle+0x120>
     b9c:	a5 cf       	rjmp	.-182    	; 0xae8 <gfx_mono_generic_draw_filled_circle+0x6a>
     b9e:	df 91       	pop	r29
     ba0:	cf 91       	pop	r28
     ba2:	1f 91       	pop	r17
     ba4:	0f 91       	pop	r16
     ba6:	ff 90       	pop	r15
     ba8:	ef 90       	pop	r14
     baa:	df 90       	pop	r13
     bac:	cf 90       	pop	r12
     bae:	bf 90       	pop	r11
     bb0:	af 90       	pop	r10
     bb2:	9f 90       	pop	r9
     bb4:	8f 90       	pop	r8
     bb6:	08 95       	ret

00000bb8 <gfx_mono_lcd_uc1608_put_page>:
		uint8_t				byte = gfx_mono_lcd_uc1608_get_byte(page, x);

		isSet = (byte & pixel_mask) ?  GFX_PIXEL_SET : GFX_PIXEL_CLR;
	}
	return isSet;
}
     bb8:	0f 93       	push	r16
     bba:	1f 93       	push	r17
     bbc:	cf 93       	push	r28
     bbe:	df 93       	push	r29
     bc0:	8c 01       	movw	r16, r24
     bc2:	86 2f       	mov	r24, r22
     bc4:	d4 2f       	mov	r29, r20
     bc6:	c2 2f       	mov	r28, r18
     bc8:	01 15       	cp	r16, r1
     bca:	11 05       	cpc	r17, r1
     bcc:	c1 f0       	breq	.+48     	; 0xbfe <gfx_mono_lcd_uc1608_put_page+0x46>
     bce:	60 31       	cpi	r22, 0x10	; 16
     bd0:	b0 f4       	brcc	.+44     	; 0xbfe <gfx_mono_lcd_uc1608_put_page+0x46>
     bd2:	40 3f       	cpi	r20, 0xF0	; 240
     bd4:	a0 f4       	brcc	.+40     	; 0xbfe <gfx_mono_lcd_uc1608_put_page+0x46>
     bd6:	ae d6       	rcall	.+3420   	; 0x1934 <lcd_page_set>
     bd8:	8d 2f       	mov	r24, r29
     bda:	b4 d6       	rcall	.+3432   	; 0x1944 <lcd_col_set>
     bdc:	8c 2f       	mov	r24, r28
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	8d 0f       	add	r24, r29
     be2:	91 1d       	adc	r25, r1
     be4:	81 3f       	cpi	r24, 0xF1	; 241
     be6:	91 05       	cpc	r25, r1
     be8:	14 f0       	brlt	.+4      	; 0xbee <gfx_mono_lcd_uc1608_put_page+0x36>
     bea:	c0 ef       	ldi	r28, 0xF0	; 240
     bec:	cd 1b       	sub	r28, r29
     bee:	cc 23       	and	r28, r28
     bf0:	31 f0       	breq	.+12     	; 0xbfe <gfx_mono_lcd_uc1608_put_page+0x46>
     bf2:	f8 01       	movw	r30, r16
     bf4:	81 91       	ld	r24, Z+
     bf6:	8f 01       	movw	r16, r30
     bf8:	52 d6       	rcall	.+3236   	; 0x189e <lcd_bus_write_ram>
     bfa:	c1 50       	subi	r28, 0x01	; 1
     bfc:	f8 cf       	rjmp	.-16     	; 0xbee <gfx_mono_lcd_uc1608_put_page+0x36>
     bfe:	df 91       	pop	r29
     c00:	cf 91       	pop	r28
     c02:	1f 91       	pop	r17
     c04:	0f 91       	pop	r16
     c06:	08 95       	ret

00000c08 <gfx_mono_lcd_uc1608_put_byte>:
     c08:	cf 93       	push	r28
     c0a:	df 93       	push	r29
     c0c:	80 31       	cpi	r24, 0x10	; 16
     c0e:	58 f4       	brcc	.+22     	; 0xc26 <gfx_mono_lcd_uc1608_put_byte+0x1e>
     c10:	60 3f       	cpi	r22, 0xF0	; 240
     c12:	48 f4       	brcc	.+18     	; 0xc26 <gfx_mono_lcd_uc1608_put_byte+0x1e>
     c14:	d4 2f       	mov	r29, r20
     c16:	c6 2f       	mov	r28, r22
     c18:	8d d6       	rcall	.+3354   	; 0x1934 <lcd_page_set>
     c1a:	8c 2f       	mov	r24, r28
     c1c:	93 d6       	rcall	.+3366   	; 0x1944 <lcd_col_set>
     c1e:	8d 2f       	mov	r24, r29
     c20:	df 91       	pop	r29
     c22:	cf 91       	pop	r28
     c24:	3c c6       	rjmp	.+3192   	; 0x189e <lcd_bus_write_ram>
     c26:	df 91       	pop	r29
     c28:	cf 91       	pop	r28
     c2a:	08 95       	ret

00000c2c <gfx_mono_lcd_uc1608_get_byte>:
     c2c:	cf 93       	push	r28
     c2e:	80 31       	cpi	r24, 0x10	; 16
     c30:	40 f4       	brcc	.+16     	; 0xc42 <gfx_mono_lcd_uc1608_get_byte+0x16>
     c32:	60 3f       	cpi	r22, 0xF0	; 240
     c34:	30 f4       	brcc	.+12     	; 0xc42 <gfx_mono_lcd_uc1608_get_byte+0x16>
     c36:	c6 2f       	mov	r28, r22
     c38:	7d d6       	rcall	.+3322   	; 0x1934 <lcd_page_set>
     c3a:	8c 2f       	mov	r24, r28
     c3c:	83 d6       	rcall	.+3334   	; 0x1944 <lcd_col_set>
     c3e:	cf 91       	pop	r28
     c40:	3b c6       	rjmp	.+3190   	; 0x18b8 <lcd_bus_read_ram>
     c42:	80 e0       	ldi	r24, 0x00	; 0
     c44:	cf 91       	pop	r28
     c46:	08 95       	ret

00000c48 <gfx_mono_lcd_uc1608_mask_byte>:
 * \param column     Page offset (x coordinate)
 * \param pixel_mask Mask for pixel operation
 * \param color      Pixel operation
 */
void gfx_mono_lcd_uc1608_mask_byte(gfx_coord_t page, gfx_coord_t column, gfx_mono_color_t pixel_mask, gfx_mono_color_t color)
{
     c48:	0f 93       	push	r16
     c4a:	1f 93       	push	r17
     c4c:	cf 93       	push	r28
     c4e:	df 93       	push	r29
	uint8_t data = 0;

	if ((page < GFX_MONO_LCD_PAGES) && (column < GFX_MONO_LCD_WIDTH)) {
     c50:	80 31       	cpi	r24, 0x10	; 16
     c52:	d0 f4       	brcc	.+52     	; 0xc88 <gfx_mono_lcd_uc1608_mask_byte+0x40>
     c54:	60 3f       	cpi	r22, 0xF0	; 240
     c56:	c0 f4       	brcc	.+48     	; 0xc88 <gfx_mono_lcd_uc1608_mask_byte+0x40>
     c58:	02 2f       	mov	r16, r18
     c5a:	d4 2f       	mov	r29, r20
		data = gfx_mono_lcd_uc1608_get_byte(page, column);
     c5c:	16 2f       	mov	r17, r22
     c5e:	e6 df       	rcall	.-52     	; 0xc2c <gfx_mono_lcd_uc1608_get_byte>

		switch (color) {
     c60:	c8 2f       	mov	r28, r24
     c62:	01 30       	cpi	r16, 0x01	; 1
     c64:	41 f0       	breq	.+16     	; 0xc76 <gfx_mono_lcd_uc1608_mask_byte+0x2e>
     c66:	20 f0       	brcs	.+8      	; 0xc70 <gfx_mono_lcd_uc1608_mask_byte+0x28>
     c68:	02 30       	cpi	r16, 0x02	; 2
			case GFX_PIXEL_SET:
				data |= pixel_mask;
				break;

			case GFX_PIXEL_XOR:
				data ^= pixel_mask;
     c6a:	31 f4       	brne	.+12     	; 0xc78 <gfx_mono_lcd_uc1608_mask_byte+0x30>
     c6c:	cd 27       	eor	r28, r29
	if ((page < GFX_MONO_LCD_PAGES) && (column < GFX_MONO_LCD_WIDTH)) {
		data = gfx_mono_lcd_uc1608_get_byte(page, column);

		switch (color) {
			case GFX_PIXEL_CLR:
				data &= ~pixel_mask;
     c6e:	04 c0       	rjmp	.+8      	; 0xc78 <gfx_mono_lcd_uc1608_mask_byte+0x30>
     c70:	d0 95       	com	r29
     c72:	cd 23       	and	r28, r29
			case GFX_PIXEL_XOR:
				data ^= pixel_mask;
				break;
		}

		lcd_col_set(column);
     c74:	01 c0       	rjmp	.+2      	; 0xc78 <gfx_mono_lcd_uc1608_mask_byte+0x30>
     c76:	cd 2b       	or	r28, r29
		lcd_bus_write_ram(data);										// Write byte slice to RAM
     c78:	81 2f       	mov	r24, r17
	}
}
     c7a:	64 d6       	rcall	.+3272   	; 0x1944 <lcd_col_set>
     c7c:	8c 2f       	mov	r24, r28
     c7e:	df 91       	pop	r29
				data ^= pixel_mask;
				break;
		}

		lcd_col_set(column);
		lcd_bus_write_ram(data);										// Write byte slice to RAM
     c80:	cf 91       	pop	r28
     c82:	1f 91       	pop	r17
	}
}
     c84:	0f 91       	pop	r16
     c86:	0b c6       	rjmp	.+3094   	; 0x189e <lcd_bus_write_ram>
     c88:	df 91       	pop	r29
     c8a:	cf 91       	pop	r28
     c8c:	1f 91       	pop	r17
     c8e:	0f 91       	pop	r16
     c90:	08 95       	ret

00000c92 <gfx_mono_lcd_uc1608_draw_pixel>:
 * \param x         X coordinate of the pixel
 * \param y         Y coordinate of the pixel
 * \param color     Pixel operation.
 */
void gfx_mono_lcd_uc1608_draw_pixel(gfx_coord_t x, gfx_coord_t y, gfx_mono_color_t color)
{
     c92:	96 2f       	mov	r25, r22
     c94:	24 2f       	mov	r18, r20
	if ((x < GFX_MONO_LCD_WIDTH) && (y < GFX_MONO_LCD_HEIGHT)) {
     c96:	80 3f       	cpi	r24, 0xF0	; 240
     c98:	88 f4       	brcc	.+34     	; 0xcbc <gfx_mono_lcd_uc1608_draw_pixel+0x2a>
     c9a:	67 fd       	sbrc	r22, 7
     c9c:	0f c0       	rjmp	.+30     	; 0xcbc <gfx_mono_lcd_uc1608_draw_pixel+0x2a>
		gfx_coord_t			page		= y / GFX_MONO_LCD_PIXELS_PER_BYTE;
		gfx_mono_color_t	pixel_mask	= 1 << (y % GFX_MONO_LCD_PIXELS_PER_BYTE);

		gfx_mono_lcd_uc1608_mask_byte(page, x, pixel_mask, color);
     c9e:	36 2f       	mov	r19, r22
     ca0:	37 70       	andi	r19, 0x07	; 7
     ca2:	61 e0       	ldi	r22, 0x01	; 1
     ca4:	70 e0       	ldi	r23, 0x00	; 0
     ca6:	ab 01       	movw	r20, r22
     ca8:	01 c0       	rjmp	.+2      	; 0xcac <gfx_mono_lcd_uc1608_draw_pixel+0x1a>
     caa:	44 0f       	add	r20, r20
     cac:	3a 95       	dec	r19
     cae:	ea f7       	brpl	.-6      	; 0xcaa <gfx_mono_lcd_uc1608_draw_pixel+0x18>
     cb0:	68 2f       	mov	r22, r24
     cb2:	89 2f       	mov	r24, r25
     cb4:	86 95       	lsr	r24
     cb6:	86 95       	lsr	r24
     cb8:	86 95       	lsr	r24
     cba:	c6 cf       	rjmp	.-116    	; 0xc48 <gfx_mono_lcd_uc1608_mask_byte>
     cbc:	08 95       	ret

00000cbe <gfx_mono_draw_char>:
 * \param y        Y coordinate on screen.
 * \param font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
     cbe:	9f 92       	push	r9
     cc0:	af 92       	push	r10
     cc2:	bf 92       	push	r11
     cc4:	cf 92       	push	r12
     cc6:	df 92       	push	r13
     cc8:	ef 92       	push	r14
     cca:	ff 92       	push	r15
     ccc:	0f 93       	push	r16
     cce:	1f 93       	push	r17
     cd0:	cf 93       	push	r28
     cd2:	df 93       	push	r29
     cd4:	d8 2f       	mov	r29, r24
     cd6:	c6 2e       	mov	r12, r22
     cd8:	d4 2e       	mov	r13, r20
     cda:	79 01       	movw	r14, r18
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
     cdc:	00 e0       	ldi	r16, 0x00	; 0
     cde:	f9 01       	movw	r30, r18
     ce0:	24 81       	ldd	r18, Z+4	; 0x04
     ce2:	43 81       	ldd	r20, Z+3	; 0x03
     ce4:	6d 2d       	mov	r22, r13
     ce6:	8c 2d       	mov	r24, r12
     ce8:	02 de       	rcall	.-1020   	; 0x8ee <gfx_mono_generic_draw_filled_rect>
			GFX_PIXEL_CLR);

	switch (font->type) {
     cea:	f7 01       	movw	r30, r14
     cec:	80 81       	ld	r24, Z
     cee:	81 11       	cpse	r24, r1
     cf0:	39 c0       	rjmp	.+114    	; 0xd64 <gfx_mono_draw_char+0xa6>
	Assert(font != NULL);

	gfx_coord_t inc_x = x;
	gfx_coord_t inc_y = y;

	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
     cf2:	83 81       	ldd	r24, Z+3	; 0x03
     cf4:	28 2f       	mov	r18, r24
     cf6:	26 95       	lsr	r18
     cf8:	26 95       	lsr	r18
     cfa:	26 95       	lsr	r18
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
     cfc:	87 70       	andi	r24, 0x07	; 7
     cfe:	09 f0       	breq	.+2      	; 0xd02 <gfx_mono_draw_char+0x44>
		char_row_size++;
     d00:	2f 5f       	subi	r18, 0xFF	; 255
	}

	glyph_data_offset = char_row_size * font->height *
     d02:	f7 01       	movw	r30, r14
     d04:	c4 81       	ldd	r28, Z+4	; 0x04
			((uint8_t)ch - font->first_char);
	glyph_data = font->data.progmem + glyph_data_offset;
     d06:	8d 2f       	mov	r24, r29
     d08:	90 e0       	ldi	r25, 0x00	; 0
     d0a:	35 81       	ldd	r19, Z+5	; 0x05
     d0c:	83 1b       	sub	r24, r19
     d0e:	91 09       	sbc	r25, r1
     d10:	2c 9f       	mul	r18, r28
     d12:	90 01       	movw	r18, r0
     d14:	11 24       	eor	r1, r1
     d16:	82 9f       	mul	r24, r18
     d18:	a0 01       	movw	r20, r0
     d1a:	83 9f       	mul	r24, r19
     d1c:	50 0d       	add	r21, r0
     d1e:	92 9f       	mul	r25, r18
     d20:	50 0d       	add	r21, r0
     d22:	11 24       	eor	r1, r1
     d24:	01 81       	ldd	r16, Z+1	; 0x01
     d26:	12 81       	ldd	r17, Z+2	; 0x02
     d28:	04 0f       	add	r16, r20
     d2a:	15 1f       	adc	r17, r21
     d2c:	dc 0e       	add	r13, r28
     d2e:	9d 2c       	mov	r9, r13
     d30:	9c 1a       	sub	r9, r28
	rows_left = font->height;

	do {
		uint8_t glyph_byte = 0;
		uint8_t pixelsToDraw = font->width;
     d32:	f7 01       	movw	r30, r14
     d34:	a3 80       	ldd	r10, Z+3	; 0x03
			((uint8_t)ch - font->first_char);
	glyph_data = font->data.progmem + glyph_data_offset;
	rows_left = font->height;

	do {
		uint8_t glyph_byte = 0;
     d36:	b1 2c       	mov	r11, r1
		uint8_t pixelsToDraw = font->width;

		for (i = 0; i < pixelsToDraw; i++) {
     d38:	d0 e0       	ldi	r29, 0x00	; 0
     d3a:	8c 2d       	mov	r24, r12
     d3c:	8d 0f       	add	r24, r29
     d3e:	ad 16       	cp	r10, r29
     d40:	79 f0       	breq	.+30     	; 0xd60 <gfx_mono_draw_char+0xa2>
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
     d42:	9d 2f       	mov	r25, r29
     d44:	97 70       	andi	r25, 0x07	; 7
     d46:	21 f4       	brne	.+8      	; 0xd50 <gfx_mono_draw_char+0x92>
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
     d48:	f8 01       	movw	r30, r16
     d4a:	b4 90       	lpm	r11, Z
				glyph_data++;
     d4c:	0f 5f       	subi	r16, 0xFF	; 255
     d4e:	1f 4f       	sbci	r17, 0xFF	; 255
			}

			if ((glyph_byte & 0x80)) {
     d50:	b7 fe       	sbrs	r11, 7
     d52:	03 c0       	rjmp	.+6      	; 0xd5a <gfx_mono_draw_char+0x9c>
				gfx_mono_draw_pixel(inc_x, inc_y,
     d54:	41 e0       	ldi	r20, 0x01	; 1
     d56:	69 2d       	mov	r22, r9
     d58:	9c df       	rcall	.-200    	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
						GFX_PIXEL_SET);
			}

			inc_x += 1;
			glyph_byte <<= 1;
     d5a:	bb 0c       	add	r11, r11

	do {
		uint8_t glyph_byte = 0;
		uint8_t pixelsToDraw = font->width;

		for (i = 0; i < pixelsToDraw; i++) {
     d5c:	df 5f       	subi	r29, 0xFF	; 255
     d5e:	ed cf       	rjmp	.-38     	; 0xd3a <gfx_mono_draw_char+0x7c>
			glyph_byte <<= 1;
		}

		inc_y += 1;
		inc_x = x;
		rows_left--;
     d60:	c1 50       	subi	r28, 0x01	; 1
	} while (rows_left > 0);
     d62:	29 f7       	brne	.-54     	; 0xd2e <gfx_mono_draw_char+0x70>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
     d64:	df 91       	pop	r29
     d66:	cf 91       	pop	r28
     d68:	1f 91       	pop	r17
     d6a:	0f 91       	pop	r16
     d6c:	ff 90       	pop	r15
     d6e:	ef 90       	pop	r14
     d70:	df 90       	pop	r13
     d72:	cf 90       	pop	r12
     d74:	bf 90       	pop	r11
     d76:	af 90       	pop	r10
     d78:	9f 90       	pop	r9
     d7a:	08 95       	ret

00000d7c <gfx_mono_draw_string>:
 * \param y         Y coordinate on screen.
 * \param font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
     d7c:	df 92       	push	r13
     d7e:	ef 92       	push	r14
     d80:	ff 92       	push	r15
     d82:	0f 93       	push	r16
     d84:	1f 93       	push	r17
     d86:	cf 93       	push	r28
     d88:	df 93       	push	r29
     d8a:	d6 2e       	mov	r13, r22
     d8c:	d4 2f       	mov	r29, r20
     d8e:	79 01       	movw	r14, r18
     d90:	8c 01       	movw	r16, r24
     d92:	c6 2f       	mov	r28, r22
	Assert(font != NULL);

	/* Draw characters until trailing null byte */
	do {
		/* Handle '\n' as newline, draw normal characters. */
		if (*str == '\n') {
     d94:	f8 01       	movw	r30, r16
     d96:	81 91       	ld	r24, Z+
     d98:	8f 01       	movw	r16, r30
     d9a:	8a 30       	cpi	r24, 0x0A	; 10
     d9c:	31 f4       	brne	.+12     	; 0xdaa <gfx_mono_draw_string+0x2e>
			x = start_of_string_position_x;
			y += font->height + 1;
     d9e:	f7 01       	movw	r30, r14
     da0:	84 81       	ldd	r24, Z+4	; 0x04
     da2:	8f 5f       	subi	r24, 0xFF	; 255
     da4:	d8 0f       	add	r29, r24

	/* Draw characters until trailing null byte */
	do {
		/* Handle '\n' as newline, draw normal characters. */
		if (*str == '\n') {
			x = start_of_string_position_x;
     da6:	cd 2d       	mov	r28, r13
     da8:	09 c0       	rjmp	.+18     	; 0xdbc <gfx_mono_draw_string+0x40>
			y += font->height + 1;
		} else if (*str == '\r') {
     daa:	8d 30       	cpi	r24, 0x0D	; 13
     dac:	39 f0       	breq	.+14     	; 0xdbc <gfx_mono_draw_string+0x40>
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
     dae:	97 01       	movw	r18, r14
     db0:	4d 2f       	mov	r20, r29
     db2:	6c 2f       	mov	r22, r28
     db4:	84 df       	rcall	.-248    	; 0xcbe <gfx_mono_draw_char>
			x += font->width;
     db6:	f7 01       	movw	r30, r14
     db8:	83 81       	ldd	r24, Z+3	; 0x03
     dba:	c8 0f       	add	r28, r24
		}
	} while (*(++str));
     dbc:	f8 01       	movw	r30, r16
     dbe:	80 81       	ld	r24, Z
     dc0:	81 11       	cpse	r24, r1
     dc2:	e8 cf       	rjmp	.-48     	; 0xd94 <gfx_mono_draw_string+0x18>
}
     dc4:	df 91       	pop	r29
     dc6:	cf 91       	pop	r28
     dc8:	1f 91       	pop	r17
     dca:	0f 91       	pop	r16
     dcc:	ff 90       	pop	r15
     dce:	ef 90       	pop	r14
     dd0:	df 90       	pop	r13
     dd2:	08 95       	ret

00000dd4 <asm_break>:

/* Helper functions */

void asm_break(void)
{
	__asm__ __volatile__ ("break" ::: "memory");
     dd4:	98 95       	break
	nop();
     dd6:	00 00       	nop
     dd8:	08 95       	ret

00000dda <__vector_9>:
{	/* TIMER 2 COMP-B */
	s_bad_interrupt();
}

ISR(__vector_9, ISR_BLOCK)
{	/* TIMER 2 OVF - Overflow */
     dda:	1f 92       	push	r1
     ddc:	0f 92       	push	r0
     dde:	0f b6       	in	r0, 0x3f	; 63
     de0:	0f 92       	push	r0
     de2:	11 24       	eor	r1, r1
     de4:	2f 93       	push	r18
     de6:	3f 93       	push	r19
     de8:	4f 93       	push	r20
     dea:	5f 93       	push	r21
     dec:	6f 93       	push	r22
     dee:	7f 93       	push	r23
     df0:	8f 93       	push	r24
     df2:	9f 93       	push	r25
     df4:	af 93       	push	r26
     df6:	bf 93       	push	r27
     df8:	ef 93       	push	r30
     dfa:	ff 93       	push	r31
	if (g_status.isAnimationStopped) {
     dfc:	80 91 54 04 	lds	r24, 0x0454	; 0x800454 <g_status>
     e00:	81 ff       	sbrs	r24, 1
     e02:	6f c0       	rjmp	.+222    	; 0xee2 <__vector_9+0x108>
		static uint8_t state_old = 0;
		static uint8_t state_ctr = 0;
		static uint8_t second_old = 0;
		static uint8_t button_ctr = 0;
		uint8_t cur = PORTB & 0x3f;
     e04:	85 b1       	in	r24, 0x05	; 5
     e06:	8f 73       	andi	r24, 0x3F	; 63

		/* signaling the grade of deviation */
		g_audio_out_loudness = 0;
		if (g_showData.clkState_clk_state < 0xf) {
     e08:	90 91 3f 04 	lds	r25, 0x043F	; 0x80043f <g_showData+0x16>
     e0c:	9f 30       	cpi	r25, 0x0F	; 15
     e0e:	60 f4       	brcc	.+24     	; 0xe28 <__vector_9+0x4e>
			cur |= _BV(PORTB6);  // LED = red
     e10:	80 64       	ori	r24, 0x40	; 64
			if (state_old != 0x02) {
     e12:	90 91 4b 03 	lds	r25, 0x034B	; 0x80034b <state_old.2804>
     e16:	92 30       	cpi	r25, 0x02	; 2
     e18:	19 f0       	breq	.+6      	; 0xe20 <__vector_9+0x46>
				state_ctr = 122;  // 1 sec
     e1a:	9a e7       	ldi	r25, 0x7A	; 122
     e1c:	90 93 4a 03 	sts	0x034A, r25	; 0x80034a <state_ctr.2805>
			}
			state_old = 0x02;
     e20:	92 e0       	ldi	r25, 0x02	; 2
     e22:	90 93 4b 03 	sts	0x034B, r25	; 0x80034b <state_old.2804>
     e26:	24 c0       	rjmp	.+72     	; 0xe70 <__vector_9+0x96>

		} else if ((g_showData.clkState_clk_state == 0xf) && (-4 < g_showData.ppb_int) && (g_showData.ppb_int < 4)) {
     e28:	9f 30       	cpi	r25, 0x0F	; 15
     e2a:	c1 f4       	brne	.+48     	; 0xe5c <__vector_9+0x82>
     e2c:	20 91 31 04 	lds	r18, 0x0431	; 0x800431 <g_showData+0x8>
     e30:	30 91 32 04 	lds	r19, 0x0432	; 0x800432 <g_showData+0x9>
     e34:	2d 5f       	subi	r18, 0xFD	; 253
     e36:	3f 4f       	sbci	r19, 0xFF	; 255
     e38:	27 30       	cpi	r18, 0x07	; 7
     e3a:	31 05       	cpc	r19, r1
     e3c:	78 f4       	brcc	.+30     	; 0xe5c <__vector_9+0x82>
			cur |= _BV(PORTB7);  // LED = green
     e3e:	80 68       	ori	r24, 0x80	; 128
			state_old = 0x00;
     e40:	10 92 4b 03 	sts	0x034B, r1	; 0x80034b <state_old.2804>

			/* Acoustic phase tracker */
			if (g_showData.time_second != second_old) {
     e44:	90 91 44 04 	lds	r25, 0x0444	; 0x800444 <g_showData+0x1b>
     e48:	20 91 49 03 	lds	r18, 0x0349	; 0x800349 <second_old.2806>
     e4c:	92 17       	cp	r25, r18
     e4e:	81 f0       	breq	.+32     	; 0xe70 <__vector_9+0x96>
				second_old = g_showData.time_second;
     e50:	90 93 49 03 	sts	0x0349, r25	; 0x800349 <second_old.2806>
				state_ctr = 6;
     e54:	96 e0       	ldi	r25, 0x06	; 6
     e56:	90 93 4a 03 	sts	0x034A, r25	; 0x80034a <state_ctr.2805>
     e5a:	0a c0       	rjmp	.+20     	; 0xe70 <__vector_9+0x96>
			}

		} else {
			if (!state_old) {
     e5c:	90 91 4b 03 	lds	r25, 0x034B	; 0x80034b <state_old.2804>
     e60:	91 11       	cpse	r25, r1
     e62:	03 c0       	rjmp	.+6      	; 0xe6a <__vector_9+0x90>
				state_ctr = 30;  // 1/4 sec
     e64:	9e e1       	ldi	r25, 0x1E	; 30
     e66:	90 93 4a 03 	sts	0x034A, r25	; 0x80034a <state_ctr.2805>
			}
			state_old = 0x01;
     e6a:	91 e0       	ldi	r25, 0x01	; 1
     e6c:	90 93 4b 03 	sts	0x034B, r25	; 0x80034b <state_old.2804>
		}

		if (state_ctr) {
     e70:	90 91 4a 03 	lds	r25, 0x034A	; 0x80034a <state_ctr.2805>
     e74:	99 23       	and	r25, r25
     e76:	39 f0       	breq	.+14     	; 0xe86 <__vector_9+0xac>
			--state_ctr;
     e78:	91 50       	subi	r25, 0x01	; 1
     e7a:	90 93 4a 03 	sts	0x034A, r25	; 0x80034a <state_ctr.2805>
			g_audio_out_loudness = 9;  // max 9
     e7e:	99 e0       	ldi	r25, 0x09	; 9
     e80:	90 93 58 04 	sts	0x0458, r25	; 0x800458 <g_audio_out_loudness>
     e84:	02 c0       	rjmp	.+4      	; 0xe8a <__vector_9+0xb0>
		} else {
			g_audio_out_loudness = 0;
     e86:	10 92 58 04 	sts	0x0458, r1	; 0x800458 <g_audio_out_loudness>
		}

		PORTB = cur;
     e8a:	85 b9       	out	0x05, r24	; 5

		/* sampling I/Q and push buttons */
		if (button_ctr) {
     e8c:	80 91 48 03 	lds	r24, 0x0348	; 0x800348 <__data_end>
     e90:	88 23       	and	r24, r24
     e92:	21 f0       	breq	.+8      	; 0xe9c <__vector_9+0xc2>
			--button_ctr;
     e94:	81 50       	subi	r24, 0x01	; 1
     e96:	80 93 48 03 	sts	0x0348, r24	; 0x800348 <__data_end>
     e9a:	23 c0       	rjmp	.+70     	; 0xee2 <__vector_9+0x108>
		} else {
			button_ctr = 12;
     e9c:	8c e0       	ldi	r24, 0x0C	; 12
     e9e:	80 93 48 03 	sts	0x0348, r24	; 0x800348 <__data_end>
			uint8_t sw = (PINC & 0x06) >> 1;
     ea2:	86 b1       	in	r24, 0x06	; 6
     ea4:	86 70       	andi	r24, 0x06	; 6
     ea6:	90 e0       	ldi	r25, 0x00	; 0
     ea8:	95 95       	asr	r25
     eaa:	87 95       	ror	r24
			if (!(sw & 0x01)) {									// SW-I: decrement contrast voltage
     eac:	80 fd       	sbrc	r24, 0
     eae:	09 c0       	rjmp	.+18     	; 0xec2 <__vector_9+0xe8>
				if (g_lcd_contrast_pm) {
     eb0:	80 91 59 04 	lds	r24, 0x0459	; 0x800459 <g_lcd_contrast_pm>
     eb4:	88 23       	and	r24, r24
     eb6:	a9 f0       	breq	.+42     	; 0xee2 <__vector_9+0x108>
					--g_lcd_contrast_pm;
     eb8:	81 50       	subi	r24, 0x01	; 1
     eba:	80 93 59 04 	sts	0x0459, r24	; 0x800459 <g_lcd_contrast_pm>
					lcd_contrast_update();
     ebe:	11 d5       	rcall	.+2594   	; 0x18e2 <lcd_contrast_update>
				}
			} else if (!(sw & 0x02)) {							// SW-Q: increment contrast voltage
     ec0:	10 c0       	rjmp	.+32     	; 0xee2 <__vector_9+0x108>
     ec2:	81 fd       	sbrc	r24, 1
				if (g_lcd_contrast_pm < 0x3F) {
     ec4:	09 c0       	rjmp	.+18     	; 0xed8 <__vector_9+0xfe>
     ec6:	80 91 59 04 	lds	r24, 0x0459	; 0x800459 <g_lcd_contrast_pm>
     eca:	8f 33       	cpi	r24, 0x3F	; 63
					++g_lcd_contrast_pm;
     ecc:	50 f4       	brcc	.+20     	; 0xee2 <__vector_9+0x108>
     ece:	8f 5f       	subi	r24, 0xFF	; 255
					lcd_contrast_update();
     ed0:	80 93 59 04 	sts	0x0459, r24	; 0x800459 <g_lcd_contrast_pm>
     ed4:	06 d5       	rcall	.+2572   	; 0x18e2 <lcd_contrast_update>
				}
			} else if (!(PINB & _BV(PINB2))) {					// Pushbutton: store value in EEPROM
     ed6:	05 c0       	rjmp	.+10     	; 0xee2 <__vector_9+0x108>
     ed8:	1a 99       	sbic	0x03, 2	; 3
				eeprom_nvm_settings_write(C_EEPROM_NVM_SETTING_LCD_CONTRAST);
     eda:	03 c0       	rjmp	.+6      	; 0xee2 <__vector_9+0x108>
     edc:	81 e0       	ldi	r24, 0x01	; 1
     ede:	0e 94 52 17 	call	0x2ea4	; 0x2ea4 <eeprom_nvm_settings_write>
			}
		}
	}
}
     ee2:	ff 91       	pop	r31
     ee4:	ef 91       	pop	r30
     ee6:	bf 91       	pop	r27
     ee8:	af 91       	pop	r26
     eea:	9f 91       	pop	r25
     eec:	8f 91       	pop	r24
     eee:	7f 91       	pop	r23
     ef0:	6f 91       	pop	r22
     ef2:	5f 91       	pop	r21
     ef4:	4f 91       	pop	r20
     ef6:	3f 91       	pop	r19
     ef8:	2f 91       	pop	r18
     efa:	0f 90       	pop	r0
     efc:	0f be       	out	0x3f, r0	; 63
     efe:	0f 90       	pop	r0
     f00:	1f 90       	pop	r1
     f02:	18 95       	reti

00000f04 <__vector_13>:
{	/* TIMER 1 COMP-B */
	s_bad_interrupt();
}

ISR(__vector_13, ISR_BLOCK)
{	/* TIMER 1 OVF - Overflow */
     f04:	1f 92       	push	r1
     f06:	0f 92       	push	r0
     f08:	0f b6       	in	r0, 0x3f	; 63
     f0a:	0f 92       	push	r0
     f0c:	11 24       	eor	r1, r1
     f0e:	2f 93       	push	r18
     f10:	3f 93       	push	r19
     f12:	4f 93       	push	r20
     f14:	5f 93       	push	r21
     f16:	6f 93       	push	r22
     f18:	7f 93       	push	r23
     f1a:	8f 93       	push	r24
     f1c:	9f 93       	push	r25
     f1e:	af 93       	push	r26
     f20:	bf 93       	push	r27
	++g_timer_abs_msb;
     f22:	80 91 68 04 	lds	r24, 0x0468	; 0x800468 <g_timer_abs_msb>
     f26:	90 91 69 04 	lds	r25, 0x0469	; 0x800469 <g_timer_abs_msb+0x1>
     f2a:	a0 91 6a 04 	lds	r26, 0x046A	; 0x80046a <g_timer_abs_msb+0x2>
     f2e:	b0 91 6b 04 	lds	r27, 0x046B	; 0x80046b <g_timer_abs_msb+0x3>
     f32:	01 96       	adiw	r24, 0x01	; 1
     f34:	a1 1d       	adc	r26, r1
     f36:	b1 1d       	adc	r27, r1
     f38:	80 93 68 04 	sts	0x0468, r24	; 0x800468 <g_timer_abs_msb>
     f3c:	90 93 69 04 	sts	0x0469, r25	; 0x800469 <g_timer_abs_msb+0x1>
     f40:	a0 93 6a 04 	sts	0x046A, r26	; 0x80046a <g_timer_abs_msb+0x2>
     f44:	b0 93 6b 04 	sts	0x046B, r27	; 0x80046b <g_timer_abs_msb+0x3>

	if (g_status.isAnimationStopped && g_audio_out_loudness) {
     f48:	80 91 54 04 	lds	r24, 0x0454	; 0x800454 <g_status>
     f4c:	81 ff       	sbrs	r24, 1
     f4e:	56 c0       	rjmp	.+172    	; 0xffc <__vector_13+0xf8>
     f50:	40 91 58 04 	lds	r20, 0x0458	; 0x800458 <g_audio_out_loudness>
     f54:	44 23       	and	r20, r20
     f56:	09 f4       	brne	.+2      	; 0xf5a <__vector_13+0x56>
     f58:	51 c0       	rjmp	.+162    	; 0xffc <__vector_13+0xf8>
		int16_t l_audio_pwm_inc = 3691 + (g_showData.clkState_phaseDeg100 >> 2);  // (880 Hz / 15625 Hz) * 16384 Steps * 8
     f5a:	80 91 2d 04 	lds	r24, 0x042D	; 0x80042d <g_showData+0x4>
     f5e:	90 91 2e 04 	lds	r25, 0x042E	; 0x80042e <g_showData+0x5>
     f62:	95 95       	asr	r25
     f64:	87 95       	ror	r24
     f66:	95 95       	asr	r25
     f68:	87 95       	ror	r24
     f6a:	9c 01       	movw	r18, r24
     f6c:	25 59       	subi	r18, 0x95	; 149
     f6e:	31 4f       	sbci	r19, 0xF1	; 241

		/* Generate triangle signal */
		if (g_audio_pwm_ramp_dwn) {
     f70:	50 91 55 04 	lds	r21, 0x0455	; 0x800455 <g_audio_pwm_ramp_dwn>
     f74:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <g_audio_pwm_accu>
     f78:	90 91 57 04 	lds	r25, 0x0457	; 0x800457 <g_audio_pwm_accu+0x1>
     f7c:	55 23       	and	r21, r21
     f7e:	b1 f0       	breq	.+44     	; 0xfac <__vector_13+0xa8>
			g_audio_pwm_accu -= l_audio_pwm_inc;
     f80:	82 1b       	sub	r24, r18
     f82:	93 0b       	sbc	r25, r19
     f84:	90 93 57 04 	sts	0x0457, r25	; 0x800457 <g_audio_pwm_accu+0x1>
     f88:	80 93 56 04 	sts	0x0456, r24	; 0x800456 <g_audio_pwm_accu>
			if (g_audio_pwm_accu <= -16383) {
     f8c:	82 30       	cpi	r24, 0x02	; 2
     f8e:	20 ec       	ldi	r18, 0xC0	; 192
     f90:	92 07       	cpc	r25, r18
     f92:	14 f5       	brge	.+68     	; 0xfd8 <__vector_13+0xd4>
				g_audio_pwm_ramp_dwn = false;
     f94:	10 92 55 04 	sts	0x0455, r1	; 0x800455 <g_audio_pwm_ramp_dwn>
				int16_t residue = -g_audio_pwm_accu - 16383;
				g_audio_pwm_accu = -16383 + residue;
     f98:	22 e0       	ldi	r18, 0x02	; 2
     f9a:	30 e8       	ldi	r19, 0x80	; 128
     f9c:	b9 01       	movw	r22, r18
     f9e:	68 1b       	sub	r22, r24
     fa0:	79 0b       	sbc	r23, r25
     fa2:	70 93 57 04 	sts	0x0457, r23	; 0x800457 <g_audio_pwm_accu+0x1>
     fa6:	60 93 56 04 	sts	0x0456, r22	; 0x800456 <g_audio_pwm_accu>
     faa:	16 c0       	rjmp	.+44     	; 0xfd8 <__vector_13+0xd4>
			}
		} else {
			g_audio_pwm_accu += l_audio_pwm_inc;
     fac:	82 0f       	add	r24, r18
     fae:	93 1f       	adc	r25, r19
     fb0:	90 93 57 04 	sts	0x0457, r25	; 0x800457 <g_audio_pwm_accu+0x1>
     fb4:	80 93 56 04 	sts	0x0456, r24	; 0x800456 <g_audio_pwm_accu>
			if (g_audio_pwm_accu >= +16383) {
     fb8:	8f 3f       	cpi	r24, 0xFF	; 255
     fba:	7f e3       	ldi	r23, 0x3F	; 63
     fbc:	97 07       	cpc	r25, r23
     fbe:	64 f0       	brlt	.+24     	; 0xfd8 <__vector_13+0xd4>
				g_audio_pwm_ramp_dwn = true;
     fc0:	21 e0       	ldi	r18, 0x01	; 1
     fc2:	20 93 55 04 	sts	0x0455, r18	; 0x800455 <g_audio_pwm_ramp_dwn>
				int16_t residue = g_audio_pwm_accu - 16383;
				g_audio_pwm_accu = 16383 - residue;
     fc6:	2e ef       	ldi	r18, 0xFE	; 254
     fc8:	3f e7       	ldi	r19, 0x7F	; 127
     fca:	b9 01       	movw	r22, r18
     fcc:	68 1b       	sub	r22, r24
     fce:	79 0b       	sbc	r23, r25
     fd0:	70 93 57 04 	sts	0x0457, r23	; 0x800457 <g_audio_pwm_accu+0x1>
     fd4:	60 93 56 04 	sts	0x0456, r22	; 0x800456 <g_audio_pwm_accu>
			}
		}

		int16_t audio_out = 256 + (g_audio_pwm_accu >> (15 - g_audio_out_loudness));  // 6 + 9
     fd8:	2f e0       	ldi	r18, 0x0F	; 15
     fda:	30 e0       	ldi	r19, 0x00	; 0
     fdc:	24 1b       	sub	r18, r20
     fde:	31 09       	sbc	r19, r1
     fe0:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <g_audio_pwm_accu>
     fe4:	90 91 57 04 	lds	r25, 0x0457	; 0x800457 <g_audio_pwm_accu+0x1>
     fe8:	02 c0       	rjmp	.+4      	; 0xfee <__vector_13+0xea>
     fea:	95 95       	asr	r25
     fec:	87 95       	ror	r24
     fee:	2a 95       	dec	r18
     ff0:	e2 f7       	brpl	.-8      	; 0xfea <__vector_13+0xe6>
     ff2:	93 95       	inc	r25
		OCR1AH = (uint8_t) (audio_out >> 8);					// 9 bit
     ff4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
		OCR1AL = (uint8_t) (audio_out & 0xff);
     ff8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	}
}
     ffc:	bf 91       	pop	r27
     ffe:	af 91       	pop	r26
    1000:	9f 91       	pop	r25
    1002:	8f 91       	pop	r24
    1004:	7f 91       	pop	r23
    1006:	6f 91       	pop	r22
    1008:	5f 91       	pop	r21
    100a:	4f 91       	pop	r20
    100c:	3f 91       	pop	r19
    100e:	2f 91       	pop	r18
    1010:	0f 90       	pop	r0
    1012:	0f be       	out	0x3f, r0	; 63
    1014:	0f 90       	pop	r0
    1016:	1f 90       	pop	r1
    1018:	18 95       	reti

0000101a <__vector_21__bottom>:
	__vector_21__bottom(reason, adc_val, adc_light_last, adc_temp_last);
}

/* do not static this function to avoid code inlining that would inherit many push operations in the critical section */
void __vector_21__bottom(uint8_t reason, uint16_t adc_val, uint16_t adc_light_last, uint16_t adc_temp_last)
{
    101a:	8f 92       	push	r8
    101c:	9f 92       	push	r9
    101e:	af 92       	push	r10
    1020:	bf 92       	push	r11
    1022:	cf 92       	push	r12
    1024:	df 92       	push	r13
    1026:	ef 92       	push	r14
    1028:	ff 92       	push	r15
    102a:	cf 93       	push	r28
    102c:	df 93       	push	r29
    102e:	eb 01       	movw	r28, r22
	/* Low pass filtering and enhancing the data depth */
	if (reason == ADC_STATE_VLD_LDR) {
    1030:	81 30       	cpi	r24, 0x01	; 1
    1032:	e9 f5       	brne	.+122    	; 0x10ae <__vector_21__bottom+0x94>
		float calc = g_adc_light ?  0.998f * g_adc_light + 0.002f * adc_val : adc_val;			// load with initial value if none is set before
    1034:	c0 90 63 04 	lds	r12, 0x0463	; 0x800463 <g_adc_light>
    1038:	d0 90 64 04 	lds	r13, 0x0464	; 0x800464 <g_adc_light+0x1>
    103c:	e0 90 65 04 	lds	r14, 0x0465	; 0x800465 <g_adc_light+0x2>
    1040:	f0 90 66 04 	lds	r15, 0x0466	; 0x800466 <g_adc_light+0x3>
    1044:	20 e0       	ldi	r18, 0x00	; 0
    1046:	30 e0       	ldi	r19, 0x00	; 0
    1048:	a9 01       	movw	r20, r18
    104a:	c7 01       	movw	r24, r14
    104c:	b6 01       	movw	r22, r12
    104e:	0e 94 df 19 	call	0x33be	; 0x33be <__cmpsf2>
    1052:	ae 01       	movw	r20, r28
    1054:	60 e0       	ldi	r22, 0x00	; 0
    1056:	70 e0       	ldi	r23, 0x00	; 0
    1058:	88 23       	and	r24, r24
    105a:	d9 f0       	breq	.+54     	; 0x1092 <__vector_21__bottom+0x78>
    105c:	cb 01       	movw	r24, r22
    105e:	ba 01       	movw	r22, r20
    1060:	0e 94 7c 1a 	call	0x34f8	; 0x34f8 <__floatunsisf>
    1064:	2f e6       	ldi	r18, 0x6F	; 111
    1066:	32 e1       	ldi	r19, 0x12	; 18
    1068:	43 e0       	ldi	r20, 0x03	; 3
    106a:	5b e3       	ldi	r21, 0x3B	; 59
    106c:	0e 94 85 1b 	call	0x370a	; 0x370a <__mulsf3>
    1070:	4b 01       	movw	r8, r22
    1072:	5c 01       	movw	r10, r24
    1074:	2e ee       	ldi	r18, 0xEE	; 238
    1076:	3c e7       	ldi	r19, 0x7C	; 124
    1078:	4f e7       	ldi	r20, 0x7F	; 127
    107a:	5f e3       	ldi	r21, 0x3F	; 63
    107c:	c7 01       	movw	r24, r14
    107e:	b6 01       	movw	r22, r12
    1080:	0e 94 85 1b 	call	0x370a	; 0x370a <__mulsf3>
    1084:	9b 01       	movw	r18, r22
    1086:	ac 01       	movw	r20, r24
    1088:	c5 01       	movw	r24, r10
    108a:	b4 01       	movw	r22, r8
    108c:	0e 94 7b 19 	call	0x32f6	; 0x32f6 <__addsf3>
    1090:	04 c0       	rjmp	.+8      	; 0x109a <__vector_21__bottom+0x80>
    1092:	cb 01       	movw	r24, r22
    1094:	ba 01       	movw	r22, r20
    1096:	0e 94 7c 1a 	call	0x34f8	; 0x34f8 <__floatunsisf>

		cpu_irq_disable();
    109a:	f8 94       	cli
		g_adc_light = calc;
    109c:	60 93 63 04 	sts	0x0463, r22	; 0x800463 <g_adc_light>
    10a0:	70 93 64 04 	sts	0x0464, r23	; 0x800464 <g_adc_light+0x1>
    10a4:	80 93 65 04 	sts	0x0465, r24	; 0x800465 <g_adc_light+0x2>
    10a8:	90 93 66 04 	sts	0x0466, r25	; 0x800466 <g_adc_light+0x3>
    10ac:	3e c0       	rjmp	.+124    	; 0x112a <__vector_21__bottom+0x110>

	} else if (reason == ADC_STATE_VLD_TEMP) {
    10ae:	83 30       	cpi	r24, 0x03	; 3
    10b0:	e1 f5       	brne	.+120    	; 0x112a <__vector_21__bottom+0x110>
		float calc = g_adc_temp ?  0.9995f * g_adc_temp + 0.0005f * adc_val : adc_val;		// load with initial value if none is set before
    10b2:	c0 90 5f 04 	lds	r12, 0x045F	; 0x80045f <g_adc_temp>
    10b6:	d0 90 60 04 	lds	r13, 0x0460	; 0x800460 <g_adc_temp+0x1>
    10ba:	e0 90 61 04 	lds	r14, 0x0461	; 0x800461 <g_adc_temp+0x2>
    10be:	f0 90 62 04 	lds	r15, 0x0462	; 0x800462 <g_adc_temp+0x3>
    10c2:	20 e0       	ldi	r18, 0x00	; 0
    10c4:	30 e0       	ldi	r19, 0x00	; 0
    10c6:	a9 01       	movw	r20, r18
    10c8:	c7 01       	movw	r24, r14
    10ca:	b6 01       	movw	r22, r12
    10cc:	0e 94 df 19 	call	0x33be	; 0x33be <__cmpsf2>
    10d0:	ae 01       	movw	r20, r28
    10d2:	60 e0       	ldi	r22, 0x00	; 0
    10d4:	70 e0       	ldi	r23, 0x00	; 0
    10d6:	88 23       	and	r24, r24
    10d8:	d9 f0       	breq	.+54     	; 0x1110 <__vector_21__bottom+0xf6>
    10da:	cb 01       	movw	r24, r22
    10dc:	ba 01       	movw	r22, r20
    10de:	0e 94 7c 1a 	call	0x34f8	; 0x34f8 <__floatunsisf>
    10e2:	2f e6       	ldi	r18, 0x6F	; 111
    10e4:	32 e1       	ldi	r19, 0x12	; 18
    10e6:	43 e0       	ldi	r20, 0x03	; 3
    10e8:	5a e3       	ldi	r21, 0x3A	; 58
    10ea:	0e 94 85 1b 	call	0x370a	; 0x370a <__mulsf3>
    10ee:	4b 01       	movw	r8, r22
    10f0:	5c 01       	movw	r10, r24
    10f2:	2b e3       	ldi	r18, 0x3B	; 59
    10f4:	3f ed       	ldi	r19, 0xDF	; 223
    10f6:	4f e7       	ldi	r20, 0x7F	; 127
    10f8:	5f e3       	ldi	r21, 0x3F	; 63
    10fa:	c7 01       	movw	r24, r14
    10fc:	b6 01       	movw	r22, r12
    10fe:	0e 94 85 1b 	call	0x370a	; 0x370a <__mulsf3>
    1102:	9b 01       	movw	r18, r22
    1104:	ac 01       	movw	r20, r24
    1106:	c5 01       	movw	r24, r10
    1108:	b4 01       	movw	r22, r8
    110a:	0e 94 7b 19 	call	0x32f6	; 0x32f6 <__addsf3>
    110e:	04 c0       	rjmp	.+8      	; 0x1118 <__vector_21__bottom+0xfe>
    1110:	cb 01       	movw	r24, r22
    1112:	ba 01       	movw	r22, r20
    1114:	0e 94 7c 1a 	call	0x34f8	; 0x34f8 <__floatunsisf>

		cpu_irq_disable();
    1118:	f8 94       	cli
		g_adc_temp = calc;
    111a:	60 93 5f 04 	sts	0x045F, r22	; 0x80045f <g_adc_temp>
    111e:	70 93 60 04 	sts	0x0460, r23	; 0x800460 <g_adc_temp+0x1>
    1122:	80 93 61 04 	sts	0x0461, r24	; 0x800461 <g_adc_temp+0x2>
    1126:	90 93 62 04 	sts	0x0462, r25	; 0x800462 <g_adc_temp+0x3>
	}
}
    112a:	df 91       	pop	r29
    112c:	cf 91       	pop	r28
    112e:	ff 90       	pop	r15
    1130:	ef 90       	pop	r14
    1132:	df 90       	pop	r13
    1134:	cf 90       	pop	r12
    1136:	bf 90       	pop	r11
    1138:	af 90       	pop	r10
    113a:	9f 90       	pop	r9
    113c:	8f 90       	pop	r8
    113e:	08 95       	ret

00001140 <__vector_21>:
{	/* USART, TX - Complete */
	s_bad_interrupt();
}

ISR(__vector_21, ISR_BLOCK)
{	/* ADC */
    1140:	1f 92       	push	r1
    1142:	0f 92       	push	r0
    1144:	0f b6       	in	r0, 0x3f	; 63
    1146:	0f 92       	push	r0
    1148:	11 24       	eor	r1, r1
    114a:	cf 92       	push	r12
    114c:	df 92       	push	r13
    114e:	ef 92       	push	r14
    1150:	ff 92       	push	r15
    1152:	1f 93       	push	r17
    1154:	2f 93       	push	r18
    1156:	3f 93       	push	r19
    1158:	4f 93       	push	r20
    115a:	5f 93       	push	r21
    115c:	6f 93       	push	r22
    115e:	7f 93       	push	r23
    1160:	8f 93       	push	r24
    1162:	9f 93       	push	r25
    1164:	af 93       	push	r26
    1166:	bf 93       	push	r27
    1168:	cf 93       	push	r28
    116a:	df 93       	push	r29
    116c:	ef 93       	push	r30
    116e:	ff 93       	push	r31
	uint16_t adc_val;
	uint8_t  reason = g_adc_state;
    1170:	10 91 67 04 	lds	r17, 0x0467	; 0x800467 <g_adc_state>

	/* CLI part */
	adc_val  = ADCL;
    1174:	c0 91 78 00 	lds	r28, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
	adc_val |= ADCH << 8;
    1178:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
    117c:	d0 e0       	ldi	r29, 0x00	; 0
    117e:	d8 2b       	or	r29, r24

	//TIFR1 |= _BV(TOV1);							// Reset Timer1 overflow status bit (no ISR for TOV1 activated!)

	switch (g_adc_state) {
    1180:	11 30       	cpi	r17, 0x01	; 1
    1182:	59 f0       	breq	.+22     	; 0x119a <__vector_21+0x5a>
    1184:	30 f0       	brcs	.+12     	; 0x1192 <__vector_21+0x52>
    1186:	12 30       	cpi	r17, 0x02	; 2
    1188:	79 f4       	brne	.+30     	; 0x11a8 <__vector_21+0x68>
			g_adc_state = ADC_STATE_PRE_TEMP;
		break;

		case ADC_STATE_PRE_TEMP:
			// drop one ADC value after switching MUX
			g_adc_state = ADC_STATE_VLD_TEMP;
    118a:	83 e0       	ldi	r24, 0x03	; 3
    118c:	80 93 67 04 	sts	0x0467, r24	; 0x800467 <g_adc_state>
		break;
    1190:	10 c0       	rjmp	.+32     	; 0x11b2 <__vector_21+0x72>
	//TIFR1 |= _BV(TOV1);							// Reset Timer1 overflow status bit (no ISR for TOV1 activated!)

	switch (g_adc_state) {
		case ADC_STATE_PRE_LDR:
			// drop one ADC value after switching MUX
			g_adc_state = ADC_STATE_VLD_LDR;
    1192:	81 e0       	ldi	r24, 0x01	; 1
    1194:	80 93 67 04 	sts	0x0467, r24	; 0x800467 <g_adc_state>
		break;
    1198:	0c c0       	rjmp	.+24     	; 0x11b2 <__vector_21+0x72>
 *
 * \param regval   ADC input mux selection and voltage reference
 */
static inline void adc_set_admux(uint8_t regval)
{
	ADMUX = regval;
    119a:	88 ec       	ldi	r24, 0xC8	; 200
    119c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>

		case ADC_STATE_VLD_LDR:
			adc_set_admux(ADC_MUX_TEMPSENSE | ADC_VREF_1V1 | ADC_ADJUSTMENT_RIGHT);
			g_adc_state = ADC_STATE_PRE_TEMP;
    11a0:	82 e0       	ldi	r24, 0x02	; 2
    11a2:	80 93 67 04 	sts	0x0467, r24	; 0x800467 <g_adc_state>
		break;
    11a6:	05 c0       	rjmp	.+10     	; 0x11b2 <__vector_21+0x72>
    11a8:	80 ec       	ldi	r24, 0xC0	; 192
    11aa:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>

		case ADC_STATE_VLD_TEMP:
			// fall-through.
		default:
			adc_set_admux(ADC_MUX_ADC0 | ADC_VREF_1V1 | ADC_ADJUSTMENT_RIGHT);
			g_adc_state = ADC_STATE_PRE_LDR;
    11ae:	10 92 67 04 	sts	0x0467, r1	; 0x800467 <g_adc_state>
	}

	uint16_t adc_light_last = g_adc_light;
    11b2:	60 91 63 04 	lds	r22, 0x0463	; 0x800463 <g_adc_light>
    11b6:	70 91 64 04 	lds	r23, 0x0464	; 0x800464 <g_adc_light+0x1>
    11ba:	80 91 65 04 	lds	r24, 0x0465	; 0x800465 <g_adc_light+0x2>
    11be:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <g_adc_light+0x3>
    11c2:	0e 94 50 1a 	call	0x34a0	; 0x34a0 <__fixunssfsi>
    11c6:	6b 01       	movw	r12, r22
    11c8:	7c 01       	movw	r14, r24
	uint16_t adc_temp_last  = g_adc_temp;
    11ca:	60 91 5f 04 	lds	r22, 0x045F	; 0x80045f <g_adc_temp>
    11ce:	70 91 60 04 	lds	r23, 0x0460	; 0x800460 <g_adc_temp+0x1>
    11d2:	80 91 61 04 	lds	r24, 0x0461	; 0x800461 <g_adc_temp+0x2>
    11d6:	90 91 62 04 	lds	r25, 0x0462	; 0x800462 <g_adc_temp+0x3>
    11da:	0e 94 50 1a 	call	0x34a0	; 0x34a0 <__fixunssfsi>

	/* SEI part */
	cpu_irq_enable();
    11de:	78 94       	sei

	__vector_21__bottom(reason, adc_val, adc_light_last, adc_temp_last);
    11e0:	9b 01       	movw	r18, r22
    11e2:	a6 01       	movw	r20, r12
    11e4:	be 01       	movw	r22, r28
    11e6:	81 2f       	mov	r24, r17
    11e8:	18 df       	rcall	.-464    	; 0x101a <__vector_21__bottom>
}
    11ea:	ff 91       	pop	r31
    11ec:	ef 91       	pop	r30
    11ee:	df 91       	pop	r29
    11f0:	cf 91       	pop	r28
    11f2:	bf 91       	pop	r27
    11f4:	af 91       	pop	r26
    11f6:	9f 91       	pop	r25
    11f8:	8f 91       	pop	r24
    11fa:	7f 91       	pop	r23
    11fc:	6f 91       	pop	r22
    11fe:	5f 91       	pop	r21
    1200:	4f 91       	pop	r20
    1202:	3f 91       	pop	r19
    1204:	2f 91       	pop	r18
    1206:	1f 91       	pop	r17
    1208:	ff 90       	pop	r15
    120a:	ef 90       	pop	r14
    120c:	df 90       	pop	r13
    120e:	cf 90       	pop	r12
    1210:	0f 90       	pop	r0
    1212:	0f be       	out	0x3f, r0	; 63
    1214:	0f 90       	pop	r0
    1216:	1f 90       	pop	r1
    1218:	18 95       	reti

0000121a <__vector_24>:
{	/* ANALOG COMP */
	s_bad_interrupt();
}

ISR(__vector_24, ISR_BLOCK)
{	/* TWI */
    121a:	1f 92       	push	r1
    121c:	0f 92       	push	r0
    121e:	0f b6       	in	r0, 0x3f	; 63
    1220:	0f 92       	push	r0
    1222:	11 24       	eor	r1, r1
    1224:	2f 93       	push	r18
    1226:	3f 93       	push	r19
    1228:	4f 93       	push	r20
    122a:	5f 93       	push	r21
    122c:	6f 93       	push	r22
    122e:	7f 93       	push	r23
    1230:	8f 93       	push	r24
    1232:	9f 93       	push	r25
    1234:	af 93       	push	r26
    1236:	bf 93       	push	r27
    1238:	cf 93       	push	r28
    123a:	df 93       	push	r29
    123c:	ef 93       	push	r30
    123e:	ff 93       	push	r31
	uint8_t tws = TWSR & (0b11111 << TWS3);
    1240:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	uint8_t twd = TWDR;
    1244:	60 91 bb 00 	lds	r22, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	uint8_t twcr_cur = TWCR;
    1248:	cc eb       	ldi	r28, 0xBC	; 188
    124a:	d0 e0       	ldi	r29, 0x00	; 0
    124c:	48 81       	ld	r20, Y

	uint8_t twcr_new = __vector_24__bottom(tws, twd, twcr_cur);
    124e:	88 7f       	andi	r24, 0xF8	; 248
    1250:	0e 94 76 15 	call	0x2aec	; 0x2aec <__vector_24__bottom>
	TWCR = twcr_new | _BV(TWINT) | _BV(TWEN) | _BV(TWIE);
    1254:	85 68       	ori	r24, 0x85	; 133
    1256:	88 83       	st	Y, r24
}
    1258:	ff 91       	pop	r31
    125a:	ef 91       	pop	r30
    125c:	df 91       	pop	r29
    125e:	cf 91       	pop	r28
    1260:	bf 91       	pop	r27
    1262:	af 91       	pop	r26
    1264:	9f 91       	pop	r25
    1266:	8f 91       	pop	r24
    1268:	7f 91       	pop	r23
    126a:	6f 91       	pop	r22
    126c:	5f 91       	pop	r21
    126e:	4f 91       	pop	r20
    1270:	3f 91       	pop	r19
    1272:	2f 91       	pop	r18
    1274:	0f 90       	pop	r0
    1276:	0f be       	out	0x3f, r0	; 63
    1278:	0f 90       	pop	r0
    127a:	1f 90       	pop	r1
    127c:	18 95       	reti

0000127e <__vector_25>:

ISR(__vector_25, ISR_BLOCK)
{	/* SPM READY - Store Program Memory Ready */
    127e:	1f 92       	push	r1
    1280:	0f 92       	push	r0
    1282:	0f b6       	in	r0, 0x3f	; 63
    1284:	0f 92       	push	r0
    1286:	11 24       	eor	r1, r1
    1288:	2f 93       	push	r18
    128a:	3f 93       	push	r19
    128c:	4f 93       	push	r20
    128e:	5f 93       	push	r21
    1290:	6f 93       	push	r22
    1292:	7f 93       	push	r23
    1294:	8f 93       	push	r24
    1296:	9f 93       	push	r25
    1298:	af 93       	push	r26
    129a:	bf 93       	push	r27
    129c:	ef 93       	push	r30

/* ISR routines */

static void s_bad_interrupt(void)
{
	asm_break();
    129e:	ff 93       	push	r31
}

ISR(__vector_25, ISR_BLOCK)
{	/* SPM READY - Store Program Memory Ready */
	s_bad_interrupt();
}
    12a0:	99 dd       	rcall	.-1230   	; 0xdd4 <asm_break>
    12a2:	ff 91       	pop	r31
    12a4:	ef 91       	pop	r30
    12a6:	bf 91       	pop	r27
    12a8:	af 91       	pop	r26
    12aa:	9f 91       	pop	r25
    12ac:	8f 91       	pop	r24
    12ae:	7f 91       	pop	r23
    12b0:	6f 91       	pop	r22
    12b2:	5f 91       	pop	r21
    12b4:	4f 91       	pop	r20
    12b6:	3f 91       	pop	r19
    12b8:	2f 91       	pop	r18
    12ba:	0f 90       	pop	r0
    12bc:	0f be       	out	0x3f, r0	; 63
    12be:	0f 90       	pop	r0
    12c0:	1f 90       	pop	r1
    12c2:	18 95       	reti

000012c4 <__vector_23>:
    12c4:	1f 92       	push	r1
    12c6:	0f 92       	push	r0
    12c8:	0f b6       	in	r0, 0x3f	; 63
    12ca:	0f 92       	push	r0
    12cc:	11 24       	eor	r1, r1
    12ce:	2f 93       	push	r18
    12d0:	3f 93       	push	r19
    12d2:	4f 93       	push	r20
    12d4:	5f 93       	push	r21
    12d6:	6f 93       	push	r22
    12d8:	7f 93       	push	r23
    12da:	8f 93       	push	r24
    12dc:	9f 93       	push	r25
    12de:	af 93       	push	r26
    12e0:	bf 93       	push	r27
    12e2:	ef 93       	push	r30
    12e4:	ff 93       	push	r31
    12e6:	cb df       	rcall	.-106    	; 0x127e <__vector_25>
    12e8:	ff 91       	pop	r31
    12ea:	ef 91       	pop	r30
    12ec:	bf 91       	pop	r27
    12ee:	af 91       	pop	r26
    12f0:	9f 91       	pop	r25
    12f2:	8f 91       	pop	r24
    12f4:	7f 91       	pop	r23
    12f6:	6f 91       	pop	r22
    12f8:	5f 91       	pop	r21
    12fa:	4f 91       	pop	r20
    12fc:	3f 91       	pop	r19
    12fe:	2f 91       	pop	r18
    1300:	0f 90       	pop	r0
    1302:	0f be       	out	0x3f, r0	; 63
    1304:	0f 90       	pop	r0
    1306:	1f 90       	pop	r1
    1308:	18 95       	reti

0000130a <__vector_22>:
    130a:	1f 92       	push	r1
    130c:	0f 92       	push	r0
    130e:	0f b6       	in	r0, 0x3f	; 63
    1310:	0f 92       	push	r0
    1312:	11 24       	eor	r1, r1
    1314:	2f 93       	push	r18
    1316:	3f 93       	push	r19
    1318:	4f 93       	push	r20
    131a:	5f 93       	push	r21
    131c:	6f 93       	push	r22
    131e:	7f 93       	push	r23
    1320:	8f 93       	push	r24
    1322:	9f 93       	push	r25
    1324:	af 93       	push	r26
    1326:	bf 93       	push	r27
    1328:	ef 93       	push	r30
    132a:	ff 93       	push	r31
    132c:	a8 df       	rcall	.-176    	; 0x127e <__vector_25>
    132e:	ff 91       	pop	r31
    1330:	ef 91       	pop	r30
    1332:	bf 91       	pop	r27
    1334:	af 91       	pop	r26
    1336:	9f 91       	pop	r25
    1338:	8f 91       	pop	r24
    133a:	7f 91       	pop	r23
    133c:	6f 91       	pop	r22
    133e:	5f 91       	pop	r21
    1340:	4f 91       	pop	r20
    1342:	3f 91       	pop	r19
    1344:	2f 91       	pop	r18
    1346:	0f 90       	pop	r0
    1348:	0f be       	out	0x3f, r0	; 63
    134a:	0f 90       	pop	r0
    134c:	1f 90       	pop	r1
    134e:	18 95       	reti

00001350 <__vector_20>:
    1350:	1f 92       	push	r1
    1352:	0f 92       	push	r0
    1354:	0f b6       	in	r0, 0x3f	; 63
    1356:	0f 92       	push	r0
    1358:	11 24       	eor	r1, r1
    135a:	2f 93       	push	r18
    135c:	3f 93       	push	r19
    135e:	4f 93       	push	r20
    1360:	5f 93       	push	r21
    1362:	6f 93       	push	r22
    1364:	7f 93       	push	r23
    1366:	8f 93       	push	r24
    1368:	9f 93       	push	r25
    136a:	af 93       	push	r26
    136c:	bf 93       	push	r27
    136e:	ef 93       	push	r30
    1370:	ff 93       	push	r31
    1372:	85 df       	rcall	.-246    	; 0x127e <__vector_25>
    1374:	ff 91       	pop	r31
    1376:	ef 91       	pop	r30
    1378:	bf 91       	pop	r27
    137a:	af 91       	pop	r26
    137c:	9f 91       	pop	r25
    137e:	8f 91       	pop	r24
    1380:	7f 91       	pop	r23
    1382:	6f 91       	pop	r22
    1384:	5f 91       	pop	r21
    1386:	4f 91       	pop	r20
    1388:	3f 91       	pop	r19
    138a:	2f 91       	pop	r18
    138c:	0f 90       	pop	r0
    138e:	0f be       	out	0x3f, r0	; 63
    1390:	0f 90       	pop	r0
    1392:	1f 90       	pop	r1
    1394:	18 95       	reti

00001396 <__vector_19>:
    1396:	1f 92       	push	r1
    1398:	0f 92       	push	r0
    139a:	0f b6       	in	r0, 0x3f	; 63
    139c:	0f 92       	push	r0
    139e:	11 24       	eor	r1, r1
    13a0:	2f 93       	push	r18
    13a2:	3f 93       	push	r19
    13a4:	4f 93       	push	r20
    13a6:	5f 93       	push	r21
    13a8:	6f 93       	push	r22
    13aa:	7f 93       	push	r23
    13ac:	8f 93       	push	r24
    13ae:	9f 93       	push	r25
    13b0:	af 93       	push	r26
    13b2:	bf 93       	push	r27
    13b4:	ef 93       	push	r30
    13b6:	ff 93       	push	r31
    13b8:	62 df       	rcall	.-316    	; 0x127e <__vector_25>
    13ba:	ff 91       	pop	r31
    13bc:	ef 91       	pop	r30
    13be:	bf 91       	pop	r27
    13c0:	af 91       	pop	r26
    13c2:	9f 91       	pop	r25
    13c4:	8f 91       	pop	r24
    13c6:	7f 91       	pop	r23
    13c8:	6f 91       	pop	r22
    13ca:	5f 91       	pop	r21
    13cc:	4f 91       	pop	r20
    13ce:	3f 91       	pop	r19
    13d0:	2f 91       	pop	r18
    13d2:	0f 90       	pop	r0
    13d4:	0f be       	out	0x3f, r0	; 63
    13d6:	0f 90       	pop	r0
    13d8:	1f 90       	pop	r1
    13da:	18 95       	reti

000013dc <__vector_18>:
    13dc:	1f 92       	push	r1
    13de:	0f 92       	push	r0
    13e0:	0f b6       	in	r0, 0x3f	; 63
    13e2:	0f 92       	push	r0
    13e4:	11 24       	eor	r1, r1
    13e6:	2f 93       	push	r18
    13e8:	3f 93       	push	r19
    13ea:	4f 93       	push	r20
    13ec:	5f 93       	push	r21
    13ee:	6f 93       	push	r22
    13f0:	7f 93       	push	r23
    13f2:	8f 93       	push	r24
    13f4:	9f 93       	push	r25
    13f6:	af 93       	push	r26
    13f8:	bf 93       	push	r27
    13fa:	ef 93       	push	r30
    13fc:	ff 93       	push	r31
    13fe:	3f df       	rcall	.-386    	; 0x127e <__vector_25>
    1400:	ff 91       	pop	r31
    1402:	ef 91       	pop	r30
    1404:	bf 91       	pop	r27
    1406:	af 91       	pop	r26
    1408:	9f 91       	pop	r25
    140a:	8f 91       	pop	r24
    140c:	7f 91       	pop	r23
    140e:	6f 91       	pop	r22
    1410:	5f 91       	pop	r21
    1412:	4f 91       	pop	r20
    1414:	3f 91       	pop	r19
    1416:	2f 91       	pop	r18
    1418:	0f 90       	pop	r0
    141a:	0f be       	out	0x3f, r0	; 63
    141c:	0f 90       	pop	r0
    141e:	1f 90       	pop	r1
    1420:	18 95       	reti

00001422 <__vector_17>:
    1422:	1f 92       	push	r1
    1424:	0f 92       	push	r0
    1426:	0f b6       	in	r0, 0x3f	; 63
    1428:	0f 92       	push	r0
    142a:	11 24       	eor	r1, r1
    142c:	2f 93       	push	r18
    142e:	3f 93       	push	r19
    1430:	4f 93       	push	r20
    1432:	5f 93       	push	r21
    1434:	6f 93       	push	r22
    1436:	7f 93       	push	r23
    1438:	8f 93       	push	r24
    143a:	9f 93       	push	r25
    143c:	af 93       	push	r26
    143e:	bf 93       	push	r27
    1440:	ef 93       	push	r30
    1442:	ff 93       	push	r31
    1444:	1c df       	rcall	.-456    	; 0x127e <__vector_25>
    1446:	ff 91       	pop	r31
    1448:	ef 91       	pop	r30
    144a:	bf 91       	pop	r27
    144c:	af 91       	pop	r26
    144e:	9f 91       	pop	r25
    1450:	8f 91       	pop	r24
    1452:	7f 91       	pop	r23
    1454:	6f 91       	pop	r22
    1456:	5f 91       	pop	r21
    1458:	4f 91       	pop	r20
    145a:	3f 91       	pop	r19
    145c:	2f 91       	pop	r18
    145e:	0f 90       	pop	r0
    1460:	0f be       	out	0x3f, r0	; 63
    1462:	0f 90       	pop	r0
    1464:	1f 90       	pop	r1
    1466:	18 95       	reti

00001468 <__vector_16>:
    1468:	1f 92       	push	r1
    146a:	0f 92       	push	r0
    146c:	0f b6       	in	r0, 0x3f	; 63
    146e:	0f 92       	push	r0
    1470:	11 24       	eor	r1, r1
    1472:	2f 93       	push	r18
    1474:	3f 93       	push	r19
    1476:	4f 93       	push	r20
    1478:	5f 93       	push	r21
    147a:	6f 93       	push	r22
    147c:	7f 93       	push	r23
    147e:	8f 93       	push	r24
    1480:	9f 93       	push	r25
    1482:	af 93       	push	r26
    1484:	bf 93       	push	r27
    1486:	ef 93       	push	r30
    1488:	ff 93       	push	r31
    148a:	f9 de       	rcall	.-526    	; 0x127e <__vector_25>
    148c:	ff 91       	pop	r31
    148e:	ef 91       	pop	r30
    1490:	bf 91       	pop	r27
    1492:	af 91       	pop	r26
    1494:	9f 91       	pop	r25
    1496:	8f 91       	pop	r24
    1498:	7f 91       	pop	r23
    149a:	6f 91       	pop	r22
    149c:	5f 91       	pop	r21
    149e:	4f 91       	pop	r20
    14a0:	3f 91       	pop	r19
    14a2:	2f 91       	pop	r18
    14a4:	0f 90       	pop	r0
    14a6:	0f be       	out	0x3f, r0	; 63
    14a8:	0f 90       	pop	r0
    14aa:	1f 90       	pop	r1
    14ac:	18 95       	reti

000014ae <__vector_15>:
    14ae:	1f 92       	push	r1
    14b0:	0f 92       	push	r0
    14b2:	0f b6       	in	r0, 0x3f	; 63
    14b4:	0f 92       	push	r0
    14b6:	11 24       	eor	r1, r1
    14b8:	2f 93       	push	r18
    14ba:	3f 93       	push	r19
    14bc:	4f 93       	push	r20
    14be:	5f 93       	push	r21
    14c0:	6f 93       	push	r22
    14c2:	7f 93       	push	r23
    14c4:	8f 93       	push	r24
    14c6:	9f 93       	push	r25
    14c8:	af 93       	push	r26
    14ca:	bf 93       	push	r27
    14cc:	ef 93       	push	r30
    14ce:	ff 93       	push	r31
    14d0:	d6 de       	rcall	.-596    	; 0x127e <__vector_25>
    14d2:	ff 91       	pop	r31
    14d4:	ef 91       	pop	r30
    14d6:	bf 91       	pop	r27
    14d8:	af 91       	pop	r26
    14da:	9f 91       	pop	r25
    14dc:	8f 91       	pop	r24
    14de:	7f 91       	pop	r23
    14e0:	6f 91       	pop	r22
    14e2:	5f 91       	pop	r21
    14e4:	4f 91       	pop	r20
    14e6:	3f 91       	pop	r19
    14e8:	2f 91       	pop	r18
    14ea:	0f 90       	pop	r0
    14ec:	0f be       	out	0x3f, r0	; 63
    14ee:	0f 90       	pop	r0
    14f0:	1f 90       	pop	r1
    14f2:	18 95       	reti

000014f4 <__vector_14>:
    14f4:	1f 92       	push	r1
    14f6:	0f 92       	push	r0
    14f8:	0f b6       	in	r0, 0x3f	; 63
    14fa:	0f 92       	push	r0
    14fc:	11 24       	eor	r1, r1
    14fe:	2f 93       	push	r18
    1500:	3f 93       	push	r19
    1502:	4f 93       	push	r20
    1504:	5f 93       	push	r21
    1506:	6f 93       	push	r22
    1508:	7f 93       	push	r23
    150a:	8f 93       	push	r24
    150c:	9f 93       	push	r25
    150e:	af 93       	push	r26
    1510:	bf 93       	push	r27
    1512:	ef 93       	push	r30
    1514:	ff 93       	push	r31
    1516:	b3 de       	rcall	.-666    	; 0x127e <__vector_25>
    1518:	ff 91       	pop	r31
    151a:	ef 91       	pop	r30
    151c:	bf 91       	pop	r27
    151e:	af 91       	pop	r26
    1520:	9f 91       	pop	r25
    1522:	8f 91       	pop	r24
    1524:	7f 91       	pop	r23
    1526:	6f 91       	pop	r22
    1528:	5f 91       	pop	r21
    152a:	4f 91       	pop	r20
    152c:	3f 91       	pop	r19
    152e:	2f 91       	pop	r18
    1530:	0f 90       	pop	r0
    1532:	0f be       	out	0x3f, r0	; 63
    1534:	0f 90       	pop	r0
    1536:	1f 90       	pop	r1
    1538:	18 95       	reti

0000153a <__vector_12>:
    153a:	1f 92       	push	r1
    153c:	0f 92       	push	r0
    153e:	0f b6       	in	r0, 0x3f	; 63
    1540:	0f 92       	push	r0
    1542:	11 24       	eor	r1, r1
    1544:	2f 93       	push	r18
    1546:	3f 93       	push	r19
    1548:	4f 93       	push	r20
    154a:	5f 93       	push	r21
    154c:	6f 93       	push	r22
    154e:	7f 93       	push	r23
    1550:	8f 93       	push	r24
    1552:	9f 93       	push	r25
    1554:	af 93       	push	r26
    1556:	bf 93       	push	r27
    1558:	ef 93       	push	r30
    155a:	ff 93       	push	r31
    155c:	90 de       	rcall	.-736    	; 0x127e <__vector_25>
    155e:	ff 91       	pop	r31
    1560:	ef 91       	pop	r30
    1562:	bf 91       	pop	r27
    1564:	af 91       	pop	r26
    1566:	9f 91       	pop	r25
    1568:	8f 91       	pop	r24
    156a:	7f 91       	pop	r23
    156c:	6f 91       	pop	r22
    156e:	5f 91       	pop	r21
    1570:	4f 91       	pop	r20
    1572:	3f 91       	pop	r19
    1574:	2f 91       	pop	r18
    1576:	0f 90       	pop	r0
    1578:	0f be       	out	0x3f, r0	; 63
    157a:	0f 90       	pop	r0
    157c:	1f 90       	pop	r1
    157e:	18 95       	reti

00001580 <__vector_11>:
    1580:	1f 92       	push	r1
    1582:	0f 92       	push	r0
    1584:	0f b6       	in	r0, 0x3f	; 63
    1586:	0f 92       	push	r0
    1588:	11 24       	eor	r1, r1
    158a:	2f 93       	push	r18
    158c:	3f 93       	push	r19
    158e:	4f 93       	push	r20
    1590:	5f 93       	push	r21
    1592:	6f 93       	push	r22
    1594:	7f 93       	push	r23
    1596:	8f 93       	push	r24
    1598:	9f 93       	push	r25
    159a:	af 93       	push	r26
    159c:	bf 93       	push	r27
    159e:	ef 93       	push	r30
    15a0:	ff 93       	push	r31
    15a2:	6d de       	rcall	.-806    	; 0x127e <__vector_25>
    15a4:	ff 91       	pop	r31
    15a6:	ef 91       	pop	r30
    15a8:	bf 91       	pop	r27
    15aa:	af 91       	pop	r26
    15ac:	9f 91       	pop	r25
    15ae:	8f 91       	pop	r24
    15b0:	7f 91       	pop	r23
    15b2:	6f 91       	pop	r22
    15b4:	5f 91       	pop	r21
    15b6:	4f 91       	pop	r20
    15b8:	3f 91       	pop	r19
    15ba:	2f 91       	pop	r18
    15bc:	0f 90       	pop	r0
    15be:	0f be       	out	0x3f, r0	; 63
    15c0:	0f 90       	pop	r0
    15c2:	1f 90       	pop	r1
    15c4:	18 95       	reti

000015c6 <__vector_10>:
    15c6:	1f 92       	push	r1
    15c8:	0f 92       	push	r0
    15ca:	0f b6       	in	r0, 0x3f	; 63
    15cc:	0f 92       	push	r0
    15ce:	11 24       	eor	r1, r1
    15d0:	2f 93       	push	r18
    15d2:	3f 93       	push	r19
    15d4:	4f 93       	push	r20
    15d6:	5f 93       	push	r21
    15d8:	6f 93       	push	r22
    15da:	7f 93       	push	r23
    15dc:	8f 93       	push	r24
    15de:	9f 93       	push	r25
    15e0:	af 93       	push	r26
    15e2:	bf 93       	push	r27
    15e4:	ef 93       	push	r30
    15e6:	ff 93       	push	r31
    15e8:	4a de       	rcall	.-876    	; 0x127e <__vector_25>
    15ea:	ff 91       	pop	r31
    15ec:	ef 91       	pop	r30
    15ee:	bf 91       	pop	r27
    15f0:	af 91       	pop	r26
    15f2:	9f 91       	pop	r25
    15f4:	8f 91       	pop	r24
    15f6:	7f 91       	pop	r23
    15f8:	6f 91       	pop	r22
    15fa:	5f 91       	pop	r21
    15fc:	4f 91       	pop	r20
    15fe:	3f 91       	pop	r19
    1600:	2f 91       	pop	r18
    1602:	0f 90       	pop	r0
    1604:	0f be       	out	0x3f, r0	; 63
    1606:	0f 90       	pop	r0
    1608:	1f 90       	pop	r1
    160a:	18 95       	reti

0000160c <__vector_8>:
    160c:	1f 92       	push	r1
    160e:	0f 92       	push	r0
    1610:	0f b6       	in	r0, 0x3f	; 63
    1612:	0f 92       	push	r0
    1614:	11 24       	eor	r1, r1
    1616:	2f 93       	push	r18
    1618:	3f 93       	push	r19
    161a:	4f 93       	push	r20
    161c:	5f 93       	push	r21
    161e:	6f 93       	push	r22
    1620:	7f 93       	push	r23
    1622:	8f 93       	push	r24
    1624:	9f 93       	push	r25
    1626:	af 93       	push	r26
    1628:	bf 93       	push	r27
    162a:	ef 93       	push	r30
    162c:	ff 93       	push	r31
    162e:	27 de       	rcall	.-946    	; 0x127e <__vector_25>
    1630:	ff 91       	pop	r31
    1632:	ef 91       	pop	r30
    1634:	bf 91       	pop	r27
    1636:	af 91       	pop	r26
    1638:	9f 91       	pop	r25
    163a:	8f 91       	pop	r24
    163c:	7f 91       	pop	r23
    163e:	6f 91       	pop	r22
    1640:	5f 91       	pop	r21
    1642:	4f 91       	pop	r20
    1644:	3f 91       	pop	r19
    1646:	2f 91       	pop	r18
    1648:	0f 90       	pop	r0
    164a:	0f be       	out	0x3f, r0	; 63
    164c:	0f 90       	pop	r0
    164e:	1f 90       	pop	r1
    1650:	18 95       	reti

00001652 <__vector_7>:
    1652:	1f 92       	push	r1
    1654:	0f 92       	push	r0
    1656:	0f b6       	in	r0, 0x3f	; 63
    1658:	0f 92       	push	r0
    165a:	11 24       	eor	r1, r1
    165c:	2f 93       	push	r18
    165e:	3f 93       	push	r19
    1660:	4f 93       	push	r20
    1662:	5f 93       	push	r21
    1664:	6f 93       	push	r22
    1666:	7f 93       	push	r23
    1668:	8f 93       	push	r24
    166a:	9f 93       	push	r25
    166c:	af 93       	push	r26
    166e:	bf 93       	push	r27
    1670:	ef 93       	push	r30
    1672:	ff 93       	push	r31
    1674:	04 de       	rcall	.-1016   	; 0x127e <__vector_25>
    1676:	ff 91       	pop	r31
    1678:	ef 91       	pop	r30
    167a:	bf 91       	pop	r27
    167c:	af 91       	pop	r26
    167e:	9f 91       	pop	r25
    1680:	8f 91       	pop	r24
    1682:	7f 91       	pop	r23
    1684:	6f 91       	pop	r22
    1686:	5f 91       	pop	r21
    1688:	4f 91       	pop	r20
    168a:	3f 91       	pop	r19
    168c:	2f 91       	pop	r18
    168e:	0f 90       	pop	r0
    1690:	0f be       	out	0x3f, r0	; 63
    1692:	0f 90       	pop	r0
    1694:	1f 90       	pop	r1
    1696:	18 95       	reti

00001698 <__vector_6>:
    1698:	1f 92       	push	r1
    169a:	0f 92       	push	r0
    169c:	0f b6       	in	r0, 0x3f	; 63
    169e:	0f 92       	push	r0
    16a0:	11 24       	eor	r1, r1
    16a2:	2f 93       	push	r18
    16a4:	3f 93       	push	r19
    16a6:	4f 93       	push	r20
    16a8:	5f 93       	push	r21
    16aa:	6f 93       	push	r22
    16ac:	7f 93       	push	r23
    16ae:	8f 93       	push	r24
    16b0:	9f 93       	push	r25
    16b2:	af 93       	push	r26
    16b4:	bf 93       	push	r27
    16b6:	ef 93       	push	r30
    16b8:	ff 93       	push	r31
    16ba:	e1 dd       	rcall	.-1086   	; 0x127e <__vector_25>
    16bc:	ff 91       	pop	r31
    16be:	ef 91       	pop	r30
    16c0:	bf 91       	pop	r27
    16c2:	af 91       	pop	r26
    16c4:	9f 91       	pop	r25
    16c6:	8f 91       	pop	r24
    16c8:	7f 91       	pop	r23
    16ca:	6f 91       	pop	r22
    16cc:	5f 91       	pop	r21
    16ce:	4f 91       	pop	r20
    16d0:	3f 91       	pop	r19
    16d2:	2f 91       	pop	r18
    16d4:	0f 90       	pop	r0
    16d6:	0f be       	out	0x3f, r0	; 63
    16d8:	0f 90       	pop	r0
    16da:	1f 90       	pop	r1
    16dc:	18 95       	reti

000016de <__vector_5>:
    16de:	1f 92       	push	r1
    16e0:	0f 92       	push	r0
    16e2:	0f b6       	in	r0, 0x3f	; 63
    16e4:	0f 92       	push	r0
    16e6:	11 24       	eor	r1, r1
    16e8:	2f 93       	push	r18
    16ea:	3f 93       	push	r19
    16ec:	4f 93       	push	r20
    16ee:	5f 93       	push	r21
    16f0:	6f 93       	push	r22
    16f2:	7f 93       	push	r23
    16f4:	8f 93       	push	r24
    16f6:	9f 93       	push	r25
    16f8:	af 93       	push	r26
    16fa:	bf 93       	push	r27
    16fc:	ef 93       	push	r30
    16fe:	ff 93       	push	r31
    1700:	be dd       	rcall	.-1156   	; 0x127e <__vector_25>
    1702:	ff 91       	pop	r31
    1704:	ef 91       	pop	r30
    1706:	bf 91       	pop	r27
    1708:	af 91       	pop	r26
    170a:	9f 91       	pop	r25
    170c:	8f 91       	pop	r24
    170e:	7f 91       	pop	r23
    1710:	6f 91       	pop	r22
    1712:	5f 91       	pop	r21
    1714:	4f 91       	pop	r20
    1716:	3f 91       	pop	r19
    1718:	2f 91       	pop	r18
    171a:	0f 90       	pop	r0
    171c:	0f be       	out	0x3f, r0	; 63
    171e:	0f 90       	pop	r0
    1720:	1f 90       	pop	r1
    1722:	18 95       	reti

00001724 <__vector_4>:
    1724:	1f 92       	push	r1
    1726:	0f 92       	push	r0
    1728:	0f b6       	in	r0, 0x3f	; 63
    172a:	0f 92       	push	r0
    172c:	11 24       	eor	r1, r1
    172e:	2f 93       	push	r18
    1730:	3f 93       	push	r19
    1732:	4f 93       	push	r20
    1734:	5f 93       	push	r21
    1736:	6f 93       	push	r22
    1738:	7f 93       	push	r23
    173a:	8f 93       	push	r24
    173c:	9f 93       	push	r25
    173e:	af 93       	push	r26
    1740:	bf 93       	push	r27
    1742:	ef 93       	push	r30
    1744:	ff 93       	push	r31
    1746:	9b dd       	rcall	.-1226   	; 0x127e <__vector_25>
    1748:	ff 91       	pop	r31
    174a:	ef 91       	pop	r30
    174c:	bf 91       	pop	r27
    174e:	af 91       	pop	r26
    1750:	9f 91       	pop	r25
    1752:	8f 91       	pop	r24
    1754:	7f 91       	pop	r23
    1756:	6f 91       	pop	r22
    1758:	5f 91       	pop	r21
    175a:	4f 91       	pop	r20
    175c:	3f 91       	pop	r19
    175e:	2f 91       	pop	r18
    1760:	0f 90       	pop	r0
    1762:	0f be       	out	0x3f, r0	; 63
    1764:	0f 90       	pop	r0
    1766:	1f 90       	pop	r1
    1768:	18 95       	reti

0000176a <__vector_3>:
    176a:	1f 92       	push	r1
    176c:	0f 92       	push	r0
    176e:	0f b6       	in	r0, 0x3f	; 63
    1770:	0f 92       	push	r0
    1772:	11 24       	eor	r1, r1
    1774:	2f 93       	push	r18
    1776:	3f 93       	push	r19
    1778:	4f 93       	push	r20
    177a:	5f 93       	push	r21
    177c:	6f 93       	push	r22
    177e:	7f 93       	push	r23
    1780:	8f 93       	push	r24
    1782:	9f 93       	push	r25
    1784:	af 93       	push	r26
    1786:	bf 93       	push	r27
    1788:	ef 93       	push	r30
    178a:	ff 93       	push	r31
    178c:	78 dd       	rcall	.-1296   	; 0x127e <__vector_25>
    178e:	ff 91       	pop	r31
    1790:	ef 91       	pop	r30
    1792:	bf 91       	pop	r27
    1794:	af 91       	pop	r26
    1796:	9f 91       	pop	r25
    1798:	8f 91       	pop	r24
    179a:	7f 91       	pop	r23
    179c:	6f 91       	pop	r22
    179e:	5f 91       	pop	r21
    17a0:	4f 91       	pop	r20
    17a2:	3f 91       	pop	r19
    17a4:	2f 91       	pop	r18
    17a6:	0f 90       	pop	r0
    17a8:	0f be       	out	0x3f, r0	; 63
    17aa:	0f 90       	pop	r0
    17ac:	1f 90       	pop	r1
    17ae:	18 95       	reti

000017b0 <__vector_2>:
    17b0:	1f 92       	push	r1
    17b2:	0f 92       	push	r0
    17b4:	0f b6       	in	r0, 0x3f	; 63
    17b6:	0f 92       	push	r0
    17b8:	11 24       	eor	r1, r1
    17ba:	2f 93       	push	r18
    17bc:	3f 93       	push	r19
    17be:	4f 93       	push	r20
    17c0:	5f 93       	push	r21
    17c2:	6f 93       	push	r22
    17c4:	7f 93       	push	r23
    17c6:	8f 93       	push	r24
    17c8:	9f 93       	push	r25
    17ca:	af 93       	push	r26
    17cc:	bf 93       	push	r27
    17ce:	ef 93       	push	r30
    17d0:	ff 93       	push	r31
    17d2:	55 dd       	rcall	.-1366   	; 0x127e <__vector_25>
    17d4:	ff 91       	pop	r31
    17d6:	ef 91       	pop	r30
    17d8:	bf 91       	pop	r27
    17da:	af 91       	pop	r26
    17dc:	9f 91       	pop	r25
    17de:	8f 91       	pop	r24
    17e0:	7f 91       	pop	r23
    17e2:	6f 91       	pop	r22
    17e4:	5f 91       	pop	r21
    17e6:	4f 91       	pop	r20
    17e8:	3f 91       	pop	r19
    17ea:	2f 91       	pop	r18
    17ec:	0f 90       	pop	r0
    17ee:	0f be       	out	0x3f, r0	; 63
    17f0:	0f 90       	pop	r0
    17f2:	1f 90       	pop	r1
    17f4:	18 95       	reti

000017f6 <__vector_1>:
    17f6:	1f 92       	push	r1
    17f8:	0f 92       	push	r0
    17fa:	0f b6       	in	r0, 0x3f	; 63
    17fc:	0f 92       	push	r0
    17fe:	11 24       	eor	r1, r1
    1800:	2f 93       	push	r18
    1802:	3f 93       	push	r19
    1804:	4f 93       	push	r20
    1806:	5f 93       	push	r21
    1808:	6f 93       	push	r22
    180a:	7f 93       	push	r23
    180c:	8f 93       	push	r24
    180e:	9f 93       	push	r25
    1810:	af 93       	push	r26
    1812:	bf 93       	push	r27
    1814:	ef 93       	push	r30
    1816:	ff 93       	push	r31
    1818:	32 dd       	rcall	.-1436   	; 0x127e <__vector_25>
    181a:	ff 91       	pop	r31
    181c:	ef 91       	pop	r30
    181e:	bf 91       	pop	r27
    1820:	af 91       	pop	r26
    1822:	9f 91       	pop	r25
    1824:	8f 91       	pop	r24
    1826:	7f 91       	pop	r23
    1828:	6f 91       	pop	r22
    182a:	5f 91       	pop	r21
    182c:	4f 91       	pop	r20
    182e:	3f 91       	pop	r19
    1830:	2f 91       	pop	r18
    1832:	0f 90       	pop	r0
    1834:	0f be       	out	0x3f, r0	; 63
    1836:	0f 90       	pop	r0
    1838:	1f 90       	pop	r1
    183a:	18 95       	reti

0000183c <cpu_irq_save>:
{
	// interrupt is already disabled, here
	if ((g_showData.pos_height_int != height_int) || (g_showData.pos_height_frac10 != height_frac10)) {
		g_showData.newPosHeight = true;
		g_showData.pos_height_int = height_int;
		g_showData.pos_height_frac10 = height_frac10;
    183c:	cf 93       	push	r28
    183e:	df 93       	push	r29
    1840:	1f 92       	push	r1
    1842:	cd b7       	in	r28, 0x3d	; 61
    1844:	de b7       	in	r29, 0x3e	; 62
    1846:	8f b7       	in	r24, 0x3f	; 63
    1848:	89 83       	std	Y+1, r24	; 0x01
    184a:	f8 94       	cli
    184c:	89 81       	ldd	r24, Y+1	; 0x01
    184e:	0f 90       	pop	r0
    1850:	df 91       	pop	r29
    1852:	cf 91       	pop	r28
    1854:	08 95       	ret

00001856 <__portable_avr_delay_cycles>:
    1856:	04 c0       	rjmp	.+8      	; 0x1860 <__portable_avr_delay_cycles+0xa>
    1858:	61 50       	subi	r22, 0x01	; 1
    185a:	71 09       	sbc	r23, r1
    185c:	81 09       	sbc	r24, r1
    185e:	91 09       	sbc	r25, r1
    1860:	61 15       	cp	r22, r1
    1862:	71 05       	cpc	r23, r1
    1864:	81 05       	cpc	r24, r1
    1866:	91 05       	cpc	r25, r1
    1868:	b9 f7       	brne	.-18     	; 0x1858 <__portable_avr_delay_cycles+0x2>
    186a:	08 95       	ret

0000186c <lcd_bus_read_status>:
    186c:	e7 df       	rcall	.-50     	; 0x183c <cpu_irq_save>
    186e:	98 2f       	mov	r25, r24
    1870:	8f ef       	ldi	r24, 0xFF	; 255
    1872:	8b b9       	out	0x0b, r24	; 11
    1874:	1a b8       	out	0x0a, r1	; 10
    1876:	28 98       	cbi	0x05, 0	; 5
    1878:	2c 9a       	sbi	0x05, 4	; 5
    187a:	2d 9a       	sbi	0x05, 5	; 5
    187c:	2d 98       	cbi	0x05, 5	; 5
    187e:	89 b1       	in	r24, 0x09	; 9
    1880:	9f bf       	out	0x3f, r25	; 63
    1882:	08 95       	ret

00001884 <lcd_bus_write_cmd>:
    1884:	cf 93       	push	r28
    1886:	c8 2f       	mov	r28, r24
    1888:	d9 df       	rcall	.-78     	; 0x183c <cpu_irq_save>
    188a:	cb b9       	out	0x0b, r28	; 11
    188c:	9f ef       	ldi	r25, 0xFF	; 255
    188e:	9a b9       	out	0x0a, r25	; 10
    1890:	28 98       	cbi	0x05, 0	; 5
    1892:	2c 98       	cbi	0x05, 4	; 5
    1894:	2d 9a       	sbi	0x05, 5	; 5
    1896:	2d 98       	cbi	0x05, 5	; 5
    1898:	8f bf       	out	0x3f, r24	; 63
    189a:	cf 91       	pop	r28
    189c:	08 95       	ret

0000189e <lcd_bus_write_ram>:
    189e:	cf 93       	push	r28
    18a0:	c8 2f       	mov	r28, r24
    18a2:	cc df       	rcall	.-104    	; 0x183c <cpu_irq_save>
    18a4:	cb b9       	out	0x0b, r28	; 11
    18a6:	9f ef       	ldi	r25, 0xFF	; 255
    18a8:	9a b9       	out	0x0a, r25	; 10
    18aa:	28 9a       	sbi	0x05, 0	; 5
    18ac:	2c 98       	cbi	0x05, 4	; 5
    18ae:	2d 9a       	sbi	0x05, 5	; 5
    18b0:	2d 98       	cbi	0x05, 5	; 5
    18b2:	8f bf       	out	0x3f, r24	; 63
    18b4:	cf 91       	pop	r28
    18b6:	08 95       	ret

000018b8 <lcd_bus_read_ram>:
    18b8:	c1 df       	rcall	.-126    	; 0x183c <cpu_irq_save>
    18ba:	98 2f       	mov	r25, r24
    18bc:	8f ef       	ldi	r24, 0xFF	; 255
    18be:	8b b9       	out	0x0b, r24	; 11
    18c0:	1a b8       	out	0x0a, r1	; 10
    18c2:	28 9a       	sbi	0x05, 0	; 5
    18c4:	2c 9a       	sbi	0x05, 4	; 5
    18c6:	2d 9a       	sbi	0x05, 5	; 5
    18c8:	2d 98       	cbi	0x05, 5	; 5
    18ca:	80 91 0c 04 	lds	r24, 0x040C	; 0x80040c <s_lcd_ram_read_nonvalid>
    18ce:	88 23       	and	r24, r24
    18d0:	19 f0       	breq	.+6      	; 0x18d8 <lcd_bus_read_ram+0x20>
    18d2:	89 b1       	in	r24, 0x09	; 9
    18d4:	2d 9a       	sbi	0x05, 5	; 5
    18d6:	2d 98       	cbi	0x05, 5	; 5
    18d8:	89 b1       	in	r24, 0x09	; 9
    18da:	10 92 0c 04 	sts	0x040C, r1	; 0x80040c <s_lcd_ram_read_nonvalid>
    18de:	9f bf       	out	0x3f, r25	; 63
    18e0:	08 95       	ret

000018e2 <lcd_contrast_update>:
    18e2:	81 e8       	ldi	r24, 0x81	; 129
    18e4:	cf df       	rcall	.-98     	; 0x1884 <lcd_bus_write_cmd>
    18e6:	80 91 59 04 	lds	r24, 0x0459	; 0x800459 <g_lcd_contrast_pm>
    18ea:	8f 73       	andi	r24, 0x3F	; 63
    18ec:	80 68       	ori	r24, 0x80	; 128
    18ee:	ca cf       	rjmp	.-108    	; 0x1884 <lcd_bus_write_cmd>

000018f0 <lcd_enable.part.0>:
    18f0:	8d e2       	ldi	r24, 0x2D	; 45
    18f2:	c8 df       	rcall	.-112    	; 0x1884 <lcd_bus_write_cmd>
    18f4:	84 e2       	ldi	r24, 0x24	; 36
    18f6:	c6 df       	rcall	.-116    	; 0x1884 <lcd_bus_write_cmd>
    18f8:	8a ee       	ldi	r24, 0xEA	; 234
    18fa:	c4 df       	rcall	.-120    	; 0x1884 <lcd_bus_write_cmd>
    18fc:	f2 df       	rcall	.-28     	; 0x18e2 <lcd_contrast_update>
    18fe:	88 ec       	ldi	r24, 0xC8	; 200
    1900:	c1 df       	rcall	.-126    	; 0x1884 <lcd_bus_write_cmd>
    1902:	88 e8       	ldi	r24, 0x88	; 136
    1904:	bf df       	rcall	.-130    	; 0x1884 <lcd_bus_write_cmd>
    1906:	80 e4       	ldi	r24, 0x40	; 64
    1908:	bd df       	rcall	.-134    	; 0x1884 <lcd_bus_write_cmd>
    190a:	80 e9       	ldi	r24, 0x90	; 144
    190c:	bb df       	rcall	.-138    	; 0x1884 <lcd_bus_write_cmd>
    190e:	80 eb       	ldi	r24, 0xB0	; 176
    1910:	b9 df       	rcall	.-142    	; 0x1884 <lcd_bus_write_cmd>
    1912:	80 e0       	ldi	r24, 0x00	; 0
    1914:	b7 df       	rcall	.-146    	; 0x1884 <lcd_bus_write_cmd>
    1916:	80 e1       	ldi	r24, 0x10	; 16
    1918:	b5 df       	rcall	.-150    	; 0x1884 <lcd_bus_write_cmd>
    191a:	81 e0       	ldi	r24, 0x01	; 1
    191c:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <s_lcd_ram_read_nonvalid>
    1920:	8f ee       	ldi	r24, 0xEF	; 239
    1922:	b0 df       	rcall	.-160    	; 0x1884 <lcd_bus_write_cmd>
    1924:	8e ee       	ldi	r24, 0xEE	; 238
    1926:	ae df       	rcall	.-164    	; 0x1884 <lcd_bus_write_cmd>
    1928:	84 ea       	ldi	r24, 0xA4	; 164
    192a:	ac df       	rcall	.-168    	; 0x1884 <lcd_bus_write_cmd>
    192c:	86 ea       	ldi	r24, 0xA6	; 166
    192e:	aa df       	rcall	.-172    	; 0x1884 <lcd_bus_write_cmd>
    1930:	8f ea       	ldi	r24, 0xAF	; 175
    1932:	a8 cf       	rjmp	.-176    	; 0x1884 <lcd_bus_write_cmd>

00001934 <lcd_page_set>:
    1934:	80 31       	cpi	r24, 0x10	; 16
    1936:	28 f4       	brcc	.+10     	; 0x1942 <lcd_page_set+0xe>
    1938:	80 6b       	ori	r24, 0xB0	; 176
    193a:	a4 df       	rcall	.-184    	; 0x1884 <lcd_bus_write_cmd>
    193c:	81 e0       	ldi	r24, 0x01	; 1
    193e:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <s_lcd_ram_read_nonvalid>
    1942:	08 95       	ret

00001944 <lcd_col_set>:
    1944:	cf 93       	push	r28
    1946:	80 3f       	cpi	r24, 0xF0	; 240
    1948:	58 f4       	brcc	.+22     	; 0x1960 <lcd_col_set+0x1c>
    194a:	c8 2f       	mov	r28, r24
    194c:	8f 70       	andi	r24, 0x0F	; 15
    194e:	9a df       	rcall	.-204    	; 0x1884 <lcd_bus_write_cmd>
    1950:	8c 2f       	mov	r24, r28
    1952:	82 95       	swap	r24
    1954:	8f 70       	andi	r24, 0x0F	; 15
    1956:	80 61       	ori	r24, 0x10	; 16
    1958:	95 df       	rcall	.-214    	; 0x1884 <lcd_bus_write_cmd>
    195a:	81 e0       	ldi	r24, 0x01	; 1
    195c:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <s_lcd_ram_read_nonvalid>
    1960:	cf 91       	pop	r28
    1962:	08 95       	ret

00001964 <lcd_cr>:
    1964:	80 e0       	ldi	r24, 0x00	; 0
    1966:	8e df       	rcall	.-228    	; 0x1884 <lcd_bus_write_cmd>
    1968:	80 e1       	ldi	r24, 0x10	; 16
    196a:	8c df       	rcall	.-232    	; 0x1884 <lcd_bus_write_cmd>
    196c:	81 e0       	ldi	r24, 0x01	; 1
    196e:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <s_lcd_ram_read_nonvalid>
    1972:	08 95       	ret

00001974 <lcd_home>:
    1974:	80 eb       	ldi	r24, 0xB0	; 176
    1976:	86 df       	rcall	.-244    	; 0x1884 <lcd_bus_write_cmd>
    1978:	f5 cf       	rjmp	.-22     	; 0x1964 <lcd_cr>

0000197a <lcd_cls>:
    197a:	cf 93       	push	r28
    197c:	df 93       	push	r29
    197e:	c0 e0       	ldi	r28, 0x00	; 0
    1980:	8c 2f       	mov	r24, r28
    1982:	80 6b       	ori	r24, 0xB0	; 176
    1984:	7f df       	rcall	.-258    	; 0x1884 <lcd_bus_write_cmd>
    1986:	80 e0       	ldi	r24, 0x00	; 0
    1988:	7d df       	rcall	.-262    	; 0x1884 <lcd_bus_write_cmd>
    198a:	80 e1       	ldi	r24, 0x10	; 16
    198c:	7b df       	rcall	.-266    	; 0x1884 <lcd_bus_write_cmd>
    198e:	d0 ef       	ldi	r29, 0xF0	; 240
    1990:	80 e0       	ldi	r24, 0x00	; 0
    1992:	85 df       	rcall	.-246    	; 0x189e <lcd_bus_write_ram>
    1994:	d1 50       	subi	r29, 0x01	; 1
    1996:	e1 f7       	brne	.-8      	; 0x1990 <lcd_cls+0x16>
    1998:	cf 5f       	subi	r28, 0xFF	; 255
    199a:	c0 31       	cpi	r28, 0x10	; 16
    199c:	89 f7       	brne	.-30     	; 0x1980 <lcd_cls+0x6>
    199e:	df 91       	pop	r29
    19a0:	cf 91       	pop	r28
    19a2:	e8 cf       	rjmp	.-48     	; 0x1974 <lcd_home>

000019a4 <lcd_show_template>:
    19a4:	ff 92       	push	r15
    19a6:	0f 93       	push	r16
    19a8:	1f 93       	push	r17
    19aa:	cf 93       	push	r28
    19ac:	df 93       	push	r29
    19ae:	6a e0       	ldi	r22, 0x0A	; 10
    19b0:	71 e0       	ldi	r23, 0x01	; 1
    19b2:	8c ed       	ldi	r24, 0xDC	; 220
    19b4:	93 e0       	ldi	r25, 0x03	; 3
    19b6:	0e 94 1b 1c 	call	0x3836	; 0x3836 <strcpy>
    19ba:	23 e0       	ldi	r18, 0x03	; 3
    19bc:	31 e0       	ldi	r19, 0x01	; 1
    19be:	4b e0       	ldi	r20, 0x0B	; 11
    19c0:	63 e0       	ldi	r22, 0x03	; 3
    19c2:	8c ed       	ldi	r24, 0xDC	; 220
    19c4:	93 e0       	ldi	r25, 0x03	; 3
    19c6:	da d9       	rcall	.-3148   	; 0xd7c <gfx_mono_draw_string>
    19c8:	67 e1       	ldi	r22, 0x17	; 23
    19ca:	71 e0       	ldi	r23, 0x01	; 1
    19cc:	8c ed       	ldi	r24, 0xDC	; 220
    19ce:	93 e0       	ldi	r25, 0x03	; 3
    19d0:	0e 94 1b 1c 	call	0x3836	; 0x3836 <strcpy>
    19d4:	23 e0       	ldi	r18, 0x03	; 3
    19d6:	31 e0       	ldi	r19, 0x01	; 1
    19d8:	44 e1       	ldi	r20, 0x14	; 20
    19da:	63 e0       	ldi	r22, 0x03	; 3
    19dc:	8c ed       	ldi	r24, 0xDC	; 220
    19de:	93 e0       	ldi	r25, 0x03	; 3
    19e0:	cd d9       	rcall	.-3174   	; 0xd7c <gfx_mono_draw_string>
    19e2:	61 e2       	ldi	r22, 0x21	; 33
    19e4:	71 e0       	ldi	r23, 0x01	; 1
    19e6:	8c ed       	ldi	r24, 0xDC	; 220
    19e8:	93 e0       	ldi	r25, 0x03	; 3
    19ea:	0e 94 1b 1c 	call	0x3836	; 0x3836 <strcpy>
    19ee:	23 e0       	ldi	r18, 0x03	; 3
    19f0:	31 e0       	ldi	r19, 0x01	; 1
    19f2:	4d e1       	ldi	r20, 0x1D	; 29
    19f4:	63 e0       	ldi	r22, 0x03	; 3
    19f6:	8c ed       	ldi	r24, 0xDC	; 220
    19f8:	93 e0       	ldi	r25, 0x03	; 3
    19fa:	c0 d9       	rcall	.-3200   	; 0xd7c <gfx_mono_draw_string>
    19fc:	1f 92       	push	r1
    19fe:	1f 92       	push	r1
    1a00:	1f 92       	push	r1
    1a02:	1f 92       	push	r1
    1a04:	88 e3       	ldi	r24, 0x38	; 56
    1a06:	91 e0       	ldi	r25, 0x01	; 1
    1a08:	9f 93       	push	r25
    1a0a:	8f 93       	push	r24
    1a0c:	1f 92       	push	r1
    1a0e:	10 e3       	ldi	r17, 0x30	; 48
    1a10:	1f 93       	push	r17
    1a12:	cc ed       	ldi	r28, 0xDC	; 220
    1a14:	d3 e0       	ldi	r29, 0x03	; 3
    1a16:	df 93       	push	r29
    1a18:	cf 93       	push	r28
    1a1a:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    1a1e:	23 e0       	ldi	r18, 0x03	; 3
    1a20:	31 e0       	ldi	r19, 0x01	; 1
    1a22:	46 e2       	ldi	r20, 0x26	; 38
    1a24:	63 e0       	ldi	r22, 0x03	; 3
    1a26:	ce 01       	movw	r24, r28
    1a28:	a9 d9       	rcall	.-3246   	; 0xd7c <gfx_mono_draw_string>
    1a2a:	1f 92       	push	r1
    1a2c:	1f 92       	push	r1
    1a2e:	1f 92       	push	r1
    1a30:	1f 92       	push	r1
    1a32:	1f 92       	push	r1
    1a34:	1f 92       	push	r1
    1a36:	1f 92       	push	r1
    1a38:	1f 92       	push	r1
    1a3a:	80 e5       	ldi	r24, 0x50	; 80
    1a3c:	91 e0       	ldi	r25, 0x01	; 1
    1a3e:	9f 93       	push	r25
    1a40:	8f 93       	push	r24
    1a42:	1f 92       	push	r1
    1a44:	1f 93       	push	r17
    1a46:	df 93       	push	r29
    1a48:	cf 93       	push	r28
    1a4a:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    1a4e:	23 e0       	ldi	r18, 0x03	; 3
    1a50:	31 e0       	ldi	r19, 0x01	; 1
    1a52:	4f e2       	ldi	r20, 0x2F	; 47
    1a54:	63 e0       	ldi	r22, 0x03	; 3
    1a56:	ce 01       	movw	r24, r28
    1a58:	91 d9       	rcall	.-3294   	; 0xd7c <gfx_mono_draw_string>
    1a5a:	1f 92       	push	r1
    1a5c:	1f 92       	push	r1
    1a5e:	1f 92       	push	r1
    1a60:	1f 92       	push	r1
    1a62:	83 e7       	ldi	r24, 0x73	; 115
    1a64:	91 e0       	ldi	r25, 0x01	; 1
    1a66:	9f 93       	push	r25
    1a68:	8f 93       	push	r24
    1a6a:	1f 92       	push	r1
    1a6c:	1f 93       	push	r17
    1a6e:	df 93       	push	r29
    1a70:	cf 93       	push	r28
    1a72:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    1a76:	8d b7       	in	r24, 0x3d	; 61
    1a78:	9e b7       	in	r25, 0x3e	; 62
    1a7a:	82 96       	adiw	r24, 0x22	; 34
    1a7c:	0f b6       	in	r0, 0x3f	; 63
    1a7e:	f8 94       	cli
    1a80:	9e bf       	out	0x3e, r25	; 62
    1a82:	0f be       	out	0x3f, r0	; 63
    1a84:	8d bf       	out	0x3d, r24	; 61
    1a86:	23 e0       	ldi	r18, 0x03	; 3
    1a88:	31 e0       	ldi	r19, 0x01	; 1
    1a8a:	48 e3       	ldi	r20, 0x38	; 56
    1a8c:	63 e0       	ldi	r22, 0x03	; 3
    1a8e:	ce 01       	movw	r24, r28
    1a90:	75 d9       	rcall	.-3350   	; 0xd7c <gfx_mono_draw_string>
    1a92:	1f 92       	push	r1
    1a94:	1f 92       	push	r1
    1a96:	1f 92       	push	r1
    1a98:	1f 92       	push	r1
    1a9a:	88 e8       	ldi	r24, 0x88	; 136
    1a9c:	91 e0       	ldi	r25, 0x01	; 1
    1a9e:	9f 93       	push	r25
    1aa0:	8f 93       	push	r24
    1aa2:	1f 92       	push	r1
    1aa4:	1f 93       	push	r17
    1aa6:	df 93       	push	r29
    1aa8:	cf 93       	push	r28
    1aaa:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    1aae:	23 e0       	ldi	r18, 0x03	; 3
    1ab0:	31 e0       	ldi	r19, 0x01	; 1
    1ab2:	48 e3       	ldi	r20, 0x38	; 56
    1ab4:	6b e7       	ldi	r22, 0x7B	; 123
    1ab6:	ce 01       	movw	r24, r28
    1ab8:	61 d9       	rcall	.-3390   	; 0xd7c <gfx_mono_draw_string>
    1aba:	1f 92       	push	r1
    1abc:	1f 92       	push	r1
    1abe:	1f 92       	push	r1
    1ac0:	1f 92       	push	r1
    1ac2:	1f 92       	push	r1
    1ac4:	1f 92       	push	r1
    1ac6:	8e e9       	ldi	r24, 0x9E	; 158
    1ac8:	91 e0       	ldi	r25, 0x01	; 1
    1aca:	9f 93       	push	r25
    1acc:	8f 93       	push	r24
    1ace:	1f 92       	push	r1
    1ad0:	1f 93       	push	r17
    1ad2:	df 93       	push	r29
    1ad4:	cf 93       	push	r28
    1ad6:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    1ada:	23 e0       	ldi	r18, 0x03	; 3
    1adc:	31 e0       	ldi	r19, 0x01	; 1
    1ade:	41 e4       	ldi	r20, 0x41	; 65
    1ae0:	63 e0       	ldi	r22, 0x03	; 3
    1ae2:	ce 01       	movw	r24, r28
    1ae4:	4b d9       	rcall	.-3434   	; 0xd7c <gfx_mono_draw_string>
    1ae6:	1f 92       	push	r1
    1ae8:	1f 92       	push	r1
    1aea:	1f 92       	push	r1
    1aec:	1f 92       	push	r1
    1aee:	8b ec       	ldi	r24, 0xCB	; 203
    1af0:	91 e0       	ldi	r25, 0x01	; 1
    1af2:	9f 93       	push	r25
    1af4:	8f 93       	push	r24
    1af6:	1f 92       	push	r1
    1af8:	1f 93       	push	r17
    1afa:	df 93       	push	r29
    1afc:	cf 93       	push	r28
    1afe:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    1b02:	8d b7       	in	r24, 0x3d	; 61
    1b04:	9e b7       	in	r25, 0x3e	; 62
    1b06:	80 96       	adiw	r24, 0x20	; 32
    1b08:	0f b6       	in	r0, 0x3f	; 63
    1b0a:	f8 94       	cli
    1b0c:	9e bf       	out	0x3e, r25	; 62
    1b0e:	0f be       	out	0x3f, r0	; 63
    1b10:	8d bf       	out	0x3d, r24	; 61
    1b12:	23 e0       	ldi	r18, 0x03	; 3
    1b14:	31 e0       	ldi	r19, 0x01	; 1
    1b16:	4a e4       	ldi	r20, 0x4A	; 74
    1b18:	63 e0       	ldi	r22, 0x03	; 3
    1b1a:	ce 01       	movw	r24, r28
    1b1c:	2f d9       	rcall	.-3490   	; 0xd7c <gfx_mono_draw_string>
    1b1e:	1f 92       	push	r1
    1b20:	1f 92       	push	r1
    1b22:	1f 92       	push	r1
    1b24:	1f 92       	push	r1
    1b26:	8f ed       	ldi	r24, 0xDF	; 223
    1b28:	91 e0       	ldi	r25, 0x01	; 1
    1b2a:	9f 93       	push	r25
    1b2c:	8f 93       	push	r24
    1b2e:	1f 92       	push	r1
    1b30:	1f 93       	push	r17
    1b32:	df 93       	push	r29
    1b34:	cf 93       	push	r28
    1b36:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    1b3a:	23 e0       	ldi	r18, 0x03	; 3
    1b3c:	31 e0       	ldi	r19, 0x01	; 1
    1b3e:	43 e5       	ldi	r20, 0x53	; 83
    1b40:	63 e0       	ldi	r22, 0x03	; 3
    1b42:	ce 01       	movw	r24, r28
    1b44:	1b d9       	rcall	.-3530   	; 0xd7c <gfx_mono_draw_string>
    1b46:	1f 92       	push	r1
    1b48:	1f 92       	push	r1
    1b4a:	1f 92       	push	r1
    1b4c:	1f 92       	push	r1
    1b4e:	1f 92       	push	r1
    1b50:	0e e7       	ldi	r16, 0x7E	; 126
    1b52:	0f 93       	push	r16
    1b54:	1f 92       	push	r1
    1b56:	1f 92       	push	r1
    1b58:	1f 92       	push	r1
    1b5a:	80 e2       	ldi	r24, 0x20	; 32
    1b5c:	f8 2e       	mov	r15, r24
    1b5e:	ff 92       	push	r15
    1b60:	87 ef       	ldi	r24, 0xF7	; 247
    1b62:	91 e0       	ldi	r25, 0x01	; 1
    1b64:	9f 93       	push	r25
    1b66:	8f 93       	push	r24
    1b68:	1f 92       	push	r1
    1b6a:	1f 93       	push	r17
    1b6c:	df 93       	push	r29
    1b6e:	cf 93       	push	r28
    1b70:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    1b74:	23 e0       	ldi	r18, 0x03	; 3
    1b76:	31 e0       	ldi	r19, 0x01	; 1
    1b78:	4c e5       	ldi	r20, 0x5C	; 92
    1b7a:	63 e0       	ldi	r22, 0x03	; 3
    1b7c:	ce 01       	movw	r24, r28
    1b7e:	fe d8       	rcall	.-3588   	; 0xd7c <gfx_mono_draw_string>
    1b80:	1f 92       	push	r1
    1b82:	1f 92       	push	r1
    1b84:	1f 92       	push	r1
    1b86:	1f 92       	push	r1
    1b88:	1f 92       	push	r1
    1b8a:	0f 93       	push	r16
    1b8c:	1f 92       	push	r1
    1b8e:	1f 92       	push	r1
    1b90:	1f 92       	push	r1
    1b92:	ff 92       	push	r15
    1b94:	86 e1       	ldi	r24, 0x16	; 22
    1b96:	92 e0       	ldi	r25, 0x02	; 2
    1b98:	9f 93       	push	r25
    1b9a:	8f 93       	push	r24
    1b9c:	1f 92       	push	r1
    1b9e:	1f 93       	push	r17
    1ba0:	df 93       	push	r29
    1ba2:	cf 93       	push	r28
    1ba4:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    1ba8:	8d b7       	in	r24, 0x3d	; 61
    1baa:	9e b7       	in	r25, 0x3e	; 62
    1bac:	8a 96       	adiw	r24, 0x2a	; 42
    1bae:	0f b6       	in	r0, 0x3f	; 63
    1bb0:	f8 94       	cli
    1bb2:	9e bf       	out	0x3e, r25	; 62
    1bb4:	0f be       	out	0x3f, r0	; 63
    1bb6:	8d bf       	out	0x3d, r24	; 61
    1bb8:	23 e0       	ldi	r18, 0x03	; 3
    1bba:	31 e0       	ldi	r19, 0x01	; 1
    1bbc:	45 e6       	ldi	r20, 0x65	; 101
    1bbe:	63 e0       	ldi	r22, 0x03	; 3
    1bc0:	ce 01       	movw	r24, r28
    1bc2:	dc d8       	rcall	.-3656   	; 0xd7c <gfx_mono_draw_string>
    1bc4:	1f 92       	push	r1
    1bc6:	1f 92       	push	r1
    1bc8:	1f 92       	push	r1
    1bca:	1f 92       	push	r1
    1bcc:	84 e3       	ldi	r24, 0x34	; 52
    1bce:	92 e0       	ldi	r25, 0x02	; 2
    1bd0:	9f 93       	push	r25
    1bd2:	8f 93       	push	r24
    1bd4:	1f 92       	push	r1
    1bd6:	1f 93       	push	r17
    1bd8:	df 93       	push	r29
    1bda:	cf 93       	push	r28
    1bdc:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    1be0:	23 e0       	ldi	r18, 0x03	; 3
    1be2:	31 e0       	ldi	r19, 0x01	; 1
    1be4:	4e e6       	ldi	r20, 0x6E	; 110
    1be6:	63 e0       	ldi	r22, 0x03	; 3
    1be8:	ce 01       	movw	r24, r28
    1bea:	c8 d8       	rcall	.-3696   	; 0xd7c <gfx_mono_draw_string>
    1bec:	1f 92       	push	r1
    1bee:	0f 93       	push	r16
    1bf0:	1f 92       	push	r1
    1bf2:	1f 92       	push	r1
    1bf4:	8a e4       	ldi	r24, 0x4A	; 74
    1bf6:	92 e0       	ldi	r25, 0x02	; 2
    1bf8:	9f 93       	push	r25
    1bfa:	8f 93       	push	r24
    1bfc:	1f 92       	push	r1
    1bfe:	1f 93       	push	r17
    1c00:	df 93       	push	r29
    1c02:	cf 93       	push	r28
    1c04:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    1c08:	23 e0       	ldi	r18, 0x03	; 3
    1c0a:	31 e0       	ldi	r19, 0x01	; 1
    1c0c:	4e e6       	ldi	r20, 0x6E	; 110
    1c0e:	6f e9       	ldi	r22, 0x9F	; 159
    1c10:	ce 01       	movw	r24, r28
    1c12:	b4 d8       	rcall	.-3736   	; 0xd7c <gfx_mono_draw_string>
    1c14:	8d b7       	in	r24, 0x3d	; 61
    1c16:	9e b7       	in	r25, 0x3e	; 62
    1c18:	44 96       	adiw	r24, 0x14	; 20
    1c1a:	0f b6       	in	r0, 0x3f	; 63
    1c1c:	f8 94       	cli
    1c1e:	9e bf       	out	0x3e, r25	; 62
    1c20:	0f be       	out	0x3f, r0	; 63
    1c22:	8d bf       	out	0x3d, r24	; 61
    1c24:	23 e0       	ldi	r18, 0x03	; 3
    1c26:	31 e0       	ldi	r19, 0x01	; 1
    1c28:	47 e7       	ldi	r20, 0x77	; 119
    1c2a:	63 e0       	ldi	r22, 0x03	; 3
    1c2c:	89 e5       	ldi	r24, 0x59	; 89
    1c2e:	92 e0       	ldi	r25, 0x02	; 2
    1c30:	df 91       	pop	r29
    1c32:	cf 91       	pop	r28
    1c34:	1f 91       	pop	r17
    1c36:	0f 91       	pop	r16
    1c38:	ff 90       	pop	r15
    1c3a:	a0 c8       	rjmp	.-3776   	; 0xd7c <gfx_mono_draw_string>

00001c3c <lcd_show_new_data>:
    1c3c:	3f 92       	push	r3
    1c3e:	4f 92       	push	r4
    1c40:	5f 92       	push	r5
    1c42:	6f 92       	push	r6
    1c44:	7f 92       	push	r7
    1c46:	8f 92       	push	r8
    1c48:	9f 92       	push	r9
    1c4a:	af 92       	push	r10
    1c4c:	bf 92       	push	r11
    1c4e:	cf 92       	push	r12
    1c50:	df 92       	push	r13
    1c52:	ef 92       	push	r14
    1c54:	ff 92       	push	r15
    1c56:	0f 93       	push	r16
    1c58:	1f 93       	push	r17
    1c5a:	cf 93       	push	r28
    1c5c:	df 93       	push	r29
    1c5e:	ee dd       	rcall	.-1060   	; 0x183c <cpu_irq_save>
    1c60:	c8 2f       	mov	r28, r24
    1c62:	f8 94       	cli
    1c64:	90 91 29 04 	lds	r25, 0x0429	; 0x800429 <g_showData>
    1c68:	92 ff       	sbrs	r25, 2
    1c6a:	2e c0       	rjmp	.+92     	; 0x1cc8 <lcd_show_new_data+0x8c>
    1c6c:	9b 7f       	andi	r25, 0xFB	; 251
    1c6e:	90 93 29 04 	sts	0x0429, r25	; 0x800429 <g_showData>
    1c72:	80 91 44 04 	lds	r24, 0x0444	; 0x800444 <g_showData+0x1b>
    1c76:	1f 92       	push	r1
    1c78:	8f 93       	push	r24
    1c7a:	80 91 43 04 	lds	r24, 0x0443	; 0x800443 <g_showData+0x1a>
    1c7e:	1f 92       	push	r1
    1c80:	8f 93       	push	r24
    1c82:	80 91 42 04 	lds	r24, 0x0442	; 0x800442 <g_showData+0x19>
    1c86:	1f 92       	push	r1
    1c88:	8f 93       	push	r24
    1c8a:	83 e6       	ldi	r24, 0x63	; 99
    1c8c:	92 e0       	ldi	r25, 0x02	; 2
    1c8e:	9f 93       	push	r25
    1c90:	8f 93       	push	r24
    1c92:	1f 92       	push	r1
    1c94:	80 e3       	ldi	r24, 0x30	; 48
    1c96:	8f 93       	push	r24
    1c98:	8c ed       	ldi	r24, 0xDC	; 220
    1c9a:	93 e0       	ldi	r25, 0x03	; 3
    1c9c:	9f 93       	push	r25
    1c9e:	8f 93       	push	r24
    1ca0:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    1ca4:	cf bf       	out	0x3f, r28	; 63
    1ca6:	23 e0       	ldi	r18, 0x03	; 3
    1ca8:	31 e0       	ldi	r19, 0x01	; 1
    1caa:	4d e1       	ldi	r20, 0x1D	; 29
    1cac:	6f e3       	ldi	r22, 0x3F	; 63
    1cae:	8c ed       	ldi	r24, 0xDC	; 220
    1cb0:	93 e0       	ldi	r25, 0x03	; 3
    1cb2:	64 d8       	rcall	.-3896   	; 0xd7c <gfx_mono_draw_string>
    1cb4:	8d b7       	in	r24, 0x3d	; 61
    1cb6:	9e b7       	in	r25, 0x3e	; 62
    1cb8:	0c 96       	adiw	r24, 0x0c	; 12
    1cba:	0f b6       	in	r0, 0x3f	; 63
    1cbc:	f8 94       	cli
    1cbe:	9e bf       	out	0x3e, r25	; 62
    1cc0:	0f be       	out	0x3f, r0	; 63
    1cc2:	8d bf       	out	0x3d, r24	; 61
    1cc4:	8f ef       	ldi	r24, 0xFF	; 255
    1cc6:	fd c3       	rjmp	.+2042   	; 0x24c2 <lcd_show_new_data+0x886>
    1cc8:	91 ff       	sbrs	r25, 1
    1cca:	30 c0       	rjmp	.+96     	; 0x1d2c <lcd_show_new_data+0xf0>
    1ccc:	9d 7f       	andi	r25, 0xFD	; 253
    1cce:	90 93 29 04 	sts	0x0429, r25	; 0x800429 <g_showData>
    1cd2:	80 91 30 04 	lds	r24, 0x0430	; 0x800430 <g_showData+0x7>
    1cd6:	8f 93       	push	r24
    1cd8:	80 91 2f 04 	lds	r24, 0x042F	; 0x80042f <g_showData+0x6>
    1cdc:	8f 93       	push	r24
    1cde:	80 91 40 04 	lds	r24, 0x0440	; 0x800440 <g_showData+0x17>
    1ce2:	1f 92       	push	r1
    1ce4:	8f 93       	push	r24
    1ce6:	80 91 41 04 	lds	r24, 0x0441	; 0x800441 <g_showData+0x18>
    1cea:	1f 92       	push	r1
    1cec:	8f 93       	push	r24
    1cee:	82 e7       	ldi	r24, 0x72	; 114
    1cf0:	92 e0       	ldi	r25, 0x02	; 2
    1cf2:	9f 93       	push	r25
    1cf4:	8f 93       	push	r24
    1cf6:	1f 92       	push	r1
    1cf8:	80 e3       	ldi	r24, 0x30	; 48
    1cfa:	8f 93       	push	r24
    1cfc:	8c ed       	ldi	r24, 0xDC	; 220
    1cfe:	93 e0       	ldi	r25, 0x03	; 3
    1d00:	9f 93       	push	r25
    1d02:	8f 93       	push	r24
    1d04:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    1d08:	cf bf       	out	0x3f, r28	; 63
    1d0a:	23 e0       	ldi	r18, 0x03	; 3
    1d0c:	31 e0       	ldi	r19, 0x01	; 1
    1d0e:	44 e1       	ldi	r20, 0x14	; 20
    1d10:	6f e3       	ldi	r22, 0x3F	; 63
    1d12:	8c ed       	ldi	r24, 0xDC	; 220
    1d14:	93 e0       	ldi	r25, 0x03	; 3
    1d16:	32 d8       	rcall	.-3996   	; 0xd7c <gfx_mono_draw_string>
    1d18:	8d b7       	in	r24, 0x3d	; 61
    1d1a:	9e b7       	in	r25, 0x3e	; 62
    1d1c:	0c 96       	adiw	r24, 0x0c	; 12
    1d1e:	0f b6       	in	r0, 0x3f	; 63
    1d20:	f8 94       	cli
    1d22:	9e bf       	out	0x3e, r25	; 62
    1d24:	0f be       	out	0x3f, r0	; 63
    1d26:	8d bf       	out	0x3d, r24	; 61
    1d28:	8e ef       	ldi	r24, 0xFE	; 254
    1d2a:	cb c3       	rjmp	.+1942   	; 0x24c2 <lcd_show_new_data+0x886>
    1d2c:	89 2f       	mov	r24, r25
    1d2e:	81 70       	andi	r24, 0x01	; 1
    1d30:	90 ff       	sbrs	r25, 0
    1d32:	55 c1       	rjmp	.+682    	; 0x1fde <lcd_show_new_data+0x3a2>
    1d34:	9e 7f       	andi	r25, 0xFE	; 254
    1d36:	90 93 29 04 	sts	0x0429, r25	; 0x800429 <g_showData>
    1d3a:	cf bf       	out	0x3f, r28	; 63
    1d3c:	c0 91 2d 04 	lds	r28, 0x042D	; 0x80042d <g_showData+0x4>
    1d40:	d0 91 2e 04 	lds	r29, 0x042E	; 0x80042e <g_showData+0x5>
    1d44:	a0 90 2b 04 	lds	r10, 0x042B	; 0x80042b <g_showData+0x2>
    1d48:	b0 90 2c 04 	lds	r11, 0x042C	; 0x80042c <g_showData+0x3>
    1d4c:	90 90 3f 04 	lds	r9, 0x043F	; 0x80043f <g_showData+0x16>
    1d50:	c1 35       	cpi	r28, 0x51	; 81
    1d52:	96 e4       	ldi	r25, 0x46	; 70
    1d54:	d9 07       	cpc	r29, r25
    1d56:	9c f4       	brge	.+38     	; 0x1d7e <lcd_show_new_data+0x142>
    1d58:	c0 3b       	cpi	r28, 0xB0	; 176
    1d5a:	89 eb       	ldi	r24, 0xB9	; 185
    1d5c:	d8 07       	cpc	r29, r24
    1d5e:	2c f0       	brlt	.+10     	; 0x1d6a <lcd_show_new_data+0x12e>
    1d60:	c5 39       	cpi	r28, 0x95	; 149
    1d62:	91 e1       	ldi	r25, 0x11	; 17
    1d64:	d9 07       	cpc	r29, r25
    1d66:	1c f0       	brlt	.+6      	; 0x1d6e <lcd_show_new_data+0x132>
    1d68:	0f c0       	rjmp	.+30     	; 0x1d88 <lcd_show_new_data+0x14c>
    1d6a:	c0 eb       	ldi	r28, 0xB0	; 176
    1d6c:	d9 eb       	ldi	r29, 0xB9	; 185
    1d6e:	be 01       	movw	r22, r28
    1d70:	cc 36       	cpi	r28, 0x6C	; 108
    1d72:	8e ee       	ldi	r24, 0xEE	; 238
    1d74:	d8 07       	cpc	r29, r24
    1d76:	54 f4       	brge	.+20     	; 0x1d8c <lcd_show_new_data+0x150>
    1d78:	6c e6       	ldi	r22, 0x6C	; 108
    1d7a:	7e ee       	ldi	r23, 0xEE	; 238
    1d7c:	07 c0       	rjmp	.+14     	; 0x1d8c <lcd_show_new_data+0x150>
    1d7e:	c0 e5       	ldi	r28, 0x50	; 80
    1d80:	d6 e4       	ldi	r29, 0x46	; 70
    1d82:	60 e5       	ldi	r22, 0x50	; 80
    1d84:	76 e4       	ldi	r23, 0x46	; 70
    1d86:	02 c0       	rjmp	.+4      	; 0x1d8c <lcd_show_new_data+0x150>
    1d88:	60 e5       	ldi	r22, 0x50	; 80
    1d8a:	76 e4       	ldi	r23, 0x46	; 70
    1d8c:	07 2e       	mov	r0, r23
    1d8e:	00 0c       	add	r0, r0
    1d90:	88 0b       	sbc	r24, r24
    1d92:	99 0b       	sbc	r25, r25
    1d94:	0e 94 7e 1a 	call	0x34fc	; 0x34fc <__floatsisf>
    1d98:	20 e0       	ldi	r18, 0x00	; 0
    1d9a:	30 ea       	ldi	r19, 0xA0	; 160
    1d9c:	4c e8       	ldi	r20, 0x8C	; 140
    1d9e:	55 e4       	ldi	r21, 0x45	; 69
    1da0:	0e 94 e3 19 	call	0x33c6	; 0x33c6 <__divsf3>
    1da4:	20 e0       	ldi	r18, 0x00	; 0
    1da6:	30 e0       	ldi	r19, 0x00	; 0
    1da8:	48 e9       	ldi	r20, 0x98	; 152
    1daa:	52 e4       	ldi	r21, 0x42	; 66
    1dac:	0e 94 85 1b 	call	0x370a	; 0x370a <__mulsf3>
    1db0:	0e 94 4b 1a 	call	0x3496	; 0x3496 <__fixsfsi>
    1db4:	2b 01       	movw	r4, r22
    1db6:	3c 01       	movw	r6, r24
    1db8:	7b 01       	movw	r14, r22
    1dba:	77 ff       	sbrs	r23, 7
    1dbc:	08 c0       	rjmp	.+16     	; 0x1dce <lcd_show_new_data+0x192>
    1dbe:	36 e9       	ldi	r19, 0x96	; 150
    1dc0:	83 2e       	mov	r8, r19
    1dc2:	86 0e       	add	r8, r22
    1dc4:	cc 24       	eor	r12, r12
    1dc6:	dd 24       	eor	r13, r13
    1dc8:	c6 1a       	sub	r12, r22
    1dca:	d7 0a       	sbc	r13, r23
    1dcc:	03 c0       	rjmp	.+6      	; 0x1dd4 <lcd_show_new_data+0x198>
    1dce:	6b 01       	movw	r12, r22
    1dd0:	26 e9       	ldi	r18, 0x96	; 150
    1dd2:	82 2e       	mov	r8, r18
    1dd4:	1f 92       	push	r1
    1dd6:	9f 92       	push	r9
    1dd8:	81 e8       	ldi	r24, 0x81	; 129
    1dda:	92 e0       	ldi	r25, 0x02	; 2
    1ddc:	9f 93       	push	r25
    1dde:	8f 93       	push	r24
    1de0:	1f 92       	push	r1
    1de2:	90 e3       	ldi	r25, 0x30	; 48
    1de4:	39 2e       	mov	r3, r25
    1de6:	3f 92       	push	r3
    1de8:	0c ed       	ldi	r16, 0xDC	; 220
    1dea:	13 e0       	ldi	r17, 0x03	; 3
    1dec:	1f 93       	push	r17
    1dee:	0f 93       	push	r16
    1df0:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    1df4:	23 e0       	ldi	r18, 0x03	; 3
    1df6:	31 e0       	ldi	r19, 0x01	; 1
    1df8:	4b e0       	ldi	r20, 0x0B	; 11
    1dfa:	6b e4       	ldi	r22, 0x4B	; 75
    1dfc:	c8 01       	movw	r24, r16
    1dfe:	0e 94 be 06 	call	0xd7c	; 0xd7c <gfx_mono_draw_string>
    1e02:	c5 01       	movw	r24, r10
    1e04:	68 ee       	ldi	r22, 0xE8	; 232
    1e06:	73 e0       	ldi	r23, 0x03	; 3
    1e08:	0e 94 f4 1b 	call	0x37e8	; 0x37e8 <__udivmodhi4>
    1e0c:	9f 93       	push	r25
    1e0e:	8f 93       	push	r24
    1e10:	7f 93       	push	r23
    1e12:	6f 93       	push	r22
    1e14:	85 e8       	ldi	r24, 0x85	; 133
    1e16:	92 e0       	ldi	r25, 0x02	; 2
    1e18:	9f 93       	push	r25
    1e1a:	8f 93       	push	r24
    1e1c:	1f 92       	push	r1
    1e1e:	3f 92       	push	r3
    1e20:	1f 93       	push	r17
    1e22:	0f 93       	push	r16
    1e24:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    1e28:	23 e0       	ldi	r18, 0x03	; 3
    1e2a:	31 e0       	ldi	r19, 0x01	; 1
    1e2c:	48 e3       	ldi	r20, 0x38	; 56
    1e2e:	6d eb       	ldi	r22, 0xBD	; 189
    1e30:	c8 01       	movw	r24, r16
    1e32:	0e 94 be 06 	call	0xd7c	; 0xd7c <gfx_mono_draw_string>
    1e36:	ce 01       	movw	r24, r28
    1e38:	64 e6       	ldi	r22, 0x64	; 100
    1e3a:	70 e0       	ldi	r23, 0x00	; 0
    1e3c:	0e 94 08 1c 	call	0x3810	; 0x3810 <__divmodhi4>
    1e40:	7f 93       	push	r23
    1e42:	6f 93       	push	r22
    1e44:	8e e8       	ldi	r24, 0x8E	; 142
    1e46:	92 e0       	ldi	r25, 0x02	; 2
    1e48:	9f 93       	push	r25
    1e4a:	8f 93       	push	r24
    1e4c:	1f 92       	push	r1
    1e4e:	3f 92       	push	r3
    1e50:	1f 93       	push	r17
    1e52:	0f 93       	push	r16
    1e54:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    1e58:	23 e0       	ldi	r18, 0x03	; 3
    1e5a:	31 e0       	ldi	r19, 0x01	; 1
    1e5c:	4e e6       	ldi	r20, 0x6E	; 110
    1e5e:	69 ec       	ldi	r22, 0xC9	; 201
    1e60:	c8 01       	movw	r24, r16
    1e62:	0e 94 be 06 	call	0xd7c	; 0xd7c <gfx_mono_draw_string>
    1e66:	8d b7       	in	r24, 0x3d	; 61
    1e68:	9e b7       	in	r25, 0x3e	; 62
    1e6a:	4a 96       	adiw	r24, 0x1a	; 26
    1e6c:	0f b6       	in	r0, 0x3f	; 63
    1e6e:	f8 94       	cli
    1e70:	9e bf       	out	0x3e, r25	; 62
    1e72:	0f be       	out	0x3f, r0	; 63
    1e74:	8d bf       	out	0x3d, r24	; 61
    1e76:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <clk_state_old.3266>
    1e7a:	98 12       	cpse	r9, r24
    1e7c:	22 c0       	rjmp	.+68     	; 0x1ec2 <lcd_show_new_data+0x286>
    1e7e:	c1 14       	cp	r12, r1
    1e80:	d1 04       	cpc	r13, r1
    1e82:	f9 f0       	breq	.+62     	; 0x1ec2 <lcd_show_new_data+0x286>
    1e84:	44 2d       	mov	r20, r4
    1e86:	1e 14       	cp	r1, r14
    1e88:	1f 04       	cpc	r1, r15
    1e8a:	0c f4       	brge	.+2      	; 0x1e8e <lcd_show_new_data+0x252>
    1e8c:	40 e0       	ldi	r20, 0x00	; 0
    1e8e:	d4 2d       	mov	r29, r4
    1e90:	f7 fc       	sbrc	r15, 7
    1e92:	d0 e0       	ldi	r29, 0x00	; 0
    1e94:	97 e0       	ldi	r25, 0x07	; 7
    1e96:	99 16       	cp	r9, r25
    1e98:	09 f4       	brne	.+2      	; 0x1e9c <lcd_show_new_data+0x260>
    1e9a:	62 c0       	rjmp	.+196    	; 0x1f60 <lcd_show_new_data+0x324>
    1e9c:	99 15       	cp	r25, r9
    1e9e:	68 f0       	brcs	.+26     	; 0x1eba <lcd_show_new_data+0x27e>
    1ea0:	8f ef       	ldi	r24, 0xFF	; 255
    1ea2:	89 0d       	add	r24, r9
    1ea4:	83 30       	cpi	r24, 0x03	; 3
    1ea6:	08 f0       	brcs	.+2      	; 0x1eaa <lcd_show_new_data+0x26e>
    1ea8:	96 c0       	rjmp	.+300    	; 0x1fd6 <lcd_show_new_data+0x39a>
    1eaa:	01 e0       	ldi	r16, 0x01	; 1
    1eac:	21 e0       	ldi	r18, 0x01	; 1
    1eae:	48 e9       	ldi	r20, 0x98	; 152
    1eb0:	6a e7       	ldi	r22, 0x7A	; 122
    1eb2:	8a e4       	ldi	r24, 0x4A	; 74
    1eb4:	0e 94 77 04 	call	0x8ee	; 0x8ee <gfx_mono_generic_draw_filled_rect>
    1eb8:	8e c0       	rjmp	.+284    	; 0x1fd6 <lcd_show_new_data+0x39a>
    1eba:	8f e0       	ldi	r24, 0x0F	; 15
    1ebc:	98 16       	cp	r9, r24
    1ebe:	99 f0       	breq	.+38     	; 0x1ee6 <lcd_show_new_data+0x2aa>
    1ec0:	8a c0       	rjmp	.+276    	; 0x1fd6 <lcd_show_new_data+0x39a>
    1ec2:	00 e0       	ldi	r16, 0x00	; 0
    1ec4:	25 e0       	ldi	r18, 0x05	; 5
    1ec6:	40 ea       	ldi	r20, 0xA0	; 160
    1ec8:	68 e7       	ldi	r22, 0x78	; 120
    1eca:	86 e4       	ldi	r24, 0x46	; 70
    1ecc:	0e 94 77 04 	call	0x8ee	; 0x8ee <gfx_mono_generic_draw_filled_rect>
    1ed0:	c1 14       	cp	r12, r1
    1ed2:	d1 04       	cpc	r13, r1
    1ed4:	b9 f6       	brne	.-82     	; 0x1e84 <lcd_show_new_data+0x248>
    1ed6:	01 e0       	ldi	r16, 0x01	; 1
    1ed8:	2c e7       	ldi	r18, 0x7C	; 124
    1eda:	46 e9       	ldi	r20, 0x96	; 150
    1edc:	68 e7       	ldi	r22, 0x78	; 120
    1ede:	86 e9       	ldi	r24, 0x96	; 150
    1ee0:	0e 94 e5 03 	call	0x7ca	; 0x7ca <gfx_mono_generic_draw_line>
    1ee4:	78 c0       	rjmp	.+240    	; 0x1fd6 <lcd_show_new_data+0x39a>
    1ee6:	40 5b       	subi	r20, 0xB0	; 176
    1ee8:	00 e0       	ldi	r16, 0x00	; 0
    1eea:	25 e0       	ldi	r18, 0x05	; 5
    1eec:	68 e7       	ldi	r22, 0x78	; 120
    1eee:	86 e4       	ldi	r24, 0x46	; 70
    1ef0:	0e 94 77 04 	call	0x8ee	; 0x8ee <gfx_mono_generic_draw_filled_rect>
    1ef4:	f7 fe       	sbrs	r15, 7
    1ef6:	0f c0       	rjmp	.+30     	; 0x1f16 <lcd_show_new_data+0x2da>
    1ef8:	01 e0       	ldi	r16, 0x01	; 1
    1efa:	28 e7       	ldi	r18, 0x78	; 120
    1efc:	48 2d       	mov	r20, r8
    1efe:	6a e7       	ldi	r22, 0x7A	; 122
    1f00:	cc ef       	ldi	r28, 0xFC	; 252
    1f02:	c8 0d       	add	r28, r8
    1f04:	8c 2f       	mov	r24, r28
    1f06:	0e 94 e5 03 	call	0x7ca	; 0x7ca <gfx_mono_generic_draw_line>
    1f0a:	2c e7       	ldi	r18, 0x7C	; 124
    1f0c:	48 2d       	mov	r20, r8
    1f0e:	6a e7       	ldi	r22, 0x7A	; 122
    1f10:	8c 2f       	mov	r24, r28
    1f12:	0e 94 e5 03 	call	0x7ca	; 0x7ca <gfx_mono_generic_draw_line>
    1f16:	01 e0       	ldi	r16, 0x01	; 1
    1f18:	25 e0       	ldi	r18, 0x05	; 5
    1f1a:	4c 2d       	mov	r20, r12
    1f1c:	68 e7       	ldi	r22, 0x78	; 120
    1f1e:	88 2d       	mov	r24, r8
    1f20:	0e 94 77 04 	call	0x8ee	; 0x8ee <gfx_mono_generic_draw_filled_rect>
    1f24:	40 e5       	ldi	r20, 0x50	; 80
    1f26:	4d 1b       	sub	r20, r29
    1f28:	00 e0       	ldi	r16, 0x00	; 0
    1f2a:	25 e0       	ldi	r18, 0x05	; 5
    1f2c:	68 e7       	ldi	r22, 0x78	; 120
    1f2e:	86 e9       	ldi	r24, 0x96	; 150
    1f30:	8d 0f       	add	r24, r29
    1f32:	0e 94 77 04 	call	0x8ee	; 0x8ee <gfx_mono_generic_draw_filled_rect>
    1f36:	1e 14       	cp	r1, r14
    1f38:	1f 04       	cpc	r1, r15
    1f3a:	0c f0       	brlt	.+2      	; 0x1f3e <lcd_show_new_data+0x302>
    1f3c:	4c c0       	rjmp	.+152    	; 0x1fd6 <lcd_show_new_data+0x39a>
    1f3e:	c5 e9       	ldi	r28, 0x95	; 149
    1f40:	cd 0f       	add	r28, r29
    1f42:	d7 56       	subi	r29, 0x67	; 103
    1f44:	01 e0       	ldi	r16, 0x01	; 1
    1f46:	28 e7       	ldi	r18, 0x78	; 120
    1f48:	4c 2f       	mov	r20, r28
    1f4a:	6a e7       	ldi	r22, 0x7A	; 122
    1f4c:	8d 2f       	mov	r24, r29
    1f4e:	0e 94 e5 03 	call	0x7ca	; 0x7ca <gfx_mono_generic_draw_line>
    1f52:	2c e7       	ldi	r18, 0x7C	; 124
    1f54:	4c 2f       	mov	r20, r28
    1f56:	6a e7       	ldi	r22, 0x7A	; 122
    1f58:	8d 2f       	mov	r24, r29
    1f5a:	0e 94 e5 03 	call	0x7ca	; 0x7ca <gfx_mono_generic_draw_line>
    1f5e:	3b c0       	rjmp	.+118    	; 0x1fd6 <lcd_show_new_data+0x39a>
    1f60:	40 5b       	subi	r20, 0xB0	; 176
    1f62:	00 e0       	ldi	r16, 0x00	; 0
    1f64:	23 e0       	ldi	r18, 0x03	; 3
    1f66:	69 e7       	ldi	r22, 0x79	; 121
    1f68:	86 e4       	ldi	r24, 0x46	; 70
    1f6a:	0e 94 77 04 	call	0x8ee	; 0x8ee <gfx_mono_generic_draw_filled_rect>
    1f6e:	f7 fe       	sbrs	r15, 7
    1f70:	0f c0       	rjmp	.+30     	; 0x1f90 <lcd_show_new_data+0x354>
    1f72:	01 e0       	ldi	r16, 0x01	; 1
    1f74:	29 e7       	ldi	r18, 0x79	; 121
    1f76:	48 2d       	mov	r20, r8
    1f78:	6a e7       	ldi	r22, 0x7A	; 122
    1f7a:	cc ef       	ldi	r28, 0xFC	; 252
    1f7c:	c8 0d       	add	r28, r8
    1f7e:	8c 2f       	mov	r24, r28
    1f80:	0e 94 e5 03 	call	0x7ca	; 0x7ca <gfx_mono_generic_draw_line>
    1f84:	2b e7       	ldi	r18, 0x7B	; 123
    1f86:	48 2d       	mov	r20, r8
    1f88:	6a e7       	ldi	r22, 0x7A	; 122
    1f8a:	8c 2f       	mov	r24, r28
    1f8c:	0e 94 e5 03 	call	0x7ca	; 0x7ca <gfx_mono_generic_draw_line>
    1f90:	01 e0       	ldi	r16, 0x01	; 1
    1f92:	23 e0       	ldi	r18, 0x03	; 3
    1f94:	4c 2d       	mov	r20, r12
    1f96:	69 e7       	ldi	r22, 0x79	; 121
    1f98:	88 2d       	mov	r24, r8
    1f9a:	0e 94 77 04 	call	0x8ee	; 0x8ee <gfx_mono_generic_draw_filled_rect>
    1f9e:	40 e5       	ldi	r20, 0x50	; 80
    1fa0:	4d 1b       	sub	r20, r29
    1fa2:	00 e0       	ldi	r16, 0x00	; 0
    1fa4:	23 e0       	ldi	r18, 0x03	; 3
    1fa6:	69 e7       	ldi	r22, 0x79	; 121
    1fa8:	86 e9       	ldi	r24, 0x96	; 150
    1faa:	8d 0f       	add	r24, r29
    1fac:	0e 94 77 04 	call	0x8ee	; 0x8ee <gfx_mono_generic_draw_filled_rect>
    1fb0:	1e 14       	cp	r1, r14
    1fb2:	1f 04       	cpc	r1, r15
    1fb4:	84 f4       	brge	.+32     	; 0x1fd6 <lcd_show_new_data+0x39a>
    1fb6:	c5 e9       	ldi	r28, 0x95	; 149
    1fb8:	cd 0f       	add	r28, r29
    1fba:	d7 56       	subi	r29, 0x67	; 103
    1fbc:	01 e0       	ldi	r16, 0x01	; 1
    1fbe:	29 e7       	ldi	r18, 0x79	; 121
    1fc0:	4c 2f       	mov	r20, r28
    1fc2:	6a e7       	ldi	r22, 0x7A	; 122
    1fc4:	8d 2f       	mov	r24, r29
    1fc6:	0e 94 e5 03 	call	0x7ca	; 0x7ca <gfx_mono_generic_draw_line>
    1fca:	2b e7       	ldi	r18, 0x7B	; 123
    1fcc:	4c 2f       	mov	r20, r28
    1fce:	6a e7       	ldi	r22, 0x7A	; 122
    1fd0:	8d 2f       	mov	r24, r29
    1fd2:	0e 94 e5 03 	call	0x7ca	; 0x7ca <gfx_mono_generic_draw_line>
    1fd6:	90 92 56 03 	sts	0x0356, r9	; 0x800356 <clk_state_old.3266>
    1fda:	8d ef       	ldi	r24, 0xFD	; 253
    1fdc:	72 c2       	rjmp	.+1252   	; 0x24c2 <lcd_show_new_data+0x886>
    1fde:	96 ff       	sbrs	r25, 6
    1fe0:	36 c0       	rjmp	.+108    	; 0x204e <lcd_show_new_data+0x412>
    1fe2:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <idx.3282>
    1fe6:	22 30       	cpi	r18, 0x02	; 2
    1fe8:	90 f5       	brcc	.+100    	; 0x204e <lcd_show_new_data+0x412>
    1fea:	9f 7b       	andi	r25, 0xBF	; 191
    1fec:	90 93 29 04 	sts	0x0429, r25	; 0x800429 <g_showData>
    1ff0:	80 91 4a 04 	lds	r24, 0x044A	; 0x80044a <g_showData+0x21>
    1ff4:	1f 92       	push	r1
    1ff6:	8f 93       	push	r24
    1ff8:	80 91 49 04 	lds	r24, 0x0449	; 0x800449 <g_showData+0x20>
    1ffc:	1f 92       	push	r1
    1ffe:	8f 93       	push	r24
    2000:	80 91 48 04 	lds	r24, 0x0448	; 0x800448 <g_showData+0x1f>
    2004:	1f 92       	push	r1
    2006:	8f 93       	push	r24
    2008:	84 e9       	ldi	r24, 0x94	; 148
    200a:	92 e0       	ldi	r25, 0x02	; 2
    200c:	9f 93       	push	r25
    200e:	8f 93       	push	r24
    2010:	1f 92       	push	r1
    2012:	80 e3       	ldi	r24, 0x30	; 48
    2014:	8f 93       	push	r24
    2016:	8c ed       	ldi	r24, 0xDC	; 220
    2018:	93 e0       	ldi	r25, 0x03	; 3
    201a:	9f 93       	push	r25
    201c:	8f 93       	push	r24
    201e:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    2022:	cf bf       	out	0x3f, r28	; 63
    2024:	23 e0       	ldi	r18, 0x03	; 3
    2026:	31 e0       	ldi	r19, 0x01	; 1
    2028:	41 e4       	ldi	r20, 0x41	; 65
    202a:	6d e5       	ldi	r22, 0x5D	; 93
    202c:	8c ed       	ldi	r24, 0xDC	; 220
    202e:	93 e0       	ldi	r25, 0x03	; 3
    2030:	0e 94 be 06 	call	0xd7c	; 0xd7c <gfx_mono_draw_string>
    2034:	82 e0       	ldi	r24, 0x02	; 2
    2036:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3282>
    203a:	8d b7       	in	r24, 0x3d	; 61
    203c:	9e b7       	in	r25, 0x3e	; 62
    203e:	0c 96       	adiw	r24, 0x0c	; 12
    2040:	0f b6       	in	r0, 0x3f	; 63
    2042:	f8 94       	cli
    2044:	9e bf       	out	0x3e, r25	; 62
    2046:	0f be       	out	0x3f, r0	; 63
    2048:	8d bf       	out	0x3d, r24	; 61
    204a:	81 e0       	ldi	r24, 0x01	; 1
    204c:	3a c2       	rjmp	.+1140   	; 0x24c2 <lcd_show_new_data+0x886>
    204e:	97 ff       	sbrs	r25, 7
    2050:	47 c0       	rjmp	.+142    	; 0x20e0 <lcd_show_new_data+0x4a4>
    2052:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <idx.3282>
    2056:	23 30       	cpi	r18, 0x03	; 3
    2058:	08 f0       	brcs	.+2      	; 0x205c <lcd_show_new_data+0x420>
    205a:	42 c0       	rjmp	.+132    	; 0x20e0 <lcd_show_new_data+0x4a4>
    205c:	80 91 29 04 	lds	r24, 0x0429	; 0x800429 <g_showData>
    2060:	8f 77       	andi	r24, 0x7F	; 127
    2062:	80 93 29 04 	sts	0x0429, r24	; 0x800429 <g_showData>
    2066:	20 91 37 04 	lds	r18, 0x0437	; 0x800437 <g_showData+0xe>
    206a:	30 91 38 04 	lds	r19, 0x0438	; 0x800438 <g_showData+0xf>
    206e:	c9 01       	movw	r24, r18
    2070:	64 e6       	ldi	r22, 0x64	; 100
    2072:	70 e0       	ldi	r23, 0x00	; 0
    2074:	0e 94 f4 1b 	call	0x37e8	; 0x37e8 <__udivmodhi4>
    2078:	9f 93       	push	r25
    207a:	8f 93       	push	r24
    207c:	b9 01       	movw	r22, r18
    207e:	80 e0       	ldi	r24, 0x00	; 0
    2080:	90 e0       	ldi	r25, 0x00	; 0
    2082:	0e 94 7c 1a 	call	0x34f8	; 0x34f8 <__floatunsisf>
    2086:	20 e0       	ldi	r18, 0x00	; 0
    2088:	30 e0       	ldi	r19, 0x00	; 0
    208a:	48 ec       	ldi	r20, 0xC8	; 200
    208c:	52 e4       	ldi	r21, 0x42	; 66
    208e:	0e 94 e3 19 	call	0x33c6	; 0x33c6 <__divsf3>
    2092:	0e 94 4b 1a 	call	0x3496	; 0x3496 <__fixsfsi>
    2096:	7f 93       	push	r23
    2098:	6f 93       	push	r22
    209a:	85 ed       	ldi	r24, 0xD5	; 213
    209c:	91 e0       	ldi	r25, 0x01	; 1
    209e:	9f 93       	push	r25
    20a0:	8f 93       	push	r24
    20a2:	1f 92       	push	r1
    20a4:	80 e3       	ldi	r24, 0x30	; 48
    20a6:	8f 93       	push	r24
    20a8:	8c ed       	ldi	r24, 0xDC	; 220
    20aa:	93 e0       	ldi	r25, 0x03	; 3
    20ac:	9f 93       	push	r25
    20ae:	8f 93       	push	r24
    20b0:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    20b4:	cf bf       	out	0x3f, r28	; 63
    20b6:	23 e0       	ldi	r18, 0x03	; 3
    20b8:	31 e0       	ldi	r19, 0x01	; 1
    20ba:	4a e4       	ldi	r20, 0x4A	; 74
    20bc:	6f e3       	ldi	r22, 0x3F	; 63
    20be:	8c ed       	ldi	r24, 0xDC	; 220
    20c0:	93 e0       	ldi	r25, 0x03	; 3
    20c2:	0e 94 be 06 	call	0xd7c	; 0xd7c <gfx_mono_draw_string>
    20c6:	83 e0       	ldi	r24, 0x03	; 3
    20c8:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3282>
    20cc:	8d b7       	in	r24, 0x3d	; 61
    20ce:	9e b7       	in	r25, 0x3e	; 62
    20d0:	0a 96       	adiw	r24, 0x0a	; 10
    20d2:	0f b6       	in	r0, 0x3f	; 63
    20d4:	f8 94       	cli
    20d6:	9e bf       	out	0x3e, r25	; 62
    20d8:	0f be       	out	0x3f, r0	; 63
    20da:	8d bf       	out	0x3d, r24	; 61
    20dc:	82 e0       	ldi	r24, 0x02	; 2
    20de:	f1 c1       	rjmp	.+994    	; 0x24c2 <lcd_show_new_data+0x886>
    20e0:	20 91 2a 04 	lds	r18, 0x042A	; 0x80042a <g_showData+0x1>
    20e4:	20 ff       	sbrs	r18, 0
    20e6:	32 c0       	rjmp	.+100    	; 0x214c <lcd_show_new_data+0x510>
    20e8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <idx.3282>
    20ec:	34 30       	cpi	r19, 0x04	; 4
    20ee:	70 f5       	brcc	.+92     	; 0x214c <lcd_show_new_data+0x510>
    20f0:	2e 7f       	andi	r18, 0xFE	; 254
    20f2:	20 93 2a 04 	sts	0x042A, r18	; 0x80042a <g_showData+0x1>
    20f6:	80 91 4c 04 	lds	r24, 0x044C	; 0x80044c <g_showData+0x23>
    20fa:	1f 92       	push	r1
    20fc:	8f 93       	push	r24
    20fe:	80 91 4b 04 	lds	r24, 0x044B	; 0x80044b <g_showData+0x22>
    2102:	1f 92       	push	r1
    2104:	8f 93       	push	r24
    2106:	8c ee       	ldi	r24, 0xEC	; 236
    2108:	91 e0       	ldi	r25, 0x01	; 1
    210a:	9f 93       	push	r25
    210c:	8f 93       	push	r24
    210e:	1f 92       	push	r1
    2110:	80 e3       	ldi	r24, 0x30	; 48
    2112:	8f 93       	push	r24
    2114:	8c ed       	ldi	r24, 0xDC	; 220
    2116:	93 e0       	ldi	r25, 0x03	; 3
    2118:	9f 93       	push	r25
    211a:	8f 93       	push	r24
    211c:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    2120:	cf bf       	out	0x3f, r28	; 63
    2122:	23 e0       	ldi	r18, 0x03	; 3
    2124:	31 e0       	ldi	r19, 0x01	; 1
    2126:	43 e5       	ldi	r20, 0x53	; 83
    2128:	61 e5       	ldi	r22, 0x51	; 81
    212a:	8c ed       	ldi	r24, 0xDC	; 220
    212c:	93 e0       	ldi	r25, 0x03	; 3
    212e:	0e 94 be 06 	call	0xd7c	; 0xd7c <gfx_mono_draw_string>
    2132:	84 e0       	ldi	r24, 0x04	; 4
    2134:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3282>
    2138:	8d b7       	in	r24, 0x3d	; 61
    213a:	9e b7       	in	r25, 0x3e	; 62
    213c:	0a 96       	adiw	r24, 0x0a	; 10
    213e:	0f b6       	in	r0, 0x3f	; 63
    2140:	f8 94       	cli
    2142:	9e bf       	out	0x3e, r25	; 62
    2144:	0f be       	out	0x3f, r0	; 63
    2146:	8d bf       	out	0x3d, r24	; 61
    2148:	83 e0       	ldi	r24, 0x03	; 3
    214a:	bb c1       	rjmp	.+886    	; 0x24c2 <lcd_show_new_data+0x886>
    214c:	21 ff       	sbrs	r18, 1
    214e:	41 c0       	rjmp	.+130    	; 0x21d2 <lcd_show_new_data+0x596>
    2150:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <idx.3282>
    2154:	35 30       	cpi	r19, 0x05	; 5
    2156:	e8 f5       	brcc	.+122    	; 0x21d2 <lcd_show_new_data+0x596>
    2158:	80 91 2a 04 	lds	r24, 0x042A	; 0x80042a <g_showData+0x1>
    215c:	8d 7f       	andi	r24, 0xFD	; 253
    215e:	80 93 2a 04 	sts	0x042A, r24	; 0x80042a <g_showData+0x1>
    2162:	80 91 3a 04 	lds	r24, 0x043A	; 0x80043a <g_showData+0x11>
    2166:	8f 93       	push	r24
    2168:	80 91 39 04 	lds	r24, 0x0439	; 0x800439 <g_showData+0x10>
    216c:	8f 93       	push	r24
    216e:	80 91 4f 04 	lds	r24, 0x044F	; 0x80044f <g_showData+0x26>
    2172:	1f 92       	push	r1
    2174:	8f 93       	push	r24
    2176:	1f 92       	push	r1
    2178:	8e e7       	ldi	r24, 0x7E	; 126
    217a:	8f 93       	push	r24
    217c:	80 91 4e 04 	lds	r24, 0x044E	; 0x80044e <g_showData+0x25>
    2180:	1f 92       	push	r1
    2182:	8f 93       	push	r24
    2184:	80 91 4d 04 	lds	r24, 0x044D	; 0x80044d <g_showData+0x24>
    2188:	1f 92       	push	r1
    218a:	8f 93       	push	r24
    218c:	8d ea       	ldi	r24, 0xAD	; 173
    218e:	92 e0       	ldi	r25, 0x02	; 2
    2190:	9f 93       	push	r25
    2192:	8f 93       	push	r24
    2194:	1f 92       	push	r1
    2196:	80 e3       	ldi	r24, 0x30	; 48
    2198:	8f 93       	push	r24
    219a:	8c ed       	ldi	r24, 0xDC	; 220
    219c:	93 e0       	ldi	r25, 0x03	; 3
    219e:	9f 93       	push	r25
    21a0:	8f 93       	push	r24
    21a2:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    21a6:	cf bf       	out	0x3f, r28	; 63
    21a8:	23 e0       	ldi	r18, 0x03	; 3
    21aa:	31 e0       	ldi	r19, 0x01	; 1
    21ac:	4c e5       	ldi	r20, 0x5C	; 92
    21ae:	6f e3       	ldi	r22, 0x3F	; 63
    21b0:	8c ed       	ldi	r24, 0xDC	; 220
    21b2:	93 e0       	ldi	r25, 0x03	; 3
    21b4:	0e 94 be 06 	call	0xd7c	; 0xd7c <gfx_mono_draw_string>
    21b8:	85 e0       	ldi	r24, 0x05	; 5
    21ba:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3282>
    21be:	8d b7       	in	r24, 0x3d	; 61
    21c0:	9e b7       	in	r25, 0x3e	; 62
    21c2:	40 96       	adiw	r24, 0x10	; 16
    21c4:	0f b6       	in	r0, 0x3f	; 63
    21c6:	f8 94       	cli
    21c8:	9e bf       	out	0x3e, r25	; 62
    21ca:	0f be       	out	0x3f, r0	; 63
    21cc:	8d bf       	out	0x3d, r24	; 61
    21ce:	84 e0       	ldi	r24, 0x04	; 4
    21d0:	78 c1       	rjmp	.+752    	; 0x24c2 <lcd_show_new_data+0x886>
    21d2:	22 ff       	sbrs	r18, 2
    21d4:	41 c0       	rjmp	.+130    	; 0x2258 <lcd_show_new_data+0x61c>
    21d6:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <idx.3282>
    21da:	36 30       	cpi	r19, 0x06	; 6
    21dc:	e8 f5       	brcc	.+122    	; 0x2258 <lcd_show_new_data+0x61c>
    21de:	80 91 2a 04 	lds	r24, 0x042A	; 0x80042a <g_showData+0x1>
    21e2:	8b 7f       	andi	r24, 0xFB	; 251
    21e4:	80 93 2a 04 	sts	0x042A, r24	; 0x80042a <g_showData+0x1>
    21e8:	80 91 3c 04 	lds	r24, 0x043C	; 0x80043c <g_showData+0x13>
    21ec:	8f 93       	push	r24
    21ee:	80 91 3b 04 	lds	r24, 0x043B	; 0x80043b <g_showData+0x12>
    21f2:	8f 93       	push	r24
    21f4:	80 91 52 04 	lds	r24, 0x0452	; 0x800452 <g_showData+0x29>
    21f8:	1f 92       	push	r1
    21fa:	8f 93       	push	r24
    21fc:	1f 92       	push	r1
    21fe:	8e e7       	ldi	r24, 0x7E	; 126
    2200:	8f 93       	push	r24
    2202:	80 91 51 04 	lds	r24, 0x0451	; 0x800451 <g_showData+0x28>
    2206:	1f 92       	push	r1
    2208:	8f 93       	push	r24
    220a:	80 91 50 04 	lds	r24, 0x0450	; 0x800450 <g_showData+0x27>
    220e:	1f 92       	push	r1
    2210:	8f 93       	push	r24
    2212:	81 ec       	ldi	r24, 0xC1	; 193
    2214:	92 e0       	ldi	r25, 0x02	; 2
    2216:	9f 93       	push	r25
    2218:	8f 93       	push	r24
    221a:	1f 92       	push	r1
    221c:	80 e3       	ldi	r24, 0x30	; 48
    221e:	8f 93       	push	r24
    2220:	8c ed       	ldi	r24, 0xDC	; 220
    2222:	93 e0       	ldi	r25, 0x03	; 3
    2224:	9f 93       	push	r25
    2226:	8f 93       	push	r24
    2228:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    222c:	cf bf       	out	0x3f, r28	; 63
    222e:	23 e0       	ldi	r18, 0x03	; 3
    2230:	31 e0       	ldi	r19, 0x01	; 1
    2232:	45 e6       	ldi	r20, 0x65	; 101
    2234:	6f e3       	ldi	r22, 0x3F	; 63
    2236:	8c ed       	ldi	r24, 0xDC	; 220
    2238:	93 e0       	ldi	r25, 0x03	; 3
    223a:	0e 94 be 06 	call	0xd7c	; 0xd7c <gfx_mono_draw_string>
    223e:	86 e0       	ldi	r24, 0x06	; 6
    2240:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3282>
    2244:	8d b7       	in	r24, 0x3d	; 61
    2246:	9e b7       	in	r25, 0x3e	; 62
    2248:	40 96       	adiw	r24, 0x10	; 16
    224a:	0f b6       	in	r0, 0x3f	; 63
    224c:	f8 94       	cli
    224e:	9e bf       	out	0x3e, r25	; 62
    2250:	0f be       	out	0x3f, r0	; 63
    2252:	8d bf       	out	0x3d, r24	; 61
    2254:	85 e0       	ldi	r24, 0x05	; 5
    2256:	35 c1       	rjmp	.+618    	; 0x24c2 <lcd_show_new_data+0x886>
    2258:	23 ff       	sbrs	r18, 3
    225a:	36 c0       	rjmp	.+108    	; 0x22c8 <lcd_show_new_data+0x68c>
    225c:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <idx.3282>
    2260:	27 30       	cpi	r18, 0x07	; 7
    2262:	90 f5       	brcc	.+100    	; 0x22c8 <lcd_show_new_data+0x68c>
    2264:	80 91 2a 04 	lds	r24, 0x042A	; 0x80042a <g_showData+0x1>
    2268:	87 7f       	andi	r24, 0xF7	; 247
    226a:	80 93 2a 04 	sts	0x042A, r24	; 0x80042a <g_showData+0x1>
    226e:	80 91 53 04 	lds	r24, 0x0453	; 0x800453 <g_showData+0x2a>
    2272:	1f 92       	push	r1
    2274:	8f 93       	push	r24
    2276:	80 91 3e 04 	lds	r24, 0x043E	; 0x80043e <g_showData+0x15>
    227a:	8f 93       	push	r24
    227c:	80 91 3d 04 	lds	r24, 0x043D	; 0x80043d <g_showData+0x14>
    2280:	8f 93       	push	r24
    2282:	84 ed       	ldi	r24, 0xD4	; 212
    2284:	92 e0       	ldi	r25, 0x02	; 2
    2286:	9f 93       	push	r25
    2288:	8f 93       	push	r24
    228a:	1f 92       	push	r1
    228c:	80 e3       	ldi	r24, 0x30	; 48
    228e:	8f 93       	push	r24
    2290:	8c ed       	ldi	r24, 0xDC	; 220
    2292:	93 e0       	ldi	r25, 0x03	; 3
    2294:	9f 93       	push	r25
    2296:	8f 93       	push	r24
    2298:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    229c:	cf bf       	out	0x3f, r28	; 63
    229e:	23 e0       	ldi	r18, 0x03	; 3
    22a0:	31 e0       	ldi	r19, 0x01	; 1
    22a2:	4e e6       	ldi	r20, 0x6E	; 110
    22a4:	6f e3       	ldi	r22, 0x3F	; 63
    22a6:	8c ed       	ldi	r24, 0xDC	; 220
    22a8:	93 e0       	ldi	r25, 0x03	; 3
    22aa:	0e 94 be 06 	call	0xd7c	; 0xd7c <gfx_mono_draw_string>
    22ae:	87 e0       	ldi	r24, 0x07	; 7
    22b0:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3282>
    22b4:	8d b7       	in	r24, 0x3d	; 61
    22b6:	9e b7       	in	r25, 0x3e	; 62
    22b8:	0a 96       	adiw	r24, 0x0a	; 10
    22ba:	0f b6       	in	r0, 0x3f	; 63
    22bc:	f8 94       	cli
    22be:	9e bf       	out	0x3e, r25	; 62
    22c0:	0f be       	out	0x3f, r0	; 63
    22c2:	8d bf       	out	0x3d, r24	; 61
    22c4:	86 e0       	ldi	r24, 0x06	; 6
    22c6:	fd c0       	rjmp	.+506    	; 0x24c2 <lcd_show_new_data+0x886>
    22c8:	93 ff       	sbrs	r25, 3
    22ca:	38 c0       	rjmp	.+112    	; 0x233c <lcd_show_new_data+0x700>
    22cc:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <idx.3282>
    22d0:	28 30       	cpi	r18, 0x08	; 8
    22d2:	a0 f5       	brcc	.+104    	; 0x233c <lcd_show_new_data+0x700>
    22d4:	80 91 29 04 	lds	r24, 0x0429	; 0x800429 <g_showData>
    22d8:	87 7f       	andi	r24, 0xF7	; 247
    22da:	80 93 29 04 	sts	0x0429, r24	; 0x800429 <g_showData>
    22de:	80 91 34 04 	lds	r24, 0x0434	; 0x800434 <g_showData+0xb>
    22e2:	8f 93       	push	r24
    22e4:	80 91 33 04 	lds	r24, 0x0433	; 0x800433 <g_showData+0xa>
    22e8:	8f 93       	push	r24
    22ea:	80 91 32 04 	lds	r24, 0x0432	; 0x800432 <g_showData+0x9>
    22ee:	8f 93       	push	r24
    22f0:	80 91 31 04 	lds	r24, 0x0431	; 0x800431 <g_showData+0x8>
    22f4:	8f 93       	push	r24
    22f6:	8d ed       	ldi	r24, 0xDD	; 221
    22f8:	92 e0       	ldi	r25, 0x02	; 2
    22fa:	9f 93       	push	r25
    22fc:	8f 93       	push	r24
    22fe:	1f 92       	push	r1
    2300:	80 e3       	ldi	r24, 0x30	; 48
    2302:	8f 93       	push	r24
    2304:	8c ed       	ldi	r24, 0xDC	; 220
    2306:	93 e0       	ldi	r25, 0x03	; 3
    2308:	9f 93       	push	r25
    230a:	8f 93       	push	r24
    230c:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    2310:	cf bf       	out	0x3f, r28	; 63
    2312:	23 e0       	ldi	r18, 0x03	; 3
    2314:	31 e0       	ldi	r19, 0x01	; 1
    2316:	46 e2       	ldi	r20, 0x26	; 38
    2318:	6f e3       	ldi	r22, 0x3F	; 63
    231a:	8c ed       	ldi	r24, 0xDC	; 220
    231c:	93 e0       	ldi	r25, 0x03	; 3
    231e:	0e 94 be 06 	call	0xd7c	; 0xd7c <gfx_mono_draw_string>
    2322:	88 e0       	ldi	r24, 0x08	; 8
    2324:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3282>
    2328:	8d b7       	in	r24, 0x3d	; 61
    232a:	9e b7       	in	r25, 0x3e	; 62
    232c:	0a 96       	adiw	r24, 0x0a	; 10
    232e:	0f b6       	in	r0, 0x3f	; 63
    2330:	f8 94       	cli
    2332:	9e bf       	out	0x3e, r25	; 62
    2334:	0f be       	out	0x3f, r0	; 63
    2336:	8d bf       	out	0x3d, r24	; 61
    2338:	87 e0       	ldi	r24, 0x07	; 7
    233a:	c3 c0       	rjmp	.+390    	; 0x24c2 <lcd_show_new_data+0x886>
    233c:	94 ff       	sbrs	r25, 4
    233e:	85 c0       	rjmp	.+266    	; 0x244a <lcd_show_new_data+0x80e>
    2340:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <idx.3282>
    2344:	29 30       	cpi	r18, 0x09	; 9
    2346:	08 f0       	brcs	.+2      	; 0x234a <lcd_show_new_data+0x70e>
    2348:	80 c0       	rjmp	.+256    	; 0x244a <lcd_show_new_data+0x80e>
    234a:	f0 90 45 04 	lds	r15, 0x0445	; 0x800445 <g_showData+0x1c>
    234e:	60 91 46 04 	lds	r22, 0x0446	; 0x800446 <g_showData+0x1d>
    2352:	80 91 29 04 	lds	r24, 0x0429	; 0x800429 <g_showData>
    2356:	8f 7e       	andi	r24, 0xEF	; 239
    2358:	80 93 29 04 	sts	0x0429, r24	; 0x800429 <g_showData>
    235c:	cf bf       	out	0x3f, r28	; 63
    235e:	70 e0       	ldi	r23, 0x00	; 0
    2360:	80 e0       	ldi	r24, 0x00	; 0
    2362:	90 e0       	ldi	r25, 0x00	; 0
    2364:	0e 94 7e 1a 	call	0x34fc	; 0x34fc <__floatsisf>
    2368:	2b 01       	movw	r4, r22
    236a:	3c 01       	movw	r6, r24
    236c:	20 e0       	ldi	r18, 0x00	; 0
    236e:	30 e0       	ldi	r19, 0x00	; 0
    2370:	4a e7       	ldi	r20, 0x7A	; 122
    2372:	50 e4       	ldi	r21, 0x40	; 64
    2374:	0e 94 85 1b 	call	0x370a	; 0x370a <__mulsf3>
    2378:	0e 94 4b 1a 	call	0x3496	; 0x3496 <__fixsfsi>
    237c:	7f 93       	push	r23
    237e:	6f 93       	push	r22
    2380:	1f 92       	push	r1
    2382:	ff 92       	push	r15
    2384:	07 ee       	ldi	r16, 0xE7	; 231
    2386:	12 e0       	ldi	r17, 0x02	; 2
    2388:	1f 93       	push	r17
    238a:	0f 93       	push	r16
    238c:	1f 92       	push	r1
    238e:	80 e3       	ldi	r24, 0x30	; 48
    2390:	b8 2e       	mov	r11, r24
    2392:	bf 92       	push	r11
    2394:	cc ed       	ldi	r28, 0xDC	; 220
    2396:	d3 e0       	ldi	r29, 0x03	; 3
    2398:	df 93       	push	r29
    239a:	cf 93       	push	r28
    239c:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    23a0:	23 e0       	ldi	r18, 0x03	; 3
    23a2:	31 e0       	ldi	r19, 0x01	; 1
    23a4:	4f e2       	ldi	r20, 0x2F	; 47
    23a6:	6f e3       	ldi	r22, 0x3F	; 63
    23a8:	ce 01       	movw	r24, r28
    23aa:	0e 94 be 06 	call	0xd7c	; 0xd7c <gfx_mono_draw_string>
    23ae:	6f 2d       	mov	r22, r15
    23b0:	70 e0       	ldi	r23, 0x00	; 0
    23b2:	80 e0       	ldi	r24, 0x00	; 0
    23b4:	90 e0       	ldi	r25, 0x00	; 0
    23b6:	0e 94 7c 1a 	call	0x34f8	; 0x34f8 <__floatunsisf>
    23ba:	6b 01       	movw	r12, r22
    23bc:	7c 01       	movw	r14, r24
    23be:	20 e0       	ldi	r18, 0x00	; 0
    23c0:	30 e0       	ldi	r19, 0x00	; 0
    23c2:	40 e8       	ldi	r20, 0x80	; 128
    23c4:	5b e3       	ldi	r21, 0x3B	; 59
    23c6:	c3 01       	movw	r24, r6
    23c8:	b2 01       	movw	r22, r4
    23ca:	0e 94 85 1b 	call	0x370a	; 0x370a <__mulsf3>
    23ce:	a7 01       	movw	r20, r14
    23d0:	96 01       	movw	r18, r12
    23d2:	91 d7       	rcall	.+3874   	; 0x32f6 <__addsf3>
    23d4:	20 e0       	ldi	r18, 0x00	; 0
    23d6:	30 e0       	ldi	r19, 0x00	; 0
    23d8:	48 ec       	ldi	r20, 0xC8	; 200
    23da:	5e e3       	ldi	r21, 0x3E	; 62
    23dc:	0e 94 85 1b 	call	0x370a	; 0x370a <__mulsf3>
    23e0:	6b 01       	movw	r12, r22
    23e2:	7c 01       	movw	r14, r24
    23e4:	0e 94 b9 1a 	call	0x3572	; 0x3572 <floor>
    23e8:	9b 01       	movw	r18, r22
    23ea:	ac 01       	movw	r20, r24
    23ec:	c7 01       	movw	r24, r14
    23ee:	b6 01       	movw	r22, r12
    23f0:	81 d7       	rcall	.+3842   	; 0x32f4 <__subsf3>
    23f2:	20 e0       	ldi	r18, 0x00	; 0
    23f4:	30 e0       	ldi	r19, 0x00	; 0
    23f6:	4a e7       	ldi	r20, 0x7A	; 122
    23f8:	54 e4       	ldi	r21, 0x44	; 68
    23fa:	0e 94 85 1b 	call	0x370a	; 0x370a <__mulsf3>
    23fe:	0e 94 4b 1a 	call	0x3496	; 0x3496 <__fixsfsi>
    2402:	7f 93       	push	r23
    2404:	6f 93       	push	r22
    2406:	c7 01       	movw	r24, r14
    2408:	b6 01       	movw	r22, r12
    240a:	0e 94 4b 1a 	call	0x3496	; 0x3496 <__fixsfsi>
    240e:	7f 93       	push	r23
    2410:	6f 93       	push	r22
    2412:	1f 93       	push	r17
    2414:	0f 93       	push	r16
    2416:	1f 92       	push	r1
    2418:	bf 92       	push	r11
    241a:	df 93       	push	r29
    241c:	cf 93       	push	r28
    241e:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    2422:	23 e0       	ldi	r18, 0x03	; 3
    2424:	31 e0       	ldi	r19, 0x01	; 1
    2426:	4f e2       	ldi	r20, 0x2F	; 47
    2428:	6d e8       	ldi	r22, 0x8D	; 141
    242a:	ce 01       	movw	r24, r28
    242c:	0e 94 be 06 	call	0xd7c	; 0xd7c <gfx_mono_draw_string>
    2430:	89 e0       	ldi	r24, 0x09	; 9
    2432:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3282>
    2436:	8d b7       	in	r24, 0x3d	; 61
    2438:	9e b7       	in	r25, 0x3e	; 62
    243a:	44 96       	adiw	r24, 0x14	; 20
    243c:	0f b6       	in	r0, 0x3f	; 63
    243e:	f8 94       	cli
    2440:	9e bf       	out	0x3e, r25	; 62
    2442:	0f be       	out	0x3f, r0	; 63
    2444:	8d bf       	out	0x3d, r24	; 61
    2446:	88 e0       	ldi	r24, 0x08	; 8
    2448:	3c c0       	rjmp	.+120    	; 0x24c2 <lcd_show_new_data+0x886>
    244a:	95 ff       	sbrs	r25, 5
    244c:	36 c0       	rjmp	.+108    	; 0x24ba <lcd_show_new_data+0x87e>
    244e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <idx.3282>
    2452:	9a 30       	cpi	r25, 0x0A	; 10
    2454:	90 f5       	brcc	.+100    	; 0x24ba <lcd_show_new_data+0x87e>
    2456:	80 91 29 04 	lds	r24, 0x0429	; 0x800429 <g_showData>
    245a:	8f 7d       	andi	r24, 0xDF	; 223
    245c:	80 93 29 04 	sts	0x0429, r24	; 0x800429 <g_showData>
    2460:	80 91 36 04 	lds	r24, 0x0436	; 0x800436 <g_showData+0xd>
    2464:	8f 93       	push	r24
    2466:	80 91 35 04 	lds	r24, 0x0435	; 0x800435 <g_showData+0xc>
    246a:	8f 93       	push	r24
    246c:	80 91 47 04 	lds	r24, 0x0447	; 0x800447 <g_showData+0x1e>
    2470:	1f 92       	push	r1
    2472:	8f 93       	push	r24
    2474:	85 e8       	ldi	r24, 0x85	; 133
    2476:	92 e0       	ldi	r25, 0x02	; 2
    2478:	9f 93       	push	r25
    247a:	8f 93       	push	r24
    247c:	1f 92       	push	r1
    247e:	80 e3       	ldi	r24, 0x30	; 48
    2480:	8f 93       	push	r24
    2482:	8c ed       	ldi	r24, 0xDC	; 220
    2484:	93 e0       	ldi	r25, 0x03	; 3
    2486:	9f 93       	push	r25
    2488:	8f 93       	push	r24
    248a:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    248e:	cf bf       	out	0x3f, r28	; 63
    2490:	23 e0       	ldi	r18, 0x03	; 3
    2492:	31 e0       	ldi	r19, 0x01	; 1
    2494:	48 e3       	ldi	r20, 0x38	; 56
    2496:	6f e3       	ldi	r22, 0x3F	; 63
    2498:	8c ed       	ldi	r24, 0xDC	; 220
    249a:	93 e0       	ldi	r25, 0x03	; 3
    249c:	0e 94 be 06 	call	0xd7c	; 0xd7c <gfx_mono_draw_string>
    24a0:	8a e0       	ldi	r24, 0x0A	; 10
    24a2:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3282>
    24a6:	8d b7       	in	r24, 0x3d	; 61
    24a8:	9e b7       	in	r25, 0x3e	; 62
    24aa:	0a 96       	adiw	r24, 0x0a	; 10
    24ac:	0f b6       	in	r0, 0x3f	; 63
    24ae:	f8 94       	cli
    24b0:	9e bf       	out	0x3e, r25	; 62
    24b2:	0f be       	out	0x3f, r0	; 63
    24b4:	8d bf       	out	0x3d, r24	; 61
    24b6:	89 e0       	ldi	r24, 0x09	; 9
    24b8:	04 c0       	rjmp	.+8      	; 0x24c2 <lcd_show_new_data+0x886>
    24ba:	91 e0       	ldi	r25, 0x01	; 1
    24bc:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <idx.3282>
    24c0:	cf bf       	out	0x3f, r28	; 63
    24c2:	df 91       	pop	r29
    24c4:	cf 91       	pop	r28
    24c6:	1f 91       	pop	r17
    24c8:	0f 91       	pop	r16
    24ca:	ff 90       	pop	r15
    24cc:	ef 90       	pop	r14
    24ce:	df 90       	pop	r13
    24d0:	cf 90       	pop	r12
    24d2:	bf 90       	pop	r11
    24d4:	af 90       	pop	r10
    24d6:	9f 90       	pop	r9
    24d8:	8f 90       	pop	r8
    24da:	7f 90       	pop	r7
    24dc:	6f 90       	pop	r6
    24de:	5f 90       	pop	r5
    24e0:	4f 90       	pop	r4
    24e2:	3f 90       	pop	r3
    24e4:	08 95       	ret

000024e6 <lcd_animation_prepare>:
    24e6:	ef 92       	push	r14
    24e8:	ff 92       	push	r15
    24ea:	0f 93       	push	r16
    24ec:	1f 93       	push	r17
    24ee:	cf 93       	push	r28
    24f0:	df 93       	push	r29
    24f2:	83 ec       	ldi	r24, 0xC3	; 195
    24f4:	9f ef       	ldi	r25, 0xFF	; 255
    24f6:	90 93 db 03 	sts	0x03DB, r25	; 0x8003db <s_animation_train_origin+0x1>
    24fa:	80 93 da 03 	sts	0x03DA, r24	; 0x8003da <s_animation_train_origin>
    24fe:	81 e0       	ldi	r24, 0x01	; 1
    2500:	80 93 d9 03 	sts	0x03D9, r24	; 0x8003d9 <s_animation_dx>
    2504:	20 e0       	ldi	r18, 0x00	; 0
    2506:	30 e0       	ldi	r19, 0x00	; 0
    2508:	8b e0       	ldi	r24, 0x0B	; 11
    250a:	e8 2e       	mov	r14, r24
    250c:	f1 2c       	mov	r15, r1
    250e:	c0 e4       	ldi	r28, 0x40	; 64
    2510:	48 ef       	ldi	r20, 0xF8	; 248
    2512:	d8 ec       	ldi	r29, 0xC8	; 200
    2514:	18 ed       	ldi	r17, 0xD8	; 216
    2516:	0f ed       	ldi	r16, 0xDF	; 223
    2518:	21 15       	cp	r18, r1
    251a:	31 05       	cpc	r19, r1
    251c:	19 f4       	brne	.+6      	; 0x2524 <lcd_animation_prepare+0x3e>
    251e:	10 92 94 03 	sts	0x0394, r1	; 0x800394 <s_animation_train_left>
    2522:	43 c0       	rjmp	.+134    	; 0x25aa <lcd_animation_prepare+0xc4>
    2524:	23 30       	cpi	r18, 0x03	; 3
    2526:	31 05       	cpc	r19, r1
    2528:	5c f4       	brge	.+22     	; 0x2540 <lcd_animation_prepare+0x5a>
    252a:	f9 01       	movw	r30, r18
    252c:	ec 56       	subi	r30, 0x6C	; 108
    252e:	fc 4f       	sbci	r31, 0xFC	; 252
    2530:	40 83       	st	Z, r20
    2532:	2f 5f       	subi	r18, 0xFF	; 255
    2534:	3f 4f       	sbci	r19, 0xFF	; 255
    2536:	f9 01       	movw	r30, r18
    2538:	ec 56       	subi	r30, 0x6C	; 108
    253a:	fc 4f       	sbci	r31, 0xFC	; 252
    253c:	10 83       	st	Z, r17
    253e:	35 c0       	rjmp	.+106    	; 0x25aa <lcd_animation_prepare+0xc4>
    2540:	25 30       	cpi	r18, 0x05	; 5
    2542:	31 05       	cpc	r19, r1
    2544:	2c f4       	brge	.+10     	; 0x2550 <lcd_animation_prepare+0x6a>
    2546:	f9 01       	movw	r30, r18
    2548:	ec 56       	subi	r30, 0x6C	; 108
    254a:	fc 4f       	sbci	r31, 0xFC	; 252
    254c:	00 83       	st	Z, r16
    254e:	2d c0       	rjmp	.+90     	; 0x25aa <lcd_animation_prepare+0xc4>
    2550:	2b 30       	cpi	r18, 0x0B	; 11
    2552:	31 05       	cpc	r19, r1
    2554:	2c f4       	brge	.+10     	; 0x2560 <lcd_animation_prepare+0x7a>
    2556:	f9 01       	movw	r30, r18
    2558:	ec 56       	subi	r30, 0x6C	; 108
    255a:	fc 4f       	sbci	r31, 0xFC	; 252
    255c:	10 83       	st	Z, r17
    255e:	25 c0       	rjmp	.+74     	; 0x25aa <lcd_animation_prepare+0xc4>
    2560:	20 31       	cpi	r18, 0x10	; 16
    2562:	31 05       	cpc	r19, r1
    2564:	e4 f0       	brlt	.+56     	; 0x259e <lcd_animation_prepare+0xb8>
    2566:	2c 33       	cpi	r18, 0x3C	; 60
    2568:	31 05       	cpc	r19, r1
    256a:	19 f4       	brne	.+6      	; 0x2572 <lcd_animation_prepare+0x8c>
    256c:	10 92 d0 03 	sts	0x03D0, r1	; 0x8003d0 <s_animation_train_left+0x3c>
    2570:	1c c0       	rjmp	.+56     	; 0x25aa <lcd_animation_prepare+0xc4>
    2572:	c9 01       	movw	r24, r18
    2574:	40 97       	sbiw	r24, 0x10	; 16
    2576:	b7 01       	movw	r22, r14
    2578:	0e 94 08 1c 	call	0x3810	; 0x3810 <__divmodhi4>
    257c:	f9 01       	movw	r30, r18
    257e:	ec 56       	subi	r30, 0x6C	; 108
    2580:	fc 4f       	sbci	r31, 0xFC	; 252
    2582:	89 2b       	or	r24, r25
    2584:	89 f4       	brne	.+34     	; 0x25a8 <lcd_animation_prepare+0xc2>
    2586:	c0 83       	st	Z, r28
    2588:	c1 83       	std	Z+1, r28	; 0x01
    258a:	c2 83       	std	Z+2, r28	; 0x02
    258c:	43 83       	std	Z+3, r20	; 0x03
    258e:	44 83       	std	Z+4, r20	; 0x04
    2590:	d5 83       	std	Z+5, r29	; 0x05
    2592:	46 83       	std	Z+6, r20	; 0x06
    2594:	47 83       	std	Z+7, r20	; 0x07
    2596:	d0 87       	std	Z+8, r29	; 0x08
    2598:	41 87       	std	Z+9, r20	; 0x09
    259a:	26 5f       	subi	r18, 0xF6	; 246
    259c:	3f 4f       	sbci	r19, 0xFF	; 255
    259e:	f9 01       	movw	r30, r18
    25a0:	ec 56       	subi	r30, 0x6C	; 108
    25a2:	fc 4f       	sbci	r31, 0xFC	; 252
    25a4:	40 83       	st	Z, r20
    25a6:	01 c0       	rjmp	.+2      	; 0x25aa <lcd_animation_prepare+0xc4>
    25a8:	10 82       	st	Z, r1
    25aa:	2f 5f       	subi	r18, 0xFF	; 255
    25ac:	3f 4f       	sbci	r19, 0xFF	; 255
    25ae:	2d 33       	cpi	r18, 0x3D	; 61
    25b0:	31 05       	cpc	r19, r1
    25b2:	0c f4       	brge	.+2      	; 0x25b6 <lcd_animation_prepare+0xd0>
    25b4:	b1 cf       	rjmp	.-158    	; 0x2518 <lcd_animation_prepare+0x32>
    25b6:	a4 e9       	ldi	r26, 0x94	; 148
    25b8:	b3 e0       	ldi	r27, 0x03	; 3
    25ba:	e4 e9       	ldi	r30, 0x94	; 148
    25bc:	f3 e0       	ldi	r31, 0x03	; 3
    25be:	8d 91       	ld	r24, X+
    25c0:	82 93       	st	-Z, r24
    25c2:	83 e0       	ldi	r24, 0x03	; 3
    25c4:	e7 35       	cpi	r30, 0x57	; 87
    25c6:	f8 07       	cpc	r31, r24
    25c8:	d1 f7       	brne	.-12     	; 0x25be <lcd_animation_prepare+0xd8>
    25ca:	00 e0       	ldi	r16, 0x00	; 0
    25cc:	28 e0       	ldi	r18, 0x08	; 8
    25ce:	40 ef       	ldi	r20, 0xF0	; 240
    25d0:	68 e7       	ldi	r22, 0x78	; 120
    25d2:	80 e0       	ldi	r24, 0x00	; 0
    25d4:	0e 94 77 04 	call	0x8ee	; 0x8ee <gfx_mono_generic_draw_filled_rect>
    25d8:	df 91       	pop	r29
    25da:	cf 91       	pop	r28
    25dc:	1f 91       	pop	r17
    25de:	0f 91       	pop	r16
    25e0:	ff 90       	pop	r15
    25e2:	ef 90       	pop	r14
    25e4:	08 95       	ret

000025e6 <lcd_animation_loop>:
    25e6:	cf 92       	push	r12
    25e8:	df 92       	push	r13
    25ea:	ef 92       	push	r14
    25ec:	ff 92       	push	r15
    25ee:	0f 93       	push	r16
    25f0:	80 91 d9 03 	lds	r24, 0x03D9	; 0x8003d9 <s_animation_dx>
    25f4:	88 23       	and	r24, r24
    25f6:	09 f4       	brne	.+2      	; 0x25fa <lcd_animation_loop+0x14>
    25f8:	77 c1       	rjmp	.+750    	; 0x28e8 <lcd_animation_loop+0x302>
    25fa:	0c d4       	rcall	.+2072   	; 0x2e14 <get_abs_time>
    25fc:	6b 01       	movw	r12, r22
    25fe:	7c 01       	movw	r14, r24
    2600:	20 91 d1 03 	lds	r18, 0x03D1	; 0x8003d1 <s_animation_time_last_train>
    2604:	30 91 d2 03 	lds	r19, 0x03D2	; 0x8003d2 <s_animation_time_last_train+0x1>
    2608:	40 91 d3 03 	lds	r20, 0x03D3	; 0x8003d3 <s_animation_time_last_train+0x2>
    260c:	50 91 d4 03 	lds	r21, 0x03D4	; 0x8003d4 <s_animation_time_last_train+0x3>
    2610:	71 d6       	rcall	.+3298   	; 0x32f4 <__subsf3>
    2612:	2a e0       	ldi	r18, 0x0A	; 10
    2614:	37 ed       	ldi	r19, 0xD7	; 215
    2616:	43 e2       	ldi	r20, 0x23	; 35
    2618:	5d e3       	ldi	r21, 0x3D	; 61
    261a:	0e 94 81 1b 	call	0x3702	; 0x3702 <__gesf2>
    261e:	87 fd       	sbrc	r24, 7
    2620:	5b c0       	rjmp	.+182    	; 0x26d8 <lcd_animation_loop+0xf2>
    2622:	c0 92 d1 03 	sts	0x03D1, r12	; 0x8003d1 <s_animation_time_last_train>
    2626:	d0 92 d2 03 	sts	0x03D2, r13	; 0x8003d2 <s_animation_time_last_train+0x1>
    262a:	e0 92 d3 03 	sts	0x03D3, r14	; 0x8003d3 <s_animation_time_last_train+0x2>
    262e:	f0 92 d4 03 	sts	0x03D4, r15	; 0x8003d4 <s_animation_time_last_train+0x3>
    2632:	80 91 d9 03 	lds	r24, 0x03D9	; 0x8003d9 <s_animation_dx>
    2636:	e0 91 da 03 	lds	r30, 0x03DA	; 0x8003da <s_animation_train_origin>
    263a:	f0 91 db 03 	lds	r31, 0x03DB	; 0x8003db <s_animation_train_origin+0x1>
    263e:	e8 0f       	add	r30, r24
    2640:	f1 1d       	adc	r31, r1
    2642:	87 fd       	sbrc	r24, 7
    2644:	fa 95       	dec	r31
    2646:	f0 93 db 03 	sts	0x03DB, r31	; 0x8003db <s_animation_train_origin+0x1>
    264a:	e0 93 da 03 	sts	0x03DA, r30	; 0x8003da <s_animation_train_origin>
    264e:	ea 3b       	cpi	r30, 0xBA	; 186
    2650:	8f ef       	ldi	r24, 0xFF	; 255
    2652:	f8 07       	cpc	r31, r24
    2654:	24 f4       	brge	.+8      	; 0x265e <lcd_animation_loop+0x78>
    2656:	81 e0       	ldi	r24, 0x01	; 1
    2658:	80 93 d9 03 	sts	0x03D9, r24	; 0x8003d9 <s_animation_dx>
    265c:	06 c0       	rjmp	.+12     	; 0x266a <lcd_animation_loop+0x84>
    265e:	ea 3f       	cpi	r30, 0xFA	; 250
    2660:	f1 05       	cpc	r31, r1
    2662:	1c f0       	brlt	.+6      	; 0x266a <lcd_animation_loop+0x84>
    2664:	8f ef       	ldi	r24, 0xFF	; 255
    2666:	80 93 d9 03 	sts	0x03D9, r24	; 0x8003d9 <s_animation_dx>
    266a:	80 91 d9 03 	lds	r24, 0x03D9	; 0x8003d9 <s_animation_dx>
    266e:	87 ff       	sbrs	r24, 7
    2670:	1a c0       	rjmp	.+52     	; 0x26a6 <lcd_animation_loop+0xc0>
    2672:	e0 3f       	cpi	r30, 0xF0	; 240
    2674:	f1 05       	cpc	r31, r1
    2676:	40 f4       	brcc	.+16     	; 0x2688 <lcd_animation_loop+0xa2>
    2678:	2d e3       	ldi	r18, 0x3D	; 61
    267a:	4e 2f       	mov	r20, r30
    267c:	6f e0       	ldi	r22, 0x0F	; 15
    267e:	84 e9       	ldi	r24, 0x94	; 148
    2680:	93 e0       	ldi	r25, 0x03	; 3
    2682:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <gfx_mono_lcd_uc1608_put_page>
    2686:	28 c0       	rjmp	.+80     	; 0x26d8 <lcd_animation_loop+0xf2>
    2688:	cf 01       	movw	r24, r30
    268a:	cc 96       	adiw	r24, 0x3c	; 60
    268c:	cc 97       	sbiw	r24, 0x3c	; 60
    268e:	20 f5       	brcc	.+72     	; 0x26d8 <lcd_animation_loop+0xf2>
    2690:	2d e3       	ldi	r18, 0x3D	; 61
    2692:	2e 0f       	add	r18, r30
    2694:	40 e0       	ldi	r20, 0x00	; 0
    2696:	6f e0       	ldi	r22, 0x0F	; 15
    2698:	84 e9       	ldi	r24, 0x94	; 148
    269a:	93 e0       	ldi	r25, 0x03	; 3
    269c:	8e 1b       	sub	r24, r30
    269e:	9f 0b       	sbc	r25, r31
    26a0:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <gfx_mono_lcd_uc1608_put_page>
    26a4:	19 c0       	rjmp	.+50     	; 0x26d8 <lcd_animation_loop+0xf2>
    26a6:	e0 3f       	cpi	r30, 0xF0	; 240
    26a8:	f1 05       	cpc	r31, r1
    26aa:	40 f4       	brcc	.+16     	; 0x26bc <lcd_animation_loop+0xd6>
    26ac:	2d e3       	ldi	r18, 0x3D	; 61
    26ae:	4e 2f       	mov	r20, r30
    26b0:	6f e0       	ldi	r22, 0x0F	; 15
    26b2:	87 e5       	ldi	r24, 0x57	; 87
    26b4:	93 e0       	ldi	r25, 0x03	; 3
    26b6:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <gfx_mono_lcd_uc1608_put_page>
    26ba:	0e c0       	rjmp	.+28     	; 0x26d8 <lcd_animation_loop+0xf2>
    26bc:	cf 01       	movw	r24, r30
    26be:	cc 96       	adiw	r24, 0x3c	; 60
    26c0:	cc 97       	sbiw	r24, 0x3c	; 60
    26c2:	50 f4       	brcc	.+20     	; 0x26d8 <lcd_animation_loop+0xf2>
    26c4:	2d e3       	ldi	r18, 0x3D	; 61
    26c6:	2e 0f       	add	r18, r30
    26c8:	40 e0       	ldi	r20, 0x00	; 0
    26ca:	6f e0       	ldi	r22, 0x0F	; 15
    26cc:	87 e5       	ldi	r24, 0x57	; 87
    26ce:	93 e0       	ldi	r25, 0x03	; 3
    26d0:	8e 1b       	sub	r24, r30
    26d2:	9f 0b       	sbc	r25, r31
    26d4:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <gfx_mono_lcd_uc1608_put_page>
    26d8:	20 91 d5 03 	lds	r18, 0x03D5	; 0x8003d5 <s_animation_time_last_temp>
    26dc:	30 91 d6 03 	lds	r19, 0x03D6	; 0x8003d6 <s_animation_time_last_temp+0x1>
    26e0:	40 91 d7 03 	lds	r20, 0x03D7	; 0x8003d7 <s_animation_time_last_temp+0x2>
    26e4:	50 91 d8 03 	lds	r21, 0x03D8	; 0x8003d8 <s_animation_time_last_temp+0x3>
    26e8:	c7 01       	movw	r24, r14
    26ea:	b6 01       	movw	r22, r12
    26ec:	03 d6       	rcall	.+3078   	; 0x32f4 <__subsf3>
    26ee:	20 e0       	ldi	r18, 0x00	; 0
    26f0:	30 e0       	ldi	r19, 0x00	; 0
    26f2:	40 e0       	ldi	r20, 0x00	; 0
    26f4:	5f e3       	ldi	r21, 0x3F	; 63
    26f6:	0e 94 81 1b 	call	0x3702	; 0x3702 <__gesf2>
    26fa:	87 fd       	sbrc	r24, 7
    26fc:	be c0       	rjmp	.+380    	; 0x287a <lcd_animation_loop+0x294>
    26fe:	c0 92 d5 03 	sts	0x03D5, r12	; 0x8003d5 <s_animation_time_last_temp>
    2702:	d0 92 d6 03 	sts	0x03D6, r13	; 0x8003d6 <s_animation_time_last_temp+0x1>
    2706:	e0 92 d7 03 	sts	0x03D7, r14	; 0x8003d7 <s_animation_time_last_temp+0x2>
    270a:	f0 92 d8 03 	sts	0x03D8, r15	; 0x8003d8 <s_animation_time_last_temp+0x3>
    270e:	ea d3       	rcall	.+2004   	; 0x2ee4 <s_task>
    2710:	95 d8       	rcall	.-3798   	; 0x183c <cpu_irq_save>
    2712:	c0 90 5b 04 	lds	r12, 0x045B	; 0x80045b <g_temp>
    2716:	d0 90 5c 04 	lds	r13, 0x045C	; 0x80045c <g_temp+0x1>
    271a:	e0 90 5d 04 	lds	r14, 0x045D	; 0x80045d <g_temp+0x2>
    271e:	f0 90 5e 04 	lds	r15, 0x045E	; 0x80045e <g_temp+0x3>
    2722:	8f bf       	out	0x3f, r24	; 63
    2724:	20 e0       	ldi	r18, 0x00	; 0
    2726:	30 e0       	ldi	r19, 0x00	; 0
    2728:	a9 01       	movw	r20, r18
    272a:	c7 01       	movw	r24, r14
    272c:	b6 01       	movw	r22, r12
    272e:	47 d6       	rcall	.+3214   	; 0x33be <__cmpsf2>
    2730:	87 ff       	sbrs	r24, 7
    2732:	03 c0       	rjmp	.+6      	; 0x273a <lcd_animation_loop+0x154>
    2734:	c1 2c       	mov	r12, r1
    2736:	d1 2c       	mov	r13, r1
    2738:	76 01       	movw	r14, r12
    273a:	20 91 52 03 	lds	r18, 0x0352	; 0x800352 <t_last.3303>
    273e:	30 91 53 03 	lds	r19, 0x0353	; 0x800353 <t_last.3303+0x1>
    2742:	40 91 54 03 	lds	r20, 0x0354	; 0x800354 <t_last.3303+0x2>
    2746:	50 91 55 03 	lds	r21, 0x0355	; 0x800355 <t_last.3303+0x3>
    274a:	c7 01       	movw	r24, r14
    274c:	b6 01       	movw	r22, r12
    274e:	d2 d5       	rcall	.+2980   	; 0x32f4 <__subsf3>
    2750:	9f 77       	andi	r25, 0x7F	; 127
    2752:	2a e0       	ldi	r18, 0x0A	; 10
    2754:	37 ed       	ldi	r19, 0xD7	; 215
    2756:	43 e2       	ldi	r20, 0x23	; 35
    2758:	5c e3       	ldi	r21, 0x3C	; 60
    275a:	31 d6       	rcall	.+3170   	; 0x33be <__cmpsf2>
    275c:	87 fd       	sbrc	r24, 7
    275e:	39 c0       	rjmp	.+114    	; 0x27d2 <lcd_animation_loop+0x1ec>
    2760:	c0 92 52 03 	sts	0x0352, r12	; 0x800352 <t_last.3303>
    2764:	d0 92 53 03 	sts	0x0353, r13	; 0x800353 <t_last.3303+0x1>
    2768:	e0 92 54 03 	sts	0x0354, r14	; 0x800354 <t_last.3303+0x2>
    276c:	f0 92 55 03 	sts	0x0355, r15	; 0x800355 <t_last.3303+0x3>
    2770:	20 e0       	ldi	r18, 0x00	; 0
    2772:	30 e0       	ldi	r19, 0x00	; 0
    2774:	48 ec       	ldi	r20, 0xC8	; 200
    2776:	52 e4       	ldi	r21, 0x42	; 66
    2778:	c7 01       	movw	r24, r14
    277a:	b6 01       	movw	r22, r12
    277c:	c6 d7       	rcall	.+3980   	; 0x370a <__mulsf3>
    277e:	8b d6       	rcall	.+3350   	; 0x3496 <__fixsfsi>
    2780:	cb 01       	movw	r24, r22
    2782:	64 e6       	ldi	r22, 0x64	; 100
    2784:	70 e0       	ldi	r23, 0x00	; 0
    2786:	0e 94 08 1c 	call	0x3810	; 0x3810 <__divmodhi4>
    278a:	9f 93       	push	r25
    278c:	8f 93       	push	r24
    278e:	c7 01       	movw	r24, r14
    2790:	b6 01       	movw	r22, r12
    2792:	81 d6       	rcall	.+3330   	; 0x3496 <__fixsfsi>
    2794:	7f 93       	push	r23
    2796:	6f 93       	push	r22
    2798:	80 ef       	ldi	r24, 0xF0	; 240
    279a:	92 e0       	ldi	r25, 0x02	; 2
    279c:	9f 93       	push	r25
    279e:	8f 93       	push	r24
    27a0:	1f 92       	push	r1
    27a2:	80 e3       	ldi	r24, 0x30	; 48
    27a4:	8f 93       	push	r24
    27a6:	8c ed       	ldi	r24, 0xDC	; 220
    27a8:	93 e0       	ldi	r25, 0x03	; 3
    27aa:	9f 93       	push	r25
    27ac:	8f 93       	push	r24
    27ae:	0e 94 22 1c 	call	0x3844	; 0x3844 <snprintf>
    27b2:	23 e0       	ldi	r18, 0x03	; 3
    27b4:	31 e0       	ldi	r19, 0x01	; 1
    27b6:	49 e6       	ldi	r20, 0x69	; 105
    27b8:	60 ea       	ldi	r22, 0xA0	; 160
    27ba:	8c ed       	ldi	r24, 0xDC	; 220
    27bc:	93 e0       	ldi	r25, 0x03	; 3
    27be:	0e 94 be 06 	call	0xd7c	; 0xd7c <gfx_mono_draw_string>
    27c2:	8d b7       	in	r24, 0x3d	; 61
    27c4:	9e b7       	in	r25, 0x3e	; 62
    27c6:	0a 96       	adiw	r24, 0x0a	; 10
    27c8:	0f b6       	in	r0, 0x3f	; 63
    27ca:	f8 94       	cli
    27cc:	9e bf       	out	0x3e, r25	; 62
    27ce:	0f be       	out	0x3f, r0	; 63
    27d0:	8d bf       	out	0x3d, r24	; 61
    27d2:	34 d8       	rcall	.-3992   	; 0x183c <cpu_irq_save>
    27d4:	c0 90 63 04 	lds	r12, 0x0463	; 0x800463 <g_adc_light>
    27d8:	d0 90 64 04 	lds	r13, 0x0464	; 0x800464 <g_adc_light+0x1>
    27dc:	e0 90 65 04 	lds	r14, 0x0465	; 0x800465 <g_adc_light+0x2>
    27e0:	f0 90 66 04 	lds	r15, 0x0466	; 0x800466 <g_adc_light+0x3>
    27e4:	8f bf       	out	0x3f, r24	; 63
    27e6:	20 91 4e 03 	lds	r18, 0x034E	; 0x80034e <l_last.3309>
    27ea:	30 91 4f 03 	lds	r19, 0x034F	; 0x80034f <l_last.3309+0x1>
    27ee:	40 91 50 03 	lds	r20, 0x0350	; 0x800350 <l_last.3309+0x2>
    27f2:	50 91 51 03 	lds	r21, 0x0351	; 0x800351 <l_last.3309+0x3>
    27f6:	c7 01       	movw	r24, r14
    27f8:	b6 01       	movw	r22, r12
    27fa:	7c d5       	rcall	.+2808   	; 0x32f4 <__subsf3>
    27fc:	9f 77       	andi	r25, 0x7F	; 127
    27fe:	2d ec       	ldi	r18, 0xCD	; 205
    2800:	3c ec       	ldi	r19, 0xCC	; 204
    2802:	4c ec       	ldi	r20, 0xCC	; 204
    2804:	5d e3       	ldi	r21, 0x3D	; 61
    2806:	db d5       	rcall	.+2998   	; 0x33be <__cmpsf2>
    2808:	87 fd       	sbrc	r24, 7
    280a:	37 c0       	rjmp	.+110    	; 0x287a <lcd_animation_loop+0x294>
    280c:	c0 92 4e 03 	sts	0x034E, r12	; 0x80034e <l_last.3309>
    2810:	d0 92 4f 03 	sts	0x034F, r13	; 0x80034f <l_last.3309+0x1>
    2814:	e0 92 50 03 	sts	0x0350, r14	; 0x800350 <l_last.3309+0x2>
    2818:	f0 92 51 03 	sts	0x0351, r15	; 0x800351 <l_last.3309+0x3>
    281c:	20 e0       	ldi	r18, 0x00	; 0
    281e:	30 e0       	ldi	r19, 0x00	; 0
    2820:	40 e2       	ldi	r20, 0x20	; 32
    2822:	51 e4       	ldi	r21, 0x41	; 65
    2824:	c7 01       	movw	r24, r14
    2826:	b6 01       	movw	r22, r12
    2828:	70 d7       	rcall	.+3808   	; 0x370a <__mulsf3>
    282a:	35 d6       	rcall	.+3178   	; 0x3496 <__fixsfsi>
    282c:	cb 01       	movw	r24, r22
    282e:	6a e0       	ldi	r22, 0x0A	; 10
    2830:	70 e0       	ldi	r23, 0x00	; 0
    2832:	ee d7       	rcall	.+4060   	; 0x3810 <__divmodhi4>
    2834:	9f 93       	push	r25
    2836:	8f 93       	push	r24
    2838:	c7 01       	movw	r24, r14
    283a:	b6 01       	movw	r22, r12
    283c:	2c d6       	rcall	.+3160   	; 0x3496 <__fixsfsi>
    283e:	7f 93       	push	r23
    2840:	6f 93       	push	r22
    2842:	81 e0       	ldi	r24, 0x01	; 1
    2844:	93 e0       	ldi	r25, 0x03	; 3
    2846:	9f 93       	push	r25
    2848:	8f 93       	push	r24
    284a:	1f 92       	push	r1
    284c:	80 e3       	ldi	r24, 0x30	; 48
    284e:	8f 93       	push	r24
    2850:	8c ed       	ldi	r24, 0xDC	; 220
    2852:	93 e0       	ldi	r25, 0x03	; 3
    2854:	9f 93       	push	r25
    2856:	8f 93       	push	r24
    2858:	f5 d7       	rcall	.+4074   	; 0x3844 <snprintf>
    285a:	23 e0       	ldi	r18, 0x03	; 3
    285c:	31 e0       	ldi	r19, 0x01	; 1
    285e:	4f e5       	ldi	r20, 0x5F	; 95
    2860:	60 ea       	ldi	r22, 0xA0	; 160
    2862:	8c ed       	ldi	r24, 0xDC	; 220
    2864:	93 e0       	ldi	r25, 0x03	; 3
    2866:	0e 94 be 06 	call	0xd7c	; 0xd7c <gfx_mono_draw_string>
    286a:	8d b7       	in	r24, 0x3d	; 61
    286c:	9e b7       	in	r25, 0x3e	; 62
    286e:	0a 96       	adiw	r24, 0x0a	; 10
    2870:	0f b6       	in	r0, 0x3f	; 63
    2872:	f8 94       	cli
    2874:	9e bf       	out	0x3e, r25	; 62
    2876:	0f be       	out	0x3f, r0	; 63
    2878:	8d bf       	out	0x3d, r24	; 61
    287a:	20 91 4c 03 	lds	r18, 0x034C	; 0x80034c <loop.3294>
    287e:	30 91 4d 03 	lds	r19, 0x034D	; 0x80034d <loop.3294+0x1>
    2882:	f9 01       	movw	r30, r18
    2884:	31 96       	adiw	r30, 0x01	; 1
    2886:	f0 93 4d 03 	sts	0x034D, r31	; 0x80034d <loop.3294+0x1>
    288a:	e0 93 4c 03 	sts	0x034C, r30	; 0x80034c <loop.3294>
    288e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    2892:	22 31       	cpi	r18, 0x12	; 18
    2894:	31 05       	cpc	r19, r1
    2896:	64 f4       	brge	.+24     	; 0x28b0 <lcd_animation_loop+0x2ca>
    2898:	63 e0       	ldi	r22, 0x03	; 3
    289a:	9a d7       	rcall	.+3892   	; 0x37d0 <__udivmodqi4>
    289c:	2b e1       	ldi	r18, 0x1B	; 27
    289e:	2e 1b       	sub	r18, r30
    28a0:	6a e0       	ldi	r22, 0x0A	; 10
    28a2:	6e 0f       	add	r22, r30
    28a4:	09 2f       	mov	r16, r25
    28a6:	4f ee       	ldi	r20, 0xEF	; 239
    28a8:	80 e0       	ldi	r24, 0x00	; 0
    28aa:	0e 94 e5 03 	call	0x7ca	; 0x7ca <gfx_mono_generic_draw_line>
    28ae:	1c c0       	rjmp	.+56     	; 0x28e8 <lcd_animation_loop+0x302>
    28b0:	e2 30       	cpi	r30, 0x02	; 2
    28b2:	91 e0       	ldi	r25, 0x01	; 1
    28b4:	f9 07       	cpc	r31, r25
    28b6:	64 f4       	brge	.+24     	; 0x28d0 <lcd_animation_loop+0x2ea>
    28b8:	63 e0       	ldi	r22, 0x03	; 3
    28ba:	8a d7       	rcall	.+3860   	; 0x37d0 <__udivmodqi4>
    28bc:	41 e0       	ldi	r20, 0x01	; 1
    28be:	4e 1b       	sub	r20, r30
    28c0:	09 2f       	mov	r16, r25
    28c2:	2a e0       	ldi	r18, 0x0A	; 10
    28c4:	6b e1       	ldi	r22, 0x1B	; 27
    28c6:	8e ee       	ldi	r24, 0xEE	; 238
    28c8:	8e 0f       	add	r24, r30
    28ca:	0e 94 e5 03 	call	0x7ca	; 0x7ca <gfx_mono_generic_draw_line>
    28ce:	0c c0       	rjmp	.+24     	; 0x28e8 <lcd_animation_loop+0x302>
    28d0:	10 92 4d 03 	sts	0x034D, r1	; 0x80034d <loop.3294+0x1>
    28d4:	10 92 4c 03 	sts	0x034C, r1	; 0x80034c <loop.3294>
    28d8:	8f 5f       	subi	r24, 0xFF	; 255
    28da:	83 30       	cpi	r24, 0x03	; 3
    28dc:	18 f4       	brcc	.+6      	; 0x28e4 <lcd_animation_loop+0x2fe>
    28de:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    28e2:	02 c0       	rjmp	.+4      	; 0x28e8 <lcd_animation_loop+0x302>
    28e4:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
    28e8:	0f 91       	pop	r16
    28ea:	ff 90       	pop	r15
    28ec:	ef 90       	pop	r14
    28ee:	df 90       	pop	r13
    28f0:	cf 90       	pop	r12
    28f2:	08 95       	ret

000028f4 <lcd_test>:
    28f4:	ef 92       	push	r14
    28f6:	ff 92       	push	r15
    28f8:	0f 93       	push	r16
    28fa:	1f 93       	push	r17
    28fc:	cf 93       	push	r28
    28fe:	c8 2f       	mov	r28, r24
    2900:	80 fd       	sbrc	r24, 0
    2902:	03 c0       	rjmp	.+6      	; 0x290a <lcd_test+0x16>
    2904:	c1 ff       	sbrs	r28, 1
    2906:	28 c0       	rjmp	.+80     	; 0x2958 <lcd_test+0x64>
    2908:	08 c0       	rjmp	.+16     	; 0x291a <lcd_test+0x26>
    290a:	10 e0       	ldi	r17, 0x00	; 0
    290c:	81 2f       	mov	r24, r17
    290e:	0e 94 4f 0c 	call	0x189e	; 0x189e <lcd_bus_write_ram>
    2912:	1f 5f       	subi	r17, 0xFF	; 255
    2914:	10 3f       	cpi	r17, 0xF0	; 240
    2916:	d1 f7       	brne	.-12     	; 0x290c <lcd_test+0x18>
    2918:	f5 cf       	rjmp	.-22     	; 0x2904 <lcd_test+0x10>
    291a:	82 eb       	ldi	r24, 0xB2	; 178
    291c:	0e 94 42 0c 	call	0x1884	; 0x1884 <lcd_bus_write_cmd>
    2920:	81 e0       	ldi	r24, 0x01	; 1
    2922:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <s_lcd_ram_read_nonvalid>
    2926:	1e d8       	rcall	.-4036   	; 0x1964 <lcd_cr>
    2928:	00 e0       	ldi	r16, 0x00	; 0
    292a:	10 e0       	ldi	r17, 0x00	; 0
    292c:	87 e0       	ldi	r24, 0x07	; 7
    292e:	e8 2e       	mov	r14, r24
    2930:	f1 2c       	mov	r15, r1
    2932:	c8 01       	movw	r24, r16
    2934:	b7 01       	movw	r22, r14
    2936:	6c d7       	rcall	.+3800   	; 0x3810 <__divmodhi4>
    2938:	89 2b       	or	r24, r25
    293a:	19 f4       	brne	.+6      	; 0x2942 <lcd_test+0x4e>
    293c:	80 e0       	ldi	r24, 0x00	; 0
    293e:	0e 94 4f 0c 	call	0x189e	; 0x189e <lcd_bus_write_ram>
    2942:	f8 01       	movw	r30, r16
    2944:	e8 51       	subi	r30, 0x18	; 24
    2946:	fc 4f       	sbci	r31, 0xFC	; 252
    2948:	84 91       	lpm	r24, Z
    294a:	0e 94 4f 0c 	call	0x189e	; 0x189e <lcd_bus_write_ram>
    294e:	0f 5f       	subi	r16, 0xFF	; 255
    2950:	1f 4f       	sbci	r17, 0xFF	; 255
    2952:	00 3f       	cpi	r16, 0xF0	; 240
    2954:	11 05       	cpc	r17, r1
    2956:	69 f7       	brne	.-38     	; 0x2932 <lcd_test+0x3e>
    2958:	c2 ff       	sbrs	r28, 2
    295a:	2d c0       	rjmp	.+90     	; 0x29b6 <lcd_test+0xc2>
    295c:	41 e0       	ldi	r20, 0x01	; 1
    295e:	68 e2       	ldi	r22, 0x28	; 40
    2960:	84 e0       	ldi	r24, 0x04	; 4
    2962:	0e 94 49 06 	call	0xc92	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
    2966:	41 e0       	ldi	r20, 0x01	; 1
    2968:	69 e2       	ldi	r22, 0x29	; 41
    296a:	85 e0       	ldi	r24, 0x05	; 5
    296c:	0e 94 49 06 	call	0xc92	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
    2970:	41 e0       	ldi	r20, 0x01	; 1
    2972:	6a e2       	ldi	r22, 0x2A	; 42
    2974:	86 e0       	ldi	r24, 0x06	; 6
    2976:	0e 94 49 06 	call	0xc92	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
    297a:	41 e0       	ldi	r20, 0x01	; 1
    297c:	6b e2       	ldi	r22, 0x2B	; 43
    297e:	87 e0       	ldi	r24, 0x07	; 7
    2980:	0e 94 49 06 	call	0xc92	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
    2984:	41 e0       	ldi	r20, 0x01	; 1
    2986:	6c e2       	ldi	r22, 0x2C	; 44
    2988:	86 e0       	ldi	r24, 0x06	; 6
    298a:	0e 94 49 06 	call	0xc92	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
    298e:	41 e0       	ldi	r20, 0x01	; 1
    2990:	6d e2       	ldi	r22, 0x2D	; 45
    2992:	85 e0       	ldi	r24, 0x05	; 5
    2994:	0e 94 49 06 	call	0xc92	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
    2998:	41 e0       	ldi	r20, 0x01	; 1
    299a:	6e e2       	ldi	r22, 0x2E	; 46
    299c:	86 e0       	ldi	r24, 0x06	; 6
    299e:	0e 94 49 06 	call	0xc92	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
    29a2:	41 e0       	ldi	r20, 0x01	; 1
    29a4:	6f e2       	ldi	r22, 0x2F	; 47
    29a6:	87 e0       	ldi	r24, 0x07	; 7
    29a8:	0e 94 49 06 	call	0xc92	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
    29ac:	41 e0       	ldi	r20, 0x01	; 1
    29ae:	60 e3       	ldi	r22, 0x30	; 48
    29b0:	88 e0       	ldi	r24, 0x08	; 8
    29b2:	0e 94 49 06 	call	0xc92	; 0xc92 <gfx_mono_lcd_uc1608_draw_pixel>
    29b6:	c3 ff       	sbrs	r28, 3
    29b8:	07 c0       	rjmp	.+14     	; 0x29c8 <lcd_test+0xd4>
    29ba:	01 e0       	ldi	r16, 0x01	; 1
    29bc:	2f e1       	ldi	r18, 0x1F	; 31
    29be:	4f ee       	ldi	r20, 0xEF	; 239
    29c0:	60 e1       	ldi	r22, 0x10	; 16
    29c2:	80 e0       	ldi	r24, 0x00	; 0
    29c4:	0e 94 e5 03 	call	0x7ca	; 0x7ca <gfx_mono_generic_draw_line>
    29c8:	c4 ff       	sbrs	r28, 4
    29ca:	0d c0       	rjmp	.+26     	; 0x29e6 <lcd_test+0xf2>
    29cc:	01 e0       	ldi	r16, 0x01	; 1
    29ce:	28 e2       	ldi	r18, 0x28	; 40
    29d0:	48 e2       	ldi	r20, 0x28	; 40
    29d2:	60 e3       	ldi	r22, 0x30	; 48
    29d4:	86 e4       	ldi	r24, 0x46	; 70
    29d6:	0e 94 54 04 	call	0x8a8	; 0x8a8 <gfx_mono_generic_draw_rect>
    29da:	28 e2       	ldi	r18, 0x28	; 40
    29dc:	48 e2       	ldi	r20, 0x28	; 40
    29de:	60 e3       	ldi	r22, 0x30	; 48
    29e0:	8a ea       	ldi	r24, 0xAA	; 170
    29e2:	0e 94 77 04 	call	0x8ee	; 0x8ee <gfx_mono_generic_draw_filled_rect>
    29e6:	c5 ff       	sbrs	r28, 5
    29e8:	0d c0       	rjmp	.+26     	; 0x2a04 <lcd_test+0x110>
    29ea:	0f ef       	ldi	r16, 0xFF	; 255
    29ec:	21 e0       	ldi	r18, 0x01	; 1
    29ee:	4a e0       	ldi	r20, 0x0A	; 10
    29f0:	60 e5       	ldi	r22, 0x50	; 80
    29f2:	8a e0       	ldi	r24, 0x0A	; 10
    29f4:	0e 94 91 04 	call	0x922	; 0x922 <gfx_mono_generic_draw_circle>
    29f8:	21 e0       	ldi	r18, 0x01	; 1
    29fa:	4a e0       	ldi	r20, 0x0A	; 10
    29fc:	60 e5       	ldi	r22, 0x50	; 80
    29fe:	88 e2       	ldi	r24, 0x28	; 40
    2a00:	0e 94 3f 05 	call	0xa7e	; 0xa7e <gfx_mono_generic_draw_filled_circle>
    2a04:	c6 ff       	sbrs	r28, 6
    2a06:	08 c0       	rjmp	.+16     	; 0x2a18 <lcd_test+0x124>
    2a08:	23 e0       	ldi	r18, 0x03	; 3
    2a0a:	31 e0       	ldi	r19, 0x01	; 1
    2a0c:	40 e2       	ldi	r20, 0x20	; 32
    2a0e:	66 e4       	ldi	r22, 0x46	; 70
    2a10:	8f e0       	ldi	r24, 0x0F	; 15
    2a12:	93 e0       	ldi	r25, 0x03	; 3
    2a14:	0e 94 be 06 	call	0xd7c	; 0xd7c <gfx_mono_draw_string>
    2a18:	c7 ff       	sbrs	r28, 7
    2a1a:	0c c0       	rjmp	.+24     	; 0x2a34 <lcd_test+0x140>
    2a1c:	64 dd       	rcall	.-1336   	; 0x24e6 <lcd_animation_prepare>
    2a1e:	80 91 54 04 	lds	r24, 0x0454	; 0x800454 <g_status>
    2a22:	81 60       	ori	r24, 0x01	; 1
    2a24:	80 93 54 04 	sts	0x0454, r24	; 0x800454 <g_status>
    2a28:	cf 91       	pop	r28
    2a2a:	1f 91       	pop	r17
    2a2c:	0f 91       	pop	r16
    2a2e:	ff 90       	pop	r15
    2a30:	ef 90       	pop	r14
    2a32:	d9 cd       	rjmp	.-1102   	; 0x25e6 <lcd_animation_loop>
    2a34:	cf 91       	pop	r28
    2a36:	1f 91       	pop	r17
    2a38:	0f 91       	pop	r16
    2a3a:	ff 90       	pop	r15
    2a3c:	ef 90       	pop	r14
    2a3e:	08 95       	ret

00002a40 <lcd_get_sysfont>:


const void* lcd_get_sysfont(void)
{
	return &sysfont;
}
    2a40:	83 e0       	ldi	r24, 0x03	; 3
    2a42:	91 e0       	ldi	r25, 0x01	; 1
    2a44:	08 95       	ret

00002a46 <lcd_init>:
// hold a copy of a font size in the PROG memory section
SYSFONT_DEFINE_GLYPHS;


uint8_t lcd_bus_read_status(void)
{
    2a46:	82 ee       	ldi	r24, 0xE2	; 226
    2a48:	0e 94 42 0c 	call	0x1884	; 0x1884 <lcd_bus_write_cmd>
    2a4c:	6b e2       	ldi	r22, 0x2B	; 43
    2a4e:	78 e6       	ldi	r23, 0x68	; 104
    2a50:	80 e0       	ldi	r24, 0x00	; 0
    2a52:	90 e0       	ldi	r25, 0x00	; 0
    2a54:	0e 94 2b 0c 	call	0x1856	; 0x1856 <__portable_avr_delay_cycles>
    2a58:	0e 94 36 0c 	call	0x186c	; 0x186c <lcd_bus_read_status>
    2a5c:	87 fd       	sbrc	r24, 7
    2a5e:	06 c0       	rjmp	.+12     	; 0x2a6c <lcd_init+0x26>
    2a60:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <lcd_enable.part.0>
    2a64:	0e 94 bd 0c 	call	0x197a	; 0x197a <lcd_cls>
    2a68:	80 e0       	ldi	r24, 0x00	; 0
    2a6a:	08 95       	ret
    2a6c:	81 e0       	ldi	r24, 0x01	; 1
    2a6e:	08 95       	ret

00002a70 <isr_lcd_set_mode>:
    2a70:	80 93 28 04 	sts	0x0428, r24	; 0x800428 <g_SmartLCD_mode>
    2a74:	88 23       	and	r24, r24
    2a76:	31 f0       	breq	.+12     	; 0x2a84 <isr_lcd_set_mode+0x14>
    2a78:	80 91 54 04 	lds	r24, 0x0454	; 0x800454 <g_status>
    2a7c:	8e 7f       	andi	r24, 0xFE	; 254
    2a7e:	80 93 54 04 	sts	0x0454, r24	; 0x800454 <g_status>
    2a82:	08 95       	ret
    2a84:	e0 df       	rcall	.-64     	; 0x2a46 <lcd_init>
    2a86:	81 ef       	ldi	r24, 0xF1	; 241
    2a88:	35 cf       	rjmp	.-406    	; 0x28f4 <lcd_test>

00002a8a <lcd_shutdown>:
    2a8a:	82 ee       	ldi	r24, 0xE2	; 226
    2a8c:	0e 94 42 0c 	call	0x1884	; 0x1884 <lcd_bus_write_cmd>
    2a90:	6b e6       	ldi	r22, 0x6B	; 107
    2a92:	7a e0       	ldi	r23, 0x0A	; 10
    2a94:	80 e0       	ldi	r24, 0x00	; 0
    2a96:	90 e0       	ldi	r25, 0x00	; 0
    2a98:	0c 94 2b 0c 	jmp	0x1856	; 0x1856 <__portable_avr_delay_cycles>

00002a9c <s_twi_tx_done>:
#endif

static void s_twi_tx_done(void)
{
	// Called when  s_tx_lock == 0
	if (s_tx_next_len) {
    2a9c:	e0 91 22 04 	lds	r30, 0x0422	; 0x800422 <s_tx_next_len>
    2aa0:	ee 23       	and	r30, r30
    2aa2:	51 f0       	breq	.+20     	; 0x2ab8 <s_twi_tx_done+0x1c>
    2aa4:	f0 e0       	ldi	r31, 0x00	; 0
    2aa6:	e5 5e       	subi	r30, 0xE5	; 229
    2aa8:	fb 4f       	sbci	r31, 0xFB	; 251
		// Load	next master message
		for (int idx = s_tx_next_len; idx >= 0; --idx) {
			s_tx_d[idx] = s_tx_next_d[idx];
    2aaa:	12 92       	st	-Z, r1
static void s_twi_tx_done(void)
{
	// Called when  s_tx_lock == 0
	if (s_tx_next_len) {
		// Load	next master message
		for (int idx = s_tx_next_len; idx >= 0; --idx) {
    2aac:	84 e0       	ldi	r24, 0x04	; 4
    2aae:	ea 31       	cpi	r30, 0x1A	; 26
    2ab0:	f8 07       	cpc	r31, r24
    2ab2:	d9 f7       	brne	.-10     	; 0x2aaa <s_twi_tx_done+0xe>
			s_tx_d[idx] = s_tx_next_d[idx];
		}
		s_tx_len = s_tx_next_len;
		s_tx_next_len = 0;
    2ab4:	10 92 22 04 	sts	0x0422, r1	; 0x800422 <s_tx_next_len>
    2ab8:	08 95       	ret

00002aba <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2>:
			{
				// do nothing
			}
		}

	} else if (data[0] == TWI_SLAVE_ADDR_SMARTLCD) {
    2aba:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <s_rx_d>
    2abe:	82 32       	cpi	r24, 0x22	; 34
    2ac0:	a1 f4       	brne	.+40     	; 0x2aea <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x30>
		/* unique command section for all modes */
		switch (cmd) {
    2ac2:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <s_rx_d+0x1>
    2ac6:	81 30       	cpi	r24, 0x01	; 1
    2ac8:	19 f0       	breq	.+6      	; 0x2ad0 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x16>
    2aca:	82 30       	cpi	r24, 0x02	; 2
    2acc:	59 f0       	breq	.+22     	; 0x2ae4 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x2a>
    2ace:	08 95       	ret
}

static void s_twi_rx_prepare(uint8_t msgCnt, uint8_t msg[])
{
	if (msgCnt && msg) {
		if (!s_rx_lock) {
    2ad0:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <s_rx_lock>
    2ad4:	81 11       	cpse	r24, r1
    2ad6:	09 c0       	rjmp	.+18     	; 0x2aea <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x30>
			// Prepare master message buffer
			for (int idx = msgCnt; idx >= 0; --idx) {
				s_rx_d[idx] = msg[idx];
    2ad8:	10 92 12 04 	sts	0x0412, r1	; 0x800412 <s_rx_d+0x1>
    2adc:	81 e1       	ldi	r24, 0x11	; 17
    2ade:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <s_rx_d>
    2ae2:	08 95       	ret
				prepareBuf[0] = VERSION;
				s_twi_rx_prepare(1, prepareBuf);
			break;

			case TWI_SMART_LCD_CMD_SET_MODE:
				isr_lcd_set_mode(data[2]);
    2ae4:	80 91 13 04 	lds	r24, 0x0413	; 0x800413 <s_rx_d+0x2>
    2ae8:	c3 cf       	rjmp	.-122    	; 0x2a70 <isr_lcd_set_mode>
    2aea:	08 95       	ret

00002aec <__vector_24__bottom>:
	}
}


uint8_t __vector_24__bottom(uint8_t tws, uint8_t twd, uint8_t twcr_cur)
{
    2aec:	1f 93       	push	r17
    2aee:	cf 93       	push	r28
    2af0:	df 93       	push	r29
    2af2:	d6 2f       	mov	r29, r22
	static uint8_t pos_i	= 0;
	static uint8_t pos_o	= 0;
	static uint8_t cnt_i	= 0;
	static uint8_t cnt_o	= 0;
	uint8_t twcr_new = twcr_cur & 0b01000101;
    2af4:	c4 2f       	mov	r28, r20
    2af6:	c5 74       	andi	r28, 0x45	; 69

	switch(tws) {
    2af8:	88 36       	cpi	r24, 0x68	; 104
    2afa:	09 f4       	brne	.+2      	; 0x2afe <__vector_24__bottom+0x12>
    2afc:	90 c0       	rjmp	.+288    	; 0x2c1e <__vector_24__bottom+0x132>
    2afe:	08 f0       	brcs	.+2      	; 0x2b02 <__vector_24__bottom+0x16>
    2b00:	42 c0       	rjmp	.+132    	; 0x2b86 <__vector_24__bottom+0x9a>
    2b02:	80 33       	cpi	r24, 0x30	; 48
    2b04:	09 f4       	brne	.+2      	; 0x2b08 <__vector_24__bottom+0x1c>
    2b06:	83 c0       	rjmp	.+262    	; 0x2c0e <__vector_24__bottom+0x122>
    2b08:	48 f5       	brcc	.+82     	; 0x2b5c <__vector_24__bottom+0x70>
    2b0a:	80 31       	cpi	r24, 0x10	; 16
    2b0c:	09 f4       	brne	.+2      	; 0x2b10 <__vector_24__bottom+0x24>
    2b0e:	6a c0       	rjmp	.+212    	; 0x2be4 <__vector_24__bottom+0xf8>
    2b10:	d8 f4       	brcc	.+54     	; 0x2b48 <__vector_24__bottom+0x5c>
    2b12:	88 23       	and	r24, r24
    2b14:	09 f4       	brne	.+2      	; 0x2b18 <__vector_24__bottom+0x2c>
    2b16:	68 c1       	rjmp	.+720    	; 0x2de8 <__vector_24__bottom+0x2fc>
    2b18:	88 30       	cpi	r24, 0x08	; 8
    2b1a:	09 f0       	breq	.+2      	; 0x2b1e <__vector_24__bottom+0x32>
    2b1c:	65 c1       	rjmp	.+714    	; 0x2de8 <__vector_24__bottom+0x2fc>

	/* Master Transmitter Mode */

	case TWI_TWSR_START:						// Start condition transmitted
		s_tx_lock = 1;
		pos_o = 0;
    2b1e:	10 92 10 04 	sts	0x0410, r1	; 0x800410 <pos_o.2931>

		cnt_o = 2;								// TEST
    2b22:	82 e0       	ldi	r24, 0x02	; 2
    2b24:	80 93 0f 04 	sts	0x040F, r24	; 0x80040f <cnt_o.2933>
		s_tx_d[0] = (0x12 << TWD1) | (0b0 << TWD0);	// TEST
    2b28:	84 e2       	ldi	r24, 0x24	; 36
    2b2a:	80 93 1a 04 	sts	0x041A, r24	; 0x80041a <s_tx_d>
		s_tx_d[1] = 0x34;						// TEST
    2b2e:	84 e3       	ldi	r24, 0x34	; 52
    2b30:	80 93 1b 04 	sts	0x041B, r24	; 0x80041b <s_tx_d+0x1>
		s_tx_d[2] = 0x56;						// TEST
    2b34:	86 e5       	ldi	r24, 0x56	; 86
    2b36:	80 93 1c 04 	sts	0x041C, r24	; 0x80041c <s_tx_d+0x2>
		s_tx_d[3] = 0x78;						// TEST
    2b3a:	88 e7       	ldi	r24, 0x78	; 120
    2b3c:	80 93 1d 04 	sts	0x041D, r24	; 0x80041d <s_tx_d+0x3>
		s_tx_d[4] = 0x9a;						// TEST
    2b40:	8a e9       	ldi	r24, 0x9A	; 154
    2b42:	80 93 1e 04 	sts	0x041E, r24	; 0x80041e <s_tx_d+0x4>
    2b46:	4e c0       	rjmp	.+156    	; 0x2be4 <__vector_24__bottom+0xf8>
	static uint8_t pos_o	= 0;
	static uint8_t cnt_i	= 0;
	static uint8_t cnt_o	= 0;
	uint8_t twcr_new = twcr_cur & 0b01000101;

	switch(tws) {
    2b48:	80 32       	cpi	r24, 0x20	; 32
    2b4a:	09 f4       	brne	.+2      	; 0x2b4e <__vector_24__bottom+0x62>
    2b4c:	61 c0       	rjmp	.+194    	; 0x2c10 <__vector_24__bottom+0x124>
    2b4e:	88 32       	cpi	r24, 0x28	; 40
    2b50:	09 f4       	brne	.+2      	; 0x2b54 <__vector_24__bottom+0x68>
    2b52:	4c c0       	rjmp	.+152    	; 0x2bec <__vector_24__bottom+0x100>
    2b54:	88 31       	cpi	r24, 0x18	; 24
    2b56:	09 f0       	breq	.+2      	; 0x2b5a <__vector_24__bottom+0x6e>
    2b58:	47 c1       	rjmp	.+654    	; 0x2de8 <__vector_24__bottom+0x2fc>
    2b5a:	45 c0       	rjmp	.+138    	; 0x2be6 <__vector_24__bottom+0xfa>
    2b5c:	88 34       	cpi	r24, 0x48	; 72
    2b5e:	09 f4       	brne	.+2      	; 0x2b62 <__vector_24__bottom+0x76>
    2b60:	5b c0       	rjmp	.+182    	; 0x2c18 <__vector_24__bottom+0x12c>
    2b62:	38 f4       	brcc	.+14     	; 0x2b72 <__vector_24__bottom+0x86>
    2b64:	88 33       	cpi	r24, 0x38	; 56
    2b66:	09 f4       	brne	.+2      	; 0x2b6a <__vector_24__bottom+0x7e>
    2b68:	55 c0       	rjmp	.+170    	; 0x2c14 <__vector_24__bottom+0x128>
    2b6a:	80 34       	cpi	r24, 0x40	; 64
    2b6c:	09 f4       	brne	.+2      	; 0x2b70 <__vector_24__bottom+0x84>
    2b6e:	54 c0       	rjmp	.+168    	; 0x2c18 <__vector_24__bottom+0x12c>
    2b70:	3b c1       	rjmp	.+630    	; 0x2de8 <__vector_24__bottom+0x2fc>
    2b72:	88 35       	cpi	r24, 0x58	; 88
    2b74:	09 f4       	brne	.+2      	; 0x2b78 <__vector_24__bottom+0x8c>
    2b76:	50 c0       	rjmp	.+160    	; 0x2c18 <__vector_24__bottom+0x12c>
    2b78:	80 36       	cpi	r24, 0x60	; 96
    2b7a:	09 f4       	brne	.+2      	; 0x2b7e <__vector_24__bottom+0x92>
    2b7c:	4f c0       	rjmp	.+158    	; 0x2c1c <__vector_24__bottom+0x130>
    2b7e:	80 35       	cpi	r24, 0x50	; 80
    2b80:	09 f0       	breq	.+2      	; 0x2b84 <__vector_24__bottom+0x98>
    2b82:	32 c1       	rjmp	.+612    	; 0x2de8 <__vector_24__bottom+0x2fc>
    2b84:	49 c0       	rjmp	.+146    	; 0x2c18 <__vector_24__bottom+0x12c>
    2b86:	80 3a       	cpi	r24, 0xA0	; 160
    2b88:	09 f4       	brne	.+2      	; 0x2b8c <__vector_24__bottom+0xa0>
    2b8a:	f7 c0       	rjmp	.+494    	; 0x2d7a <__vector_24__bottom+0x28e>
    2b8c:	b0 f4       	brcc	.+44     	; 0x2bba <__vector_24__bottom+0xce>
    2b8e:	80 38       	cpi	r24, 0x80	; 128
    2b90:	09 f4       	brne	.+2      	; 0x2b94 <__vector_24__bottom+0xa8>
    2b92:	5f c0       	rjmp	.+190    	; 0x2c52 <__vector_24__bottom+0x166>
    2b94:	38 f4       	brcc	.+14     	; 0x2ba4 <__vector_24__bottom+0xb8>
    2b96:	80 37       	cpi	r24, 0x70	; 112
    2b98:	09 f4       	brne	.+2      	; 0x2b9c <__vector_24__bottom+0xb0>
    2b9a:	50 c0       	rjmp	.+160    	; 0x2c3c <__vector_24__bottom+0x150>
    2b9c:	88 37       	cpi	r24, 0x78	; 120
    2b9e:	09 f4       	brne	.+2      	; 0x2ba2 <__vector_24__bottom+0xb6>
    2ba0:	4e c0       	rjmp	.+156    	; 0x2c3e <__vector_24__bottom+0x152>
    2ba2:	22 c1       	rjmp	.+580    	; 0x2de8 <__vector_24__bottom+0x2fc>
    2ba4:	80 39       	cpi	r24, 0x90	; 144
    2ba6:	09 f4       	brne	.+2      	; 0x2baa <__vector_24__bottom+0xbe>
    2ba8:	55 c0       	rjmp	.+170    	; 0x2c54 <__vector_24__bottom+0x168>
    2baa:	88 39       	cpi	r24, 0x98	; 152
    2bac:	09 f4       	brne	.+2      	; 0x2bb0 <__vector_24__bottom+0xc4>
    2bae:	d1 c0       	rjmp	.+418    	; 0x2d52 <__vector_24__bottom+0x266>
    2bb0:	88 38       	cpi	r24, 0x88	; 136
    2bb2:	09 f0       	breq	.+2      	; 0x2bb6 <__vector_24__bottom+0xca>
    2bb4:	19 c1       	rjmp	.+562    	; 0x2de8 <__vector_24__bottom+0x2fc>
			}
		}
	break;

	case TWI_TWSR_S_SLAW_MYADDR_DATA_NACK:		// NACK after last data byte sent
		nop();
    2bb6:	00 00       	nop
    2bb8:	cc c0       	rjmp	.+408    	; 0x2d52 <__vector_24__bottom+0x266>
	static uint8_t pos_o	= 0;
	static uint8_t cnt_i	= 0;
	static uint8_t cnt_o	= 0;
	uint8_t twcr_new = twcr_cur & 0b01000101;

	switch(tws) {
    2bba:	88 3b       	cpi	r24, 0xB8	; 184
    2bbc:	09 f4       	brne	.+2      	; 0x2bc0 <__vector_24__bottom+0xd4>
    2bbe:	f7 c0       	rjmp	.+494    	; 0x2dae <__vector_24__bottom+0x2c2>
    2bc0:	38 f4       	brcc	.+14     	; 0x2bd0 <__vector_24__bottom+0xe4>
    2bc2:	88 3a       	cpi	r24, 0xA8	; 168
    2bc4:	09 f4       	brne	.+2      	; 0x2bc8 <__vector_24__bottom+0xdc>
    2bc6:	e4 c0       	rjmp	.+456    	; 0x2d90 <__vector_24__bottom+0x2a4>
    2bc8:	80 3b       	cpi	r24, 0xB0	; 176
    2bca:	09 f4       	brne	.+2      	; 0x2bce <__vector_24__bottom+0xe2>
    2bcc:	e2 c0       	rjmp	.+452    	; 0x2d92 <__vector_24__bottom+0x2a6>
    2bce:	0c c1       	rjmp	.+536    	; 0x2de8 <__vector_24__bottom+0x2fc>
    2bd0:	88 3c       	cpi	r24, 0xC8	; 200
    2bd2:	09 f4       	brne	.+2      	; 0x2bd6 <__vector_24__bottom+0xea>
    2bd4:	06 c1       	rjmp	.+524    	; 0x2de2 <__vector_24__bottom+0x2f6>
    2bd6:	88 3f       	cpi	r24, 0xF8	; 248
    2bd8:	09 f4       	brne	.+2      	; 0x2bdc <__vector_24__bottom+0xf0>
    2bda:	06 c1       	rjmp	.+524    	; 0x2de8 <__vector_24__bottom+0x2fc>
    2bdc:	80 3c       	cpi	r24, 0xC0	; 192
    2bde:	09 f0       	breq	.+2      	; 0x2be2 <__vector_24__bottom+0xf6>
    2be0:	03 c1       	rjmp	.+518    	; 0x2de8 <__vector_24__bottom+0x2fc>
    2be2:	ff c0       	rjmp	.+510    	; 0x2de2 <__vector_24__bottom+0x2f6>
		s_tx_d[2] = 0x56;						// TEST
		s_tx_d[3] = 0x78;						// TEST
		s_tx_d[4] = 0x9a;						// TEST
		// fall-through.
	case TWI_TWSR_REPEATEDSTART:				// Repeated start condition transmitted
		nop();
    2be4:	00 00       	nop
		// fall-through.
	case TWI_TWSR_M_SLAW_ADDR_ACK:				// SLA+W transmitted and ACK received
		TWDR = s_tx_d[pos_o++];
    2be6:	e0 91 10 04 	lds	r30, 0x0410	; 0x800410 <pos_o.2931>
    2bea:	06 c0       	rjmp	.+12     	; 0x2bf8 <__vector_24__bottom+0x10c>
	case TWI_TWSR_M_SLAW_ADDR_NACK:				// SLA+W transmitted and NACK received
		twcr_new |= _BV(TWSTO);					// Send STOP
	break;

	case TWI_TWSR_M_SLAW_DATA_ACK:				// Data byte sent and ACK received
		if (pos_o < cnt_o) {
    2bec:	e0 91 10 04 	lds	r30, 0x0410	; 0x800410 <pos_o.2931>
    2bf0:	80 91 0f 04 	lds	r24, 0x040F	; 0x80040f <cnt_o.2933>
    2bf4:	e8 17       	cp	r30, r24
    2bf6:	58 f4       	brcc	.+22     	; 0x2c0e <__vector_24__bottom+0x122>
			TWDR = s_tx_d[pos_o++];				// Send new data byte
    2bf8:	81 e0       	ldi	r24, 0x01	; 1
    2bfa:	8e 0f       	add	r24, r30
    2bfc:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <pos_o.2931>
    2c00:	f0 e0       	ldi	r31, 0x00	; 0
    2c02:	e6 5e       	subi	r30, 0xE6	; 230
    2c04:	fb 4f       	sbci	r31, 0xFB	; 251
    2c06:	80 81       	ld	r24, Z
    2c08:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
		}
	break;

	case TWI_TWSR_M_SLAW_DATA_NACK:				// Data byte sent and NACK received
		s_tx_lock = 0;
		s_twi_tx_done();						// Message failure
    2c0c:	f1 c0       	rjmp	.+482    	; 0x2df0 <__vector_24__bottom+0x304>
		twcr_new |= _BV(TWSTO);					// Send STOP - due to an error or slave not ready situation
    2c0e:	46 df       	rcall	.-372    	; 0x2a9c <s_twi_tx_done>
	break;
    2c10:	c0 61       	ori	r28, 0x10	; 16

	case TWI_TWSR_M_SLAW_ARBIT_LOST:			// Arbitration lost
		twcr_new |= _BV(TWSTA);					// Send START (again)
    2c12:	ee c0       	rjmp	.+476    	; 0x2df0 <__vector_24__bottom+0x304>
	break;
    2c14:	c0 62       	ori	r28, 0x20	; 32
	case TWI_TWSR_M_SLAR_DATA_ACK:
		nop();
	break;

	case TWI_TWSR_M_SLAR_DATA_NACK:
		nop();
    2c16:	ec c0       	rjmp	.+472    	; 0x2df0 <__vector_24__bottom+0x304>
	break;
    2c18:	00 00       	nop


	/* Slave Receiver Mode */

	case TWI_TWSR_S_SLAW_MYADDR_RECEIVED:		// SLA+W received and ACK returned
		nop();
    2c1a:	ea c0       	rjmp	.+468    	; 0x2df0 <__vector_24__bottom+0x304>
		// fall-through.
	case TWI_TWSR_S_SLAW_MYADDR_ARBIT_LOST:
		s_rx_lock = 1;
    2c1c:	00 00       	nop
    2c1e:	11 e0       	ldi	r17, 0x01	; 1
    2c20:	10 93 19 04 	sts	0x0419, r17	; 0x800419 <s_rx_lock>
		mem_set(s_rx_d, 8, 0x00);
    2c24:	40 e0       	ldi	r20, 0x00	; 0
    2c26:	68 e0       	ldi	r22, 0x08	; 8
    2c28:	81 e1       	ldi	r24, 0x11	; 17
    2c2a:	94 e0       	ldi	r25, 0x04	; 4
		s_rx_d[0] = twd >> 1;					// [0]=Target address (== MYADDR)
    2c2c:	30 d1       	rcall	.+608    	; 0x2e8e <mem_set>
    2c2e:	d6 95       	lsr	r29
    2c30:	d0 93 11 04 	sts	0x0411, r29	; 0x800411 <s_rx_d>
		pos_i = 1;								// Starting of reception
    2c34:	10 93 0e 04 	sts	0x040E, r17	; 0x80040e <pos_i.2930>
		twcr_new |= _BV(TWEA);					// Send ACK
	break;
    2c38:	c0 64       	ori	r28, 0x40	; 64

	case TWI_TWSR_S_SLAW_OMNIADDR_RECEIVED:		// GCA received and ACK sent
		nop();
    2c3a:	da c0       	rjmp	.+436    	; 0x2df0 <__vector_24__bottom+0x304>
		// fall-through.
	case TWI_TWSR_S_SLAW_OMNIADDR_ARBIT_LOST:
		s_rx_lock = 1;
    2c3c:	00 00       	nop
    2c3e:	81 e0       	ldi	r24, 0x01	; 1
    2c40:	80 93 19 04 	sts	0x0419, r24	; 0x800419 <s_rx_lock>
		s_rx_d[0] = twd >> 1;					// GCA
    2c44:	d6 95       	lsr	r29
    2c46:	d0 93 11 04 	sts	0x0411, r29	; 0x800411 <s_rx_d>
		pos_i = 1;								// Starting of reception
    2c4a:	80 93 0e 04 	sts	0x040E, r24	; 0x80040e <pos_i.2930>
		twcr_new |= _BV(TWEA);					// Send after next coming data byte ACK
	break;
    2c4e:	c0 64       	ori	r28, 0x40	; 64

	case TWI_TWSR_S_SLAW_MYADDR_DATA_ACK:		// Data after SLA+W received
		nop();
    2c50:	cf c0       	rjmp	.+414    	; 0x2df0 <__vector_24__bottom+0x304>
		// fall-through.
	case TWI_TWSR_S_SLAW_OMNIADDR_DATA_ACK:
		if (cnt_i != 0b1111) {					// Closed parameter form
    2c52:	00 00       	nop
    2c54:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <cnt_i.2932>
    2c58:	8f 30       	cpi	r24, 0x0F	; 15
    2c5a:	09 f4       	brne	.+2      	; 0x2c5e <__vector_24__bottom+0x172>
			if (pos_i <= 0b1110) {
    2c5c:	73 c0       	rjmp	.+230    	; 0x2d44 <__vector_24__bottom+0x258>
    2c5e:	90 91 0e 04 	lds	r25, 0x040E	; 0x80040e <pos_i.2930>
    2c62:	9f 30       	cpi	r25, 0x0F	; 15
    2c64:	08 f0       	brcs	.+2      	; 0x2c68 <__vector_24__bottom+0x17c>
				s_rx_d[pos_i] = twd;			// [1]=cmd, [2..]=parameters
    2c66:	72 c0       	rjmp	.+228    	; 0x2d4c <__vector_24__bottom+0x260>
    2c68:	e9 2f       	mov	r30, r25
    2c6a:	f0 e0       	ldi	r31, 0x00	; 0
    2c6c:	ef 5e       	subi	r30, 0xEF	; 239
    2c6e:	fb 4f       	sbci	r31, 0xFB	; 251
			}
			if (pos_i == 1) {
    2c70:	d0 83       	st	Z, r29
    2c72:	91 30       	cpi	r25, 0x01	; 1
    2c74:	09 f0       	breq	.+2      	; 0x2c78 <__vector_24__bottom+0x18c>
				/* Load receive counter */
				if (s_rx_d[0] == TWI_SLAVE_ADDR_SMARTLCD) {
    2c76:	5c c0       	rjmp	.+184    	; 0x2d30 <__vector_24__bottom+0x244>
    2c78:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <s_rx_d>
    2c7c:	82 32       	cpi	r24, 0x22	; 34
    2c7e:	09 f0       	breq	.+2      	; 0x2c82 <__vector_24__bottom+0x196>
					cnt_i = 0;
    2c80:	59 c0       	rjmp	.+178    	; 0x2d34 <__vector_24__bottom+0x248>
    2c82:	10 92 0d 04 	sts	0x040D, r1	; 0x80040d <cnt_i.2932>
					cnt_o = 0;
    2c86:	10 92 0f 04 	sts	0x040F, r1	; 0x80040f <cnt_o.2933>

					switch (s_rx_d[1]) {
    2c8a:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <s_rx_d+0x1>
    2c8e:	80 38       	cpi	r24, 0x80	; 128
    2c90:	09 f4       	brne	.+2      	; 0x2c94 <__vector_24__bottom+0x1a8>
    2c92:	4a c0       	rjmp	.+148    	; 0x2d28 <__vector_24__bottom+0x23c>
    2c94:	c0 f4       	brcc	.+48     	; 0x2cc6 <__vector_24__bottom+0x1da>
    2c96:	80 32       	cpi	r24, 0x20	; 32
    2c98:	d9 f1       	breq	.+118    	; 0x2d10 <__vector_24__bottom+0x224>
    2c9a:	40 f4       	brcc	.+16     	; 0x2cac <__vector_24__bottom+0x1c0>
    2c9c:	81 30       	cpi	r24, 0x01	; 1
    2c9e:	79 f1       	breq	.+94     	; 0x2cfe <__vector_24__bottom+0x212>
    2ca0:	50 f1       	brcs	.+84     	; 0x2cf6 <__vector_24__bottom+0x20a>
    2ca2:	82 30       	cpi	r24, 0x02	; 2
    2ca4:	89 f1       	breq	.+98     	; 0x2d08 <__vector_24__bottom+0x21c>
    2ca6:	84 31       	cpi	r24, 0x14	; 20
    2ca8:	79 f1       	breq	.+94     	; 0x2d08 <__vector_24__bottom+0x21c>
    2caa:	44 c0       	rjmp	.+136    	; 0x2d34 <__vector_24__bottom+0x248>
    2cac:	86 33       	cpi	r24, 0x36	; 54
    2cae:	81 f1       	breq	.+96     	; 0x2d10 <__vector_24__bottom+0x224>
    2cb0:	28 f4       	brcc	.+10     	; 0x2cbc <__vector_24__bottom+0x1d0>
    2cb2:	82 33       	cpi	r24, 0x32	; 50
    2cb4:	69 f1       	breq	.+90     	; 0x2d10 <__vector_24__bottom+0x224>
    2cb6:	84 33       	cpi	r24, 0x34	; 52
    2cb8:	59 f1       	breq	.+86     	; 0x2d10 <__vector_24__bottom+0x224>
    2cba:	3c c0       	rjmp	.+120    	; 0x2d34 <__vector_24__bottom+0x248>
    2cbc:	88 33       	cpi	r24, 0x38	; 56
    2cbe:	21 f1       	breq	.+72     	; 0x2d08 <__vector_24__bottom+0x21c>
    2cc0:	8a 33       	cpi	r24, 0x3A	; 58
    2cc2:	11 f1       	breq	.+68     	; 0x2d08 <__vector_24__bottom+0x21c>
    2cc4:	37 c0       	rjmp	.+110    	; 0x2d34 <__vector_24__bottom+0x248>
    2cc6:	88 38       	cpi	r24, 0x88	; 136
    2cc8:	39 f1       	breq	.+78     	; 0x2d18 <__vector_24__bottom+0x22c>
    2cca:	68 f4       	brcc	.+26     	; 0x2ce6 <__vector_24__bottom+0x1fa>
    2ccc:	83 38       	cpi	r24, 0x83	; 131
    2cce:	41 f1       	breq	.+80     	; 0x2d20 <__vector_24__bottom+0x234>
    2cd0:	28 f4       	brcc	.+10     	; 0x2cdc <__vector_24__bottom+0x1f0>
    2cd2:	81 38       	cpi	r24, 0x81	; 129
    2cd4:	29 f1       	breq	.+74     	; 0x2d20 <__vector_24__bottom+0x234>
    2cd6:	82 38       	cpi	r24, 0x82	; 130
    2cd8:	f9 f0       	breq	.+62     	; 0x2d18 <__vector_24__bottom+0x22c>
    2cda:	2c c0       	rjmp	.+88     	; 0x2d34 <__vector_24__bottom+0x248>
    2cdc:	84 38       	cpi	r24, 0x84	; 132
    2cde:	c1 f0       	breq	.+48     	; 0x2d10 <__vector_24__bottom+0x224>
    2ce0:	85 38       	cpi	r24, 0x85	; 133
    2ce2:	d1 f0       	breq	.+52     	; 0x2d18 <__vector_24__bottom+0x22c>
    2ce4:	27 c0       	rjmp	.+78     	; 0x2d34 <__vector_24__bottom+0x248>
    2ce6:	8d 38       	cpi	r24, 0x8D	; 141
    2ce8:	18 f4       	brcc	.+6      	; 0x2cf0 <__vector_24__bottom+0x204>
    2cea:	8b 38       	cpi	r24, 0x8B	; 139
    2cec:	88 f0       	brcs	.+34     	; 0x2d10 <__vector_24__bottom+0x224>
    2cee:	1c c0       	rjmp	.+56     	; 0x2d28 <__vector_24__bottom+0x23c>
    2cf0:	8d 38       	cpi	r24, 0x8D	; 141
    2cf2:	91 f0       	breq	.+36     	; 0x2d18 <__vector_24__bottom+0x22c>
						case TWI_SMART_LCD_CMD_NOOP:
							cnt_i = 1;
    2cf4:	1f c0       	rjmp	.+62     	; 0x2d34 <__vector_24__bottom+0x248>
    2cf6:	81 e0       	ldi	r24, 0x01	; 1
    2cf8:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <cnt_i.2932>
						break;

						case TWI_SMART_LCD_CMD_GET_VER:
							cnt_i = 1;
    2cfc:	1b c0       	rjmp	.+54     	; 0x2d34 <__vector_24__bottom+0x248>
    2cfe:	90 93 0d 04 	sts	0x040D, r25	; 0x80040d <cnt_i.2932>
							cnt_o = 1;
    2d02:	90 93 0f 04 	sts	0x040F, r25	; 0x80040f <cnt_o.2933>

						case TWI_SMART_LCD_CMD_SET_MODE:
						case TWI_SMART_LCD_CMD_SET_PIXEL_TYPE:
						case TWI_SMART_LCD_CMD_DRAW_CIRC:
						case TWI_SMART_LCD_CMD_DRAW_FILLED_CIRC:
							cnt_i = 2;
    2d06:	16 c0       	rjmp	.+44     	; 0x2d34 <__vector_24__bottom+0x248>
    2d08:	82 e0       	ldi	r24, 0x02	; 2
    2d0a:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <cnt_i.2932>
						case TWI_SMART_LCD_CMD_DRAW_RECT:
						case TWI_SMART_LCD_CMD_DRAW_FILLED_RECT:
						case TWI_SMART_LCD_CMD_SHOW_DOP:
						case TWI_SMART_LCD_CMD_SHOW_POS_STATE:
						case TWI_SMART_LCD_CMD_SHOW_TCXO_PWM:
							cnt_i = 3;
    2d0e:	12 c0       	rjmp	.+36     	; 0x2d34 <__vector_24__bottom+0x248>
    2d10:	83 e0       	ldi	r24, 0x03	; 3
    2d12:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <cnt_i.2932>

						case TWI_SMART_LCD_CMD_SHOW_HR_MIN_SEC:
						case TWI_SMART_LCD_CMD_SHOW_POS_HEIGHT:
						case TWI_SMART_LCD_CMD_SHOW_SATS:
						case TWI_SMART_LCD_CMD_SHOW_TCXO_VC:
							cnt_i = 4;
    2d16:	0e c0       	rjmp	.+28     	; 0x2d34 <__vector_24__bottom+0x248>
    2d18:	84 e0       	ldi	r24, 0x04	; 4
    2d1a:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <cnt_i.2932>
						break;

						case TWI_SMART_LCD_CMD_SHOW_PPB:
						case TWI_SMART_LCD_CMD_SHOW_YEAR_MON_DAY:
							cnt_i = 5;
    2d1e:	0a c0       	rjmp	.+20     	; 0x2d34 <__vector_24__bottom+0x248>
    2d20:	85 e0       	ldi	r24, 0x05	; 5
    2d22:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <cnt_i.2932>
						break;

						case TWI_SMART_LCD_CMD_SHOW_CLK_STATE:
						case TWI_SMART_LCD_CMD_SHOW_POS_LAT:
						case TWI_SMART_LCD_CMD_SHOW_POS_LON:
							cnt_i = 6;
    2d26:	06 c0       	rjmp	.+12     	; 0x2d34 <__vector_24__bottom+0x248>
    2d28:	86 e0       	ldi	r24, 0x06	; 6
    2d2a:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <cnt_i.2932>
						break;
					}
				}
			}

			if (pos_i < 0b1110) {
    2d2e:	02 c0       	rjmp	.+4      	; 0x2d34 <__vector_24__bottom+0x248>
    2d30:	9e 30       	cpi	r25, 0x0E	; 14
				if (++pos_i <= cnt_i) {
    2d32:	60 f4       	brcc	.+24     	; 0x2d4c <__vector_24__bottom+0x260>
    2d34:	9f 5f       	subi	r25, 0xFF	; 255
    2d36:	90 93 0e 04 	sts	0x040E, r25	; 0x80040e <pos_i.2930>
    2d3a:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <cnt_i.2932>
    2d3e:	89 17       	cp	r24, r25
    2d40:	28 f0       	brcs	.+10     	; 0x2d4c <__vector_24__bottom+0x260>
			} else {
				twcr_new &= ~_BV(TWEA);			// Send NACK
			}

		} else {								// Open parameter form
			s_rx_d[2] = twd;
    2d42:	24 c0       	rjmp	.+72     	; 0x2d8c <__vector_24__bottom+0x2a0>
    2d44:	d0 93 13 04 	sts	0x0413, r29	; 0x800413 <s_rx_d+0x2>
			if (!s_isr_twi_rcvd_command_open_form(s_rx_d, ++pos_i)) {
				twcr_new |= _BV(TWEA);			// Send ACK
			} else {
				pos_i = 0;
    2d48:	10 92 0e 04 	sts	0x040E, r1	; 0x80040e <pos_i.2930>
				twcr_new &= ~_BV(TWEA);			// Send NACK
    2d4c:	c4 2f       	mov	r28, r20
    2d4e:	c5 70       	andi	r28, 0x05	; 5

	case TWI_TWSR_S_SLAW_MYADDR_DATA_NACK:		// NACK after last data byte sent
		nop();
		// fall-through.
	case TWI_TWSR_S_SLAW_OMNIADDR_DATA_NACK:
		s_rx_lock = 0;
    2d50:	4f c0       	rjmp	.+158    	; 0x2df0 <__vector_24__bottom+0x304>
    2d52:	10 92 19 04 	sts	0x0419, r1	; 0x800419 <s_rx_lock>
		if (cnt_i != 0b1111) {
    2d56:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <cnt_i.2932>
			s_isr_twi_rcvd_command_closed_form(s_rx_d, pos_i);	// Call interpreter for closed form of parameters
    2d5a:	8f 30       	cpi	r24, 0x0F	; 15
    2d5c:	09 f0       	breq	.+2      	; 0x2d60 <__vector_24__bottom+0x274>
		} else {
			s_isr_twi_rcvd_command_open_form(s_rx_d, ++pos_i);	// Call interpreter for open form of parameters
		}
		pos_i = 0;
    2d5e:	ad de       	rcall	.-678    	; 0x2aba <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2>
    2d60:	10 92 0e 04 	sts	0x040E, r1	; 0x80040e <pos_i.2930>
		cnt_i = 0;
    2d64:	10 92 0d 04 	sts	0x040D, r1	; 0x80040d <cnt_i.2932>
		mem_set(s_rx_d, 8, 0x00);
    2d68:	40 e0       	ldi	r20, 0x00	; 0
    2d6a:	68 e0       	ldi	r22, 0x08	; 8
    2d6c:	81 e1       	ldi	r24, 0x11	; 17
    2d6e:	94 e0       	ldi	r25, 0x04	; 4
		s_rx_lock = 0;
    2d70:	8e d0       	rcall	.+284    	; 0x2e8e <mem_set>
    2d72:	10 92 19 04 	sts	0x0419, r1	; 0x800419 <s_rx_lock>
		twcr_new |= _BV(TWEA);					// TWI goes to unaddressed, be active again
	break;
    2d76:	c0 64       	ori	r28, 0x40	; 64

	case TWI_TWSR_S_SLAW_STOP_REPEATEDSTART_RECEIVED:	// STOP or RESTART received while still addressed as slave
		s_rx_lock = 0;
    2d78:	3b c0       	rjmp	.+118    	; 0x2df0 <__vector_24__bottom+0x304>
		if (cnt_i != 0b1111) {
    2d7a:	10 92 19 04 	sts	0x0419, r1	; 0x800419 <s_rx_lock>
    2d7e:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <cnt_i.2932>
			s_isr_twi_rcvd_command_closed_form(s_rx_d, pos_i);	// Call interpreter for closed form of parameters
    2d82:	8f 30       	cpi	r24, 0x0F	; 15
		} else {
			s_isr_twi_rcvd_command_open_form(s_rx_d, ++pos_i);	// Call interpreter for open form of parameters
		}
		pos_i = 0;
    2d84:	09 f0       	breq	.+2      	; 0x2d88 <__vector_24__bottom+0x29c>
    2d86:	99 de       	rcall	.-718    	; 0x2aba <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2>
		twcr_new |= _BV(TWEA);					// TWI goes to unaddressed, be active again
    2d88:	10 92 0e 04 	sts	0x040E, r1	; 0x80040e <pos_i.2930>


	/* Slave Transmitter Mode */

	case TWI_TWSR_S_SLAR_MYADDR_DATA_ACK:		// SLA+R received and ACK has been returned
		nop();
    2d8c:	c0 64       	ori	r28, 0x40	; 64
		// fall-through.
	case TWI_TWSR_S_SLAR_MYADDR_ARBIT_LOST:
		s_rx_lock = 1;
    2d8e:	30 c0       	rjmp	.+96     	; 0x2df0 <__vector_24__bottom+0x304>
    2d90:	00 00       	nop
    2d92:	81 e0       	ldi	r24, 0x01	; 1
		pos_o = 0;
    2d94:	80 93 19 04 	sts	0x0419, r24	; 0x800419 <s_rx_lock>
		TWDR = cnt_o > pos_o ?  s_rx_d[pos_o++] : 0;
    2d98:	10 92 10 04 	sts	0x0410, r1	; 0x800410 <pos_o.2931>
    2d9c:	90 91 0f 04 	lds	r25, 0x040F	; 0x80040f <cnt_o.2933>
    2da0:	99 23       	and	r25, r25
    2da2:	a1 f0       	breq	.+40     	; 0x2dcc <__vector_24__bottom+0x2e0>
    2da4:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <pos_o.2931>
    2da8:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <s_rx_d>
			twcr_new &= ~_BV(TWEA);				// No more data to send NACK
		}
	break;

	case TWI_TWSR_S_SLAR_OMNIADDR_DATA_ACK:		// Data sent and ACK has been returned
		TWDR = cnt_o > pos_o ?  s_rx_d[pos_o++] : 0;
    2dac:	10 c0       	rjmp	.+32     	; 0x2dce <__vector_24__bottom+0x2e2>
    2dae:	e0 91 10 04 	lds	r30, 0x0410	; 0x800410 <pos_o.2931>
    2db2:	80 91 0f 04 	lds	r24, 0x040F	; 0x80040f <cnt_o.2933>
    2db6:	e8 17       	cp	r30, r24
    2db8:	48 f4       	brcc	.+18     	; 0x2dcc <__vector_24__bottom+0x2e0>
    2dba:	81 e0       	ldi	r24, 0x01	; 1
    2dbc:	8e 0f       	add	r24, r30
    2dbe:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <pos_o.2931>
    2dc2:	f0 e0       	ldi	r31, 0x00	; 0
    2dc4:	ef 5e       	subi	r30, 0xEF	; 239
    2dc6:	fb 4f       	sbci	r31, 0xFB	; 251
    2dc8:	80 81       	ld	r24, Z
    2dca:	01 c0       	rjmp	.+2      	; 0x2dce <__vector_24__bottom+0x2e2>
    2dcc:	80 e0       	ldi	r24, 0x00	; 0
		if (cnt_o > pos_o) {
    2dce:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    2dd2:	90 91 0f 04 	lds	r25, 0x040F	; 0x80040f <cnt_o.2933>
    2dd6:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <pos_o.2931>
    2dda:	89 17       	cp	r24, r25
    2ddc:	08 f0       	brcs	.+2      	; 0x2de0 <__vector_24__bottom+0x2f4>
		twcr_new |= _BV(TWEA);					// TWI goes to unaddressed, be active again
	break;

	case TWI_TWSR_S_SLAR_MYADDR_LASTDATA_ACK:	// Last data sent and ACK has been returned
		/* message transmitted successfully in slave mode */
		s_rx_lock = 0;
    2dde:	b6 cf       	rjmp	.-148    	; 0x2d4c <__vector_24__bottom+0x260>
    2de0:	d5 cf       	rjmp	.-86     	; 0x2d8c <__vector_24__bottom+0x2a0>
    2de2:	10 92 19 04 	sts	0x0419, r1	; 0x800419 <s_rx_lock>
	break;

	default:
		nop();
		s_tx_lock = 0;
		s_rx_lock = 0;
    2de6:	d2 cf       	rjmp	.-92     	; 0x2d8c <__vector_24__bottom+0x2a0>
    2de8:	00 00       	nop
		twcr_new |= _BV(TWSTO) | _BV(TWEA);		// TWI goes to unaddressed, be active again
    2dea:	10 92 19 04 	sts	0x0419, r1	; 0x800419 <s_rx_lock>
	}

	return twcr_new;
}
    2dee:	c0 65       	ori	r28, 0x50	; 80
    2df0:	8c 2f       	mov	r24, r28
    2df2:	df 91       	pop	r29
    2df4:	cf 91       	pop	r28
    2df6:	1f 91       	pop	r17
    2df8:	08 95       	ret

00002dfa <cpu_irq_save>:
    2dfa:	cf 93       	push	r28
    2dfc:	df 93       	push	r29
    2dfe:	1f 92       	push	r1
    2e00:	cd b7       	in	r28, 0x3d	; 61
    2e02:	de b7       	in	r29, 0x3e	; 62
    2e04:	8f b7       	in	r24, 0x3f	; 63
    2e06:	89 83       	std	Y+1, r24	; 0x01
    2e08:	f8 94       	cli
    2e0a:	89 81       	ldd	r24, Y+1	; 0x01
    2e0c:	0f 90       	pop	r0
    2e0e:	df 91       	pop	r29
    2e10:	cf 91       	pop	r28
    2e12:	08 95       	ret

00002e14 <get_abs_time>:
    2e14:	8f 92       	push	r8
    2e16:	9f 92       	push	r9
    2e18:	af 92       	push	r10
    2e1a:	bf 92       	push	r11
    2e1c:	cf 92       	push	r12
    2e1e:	df 92       	push	r13
    2e20:	ef 92       	push	r14
    2e22:	ff 92       	push	r15
    2e24:	ea df       	rcall	.-44     	; 0x2dfa <cpu_irq_save>
    2e26:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    2e2a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    2e2e:	c0 90 68 04 	lds	r12, 0x0468	; 0x800468 <g_timer_abs_msb>
    2e32:	d0 90 69 04 	lds	r13, 0x0469	; 0x800469 <g_timer_abs_msb+0x1>
    2e36:	e0 90 6a 04 	lds	r14, 0x046A	; 0x80046a <g_timer_abs_msb+0x2>
    2e3a:	f0 90 6b 04 	lds	r15, 0x046B	; 0x80046b <g_timer_abs_msb+0x3>
    2e3e:	8f bf       	out	0x3f, r24	; 63
    2e40:	70 e0       	ldi	r23, 0x00	; 0
    2e42:	79 2b       	or	r23, r25
    2e44:	07 2e       	mov	r0, r23
    2e46:	00 0c       	add	r0, r0
    2e48:	88 0b       	sbc	r24, r24
    2e4a:	99 0b       	sbc	r25, r25
    2e4c:	57 d3       	rcall	.+1710   	; 0x34fc <__floatsisf>
    2e4e:	20 e0       	ldi	r18, 0x00	; 0
    2e50:	34 e2       	ldi	r19, 0x24	; 36
    2e52:	44 ef       	ldi	r20, 0xF4	; 244
    2e54:	5a e4       	ldi	r21, 0x4A	; 74
    2e56:	b7 d2       	rcall	.+1390   	; 0x33c6 <__divsf3>
    2e58:	4b 01       	movw	r8, r22
    2e5a:	5c 01       	movw	r10, r24
    2e5c:	c7 01       	movw	r24, r14
    2e5e:	b6 01       	movw	r22, r12
    2e60:	4b d3       	rcall	.+1686   	; 0x34f8 <__floatunsisf>
    2e62:	20 e0       	ldi	r18, 0x00	; 0
    2e64:	30 e0       	ldi	r19, 0x00	; 0
    2e66:	40 e0       	ldi	r20, 0x00	; 0
    2e68:	54 e4       	ldi	r21, 0x44	; 68
    2e6a:	4f d4       	rcall	.+2206   	; 0x370a <__mulsf3>
    2e6c:	20 e0       	ldi	r18, 0x00	; 0
    2e6e:	34 e2       	ldi	r19, 0x24	; 36
    2e70:	44 ef       	ldi	r20, 0xF4	; 244
    2e72:	5a e4       	ldi	r21, 0x4A	; 74
    2e74:	a8 d2       	rcall	.+1360   	; 0x33c6 <__divsf3>
    2e76:	a5 01       	movw	r20, r10
    2e78:	94 01       	movw	r18, r8
    2e7a:	3d d2       	rcall	.+1146   	; 0x32f6 <__addsf3>
    2e7c:	ff 90       	pop	r15
    2e7e:	ef 90       	pop	r14
    2e80:	df 90       	pop	r13
    2e82:	cf 90       	pop	r12
    2e84:	bf 90       	pop	r11
    2e86:	af 90       	pop	r10
    2e88:	9f 90       	pop	r9
    2e8a:	8f 90       	pop	r8
    2e8c:	08 95       	ret

00002e8e <mem_set>:
    2e8e:	70 e0       	ldi	r23, 0x00	; 0
    2e90:	61 15       	cp	r22, r1
    2e92:	71 05       	cpc	r23, r1
    2e94:	31 f0       	breq	.+12     	; 0x2ea2 <mem_set+0x14>
    2e96:	fc 01       	movw	r30, r24
    2e98:	41 93       	st	Z+, r20
    2e9a:	cf 01       	movw	r24, r30
    2e9c:	61 50       	subi	r22, 0x01	; 1
    2e9e:	71 09       	sbc	r23, r1
    2ea0:	f7 cf       	rjmp	.-18     	; 0x2e90 <mem_set+0x2>
    2ea2:	08 95       	ret

00002ea4 <eeprom_nvm_settings_write>:
    2ea4:	cf 93       	push	r28
    2ea6:	c8 2f       	mov	r28, r24
    2ea8:	87 ff       	sbrs	r24, 7
    2eaa:	04 c0       	rjmp	.+8      	; 0x2eb4 <eeprom_nvm_settings_write+0x10>
    2eac:	61 e1       	ldi	r22, 0x11	; 17
    2eae:	80 e0       	ldi	r24, 0x00	; 0
    2eb0:	90 e0       	ldi	r25, 0x00	; 0
    2eb2:	7f d7       	rcall	.+3838   	; 0x3db2 <eeprom_write_byte>
    2eb4:	c0 ff       	sbrs	r28, 0
    2eb6:	07 c0       	rjmp	.+14     	; 0x2ec6 <eeprom_nvm_settings_write+0x22>
    2eb8:	60 91 59 04 	lds	r22, 0x0459	; 0x800459 <g_lcd_contrast_pm>
    2ebc:	6f 73       	andi	r22, 0x3F	; 63
    2ebe:	80 e1       	ldi	r24, 0x10	; 16
    2ec0:	90 e0       	ldi	r25, 0x00	; 0
    2ec2:	cf 91       	pop	r28
    2ec4:	76 c7       	rjmp	.+3820   	; 0x3db2 <eeprom_write_byte>
    2ec6:	cf 91       	pop	r28
    2ec8:	08 95       	ret

00002eca <eeprom_nvm_settings_read>:
    2eca:	87 ff       	sbrs	r24, 7
    2ecc:	07 c0       	rjmp	.+14     	; 0x2edc <eeprom_nvm_settings_read+0x12>
    2ece:	80 e0       	ldi	r24, 0x00	; 0
    2ed0:	90 e0       	ldi	r25, 0x00	; 0
    2ed2:	67 d7       	rcall	.+3790   	; 0x3da2 <eeprom_read_byte>
    2ed4:	81 31       	cpi	r24, 0x11	; 17
    2ed6:	11 f0       	breq	.+4      	; 0x2edc <eeprom_nvm_settings_read+0x12>
    2ed8:	80 e8       	ldi	r24, 0x80	; 128
    2eda:	e4 df       	rcall	.-56     	; 0x2ea4 <eeprom_nvm_settings_write>
    2edc:	86 e1       	ldi	r24, 0x16	; 22
    2ede:	80 93 59 04 	sts	0x0459, r24	; 0x800459 <g_lcd_contrast_pm>
    2ee2:	08 95       	ret

00002ee4 <s_task>:
    2ee4:	4f 92       	push	r4
    2ee6:	5f 92       	push	r5
    2ee8:	6f 92       	push	r6
    2eea:	7f 92       	push	r7
    2eec:	8f 92       	push	r8
    2eee:	9f 92       	push	r9
    2ef0:	af 92       	push	r10
    2ef2:	bf 92       	push	r11
    2ef4:	ef 92       	push	r14
    2ef6:	ff 92       	push	r15
    2ef8:	0f 93       	push	r16
    2efa:	1f 93       	push	r17
    2efc:	cf 93       	push	r28
    2efe:	df 93       	push	r29
    2f00:	cd b7       	in	r28, 0x3d	; 61
    2f02:	de b7       	in	r29, 0x3e	; 62
    2f04:	a8 97       	sbiw	r28, 0x28	; 40
    2f06:	0f b6       	in	r0, 0x3f	; 63
    2f08:	f8 94       	cli
    2f0a:	de bf       	out	0x3e, r29	; 62
    2f0c:	0f be       	out	0x3f, r0	; 63
    2f0e:	cd bf       	out	0x3d, r28	; 61
    2f10:	74 df       	rcall	.-280    	; 0x2dfa <cpu_irq_save>
    2f12:	40 90 5f 04 	lds	r4, 0x045F	; 0x80045f <g_adc_temp>
    2f16:	50 90 60 04 	lds	r5, 0x0460	; 0x800460 <g_adc_temp+0x1>
    2f1a:	60 90 61 04 	lds	r6, 0x0461	; 0x800461 <g_adc_temp+0x2>
    2f1e:	70 90 62 04 	lds	r7, 0x0462	; 0x800462 <g_adc_temp+0x3>
    2f22:	80 90 63 04 	lds	r8, 0x0463	; 0x800463 <g_adc_light>
    2f26:	90 90 64 04 	lds	r9, 0x0464	; 0x800464 <g_adc_light+0x1>
    2f2a:	a0 90 65 04 	lds	r10, 0x0465	; 0x800465 <g_adc_light+0x2>
    2f2e:	b0 90 66 04 	lds	r11, 0x0466	; 0x800466 <g_adc_light+0x3>
    2f32:	10 91 54 04 	lds	r17, 0x0454	; 0x800454 <g_status>
    2f36:	10 fb       	bst	r17, 0
    2f38:	ee 24       	eor	r14, r14
    2f3a:	e0 f8       	bld	r14, 0
    2f3c:	16 95       	lsr	r17
    2f3e:	11 70       	andi	r17, 0x01	; 1
    2f40:	8f bf       	out	0x3f, r24	; 63
    2f42:	5b df       	rcall	.-330    	; 0x2dfa <cpu_irq_save>
    2f44:	f8 2e       	mov	r15, r24
    2f46:	29 e1       	ldi	r18, 0x19	; 25
    2f48:	37 ec       	ldi	r19, 0xC7	; 199
    2f4a:	4f ea       	ldi	r20, 0xAF	; 175
    2f4c:	53 e4       	ldi	r21, 0x43	; 67
    2f4e:	c3 01       	movw	r24, r6
    2f50:	b2 01       	movw	r22, r4
    2f52:	d0 d1       	rcall	.+928    	; 0x32f4 <__subsf3>
    2f54:	20 e0       	ldi	r18, 0x00	; 0
    2f56:	30 ea       	ldi	r19, 0xA0	; 160
    2f58:	47 e8       	ldi	r20, 0x87	; 135
    2f5a:	5f e3       	ldi	r21, 0x3F	; 63
    2f5c:	d6 d3       	rcall	.+1964   	; 0x370a <__mulsf3>
    2f5e:	20 e0       	ldi	r18, 0x00	; 0
    2f60:	30 e0       	ldi	r19, 0x00	; 0
    2f62:	48 ec       	ldi	r20, 0xC8	; 200
    2f64:	51 e4       	ldi	r21, 0x41	; 65
    2f66:	c7 d1       	rcall	.+910    	; 0x32f6 <__addsf3>
    2f68:	60 93 5b 04 	sts	0x045B, r22	; 0x80045b <g_temp>
    2f6c:	70 93 5c 04 	sts	0x045C, r23	; 0x80045c <g_temp+0x1>
    2f70:	80 93 5d 04 	sts	0x045D, r24	; 0x80045d <g_temp+0x2>
    2f74:	90 93 5e 04 	sts	0x045E, r25	; 0x80045e <g_temp+0x3>
    2f78:	ff be       	out	0x3f, r15	; 63
    2f7a:	c5 01       	movw	r24, r10
    2f7c:	b4 01       	movw	r22, r8
    2f7e:	90 d2       	rcall	.+1312   	; 0x34a0 <__fixunssfsi>
    2f80:	66 3b       	cpi	r22, 0xB6	; 182
    2f82:	23 e0       	ldi	r18, 0x03	; 3
    2f84:	72 07       	cpc	r23, r18
    2f86:	00 f5       	brcc	.+64     	; 0x2fc8 <s_task+0xe4>
    2f88:	80 e0       	ldi	r24, 0x00	; 0
    2f8a:	90 e0       	ldi	r25, 0x00	; 0
    2f8c:	b5 d2       	rcall	.+1386   	; 0x34f8 <__floatunsisf>
    2f8e:	20 e0       	ldi	r18, 0x00	; 0
    2f90:	30 e0       	ldi	r19, 0x00	; 0
    2f92:	40 e2       	ldi	r20, 0x20	; 32
    2f94:	51 e4       	ldi	r21, 0x41	; 65
    2f96:	ae d1       	rcall	.+860    	; 0x32f4 <__subsf3>
    2f98:	20 e0       	ldi	r18, 0x00	; 0
    2f9a:	30 e8       	ldi	r19, 0x80	; 128
    2f9c:	4d e6       	ldi	r20, 0x6D	; 109
    2f9e:	54 e4       	ldi	r21, 0x44	; 68
    2fa0:	12 d2       	rcall	.+1060   	; 0x33c6 <__divsf3>
    2fa2:	20 e0       	ldi	r18, 0x00	; 0
    2fa4:	30 e0       	ldi	r19, 0x00	; 0
    2fa6:	45 e7       	ldi	r20, 0x75	; 117
    2fa8:	53 e4       	ldi	r21, 0x43	; 67
    2faa:	af d3       	rcall	.+1886   	; 0x370a <__mulsf3>
    2fac:	20 e0       	ldi	r18, 0x00	; 0
    2fae:	30 e0       	ldi	r19, 0x00	; 0
    2fb0:	40 e2       	ldi	r20, 0x20	; 32
    2fb2:	51 e4       	ldi	r21, 0x41	; 65
    2fb4:	a0 d1       	rcall	.+832    	; 0x32f6 <__addsf3>
    2fb6:	74 d2       	rcall	.+1256   	; 0x34a0 <__fixunssfsi>
    2fb8:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    2fbc:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    2fc0:	80 68       	ori	r24, 0x80	; 128
    2fc2:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    2fc6:	07 c0       	rjmp	.+14     	; 0x2fd6 <s_task+0xf2>
    2fc8:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    2fcc:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    2fd0:	8f 73       	andi	r24, 0x3F	; 63
    2fd2:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    2fd6:	11 23       	and	r17, r17
    2fd8:	21 f0       	breq	.+8      	; 0x2fe2 <s_task+0xfe>
    2fda:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <lcd_show_new_data>
    2fde:	f8 2e       	mov	r15, r24
    2fe0:	01 c0       	rjmp	.+2      	; 0x2fe4 <s_task+0x100>
    2fe2:	f1 2c       	mov	r15, r1
    2fe4:	ee 20       	and	r14, r14
    2fe6:	11 f0       	breq	.+4      	; 0x2fec <s_task+0x108>
    2fe8:	fe da       	rcall	.-2564   	; 0x25e6 <lcd_animation_loop>
    2fea:	37 c0       	rjmp	.+110    	; 0x305a <s_task+0x176>
    2fec:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <s_last_animation.3249>
    2ff0:	88 23       	and	r24, r24
    2ff2:	99 f1       	breq	.+102    	; 0x305a <s_task+0x176>
    2ff4:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <s_last_animation.3249>
    2ff8:	0e 94 bd 0c 	call	0x197a	; 0x197a <lcd_cls>
    2ffc:	80 91 28 04 	lds	r24, 0x0428	; 0x800428 <g_SmartLCD_mode>
    3000:	80 31       	cpi	r24, 0x10	; 16
    3002:	41 f4       	brne	.+16     	; 0x3014 <s_task+0x130>
    3004:	01 e0       	ldi	r16, 0x01	; 1
    3006:	20 e8       	ldi	r18, 0x80	; 128
    3008:	40 ef       	ldi	r20, 0xF0	; 240
    300a:	60 e0       	ldi	r22, 0x00	; 0
    300c:	80 e0       	ldi	r24, 0x00	; 0
    300e:	0e 94 54 04 	call	0x8a8	; 0x8a8 <gfx_mono_generic_draw_rect>
    3012:	1c c0       	rjmp	.+56     	; 0x304c <s_task+0x168>
    3014:	80 32       	cpi	r24, 0x20	; 32
    3016:	d1 f4       	brne	.+52     	; 0x304c <s_task+0x168>
    3018:	01 e0       	ldi	r16, 0x01	; 1
    301a:	20 e8       	ldi	r18, 0x80	; 128
    301c:	40 ef       	ldi	r20, 0xF0	; 240
    301e:	60 e0       	ldi	r22, 0x00	; 0
    3020:	80 e0       	ldi	r24, 0x00	; 0
    3022:	0e 94 54 04 	call	0x8a8	; 0x8a8 <gfx_mono_generic_draw_rect>
    3026:	88 e2       	ldi	r24, 0x28	; 40
    3028:	e0 e2       	ldi	r30, 0x20	; 32
    302a:	f3 e0       	ldi	r31, 0x03	; 3
    302c:	de 01       	movw	r26, r28
    302e:	11 96       	adiw	r26, 0x01	; 1
    3030:	01 90       	ld	r0, Z+
    3032:	0d 92       	st	X+, r0
    3034:	8a 95       	dec	r24
    3036:	e1 f7       	brne	.-8      	; 0x3030 <s_task+0x14c>
    3038:	03 dd       	rcall	.-1530   	; 0x2a40 <lcd_get_sysfont>
    303a:	9c 01       	movw	r18, r24
    303c:	42 e0       	ldi	r20, 0x02	; 2
    303e:	63 e0       	ldi	r22, 0x03	; 3
    3040:	ce 01       	movw	r24, r28
    3042:	01 96       	adiw	r24, 0x01	; 1
    3044:	0e 94 be 06 	call	0xd7c	; 0xd7c <gfx_mono_draw_string>
    3048:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <lcd_show_template>
    304c:	d6 de       	rcall	.-596    	; 0x2dfa <cpu_irq_save>
    304e:	90 91 54 04 	lds	r25, 0x0454	; 0x800454 <g_status>
    3052:	92 60       	ori	r25, 0x02	; 2
    3054:	90 93 54 04 	sts	0x0454, r25	; 0x800454 <g_status>
    3058:	8f bf       	out	0x3f, r24	; 63
    305a:	f1 10       	cpse	r15, r1
    305c:	bc cf       	rjmp	.-136    	; 0x2fd6 <s_task+0xf2>
    305e:	a8 96       	adiw	r28, 0x28	; 40
    3060:	0f b6       	in	r0, 0x3f	; 63
    3062:	f8 94       	cli
    3064:	de bf       	out	0x3e, r29	; 62
    3066:	0f be       	out	0x3f, r0	; 63
    3068:	cd bf       	out	0x3d, r28	; 61
    306a:	df 91       	pop	r29
    306c:	cf 91       	pop	r28
    306e:	1f 91       	pop	r17
    3070:	0f 91       	pop	r16
    3072:	ff 90       	pop	r15
    3074:	ef 90       	pop	r14
    3076:	bf 90       	pop	r11
    3078:	af 90       	pop	r10
    307a:	9f 90       	pop	r9
    307c:	8f 90       	pop	r8
    307e:	7f 90       	pop	r7
    3080:	6f 90       	pop	r6
    3082:	5f 90       	pop	r5
    3084:	4f 90       	pop	r4
    3086:	08 95       	ret

00003088 <main>:
    3088:	cf 93       	push	r28
    308a:	df 93       	push	r29
    308c:	8e e7       	ldi	r24, 0x7E	; 126
    308e:	88 b9       	out	0x08, r24	; 8
    3090:	88 e0       	ldi	r24, 0x08	; 8
    3092:	87 b9       	out	0x07, r24	; 7
    3094:	84 e1       	ldi	r24, 0x14	; 20
    3096:	85 b9       	out	0x05, r24	; 5
    3098:	8b ef       	ldi	r24, 0xFB	; 251
    309a:	84 b9       	out	0x04, r24	; 4
    309c:	8f ef       	ldi	r24, 0xFF	; 255
    309e:	8b b9       	out	0x0b, r24	; 11
    30a0:	1a b8       	out	0x0a, r1	; 10
    30a2:	c1 e0       	ldi	r28, 0x01	; 1
    30a4:	c0 93 7e 00 	sts	0x007E, r28	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
    30a8:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <sysclk_init>
    30ac:	8b ee       	ldi	r24, 0xEB	; 235
    30ae:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    30b2:	d3 e8       	ldi	r29, 0x83	; 131
    30b4:	d3 bd       	out	0x23, r29	; 35
    30b6:	68 e0       	ldi	r22, 0x08	; 8
    30b8:	80 e0       	ldi	r24, 0x00	; 0
    30ba:	0e 94 04 03 	call	0x608	; 0x608 <sysclk_enable_module>
    30be:	82 e8       	ldi	r24, 0x82	; 130
    30c0:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    30c4:	89 e0       	ldi	r24, 0x09	; 9
    30c6:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    30ca:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    30ce:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    30d2:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    30d6:	80 e8       	ldi	r24, 0x80	; 128
    30d8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    30dc:	c0 93 6f 00 	sts	0x006F, r28	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    30e0:	87 e2       	ldi	r24, 0x27	; 39
    30e2:	86 bb       	out	0x16, r24	; 22
    30e4:	60 e4       	ldi	r22, 0x40	; 64
    30e6:	80 e0       	ldi	r24, 0x00	; 0
    30e8:	0e 94 04 03 	call	0x608	; 0x608 <sysclk_enable_module>
    30ec:	d0 93 b0 00 	sts	0x00B0, r29	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    30f0:	85 e0       	ldi	r24, 0x05	; 5
    30f2:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    30f6:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
    30fa:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    30fe:	c0 93 70 00 	sts	0x0070, r28	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
    3102:	87 e0       	ldi	r24, 0x07	; 7
    3104:	87 bb       	out	0x17, r24	; 23
    3106:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
    310a:	61 e0       	ldi	r22, 0x01	; 1
    310c:	80 e0       	ldi	r24, 0x00	; 0
    310e:	0e 94 04 03 	call	0x608	; 0x608 <sysclk_enable_module>
    3112:	c0 93 7e 00 	sts	0x007E, r28	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
    3116:	87 e8       	ldi	r24, 0x87	; 135
    3118:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    311c:	80 ec       	ldi	r24, 0xC0	; 192
    311e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    3122:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3126:	80 61       	ori	r24, 0x10	; 16
    3128:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    312c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3130:	88 60       	ori	r24, 0x08	; 8
    3132:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3136:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
    313a:	88 7f       	andi	r24, 0xF8	; 248
    313c:	86 60       	ori	r24, 0x06	; 6
    313e:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
    3142:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3146:	80 62       	ori	r24, 0x20	; 32
    3148:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    314c:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <board_init>
    3150:	84 b7       	in	r24, 0x34	; 52
    3152:	98 2f       	mov	r25, r24
    3154:	97 70       	andi	r25, 0x07	; 7
    3156:	11 f4       	brne	.+4      	; 0x315c <main+0xd4>
    3158:	81 11       	cpse	r24, r1
    315a:	2b c0       	rjmp	.+86     	; 0x31b2 <main+0x12a>
    315c:	4e de       	rcall	.-868    	; 0x2dfa <cpu_irq_save>
    315e:	f8 94       	cli
    3160:	10 92 67 04 	sts	0x0467, r1	; 0x800467 <g_adc_state>
    3164:	10 92 63 04 	sts	0x0463, r1	; 0x800463 <g_adc_light>
    3168:	10 92 64 04 	sts	0x0464, r1	; 0x800464 <g_adc_light+0x1>
    316c:	10 92 65 04 	sts	0x0465, r1	; 0x800465 <g_adc_light+0x2>
    3170:	10 92 66 04 	sts	0x0466, r1	; 0x800466 <g_adc_light+0x3>
    3174:	10 92 5f 04 	sts	0x045F, r1	; 0x80045f <g_adc_temp>
    3178:	10 92 60 04 	sts	0x0460, r1	; 0x800460 <g_adc_temp+0x1>
    317c:	10 92 61 04 	sts	0x0461, r1	; 0x800461 <g_adc_temp+0x2>
    3180:	10 92 62 04 	sts	0x0462, r1	; 0x800462 <g_adc_temp+0x3>
    3184:	40 e0       	ldi	r20, 0x00	; 0
    3186:	50 e0       	ldi	r21, 0x00	; 0
    3188:	68 ec       	ldi	r22, 0xC8	; 200
    318a:	71 e4       	ldi	r23, 0x41	; 65
    318c:	40 93 5b 04 	sts	0x045B, r20	; 0x80045b <g_temp>
    3190:	50 93 5c 04 	sts	0x045C, r21	; 0x80045c <g_temp+0x1>
    3194:	60 93 5d 04 	sts	0x045D, r22	; 0x80045d <g_temp+0x2>
    3198:	70 93 5e 04 	sts	0x045E, r23	; 0x80045e <g_temp+0x3>
    319c:	90 e4       	ldi	r25, 0x40	; 64
    319e:	90 93 5a 04 	sts	0x045A, r25	; 0x80045a <g_lcdbl_dimmer>
    31a2:	90 91 54 04 	lds	r25, 0x0454	; 0x800454 <g_status>
    31a6:	9e 7f       	andi	r25, 0xFE	; 254
    31a8:	9d 7f       	andi	r25, 0xFD	; 253
    31aa:	90 93 54 04 	sts	0x0454, r25	; 0x800454 <g_status>
    31ae:	8f bf       	out	0x3f, r24	; 63
    31b0:	0d c0       	rjmp	.+26     	; 0x31cc <main+0x144>
    31b2:	90 e0       	ldi	r25, 0x00	; 0
    31b4:	a0 e0       	ldi	r26, 0x00	; 0
    31b6:	b0 e0       	ldi	r27, 0x00	; 0
    31b8:	80 93 24 04 	sts	0x0424, r24	; 0x800424 <g_u32_DEBUG21>
    31bc:	90 93 25 04 	sts	0x0425, r25	; 0x800425 <g_u32_DEBUG21+0x1>
    31c0:	a0 93 26 04 	sts	0x0426, r26	; 0x800426 <g_u32_DEBUG21+0x2>
    31c4:	b0 93 27 04 	sts	0x0427, r27	; 0x800427 <g_u32_DEBUG21+0x3>
    31c8:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <asm_break>
    31cc:	8f ef       	ldi	r24, 0xFF	; 255
    31ce:	7d de       	rcall	.-774    	; 0x2eca <eeprom_nvm_settings_read>
    31d0:	60 e8       	ldi	r22, 0x80	; 128
    31d2:	80 e0       	ldi	r24, 0x00	; 0
    31d4:	0e 94 04 03 	call	0x608	; 0x608 <sysclk_enable_module>
    31d8:	10 de       	rcall	.-992    	; 0x2dfa <cpu_irq_save>
    31da:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    31de:	92 e0       	ldi	r25, 0x02	; 2
    31e0:	90 93 b8 00 	sts	0x00B8, r25	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    31e4:	94 e4       	ldi	r25, 0x44	; 68
    31e6:	90 93 ba 00 	sts	0x00BA, r25	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7e00ba>
    31ea:	10 92 bd 00 	sts	0x00BD, r1	; 0x8000bd <__TEXT_REGION_LENGTH__+0x7e00bd>
    31ee:	95 e4       	ldi	r25, 0x45	; 69
    31f0:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    31f4:	8f bf       	out	0x3f, r24	; 63
    31f6:	78 94       	sei
    31f8:	13 bc       	out	0x23, r1	; 35
    31fa:	25 dc       	rcall	.-1974   	; 0x2a46 <lcd_init>
    31fc:	81 ef       	ldi	r24, 0xF1	; 241
    31fe:	7a db       	rcall	.-2316   	; 0x28f4 <lcd_test>
    3200:	81 e0       	ldi	r24, 0x01	; 1
    3202:	80 93 23 04 	sts	0x0423, r24	; 0x800423 <runmode>
    3206:	c1 e0       	ldi	r28, 0x01	; 1
    3208:	80 91 23 04 	lds	r24, 0x0423	; 0x800423 <runmode>
    320c:	88 23       	and	r24, r24
    320e:	39 f0       	breq	.+14     	; 0x321e <main+0x196>
    3210:	69 de       	rcall	.-814    	; 0x2ee4 <s_task>
    3212:	c3 bf       	out	0x33, r28	; 51
    3214:	88 95       	sleep
    3216:	83 b7       	in	r24, 0x33	; 51
    3218:	8e 7f       	andi	r24, 0xFE	; 254
    321a:	83 bf       	out	0x33, r24	; 51
    321c:	f5 cf       	rjmp	.-22     	; 0x3208 <main+0x180>
    321e:	35 dc       	rcall	.-1942   	; 0x2a8a <lcd_shutdown>
    3220:	f8 94       	cli
    3222:	80 b7       	in	r24, 0x30	; 48
    3224:	80 68       	ori	r24, 0x80	; 128
    3226:	80 bf       	out	0x30, r24	; 48
    3228:	64 e0       	ldi	r22, 0x04	; 4
    322a:	80 e0       	ldi	r24, 0x00	; 0
    322c:	0e 94 1a 03 	call	0x634	; 0x634 <sysclk_disable_module>
    3230:	62 e0       	ldi	r22, 0x02	; 2
    3232:	80 e0       	ldi	r24, 0x00	; 0
    3234:	0e 94 1a 03 	call	0x634	; 0x634 <sysclk_disable_module>
    3238:	e0 dd       	rcall	.-1088   	; 0x2dfa <cpu_irq_save>
    323a:	94 e0       	ldi	r25, 0x04	; 4
    323c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    3240:	3c 98       	cbi	0x07, 4	; 7
    3242:	44 9a       	sbi	0x08, 4	; 8
    3244:	3d 98       	cbi	0x07, 5	; 7
    3246:	45 9a       	sbi	0x08, 5	; 8
    3248:	10 92 bc 00 	sts	0x00BC, r1	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    324c:	8f bf       	out	0x3f, r24	; 63
    324e:	60 e8       	ldi	r22, 0x80	; 128
    3250:	80 e0       	ldi	r24, 0x00	; 0
    3252:	0e 94 1a 03 	call	0x634	; 0x634 <sysclk_disable_module>
    3256:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    325a:	87 7f       	andi	r24, 0xF7	; 247
    325c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3260:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3264:	8f 7d       	andi	r24, 0xDF	; 223
    3266:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    326a:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
    326e:	88 7f       	andi	r24, 0xF8	; 248
    3270:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
    3274:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    3278:	10 92 7e 00 	sts	0x007E, r1	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
    327c:	61 e0       	ldi	r22, 0x01	; 1
    327e:	80 e0       	ldi	r24, 0x00	; 0
    3280:	0e 94 1a 03 	call	0x634	; 0x634 <sysclk_disable_module>
    3284:	ba dd       	rcall	.-1164   	; 0x2dfa <cpu_irq_save>
    3286:	c8 2f       	mov	r28, r24
    3288:	60 e2       	ldi	r22, 0x20	; 32
    328a:	80 e0       	ldi	r24, 0x00	; 0
    328c:	0e 94 1a 03 	call	0x634	; 0x634 <sysclk_disable_module>
    3290:	21 98       	cbi	0x04, 1	; 4
    3292:	29 98       	cbi	0x05, 1	; 5
    3294:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    3298:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    329c:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
    32a0:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    32a4:	68 e0       	ldi	r22, 0x08	; 8
    32a6:	80 e0       	ldi	r24, 0x00	; 0
    32a8:	0e 94 1a 03 	call	0x634	; 0x634 <sysclk_disable_module>
    32ac:	23 9a       	sbi	0x04, 3	; 4
    32ae:	2b 98       	cbi	0x05, 3	; 5
    32b0:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    32b4:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    32b8:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
    32bc:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
    32c0:	60 e4       	ldi	r22, 0x40	; 64
    32c2:	80 e0       	ldi	r24, 0x00	; 0
    32c4:	0e 94 1a 03 	call	0x634	; 0x634 <sysclk_disable_module>
    32c8:	98 dd       	rcall	.-1232   	; 0x2dfa <cpu_irq_save>
    32ca:	5f 93       	push	r21
    32cc:	50 e8       	ldi	r21, 0x80	; 128
    32ce:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    32d2:	50 e0       	ldi	r21, 0x00	; 0
    32d4:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    32d8:	5f 91       	pop	r21
    32da:	8f bf       	out	0x3f, r24	; 63
    32dc:	cf bf       	out	0x3f, r28	; 63
    32de:	89 e0       	ldi	r24, 0x09	; 9
    32e0:	83 bf       	out	0x33, r24	; 51
    32e2:	88 95       	sleep
    32e4:	83 b7       	in	r24, 0x33	; 51
    32e6:	8e 7f       	andi	r24, 0xFE	; 254
    32e8:	83 bf       	out	0x33, r24	; 51
    32ea:	80 e0       	ldi	r24, 0x00	; 0
    32ec:	90 e0       	ldi	r25, 0x00	; 0
    32ee:	df 91       	pop	r29
    32f0:	cf 91       	pop	r28
    32f2:	08 95       	ret

000032f4 <__subsf3>:
    32f4:	50 58       	subi	r21, 0x80	; 128

000032f6 <__addsf3>:
    32f6:	bb 27       	eor	r27, r27
    32f8:	aa 27       	eor	r26, r26
    32fa:	0e d0       	rcall	.+28     	; 0x3318 <__addsf3x>
    32fc:	b1 c1       	rjmp	.+866    	; 0x3660 <__fp_round>
    32fe:	a2 d1       	rcall	.+836    	; 0x3644 <__fp_pscA>
    3300:	30 f0       	brcs	.+12     	; 0x330e <__addsf3+0x18>
    3302:	a7 d1       	rcall	.+846    	; 0x3652 <__fp_pscB>
    3304:	20 f0       	brcs	.+8      	; 0x330e <__addsf3+0x18>
    3306:	31 f4       	brne	.+12     	; 0x3314 <__addsf3+0x1e>
    3308:	9f 3f       	cpi	r25, 0xFF	; 255
    330a:	11 f4       	brne	.+4      	; 0x3310 <__addsf3+0x1a>
    330c:	1e f4       	brtc	.+6      	; 0x3314 <__addsf3+0x1e>
    330e:	97 c1       	rjmp	.+814    	; 0x363e <__fp_nan>
    3310:	0e f4       	brtc	.+2      	; 0x3314 <__addsf3+0x1e>
    3312:	e0 95       	com	r30
    3314:	e7 fb       	bst	r30, 7
    3316:	64 c1       	rjmp	.+712    	; 0x35e0 <__fp_inf>

00003318 <__addsf3x>:
    3318:	e9 2f       	mov	r30, r25
    331a:	b3 d1       	rcall	.+870    	; 0x3682 <__fp_split3>
    331c:	80 f3       	brcs	.-32     	; 0x32fe <__addsf3+0x8>
    331e:	ba 17       	cp	r27, r26
    3320:	62 07       	cpc	r22, r18
    3322:	73 07       	cpc	r23, r19
    3324:	84 07       	cpc	r24, r20
    3326:	95 07       	cpc	r25, r21
    3328:	18 f0       	brcs	.+6      	; 0x3330 <__addsf3x+0x18>
    332a:	71 f4       	brne	.+28     	; 0x3348 <__addsf3x+0x30>
    332c:	9e f5       	brtc	.+102    	; 0x3394 <__addsf3x+0x7c>
    332e:	e2 c1       	rjmp	.+964    	; 0x36f4 <__fp_zero>
    3330:	0e f4       	brtc	.+2      	; 0x3334 <__addsf3x+0x1c>
    3332:	e0 95       	com	r30
    3334:	0b 2e       	mov	r0, r27
    3336:	ba 2f       	mov	r27, r26
    3338:	a0 2d       	mov	r26, r0
    333a:	0b 01       	movw	r0, r22
    333c:	b9 01       	movw	r22, r18
    333e:	90 01       	movw	r18, r0
    3340:	0c 01       	movw	r0, r24
    3342:	ca 01       	movw	r24, r20
    3344:	a0 01       	movw	r20, r0
    3346:	11 24       	eor	r1, r1
    3348:	ff 27       	eor	r31, r31
    334a:	59 1b       	sub	r21, r25
    334c:	99 f0       	breq	.+38     	; 0x3374 <__addsf3x+0x5c>
    334e:	59 3f       	cpi	r21, 0xF9	; 249
    3350:	50 f4       	brcc	.+20     	; 0x3366 <__addsf3x+0x4e>
    3352:	50 3e       	cpi	r21, 0xE0	; 224
    3354:	68 f1       	brcs	.+90     	; 0x33b0 <__addsf3x+0x98>
    3356:	1a 16       	cp	r1, r26
    3358:	f0 40       	sbci	r31, 0x00	; 0
    335a:	a2 2f       	mov	r26, r18
    335c:	23 2f       	mov	r18, r19
    335e:	34 2f       	mov	r19, r20
    3360:	44 27       	eor	r20, r20
    3362:	58 5f       	subi	r21, 0xF8	; 248
    3364:	f3 cf       	rjmp	.-26     	; 0x334c <__addsf3x+0x34>
    3366:	46 95       	lsr	r20
    3368:	37 95       	ror	r19
    336a:	27 95       	ror	r18
    336c:	a7 95       	ror	r26
    336e:	f0 40       	sbci	r31, 0x00	; 0
    3370:	53 95       	inc	r21
    3372:	c9 f7       	brne	.-14     	; 0x3366 <__addsf3x+0x4e>
    3374:	7e f4       	brtc	.+30     	; 0x3394 <__addsf3x+0x7c>
    3376:	1f 16       	cp	r1, r31
    3378:	ba 0b       	sbc	r27, r26
    337a:	62 0b       	sbc	r22, r18
    337c:	73 0b       	sbc	r23, r19
    337e:	84 0b       	sbc	r24, r20
    3380:	ba f0       	brmi	.+46     	; 0x33b0 <__addsf3x+0x98>
    3382:	91 50       	subi	r25, 0x01	; 1
    3384:	a1 f0       	breq	.+40     	; 0x33ae <__addsf3x+0x96>
    3386:	ff 0f       	add	r31, r31
    3388:	bb 1f       	adc	r27, r27
    338a:	66 1f       	adc	r22, r22
    338c:	77 1f       	adc	r23, r23
    338e:	88 1f       	adc	r24, r24
    3390:	c2 f7       	brpl	.-16     	; 0x3382 <__addsf3x+0x6a>
    3392:	0e c0       	rjmp	.+28     	; 0x33b0 <__addsf3x+0x98>
    3394:	ba 0f       	add	r27, r26
    3396:	62 1f       	adc	r22, r18
    3398:	73 1f       	adc	r23, r19
    339a:	84 1f       	adc	r24, r20
    339c:	48 f4       	brcc	.+18     	; 0x33b0 <__addsf3x+0x98>
    339e:	87 95       	ror	r24
    33a0:	77 95       	ror	r23
    33a2:	67 95       	ror	r22
    33a4:	b7 95       	ror	r27
    33a6:	f7 95       	ror	r31
    33a8:	9e 3f       	cpi	r25, 0xFE	; 254
    33aa:	08 f0       	brcs	.+2      	; 0x33ae <__addsf3x+0x96>
    33ac:	b3 cf       	rjmp	.-154    	; 0x3314 <__addsf3+0x1e>
    33ae:	93 95       	inc	r25
    33b0:	88 0f       	add	r24, r24
    33b2:	08 f0       	brcs	.+2      	; 0x33b6 <__addsf3x+0x9e>
    33b4:	99 27       	eor	r25, r25
    33b6:	ee 0f       	add	r30, r30
    33b8:	97 95       	ror	r25
    33ba:	87 95       	ror	r24
    33bc:	08 95       	ret

000033be <__cmpsf2>:
    33be:	ec d0       	rcall	.+472    	; 0x3598 <__fp_cmp>
    33c0:	08 f4       	brcc	.+2      	; 0x33c4 <__cmpsf2+0x6>
    33c2:	81 e0       	ldi	r24, 0x01	; 1
    33c4:	08 95       	ret

000033c6 <__divsf3>:
    33c6:	0c d0       	rcall	.+24     	; 0x33e0 <__divsf3x>
    33c8:	4b c1       	rjmp	.+662    	; 0x3660 <__fp_round>
    33ca:	43 d1       	rcall	.+646    	; 0x3652 <__fp_pscB>
    33cc:	40 f0       	brcs	.+16     	; 0x33de <__divsf3+0x18>
    33ce:	3a d1       	rcall	.+628    	; 0x3644 <__fp_pscA>
    33d0:	30 f0       	brcs	.+12     	; 0x33de <__divsf3+0x18>
    33d2:	21 f4       	brne	.+8      	; 0x33dc <__divsf3+0x16>
    33d4:	5f 3f       	cpi	r21, 0xFF	; 255
    33d6:	19 f0       	breq	.+6      	; 0x33de <__divsf3+0x18>
    33d8:	03 c1       	rjmp	.+518    	; 0x35e0 <__fp_inf>
    33da:	51 11       	cpse	r21, r1
    33dc:	8c c1       	rjmp	.+792    	; 0x36f6 <__fp_szero>
    33de:	2f c1       	rjmp	.+606    	; 0x363e <__fp_nan>

000033e0 <__divsf3x>:
    33e0:	50 d1       	rcall	.+672    	; 0x3682 <__fp_split3>
    33e2:	98 f3       	brcs	.-26     	; 0x33ca <__divsf3+0x4>

000033e4 <__divsf3_pse>:
    33e4:	99 23       	and	r25, r25
    33e6:	c9 f3       	breq	.-14     	; 0x33da <__divsf3+0x14>
    33e8:	55 23       	and	r21, r21
    33ea:	b1 f3       	breq	.-20     	; 0x33d8 <__divsf3+0x12>
    33ec:	95 1b       	sub	r25, r21
    33ee:	55 0b       	sbc	r21, r21
    33f0:	bb 27       	eor	r27, r27
    33f2:	aa 27       	eor	r26, r26
    33f4:	62 17       	cp	r22, r18
    33f6:	73 07       	cpc	r23, r19
    33f8:	84 07       	cpc	r24, r20
    33fa:	38 f0       	brcs	.+14     	; 0x340a <__divsf3_pse+0x26>
    33fc:	9f 5f       	subi	r25, 0xFF	; 255
    33fe:	5f 4f       	sbci	r21, 0xFF	; 255
    3400:	22 0f       	add	r18, r18
    3402:	33 1f       	adc	r19, r19
    3404:	44 1f       	adc	r20, r20
    3406:	aa 1f       	adc	r26, r26
    3408:	a9 f3       	breq	.-22     	; 0x33f4 <__divsf3_pse+0x10>
    340a:	33 d0       	rcall	.+102    	; 0x3472 <__divsf3_pse+0x8e>
    340c:	0e 2e       	mov	r0, r30
    340e:	3a f0       	brmi	.+14     	; 0x341e <__divsf3_pse+0x3a>
    3410:	e0 e8       	ldi	r30, 0x80	; 128
    3412:	30 d0       	rcall	.+96     	; 0x3474 <__divsf3_pse+0x90>
    3414:	91 50       	subi	r25, 0x01	; 1
    3416:	50 40       	sbci	r21, 0x00	; 0
    3418:	e6 95       	lsr	r30
    341a:	00 1c       	adc	r0, r0
    341c:	ca f7       	brpl	.-14     	; 0x3410 <__divsf3_pse+0x2c>
    341e:	29 d0       	rcall	.+82     	; 0x3472 <__divsf3_pse+0x8e>
    3420:	fe 2f       	mov	r31, r30
    3422:	27 d0       	rcall	.+78     	; 0x3472 <__divsf3_pse+0x8e>
    3424:	66 0f       	add	r22, r22
    3426:	77 1f       	adc	r23, r23
    3428:	88 1f       	adc	r24, r24
    342a:	bb 1f       	adc	r27, r27
    342c:	26 17       	cp	r18, r22
    342e:	37 07       	cpc	r19, r23
    3430:	48 07       	cpc	r20, r24
    3432:	ab 07       	cpc	r26, r27
    3434:	b0 e8       	ldi	r27, 0x80	; 128
    3436:	09 f0       	breq	.+2      	; 0x343a <__divsf3_pse+0x56>
    3438:	bb 0b       	sbc	r27, r27
    343a:	80 2d       	mov	r24, r0
    343c:	bf 01       	movw	r22, r30
    343e:	ff 27       	eor	r31, r31
    3440:	93 58       	subi	r25, 0x83	; 131
    3442:	5f 4f       	sbci	r21, 0xFF	; 255
    3444:	2a f0       	brmi	.+10     	; 0x3450 <__divsf3_pse+0x6c>
    3446:	9e 3f       	cpi	r25, 0xFE	; 254
    3448:	51 05       	cpc	r21, r1
    344a:	68 f0       	brcs	.+26     	; 0x3466 <__divsf3_pse+0x82>
    344c:	c9 c0       	rjmp	.+402    	; 0x35e0 <__fp_inf>
    344e:	53 c1       	rjmp	.+678    	; 0x36f6 <__fp_szero>
    3450:	5f 3f       	cpi	r21, 0xFF	; 255
    3452:	ec f3       	brlt	.-6      	; 0x344e <__divsf3_pse+0x6a>
    3454:	98 3e       	cpi	r25, 0xE8	; 232
    3456:	dc f3       	brlt	.-10     	; 0x344e <__divsf3_pse+0x6a>
    3458:	86 95       	lsr	r24
    345a:	77 95       	ror	r23
    345c:	67 95       	ror	r22
    345e:	b7 95       	ror	r27
    3460:	f7 95       	ror	r31
    3462:	9f 5f       	subi	r25, 0xFF	; 255
    3464:	c9 f7       	brne	.-14     	; 0x3458 <__divsf3_pse+0x74>
    3466:	88 0f       	add	r24, r24
    3468:	91 1d       	adc	r25, r1
    346a:	96 95       	lsr	r25
    346c:	87 95       	ror	r24
    346e:	97 f9       	bld	r25, 7
    3470:	08 95       	ret
    3472:	e1 e0       	ldi	r30, 0x01	; 1
    3474:	66 0f       	add	r22, r22
    3476:	77 1f       	adc	r23, r23
    3478:	88 1f       	adc	r24, r24
    347a:	bb 1f       	adc	r27, r27
    347c:	62 17       	cp	r22, r18
    347e:	73 07       	cpc	r23, r19
    3480:	84 07       	cpc	r24, r20
    3482:	ba 07       	cpc	r27, r26
    3484:	20 f0       	brcs	.+8      	; 0x348e <__divsf3_pse+0xaa>
    3486:	62 1b       	sub	r22, r18
    3488:	73 0b       	sbc	r23, r19
    348a:	84 0b       	sbc	r24, r20
    348c:	ba 0b       	sbc	r27, r26
    348e:	ee 1f       	adc	r30, r30
    3490:	88 f7       	brcc	.-30     	; 0x3474 <__divsf3_pse+0x90>
    3492:	e0 95       	com	r30
    3494:	08 95       	ret

00003496 <__fixsfsi>:
    3496:	04 d0       	rcall	.+8      	; 0x34a0 <__fixunssfsi>
    3498:	68 94       	set
    349a:	b1 11       	cpse	r27, r1
    349c:	2c c1       	rjmp	.+600    	; 0x36f6 <__fp_szero>
    349e:	08 95       	ret

000034a0 <__fixunssfsi>:
    34a0:	f8 d0       	rcall	.+496    	; 0x3692 <__fp_splitA>
    34a2:	88 f0       	brcs	.+34     	; 0x34c6 <__fixunssfsi+0x26>
    34a4:	9f 57       	subi	r25, 0x7F	; 127
    34a6:	90 f0       	brcs	.+36     	; 0x34cc <__fixunssfsi+0x2c>
    34a8:	b9 2f       	mov	r27, r25
    34aa:	99 27       	eor	r25, r25
    34ac:	b7 51       	subi	r27, 0x17	; 23
    34ae:	a0 f0       	brcs	.+40     	; 0x34d8 <__fixunssfsi+0x38>
    34b0:	d1 f0       	breq	.+52     	; 0x34e6 <__fixunssfsi+0x46>
    34b2:	66 0f       	add	r22, r22
    34b4:	77 1f       	adc	r23, r23
    34b6:	88 1f       	adc	r24, r24
    34b8:	99 1f       	adc	r25, r25
    34ba:	1a f0       	brmi	.+6      	; 0x34c2 <__fixunssfsi+0x22>
    34bc:	ba 95       	dec	r27
    34be:	c9 f7       	brne	.-14     	; 0x34b2 <__fixunssfsi+0x12>
    34c0:	12 c0       	rjmp	.+36     	; 0x34e6 <__fixunssfsi+0x46>
    34c2:	b1 30       	cpi	r27, 0x01	; 1
    34c4:	81 f0       	breq	.+32     	; 0x34e6 <__fixunssfsi+0x46>
    34c6:	16 d1       	rcall	.+556    	; 0x36f4 <__fp_zero>
    34c8:	b1 e0       	ldi	r27, 0x01	; 1
    34ca:	08 95       	ret
    34cc:	13 c1       	rjmp	.+550    	; 0x36f4 <__fp_zero>
    34ce:	67 2f       	mov	r22, r23
    34d0:	78 2f       	mov	r23, r24
    34d2:	88 27       	eor	r24, r24
    34d4:	b8 5f       	subi	r27, 0xF8	; 248
    34d6:	39 f0       	breq	.+14     	; 0x34e6 <__fixunssfsi+0x46>
    34d8:	b9 3f       	cpi	r27, 0xF9	; 249
    34da:	cc f3       	brlt	.-14     	; 0x34ce <__fixunssfsi+0x2e>
    34dc:	86 95       	lsr	r24
    34de:	77 95       	ror	r23
    34e0:	67 95       	ror	r22
    34e2:	b3 95       	inc	r27
    34e4:	d9 f7       	brne	.-10     	; 0x34dc <__fixunssfsi+0x3c>
    34e6:	3e f4       	brtc	.+14     	; 0x34f6 <__fixunssfsi+0x56>
    34e8:	90 95       	com	r25
    34ea:	80 95       	com	r24
    34ec:	70 95       	com	r23
    34ee:	61 95       	neg	r22
    34f0:	7f 4f       	sbci	r23, 0xFF	; 255
    34f2:	8f 4f       	sbci	r24, 0xFF	; 255
    34f4:	9f 4f       	sbci	r25, 0xFF	; 255
    34f6:	08 95       	ret

000034f8 <__floatunsisf>:
    34f8:	e8 94       	clt
    34fa:	09 c0       	rjmp	.+18     	; 0x350e <__floatsisf+0x12>

000034fc <__floatsisf>:
    34fc:	97 fb       	bst	r25, 7
    34fe:	3e f4       	brtc	.+14     	; 0x350e <__floatsisf+0x12>
    3500:	90 95       	com	r25
    3502:	80 95       	com	r24
    3504:	70 95       	com	r23
    3506:	61 95       	neg	r22
    3508:	7f 4f       	sbci	r23, 0xFF	; 255
    350a:	8f 4f       	sbci	r24, 0xFF	; 255
    350c:	9f 4f       	sbci	r25, 0xFF	; 255
    350e:	99 23       	and	r25, r25
    3510:	a9 f0       	breq	.+42     	; 0x353c <__floatsisf+0x40>
    3512:	f9 2f       	mov	r31, r25
    3514:	96 e9       	ldi	r25, 0x96	; 150
    3516:	bb 27       	eor	r27, r27
    3518:	93 95       	inc	r25
    351a:	f6 95       	lsr	r31
    351c:	87 95       	ror	r24
    351e:	77 95       	ror	r23
    3520:	67 95       	ror	r22
    3522:	b7 95       	ror	r27
    3524:	f1 11       	cpse	r31, r1
    3526:	f8 cf       	rjmp	.-16     	; 0x3518 <__floatsisf+0x1c>
    3528:	fa f4       	brpl	.+62     	; 0x3568 <__floatsisf+0x6c>
    352a:	bb 0f       	add	r27, r27
    352c:	11 f4       	brne	.+4      	; 0x3532 <__floatsisf+0x36>
    352e:	60 ff       	sbrs	r22, 0
    3530:	1b c0       	rjmp	.+54     	; 0x3568 <__floatsisf+0x6c>
    3532:	6f 5f       	subi	r22, 0xFF	; 255
    3534:	7f 4f       	sbci	r23, 0xFF	; 255
    3536:	8f 4f       	sbci	r24, 0xFF	; 255
    3538:	9f 4f       	sbci	r25, 0xFF	; 255
    353a:	16 c0       	rjmp	.+44     	; 0x3568 <__floatsisf+0x6c>
    353c:	88 23       	and	r24, r24
    353e:	11 f0       	breq	.+4      	; 0x3544 <__floatsisf+0x48>
    3540:	96 e9       	ldi	r25, 0x96	; 150
    3542:	11 c0       	rjmp	.+34     	; 0x3566 <__floatsisf+0x6a>
    3544:	77 23       	and	r23, r23
    3546:	21 f0       	breq	.+8      	; 0x3550 <__floatsisf+0x54>
    3548:	9e e8       	ldi	r25, 0x8E	; 142
    354a:	87 2f       	mov	r24, r23
    354c:	76 2f       	mov	r23, r22
    354e:	05 c0       	rjmp	.+10     	; 0x355a <__floatsisf+0x5e>
    3550:	66 23       	and	r22, r22
    3552:	71 f0       	breq	.+28     	; 0x3570 <__floatsisf+0x74>
    3554:	96 e8       	ldi	r25, 0x86	; 134
    3556:	86 2f       	mov	r24, r22
    3558:	70 e0       	ldi	r23, 0x00	; 0
    355a:	60 e0       	ldi	r22, 0x00	; 0
    355c:	2a f0       	brmi	.+10     	; 0x3568 <__floatsisf+0x6c>
    355e:	9a 95       	dec	r25
    3560:	66 0f       	add	r22, r22
    3562:	77 1f       	adc	r23, r23
    3564:	88 1f       	adc	r24, r24
    3566:	da f7       	brpl	.-10     	; 0x355e <__floatsisf+0x62>
    3568:	88 0f       	add	r24, r24
    356a:	96 95       	lsr	r25
    356c:	87 95       	ror	r24
    356e:	97 f9       	bld	r25, 7
    3570:	08 95       	ret

00003572 <floor>:
    3572:	a9 d0       	rcall	.+338    	; 0x36c6 <__fp_trunc>
    3574:	80 f0       	brcs	.+32     	; 0x3596 <floor+0x24>
    3576:	9f 37       	cpi	r25, 0x7F	; 127
    3578:	40 f4       	brcc	.+16     	; 0x358a <floor+0x18>
    357a:	91 11       	cpse	r25, r1
    357c:	0e f0       	brts	.+2      	; 0x3580 <floor+0xe>
    357e:	bb c0       	rjmp	.+374    	; 0x36f6 <__fp_szero>
    3580:	60 e0       	ldi	r22, 0x00	; 0
    3582:	70 e0       	ldi	r23, 0x00	; 0
    3584:	80 e8       	ldi	r24, 0x80	; 128
    3586:	9f eb       	ldi	r25, 0xBF	; 191
    3588:	08 95       	ret
    358a:	26 f4       	brtc	.+8      	; 0x3594 <floor+0x22>
    358c:	1b 16       	cp	r1, r27
    358e:	61 1d       	adc	r22, r1
    3590:	71 1d       	adc	r23, r1
    3592:	81 1d       	adc	r24, r1
    3594:	2b c0       	rjmp	.+86     	; 0x35ec <__fp_mintl>
    3596:	45 c0       	rjmp	.+138    	; 0x3622 <__fp_mpack>

00003598 <__fp_cmp>:
    3598:	99 0f       	add	r25, r25
    359a:	00 08       	sbc	r0, r0
    359c:	55 0f       	add	r21, r21
    359e:	aa 0b       	sbc	r26, r26
    35a0:	e0 e8       	ldi	r30, 0x80	; 128
    35a2:	fe ef       	ldi	r31, 0xFE	; 254
    35a4:	16 16       	cp	r1, r22
    35a6:	17 06       	cpc	r1, r23
    35a8:	e8 07       	cpc	r30, r24
    35aa:	f9 07       	cpc	r31, r25
    35ac:	c0 f0       	brcs	.+48     	; 0x35de <__fp_cmp+0x46>
    35ae:	12 16       	cp	r1, r18
    35b0:	13 06       	cpc	r1, r19
    35b2:	e4 07       	cpc	r30, r20
    35b4:	f5 07       	cpc	r31, r21
    35b6:	98 f0       	brcs	.+38     	; 0x35de <__fp_cmp+0x46>
    35b8:	62 1b       	sub	r22, r18
    35ba:	73 0b       	sbc	r23, r19
    35bc:	84 0b       	sbc	r24, r20
    35be:	95 0b       	sbc	r25, r21
    35c0:	39 f4       	brne	.+14     	; 0x35d0 <__fp_cmp+0x38>
    35c2:	0a 26       	eor	r0, r26
    35c4:	61 f0       	breq	.+24     	; 0x35de <__fp_cmp+0x46>
    35c6:	23 2b       	or	r18, r19
    35c8:	24 2b       	or	r18, r20
    35ca:	25 2b       	or	r18, r21
    35cc:	21 f4       	brne	.+8      	; 0x35d6 <__fp_cmp+0x3e>
    35ce:	08 95       	ret
    35d0:	0a 26       	eor	r0, r26
    35d2:	09 f4       	brne	.+2      	; 0x35d6 <__fp_cmp+0x3e>
    35d4:	a1 40       	sbci	r26, 0x01	; 1
    35d6:	a6 95       	lsr	r26
    35d8:	8f ef       	ldi	r24, 0xFF	; 255
    35da:	81 1d       	adc	r24, r1
    35dc:	81 1d       	adc	r24, r1
    35de:	08 95       	ret

000035e0 <__fp_inf>:
    35e0:	97 f9       	bld	r25, 7
    35e2:	9f 67       	ori	r25, 0x7F	; 127
    35e4:	80 e8       	ldi	r24, 0x80	; 128
    35e6:	70 e0       	ldi	r23, 0x00	; 0
    35e8:	60 e0       	ldi	r22, 0x00	; 0
    35ea:	08 95       	ret

000035ec <__fp_mintl>:
    35ec:	88 23       	and	r24, r24
    35ee:	71 f4       	brne	.+28     	; 0x360c <__fp_mintl+0x20>
    35f0:	77 23       	and	r23, r23
    35f2:	21 f0       	breq	.+8      	; 0x35fc <__fp_mintl+0x10>
    35f4:	98 50       	subi	r25, 0x08	; 8
    35f6:	87 2b       	or	r24, r23
    35f8:	76 2f       	mov	r23, r22
    35fa:	07 c0       	rjmp	.+14     	; 0x360a <__fp_mintl+0x1e>
    35fc:	66 23       	and	r22, r22
    35fe:	11 f4       	brne	.+4      	; 0x3604 <__fp_mintl+0x18>
    3600:	99 27       	eor	r25, r25
    3602:	0d c0       	rjmp	.+26     	; 0x361e <__fp_mintl+0x32>
    3604:	90 51       	subi	r25, 0x10	; 16
    3606:	86 2b       	or	r24, r22
    3608:	70 e0       	ldi	r23, 0x00	; 0
    360a:	60 e0       	ldi	r22, 0x00	; 0
    360c:	2a f0       	brmi	.+10     	; 0x3618 <__fp_mintl+0x2c>
    360e:	9a 95       	dec	r25
    3610:	66 0f       	add	r22, r22
    3612:	77 1f       	adc	r23, r23
    3614:	88 1f       	adc	r24, r24
    3616:	da f7       	brpl	.-10     	; 0x360e <__fp_mintl+0x22>
    3618:	88 0f       	add	r24, r24
    361a:	96 95       	lsr	r25
    361c:	87 95       	ror	r24
    361e:	97 f9       	bld	r25, 7
    3620:	08 95       	ret

00003622 <__fp_mpack>:
    3622:	9f 3f       	cpi	r25, 0xFF	; 255
    3624:	31 f0       	breq	.+12     	; 0x3632 <__fp_mpack_finite+0xc>

00003626 <__fp_mpack_finite>:
    3626:	91 50       	subi	r25, 0x01	; 1
    3628:	20 f4       	brcc	.+8      	; 0x3632 <__fp_mpack_finite+0xc>
    362a:	87 95       	ror	r24
    362c:	77 95       	ror	r23
    362e:	67 95       	ror	r22
    3630:	b7 95       	ror	r27
    3632:	88 0f       	add	r24, r24
    3634:	91 1d       	adc	r25, r1
    3636:	96 95       	lsr	r25
    3638:	87 95       	ror	r24
    363a:	97 f9       	bld	r25, 7
    363c:	08 95       	ret

0000363e <__fp_nan>:
    363e:	9f ef       	ldi	r25, 0xFF	; 255
    3640:	80 ec       	ldi	r24, 0xC0	; 192
    3642:	08 95       	ret

00003644 <__fp_pscA>:
    3644:	00 24       	eor	r0, r0
    3646:	0a 94       	dec	r0
    3648:	16 16       	cp	r1, r22
    364a:	17 06       	cpc	r1, r23
    364c:	18 06       	cpc	r1, r24
    364e:	09 06       	cpc	r0, r25
    3650:	08 95       	ret

00003652 <__fp_pscB>:
    3652:	00 24       	eor	r0, r0
    3654:	0a 94       	dec	r0
    3656:	12 16       	cp	r1, r18
    3658:	13 06       	cpc	r1, r19
    365a:	14 06       	cpc	r1, r20
    365c:	05 06       	cpc	r0, r21
    365e:	08 95       	ret

00003660 <__fp_round>:
    3660:	09 2e       	mov	r0, r25
    3662:	03 94       	inc	r0
    3664:	00 0c       	add	r0, r0
    3666:	11 f4       	brne	.+4      	; 0x366c <__fp_round+0xc>
    3668:	88 23       	and	r24, r24
    366a:	52 f0       	brmi	.+20     	; 0x3680 <__fp_round+0x20>
    366c:	bb 0f       	add	r27, r27
    366e:	40 f4       	brcc	.+16     	; 0x3680 <__fp_round+0x20>
    3670:	bf 2b       	or	r27, r31
    3672:	11 f4       	brne	.+4      	; 0x3678 <__fp_round+0x18>
    3674:	60 ff       	sbrs	r22, 0
    3676:	04 c0       	rjmp	.+8      	; 0x3680 <__fp_round+0x20>
    3678:	6f 5f       	subi	r22, 0xFF	; 255
    367a:	7f 4f       	sbci	r23, 0xFF	; 255
    367c:	8f 4f       	sbci	r24, 0xFF	; 255
    367e:	9f 4f       	sbci	r25, 0xFF	; 255
    3680:	08 95       	ret

00003682 <__fp_split3>:
    3682:	57 fd       	sbrc	r21, 7
    3684:	90 58       	subi	r25, 0x80	; 128
    3686:	44 0f       	add	r20, r20
    3688:	55 1f       	adc	r21, r21
    368a:	59 f0       	breq	.+22     	; 0x36a2 <__fp_splitA+0x10>
    368c:	5f 3f       	cpi	r21, 0xFF	; 255
    368e:	71 f0       	breq	.+28     	; 0x36ac <__fp_splitA+0x1a>
    3690:	47 95       	ror	r20

00003692 <__fp_splitA>:
    3692:	88 0f       	add	r24, r24
    3694:	97 fb       	bst	r25, 7
    3696:	99 1f       	adc	r25, r25
    3698:	61 f0       	breq	.+24     	; 0x36b2 <__fp_splitA+0x20>
    369a:	9f 3f       	cpi	r25, 0xFF	; 255
    369c:	79 f0       	breq	.+30     	; 0x36bc <__fp_splitA+0x2a>
    369e:	87 95       	ror	r24
    36a0:	08 95       	ret
    36a2:	12 16       	cp	r1, r18
    36a4:	13 06       	cpc	r1, r19
    36a6:	14 06       	cpc	r1, r20
    36a8:	55 1f       	adc	r21, r21
    36aa:	f2 cf       	rjmp	.-28     	; 0x3690 <__fp_split3+0xe>
    36ac:	46 95       	lsr	r20
    36ae:	f1 df       	rcall	.-30     	; 0x3692 <__fp_splitA>
    36b0:	08 c0       	rjmp	.+16     	; 0x36c2 <__fp_splitA+0x30>
    36b2:	16 16       	cp	r1, r22
    36b4:	17 06       	cpc	r1, r23
    36b6:	18 06       	cpc	r1, r24
    36b8:	99 1f       	adc	r25, r25
    36ba:	f1 cf       	rjmp	.-30     	; 0x369e <__fp_splitA+0xc>
    36bc:	86 95       	lsr	r24
    36be:	71 05       	cpc	r23, r1
    36c0:	61 05       	cpc	r22, r1
    36c2:	08 94       	sec
    36c4:	08 95       	ret

000036c6 <__fp_trunc>:
    36c6:	e5 df       	rcall	.-54     	; 0x3692 <__fp_splitA>
    36c8:	a0 f0       	brcs	.+40     	; 0x36f2 <__fp_trunc+0x2c>
    36ca:	be e7       	ldi	r27, 0x7E	; 126
    36cc:	b9 17       	cp	r27, r25
    36ce:	88 f4       	brcc	.+34     	; 0x36f2 <__fp_trunc+0x2c>
    36d0:	bb 27       	eor	r27, r27
    36d2:	9f 38       	cpi	r25, 0x8F	; 143
    36d4:	60 f4       	brcc	.+24     	; 0x36ee <__fp_trunc+0x28>
    36d6:	16 16       	cp	r1, r22
    36d8:	b1 1d       	adc	r27, r1
    36da:	67 2f       	mov	r22, r23
    36dc:	78 2f       	mov	r23, r24
    36de:	88 27       	eor	r24, r24
    36e0:	98 5f       	subi	r25, 0xF8	; 248
    36e2:	f7 cf       	rjmp	.-18     	; 0x36d2 <__fp_trunc+0xc>
    36e4:	86 95       	lsr	r24
    36e6:	77 95       	ror	r23
    36e8:	67 95       	ror	r22
    36ea:	b1 1d       	adc	r27, r1
    36ec:	93 95       	inc	r25
    36ee:	96 39       	cpi	r25, 0x96	; 150
    36f0:	c8 f3       	brcs	.-14     	; 0x36e4 <__fp_trunc+0x1e>
    36f2:	08 95       	ret

000036f4 <__fp_zero>:
    36f4:	e8 94       	clt

000036f6 <__fp_szero>:
    36f6:	bb 27       	eor	r27, r27
    36f8:	66 27       	eor	r22, r22
    36fa:	77 27       	eor	r23, r23
    36fc:	cb 01       	movw	r24, r22
    36fe:	97 f9       	bld	r25, 7
    3700:	08 95       	ret

00003702 <__gesf2>:
    3702:	4a df       	rcall	.-364    	; 0x3598 <__fp_cmp>
    3704:	08 f4       	brcc	.+2      	; 0x3708 <__gesf2+0x6>
    3706:	8f ef       	ldi	r24, 0xFF	; 255
    3708:	08 95       	ret

0000370a <__mulsf3>:
    370a:	0b d0       	rcall	.+22     	; 0x3722 <__mulsf3x>
    370c:	a9 cf       	rjmp	.-174    	; 0x3660 <__fp_round>
    370e:	9a df       	rcall	.-204    	; 0x3644 <__fp_pscA>
    3710:	28 f0       	brcs	.+10     	; 0x371c <__mulsf3+0x12>
    3712:	9f df       	rcall	.-194    	; 0x3652 <__fp_pscB>
    3714:	18 f0       	brcs	.+6      	; 0x371c <__mulsf3+0x12>
    3716:	95 23       	and	r25, r21
    3718:	09 f0       	breq	.+2      	; 0x371c <__mulsf3+0x12>
    371a:	62 cf       	rjmp	.-316    	; 0x35e0 <__fp_inf>
    371c:	90 cf       	rjmp	.-224    	; 0x363e <__fp_nan>
    371e:	11 24       	eor	r1, r1
    3720:	ea cf       	rjmp	.-44     	; 0x36f6 <__fp_szero>

00003722 <__mulsf3x>:
    3722:	af df       	rcall	.-162    	; 0x3682 <__fp_split3>
    3724:	a0 f3       	brcs	.-24     	; 0x370e <__mulsf3+0x4>

00003726 <__mulsf3_pse>:
    3726:	95 9f       	mul	r25, r21
    3728:	d1 f3       	breq	.-12     	; 0x371e <__mulsf3+0x14>
    372a:	95 0f       	add	r25, r21
    372c:	50 e0       	ldi	r21, 0x00	; 0
    372e:	55 1f       	adc	r21, r21
    3730:	62 9f       	mul	r22, r18
    3732:	f0 01       	movw	r30, r0
    3734:	72 9f       	mul	r23, r18
    3736:	bb 27       	eor	r27, r27
    3738:	f0 0d       	add	r31, r0
    373a:	b1 1d       	adc	r27, r1
    373c:	63 9f       	mul	r22, r19
    373e:	aa 27       	eor	r26, r26
    3740:	f0 0d       	add	r31, r0
    3742:	b1 1d       	adc	r27, r1
    3744:	aa 1f       	adc	r26, r26
    3746:	64 9f       	mul	r22, r20
    3748:	66 27       	eor	r22, r22
    374a:	b0 0d       	add	r27, r0
    374c:	a1 1d       	adc	r26, r1
    374e:	66 1f       	adc	r22, r22
    3750:	82 9f       	mul	r24, r18
    3752:	22 27       	eor	r18, r18
    3754:	b0 0d       	add	r27, r0
    3756:	a1 1d       	adc	r26, r1
    3758:	62 1f       	adc	r22, r18
    375a:	73 9f       	mul	r23, r19
    375c:	b0 0d       	add	r27, r0
    375e:	a1 1d       	adc	r26, r1
    3760:	62 1f       	adc	r22, r18
    3762:	83 9f       	mul	r24, r19
    3764:	a0 0d       	add	r26, r0
    3766:	61 1d       	adc	r22, r1
    3768:	22 1f       	adc	r18, r18
    376a:	74 9f       	mul	r23, r20
    376c:	33 27       	eor	r19, r19
    376e:	a0 0d       	add	r26, r0
    3770:	61 1d       	adc	r22, r1
    3772:	23 1f       	adc	r18, r19
    3774:	84 9f       	mul	r24, r20
    3776:	60 0d       	add	r22, r0
    3778:	21 1d       	adc	r18, r1
    377a:	82 2f       	mov	r24, r18
    377c:	76 2f       	mov	r23, r22
    377e:	6a 2f       	mov	r22, r26
    3780:	11 24       	eor	r1, r1
    3782:	9f 57       	subi	r25, 0x7F	; 127
    3784:	50 40       	sbci	r21, 0x00	; 0
    3786:	8a f0       	brmi	.+34     	; 0x37aa <__mulsf3_pse+0x84>
    3788:	e1 f0       	breq	.+56     	; 0x37c2 <__mulsf3_pse+0x9c>
    378a:	88 23       	and	r24, r24
    378c:	4a f0       	brmi	.+18     	; 0x37a0 <__mulsf3_pse+0x7a>
    378e:	ee 0f       	add	r30, r30
    3790:	ff 1f       	adc	r31, r31
    3792:	bb 1f       	adc	r27, r27
    3794:	66 1f       	adc	r22, r22
    3796:	77 1f       	adc	r23, r23
    3798:	88 1f       	adc	r24, r24
    379a:	91 50       	subi	r25, 0x01	; 1
    379c:	50 40       	sbci	r21, 0x00	; 0
    379e:	a9 f7       	brne	.-22     	; 0x378a <__mulsf3_pse+0x64>
    37a0:	9e 3f       	cpi	r25, 0xFE	; 254
    37a2:	51 05       	cpc	r21, r1
    37a4:	70 f0       	brcs	.+28     	; 0x37c2 <__mulsf3_pse+0x9c>
    37a6:	1c cf       	rjmp	.-456    	; 0x35e0 <__fp_inf>
    37a8:	a6 cf       	rjmp	.-180    	; 0x36f6 <__fp_szero>
    37aa:	5f 3f       	cpi	r21, 0xFF	; 255
    37ac:	ec f3       	brlt	.-6      	; 0x37a8 <__mulsf3_pse+0x82>
    37ae:	98 3e       	cpi	r25, 0xE8	; 232
    37b0:	dc f3       	brlt	.-10     	; 0x37a8 <__mulsf3_pse+0x82>
    37b2:	86 95       	lsr	r24
    37b4:	77 95       	ror	r23
    37b6:	67 95       	ror	r22
    37b8:	b7 95       	ror	r27
    37ba:	f7 95       	ror	r31
    37bc:	e7 95       	ror	r30
    37be:	9f 5f       	subi	r25, 0xFF	; 255
    37c0:	c1 f7       	brne	.-16     	; 0x37b2 <__mulsf3_pse+0x8c>
    37c2:	fe 2b       	or	r31, r30
    37c4:	88 0f       	add	r24, r24
    37c6:	91 1d       	adc	r25, r1
    37c8:	96 95       	lsr	r25
    37ca:	87 95       	ror	r24
    37cc:	97 f9       	bld	r25, 7
    37ce:	08 95       	ret

000037d0 <__udivmodqi4>:
    37d0:	99 1b       	sub	r25, r25
    37d2:	79 e0       	ldi	r23, 0x09	; 9
    37d4:	04 c0       	rjmp	.+8      	; 0x37de <__udivmodqi4_ep>

000037d6 <__udivmodqi4_loop>:
    37d6:	99 1f       	adc	r25, r25
    37d8:	96 17       	cp	r25, r22
    37da:	08 f0       	brcs	.+2      	; 0x37de <__udivmodqi4_ep>
    37dc:	96 1b       	sub	r25, r22

000037de <__udivmodqi4_ep>:
    37de:	88 1f       	adc	r24, r24
    37e0:	7a 95       	dec	r23
    37e2:	c9 f7       	brne	.-14     	; 0x37d6 <__udivmodqi4_loop>
    37e4:	80 95       	com	r24
    37e6:	08 95       	ret

000037e8 <__udivmodhi4>:
    37e8:	aa 1b       	sub	r26, r26
    37ea:	bb 1b       	sub	r27, r27
    37ec:	51 e1       	ldi	r21, 0x11	; 17
    37ee:	07 c0       	rjmp	.+14     	; 0x37fe <__udivmodhi4_ep>

000037f0 <__udivmodhi4_loop>:
    37f0:	aa 1f       	adc	r26, r26
    37f2:	bb 1f       	adc	r27, r27
    37f4:	a6 17       	cp	r26, r22
    37f6:	b7 07       	cpc	r27, r23
    37f8:	10 f0       	brcs	.+4      	; 0x37fe <__udivmodhi4_ep>
    37fa:	a6 1b       	sub	r26, r22
    37fc:	b7 0b       	sbc	r27, r23

000037fe <__udivmodhi4_ep>:
    37fe:	88 1f       	adc	r24, r24
    3800:	99 1f       	adc	r25, r25
    3802:	5a 95       	dec	r21
    3804:	a9 f7       	brne	.-22     	; 0x37f0 <__udivmodhi4_loop>
    3806:	80 95       	com	r24
    3808:	90 95       	com	r25
    380a:	bc 01       	movw	r22, r24
    380c:	cd 01       	movw	r24, r26
    380e:	08 95       	ret

00003810 <__divmodhi4>:
    3810:	97 fb       	bst	r25, 7
    3812:	07 2e       	mov	r0, r23
    3814:	16 f4       	brtc	.+4      	; 0x381a <__divmodhi4+0xa>
    3816:	00 94       	com	r0
    3818:	06 d0       	rcall	.+12     	; 0x3826 <__divmodhi4_neg1>
    381a:	77 fd       	sbrc	r23, 7
    381c:	08 d0       	rcall	.+16     	; 0x382e <__divmodhi4_neg2>
    381e:	e4 df       	rcall	.-56     	; 0x37e8 <__udivmodhi4>
    3820:	07 fc       	sbrc	r0, 7
    3822:	05 d0       	rcall	.+10     	; 0x382e <__divmodhi4_neg2>
    3824:	3e f4       	brtc	.+14     	; 0x3834 <__divmodhi4_exit>

00003826 <__divmodhi4_neg1>:
    3826:	90 95       	com	r25
    3828:	81 95       	neg	r24
    382a:	9f 4f       	sbci	r25, 0xFF	; 255
    382c:	08 95       	ret

0000382e <__divmodhi4_neg2>:
    382e:	70 95       	com	r23
    3830:	61 95       	neg	r22
    3832:	7f 4f       	sbci	r23, 0xFF	; 255

00003834 <__divmodhi4_exit>:
    3834:	08 95       	ret

00003836 <strcpy>:
    3836:	fb 01       	movw	r30, r22
    3838:	dc 01       	movw	r26, r24
    383a:	01 90       	ld	r0, Z+
    383c:	0d 92       	st	X+, r0
    383e:	00 20       	and	r0, r0
    3840:	e1 f7       	brne	.-8      	; 0x383a <strcpy+0x4>
    3842:	08 95       	ret

00003844 <snprintf>:
    3844:	ae e0       	ldi	r26, 0x0E	; 14
    3846:	b0 e0       	ldi	r27, 0x00	; 0
    3848:	e7 e2       	ldi	r30, 0x27	; 39
    384a:	fc e1       	ldi	r31, 0x1C	; 28
    384c:	ce c2       	rjmp	.+1436   	; 0x3dea <__prologue_saves__+0x1c>
    384e:	0d 89       	ldd	r16, Y+21	; 0x15
    3850:	1e 89       	ldd	r17, Y+22	; 0x16
    3852:	8f 89       	ldd	r24, Y+23	; 0x17
    3854:	98 8d       	ldd	r25, Y+24	; 0x18
    3856:	26 e0       	ldi	r18, 0x06	; 6
    3858:	2c 83       	std	Y+4, r18	; 0x04
    385a:	1a 83       	std	Y+2, r17	; 0x02
    385c:	09 83       	std	Y+1, r16	; 0x01
    385e:	97 ff       	sbrs	r25, 7
    3860:	02 c0       	rjmp	.+4      	; 0x3866 <snprintf+0x22>
    3862:	80 e0       	ldi	r24, 0x00	; 0
    3864:	90 e8       	ldi	r25, 0x80	; 128
    3866:	01 97       	sbiw	r24, 0x01	; 1
    3868:	9e 83       	std	Y+6, r25	; 0x06
    386a:	8d 83       	std	Y+5, r24	; 0x05
    386c:	ae 01       	movw	r20, r28
    386e:	45 5e       	subi	r20, 0xE5	; 229
    3870:	5f 4f       	sbci	r21, 0xFF	; 255
    3872:	69 8d       	ldd	r22, Y+25	; 0x19
    3874:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3876:	ce 01       	movw	r24, r28
    3878:	01 96       	adiw	r24, 0x01	; 1
    387a:	11 d0       	rcall	.+34     	; 0x389e <vfprintf>
    387c:	4d 81       	ldd	r20, Y+5	; 0x05
    387e:	5e 81       	ldd	r21, Y+6	; 0x06
    3880:	57 fd       	sbrc	r21, 7
    3882:	0a c0       	rjmp	.+20     	; 0x3898 <snprintf+0x54>
    3884:	2f 81       	ldd	r18, Y+7	; 0x07
    3886:	38 85       	ldd	r19, Y+8	; 0x08
    3888:	42 17       	cp	r20, r18
    388a:	53 07       	cpc	r21, r19
    388c:	0c f4       	brge	.+2      	; 0x3890 <snprintf+0x4c>
    388e:	9a 01       	movw	r18, r20
    3890:	f8 01       	movw	r30, r16
    3892:	e2 0f       	add	r30, r18
    3894:	f3 1f       	adc	r31, r19
    3896:	10 82       	st	Z, r1
    3898:	2e 96       	adiw	r28, 0x0e	; 14
    389a:	e4 e0       	ldi	r30, 0x04	; 4
    389c:	c2 c2       	rjmp	.+1412   	; 0x3e22 <__epilogue_restores__+0x1c>

0000389e <vfprintf>:
    389e:	ab e0       	ldi	r26, 0x0B	; 11
    38a0:	b0 e0       	ldi	r27, 0x00	; 0
    38a2:	e4 e5       	ldi	r30, 0x54	; 84
    38a4:	fc e1       	ldi	r31, 0x1C	; 28
    38a6:	93 c2       	rjmp	.+1318   	; 0x3dce <__prologue_saves__>
    38a8:	6c 01       	movw	r12, r24
    38aa:	7b 01       	movw	r14, r22
    38ac:	8a 01       	movw	r16, r20
    38ae:	fc 01       	movw	r30, r24
    38b0:	17 82       	std	Z+7, r1	; 0x07
    38b2:	16 82       	std	Z+6, r1	; 0x06
    38b4:	83 81       	ldd	r24, Z+3	; 0x03
    38b6:	81 ff       	sbrs	r24, 1
    38b8:	bf c1       	rjmp	.+894    	; 0x3c38 <vfprintf+0x39a>
    38ba:	ce 01       	movw	r24, r28
    38bc:	01 96       	adiw	r24, 0x01	; 1
    38be:	3c 01       	movw	r6, r24
    38c0:	f6 01       	movw	r30, r12
    38c2:	93 81       	ldd	r25, Z+3	; 0x03
    38c4:	f7 01       	movw	r30, r14
    38c6:	93 fd       	sbrc	r25, 3
    38c8:	85 91       	lpm	r24, Z+
    38ca:	93 ff       	sbrs	r25, 3
    38cc:	81 91       	ld	r24, Z+
    38ce:	7f 01       	movw	r14, r30
    38d0:	88 23       	and	r24, r24
    38d2:	09 f4       	brne	.+2      	; 0x38d6 <vfprintf+0x38>
    38d4:	ad c1       	rjmp	.+858    	; 0x3c30 <vfprintf+0x392>
    38d6:	85 32       	cpi	r24, 0x25	; 37
    38d8:	39 f4       	brne	.+14     	; 0x38e8 <vfprintf+0x4a>
    38da:	93 fd       	sbrc	r25, 3
    38dc:	85 91       	lpm	r24, Z+
    38de:	93 ff       	sbrs	r25, 3
    38e0:	81 91       	ld	r24, Z+
    38e2:	7f 01       	movw	r14, r30
    38e4:	85 32       	cpi	r24, 0x25	; 37
    38e6:	21 f4       	brne	.+8      	; 0x38f0 <vfprintf+0x52>
    38e8:	b6 01       	movw	r22, r12
    38ea:	90 e0       	ldi	r25, 0x00	; 0
    38ec:	c0 d1       	rcall	.+896    	; 0x3c6e <fputc>
    38ee:	e8 cf       	rjmp	.-48     	; 0x38c0 <vfprintf+0x22>
    38f0:	91 2c       	mov	r9, r1
    38f2:	21 2c       	mov	r2, r1
    38f4:	31 2c       	mov	r3, r1
    38f6:	ff e1       	ldi	r31, 0x1F	; 31
    38f8:	f3 15       	cp	r31, r3
    38fa:	d8 f0       	brcs	.+54     	; 0x3932 <vfprintf+0x94>
    38fc:	8b 32       	cpi	r24, 0x2B	; 43
    38fe:	79 f0       	breq	.+30     	; 0x391e <vfprintf+0x80>
    3900:	38 f4       	brcc	.+14     	; 0x3910 <vfprintf+0x72>
    3902:	80 32       	cpi	r24, 0x20	; 32
    3904:	79 f0       	breq	.+30     	; 0x3924 <vfprintf+0x86>
    3906:	83 32       	cpi	r24, 0x23	; 35
    3908:	a1 f4       	brne	.+40     	; 0x3932 <vfprintf+0x94>
    390a:	23 2d       	mov	r18, r3
    390c:	20 61       	ori	r18, 0x10	; 16
    390e:	1d c0       	rjmp	.+58     	; 0x394a <vfprintf+0xac>
    3910:	8d 32       	cpi	r24, 0x2D	; 45
    3912:	61 f0       	breq	.+24     	; 0x392c <vfprintf+0x8e>
    3914:	80 33       	cpi	r24, 0x30	; 48
    3916:	69 f4       	brne	.+26     	; 0x3932 <vfprintf+0x94>
    3918:	23 2d       	mov	r18, r3
    391a:	21 60       	ori	r18, 0x01	; 1
    391c:	16 c0       	rjmp	.+44     	; 0x394a <vfprintf+0xac>
    391e:	83 2d       	mov	r24, r3
    3920:	82 60       	ori	r24, 0x02	; 2
    3922:	38 2e       	mov	r3, r24
    3924:	e3 2d       	mov	r30, r3
    3926:	e4 60       	ori	r30, 0x04	; 4
    3928:	3e 2e       	mov	r3, r30
    392a:	2a c0       	rjmp	.+84     	; 0x3980 <vfprintf+0xe2>
    392c:	f3 2d       	mov	r31, r3
    392e:	f8 60       	ori	r31, 0x08	; 8
    3930:	1d c0       	rjmp	.+58     	; 0x396c <vfprintf+0xce>
    3932:	37 fc       	sbrc	r3, 7
    3934:	2d c0       	rjmp	.+90     	; 0x3990 <vfprintf+0xf2>
    3936:	20 ed       	ldi	r18, 0xD0	; 208
    3938:	28 0f       	add	r18, r24
    393a:	2a 30       	cpi	r18, 0x0A	; 10
    393c:	40 f0       	brcs	.+16     	; 0x394e <vfprintf+0xb0>
    393e:	8e 32       	cpi	r24, 0x2E	; 46
    3940:	b9 f4       	brne	.+46     	; 0x3970 <vfprintf+0xd2>
    3942:	36 fc       	sbrc	r3, 6
    3944:	75 c1       	rjmp	.+746    	; 0x3c30 <vfprintf+0x392>
    3946:	23 2d       	mov	r18, r3
    3948:	20 64       	ori	r18, 0x40	; 64
    394a:	32 2e       	mov	r3, r18
    394c:	19 c0       	rjmp	.+50     	; 0x3980 <vfprintf+0xe2>
    394e:	36 fe       	sbrs	r3, 6
    3950:	06 c0       	rjmp	.+12     	; 0x395e <vfprintf+0xc0>
    3952:	8a e0       	ldi	r24, 0x0A	; 10
    3954:	98 9e       	mul	r9, r24
    3956:	20 0d       	add	r18, r0
    3958:	11 24       	eor	r1, r1
    395a:	92 2e       	mov	r9, r18
    395c:	11 c0       	rjmp	.+34     	; 0x3980 <vfprintf+0xe2>
    395e:	ea e0       	ldi	r30, 0x0A	; 10
    3960:	2e 9e       	mul	r2, r30
    3962:	20 0d       	add	r18, r0
    3964:	11 24       	eor	r1, r1
    3966:	22 2e       	mov	r2, r18
    3968:	f3 2d       	mov	r31, r3
    396a:	f0 62       	ori	r31, 0x20	; 32
    396c:	3f 2e       	mov	r3, r31
    396e:	08 c0       	rjmp	.+16     	; 0x3980 <vfprintf+0xe2>
    3970:	8c 36       	cpi	r24, 0x6C	; 108
    3972:	21 f4       	brne	.+8      	; 0x397c <vfprintf+0xde>
    3974:	83 2d       	mov	r24, r3
    3976:	80 68       	ori	r24, 0x80	; 128
    3978:	38 2e       	mov	r3, r24
    397a:	02 c0       	rjmp	.+4      	; 0x3980 <vfprintf+0xe2>
    397c:	88 36       	cpi	r24, 0x68	; 104
    397e:	41 f4       	brne	.+16     	; 0x3990 <vfprintf+0xf2>
    3980:	f7 01       	movw	r30, r14
    3982:	93 fd       	sbrc	r25, 3
    3984:	85 91       	lpm	r24, Z+
    3986:	93 ff       	sbrs	r25, 3
    3988:	81 91       	ld	r24, Z+
    398a:	7f 01       	movw	r14, r30
    398c:	81 11       	cpse	r24, r1
    398e:	b3 cf       	rjmp	.-154    	; 0x38f6 <vfprintf+0x58>
    3990:	98 2f       	mov	r25, r24
    3992:	9f 7d       	andi	r25, 0xDF	; 223
    3994:	95 54       	subi	r25, 0x45	; 69
    3996:	93 30       	cpi	r25, 0x03	; 3
    3998:	28 f4       	brcc	.+10     	; 0x39a4 <vfprintf+0x106>
    399a:	0c 5f       	subi	r16, 0xFC	; 252
    399c:	1f 4f       	sbci	r17, 0xFF	; 255
    399e:	9f e3       	ldi	r25, 0x3F	; 63
    39a0:	99 83       	std	Y+1, r25	; 0x01
    39a2:	0d c0       	rjmp	.+26     	; 0x39be <vfprintf+0x120>
    39a4:	83 36       	cpi	r24, 0x63	; 99
    39a6:	31 f0       	breq	.+12     	; 0x39b4 <vfprintf+0x116>
    39a8:	83 37       	cpi	r24, 0x73	; 115
    39aa:	71 f0       	breq	.+28     	; 0x39c8 <vfprintf+0x12a>
    39ac:	83 35       	cpi	r24, 0x53	; 83
    39ae:	09 f0       	breq	.+2      	; 0x39b2 <vfprintf+0x114>
    39b0:	55 c0       	rjmp	.+170    	; 0x3a5c <vfprintf+0x1be>
    39b2:	20 c0       	rjmp	.+64     	; 0x39f4 <vfprintf+0x156>
    39b4:	f8 01       	movw	r30, r16
    39b6:	80 81       	ld	r24, Z
    39b8:	89 83       	std	Y+1, r24	; 0x01
    39ba:	0e 5f       	subi	r16, 0xFE	; 254
    39bc:	1f 4f       	sbci	r17, 0xFF	; 255
    39be:	88 24       	eor	r8, r8
    39c0:	83 94       	inc	r8
    39c2:	91 2c       	mov	r9, r1
    39c4:	53 01       	movw	r10, r6
    39c6:	12 c0       	rjmp	.+36     	; 0x39ec <vfprintf+0x14e>
    39c8:	28 01       	movw	r4, r16
    39ca:	f2 e0       	ldi	r31, 0x02	; 2
    39cc:	4f 0e       	add	r4, r31
    39ce:	51 1c       	adc	r5, r1
    39d0:	f8 01       	movw	r30, r16
    39d2:	a0 80       	ld	r10, Z
    39d4:	b1 80       	ldd	r11, Z+1	; 0x01
    39d6:	36 fe       	sbrs	r3, 6
    39d8:	03 c0       	rjmp	.+6      	; 0x39e0 <vfprintf+0x142>
    39da:	69 2d       	mov	r22, r9
    39dc:	70 e0       	ldi	r23, 0x00	; 0
    39de:	02 c0       	rjmp	.+4      	; 0x39e4 <vfprintf+0x146>
    39e0:	6f ef       	ldi	r22, 0xFF	; 255
    39e2:	7f ef       	ldi	r23, 0xFF	; 255
    39e4:	c5 01       	movw	r24, r10
    39e6:	38 d1       	rcall	.+624    	; 0x3c58 <strnlen>
    39e8:	4c 01       	movw	r8, r24
    39ea:	82 01       	movw	r16, r4
    39ec:	f3 2d       	mov	r31, r3
    39ee:	ff 77       	andi	r31, 0x7F	; 127
    39f0:	3f 2e       	mov	r3, r31
    39f2:	15 c0       	rjmp	.+42     	; 0x3a1e <vfprintf+0x180>
    39f4:	28 01       	movw	r4, r16
    39f6:	22 e0       	ldi	r18, 0x02	; 2
    39f8:	42 0e       	add	r4, r18
    39fa:	51 1c       	adc	r5, r1
    39fc:	f8 01       	movw	r30, r16
    39fe:	a0 80       	ld	r10, Z
    3a00:	b1 80       	ldd	r11, Z+1	; 0x01
    3a02:	36 fe       	sbrs	r3, 6
    3a04:	03 c0       	rjmp	.+6      	; 0x3a0c <vfprintf+0x16e>
    3a06:	69 2d       	mov	r22, r9
    3a08:	70 e0       	ldi	r23, 0x00	; 0
    3a0a:	02 c0       	rjmp	.+4      	; 0x3a10 <vfprintf+0x172>
    3a0c:	6f ef       	ldi	r22, 0xFF	; 255
    3a0e:	7f ef       	ldi	r23, 0xFF	; 255
    3a10:	c5 01       	movw	r24, r10
    3a12:	17 d1       	rcall	.+558    	; 0x3c42 <strnlen_P>
    3a14:	4c 01       	movw	r8, r24
    3a16:	f3 2d       	mov	r31, r3
    3a18:	f0 68       	ori	r31, 0x80	; 128
    3a1a:	3f 2e       	mov	r3, r31
    3a1c:	82 01       	movw	r16, r4
    3a1e:	33 fc       	sbrc	r3, 3
    3a20:	19 c0       	rjmp	.+50     	; 0x3a54 <vfprintf+0x1b6>
    3a22:	82 2d       	mov	r24, r2
    3a24:	90 e0       	ldi	r25, 0x00	; 0
    3a26:	88 16       	cp	r8, r24
    3a28:	99 06       	cpc	r9, r25
    3a2a:	a0 f4       	brcc	.+40     	; 0x3a54 <vfprintf+0x1b6>
    3a2c:	b6 01       	movw	r22, r12
    3a2e:	80 e2       	ldi	r24, 0x20	; 32
    3a30:	90 e0       	ldi	r25, 0x00	; 0
    3a32:	1d d1       	rcall	.+570    	; 0x3c6e <fputc>
    3a34:	2a 94       	dec	r2
    3a36:	f5 cf       	rjmp	.-22     	; 0x3a22 <vfprintf+0x184>
    3a38:	f5 01       	movw	r30, r10
    3a3a:	37 fc       	sbrc	r3, 7
    3a3c:	85 91       	lpm	r24, Z+
    3a3e:	37 fe       	sbrs	r3, 7
    3a40:	81 91       	ld	r24, Z+
    3a42:	5f 01       	movw	r10, r30
    3a44:	b6 01       	movw	r22, r12
    3a46:	90 e0       	ldi	r25, 0x00	; 0
    3a48:	12 d1       	rcall	.+548    	; 0x3c6e <fputc>
    3a4a:	21 10       	cpse	r2, r1
    3a4c:	2a 94       	dec	r2
    3a4e:	21 e0       	ldi	r18, 0x01	; 1
    3a50:	82 1a       	sub	r8, r18
    3a52:	91 08       	sbc	r9, r1
    3a54:	81 14       	cp	r8, r1
    3a56:	91 04       	cpc	r9, r1
    3a58:	79 f7       	brne	.-34     	; 0x3a38 <vfprintf+0x19a>
    3a5a:	e1 c0       	rjmp	.+450    	; 0x3c1e <vfprintf+0x380>
    3a5c:	84 36       	cpi	r24, 0x64	; 100
    3a5e:	11 f0       	breq	.+4      	; 0x3a64 <vfprintf+0x1c6>
    3a60:	89 36       	cpi	r24, 0x69	; 105
    3a62:	39 f5       	brne	.+78     	; 0x3ab2 <vfprintf+0x214>
    3a64:	f8 01       	movw	r30, r16
    3a66:	37 fe       	sbrs	r3, 7
    3a68:	07 c0       	rjmp	.+14     	; 0x3a78 <vfprintf+0x1da>
    3a6a:	60 81       	ld	r22, Z
    3a6c:	71 81       	ldd	r23, Z+1	; 0x01
    3a6e:	82 81       	ldd	r24, Z+2	; 0x02
    3a70:	93 81       	ldd	r25, Z+3	; 0x03
    3a72:	0c 5f       	subi	r16, 0xFC	; 252
    3a74:	1f 4f       	sbci	r17, 0xFF	; 255
    3a76:	08 c0       	rjmp	.+16     	; 0x3a88 <vfprintf+0x1ea>
    3a78:	60 81       	ld	r22, Z
    3a7a:	71 81       	ldd	r23, Z+1	; 0x01
    3a7c:	07 2e       	mov	r0, r23
    3a7e:	00 0c       	add	r0, r0
    3a80:	88 0b       	sbc	r24, r24
    3a82:	99 0b       	sbc	r25, r25
    3a84:	0e 5f       	subi	r16, 0xFE	; 254
    3a86:	1f 4f       	sbci	r17, 0xFF	; 255
    3a88:	f3 2d       	mov	r31, r3
    3a8a:	ff 76       	andi	r31, 0x6F	; 111
    3a8c:	3f 2e       	mov	r3, r31
    3a8e:	97 ff       	sbrs	r25, 7
    3a90:	09 c0       	rjmp	.+18     	; 0x3aa4 <vfprintf+0x206>
    3a92:	90 95       	com	r25
    3a94:	80 95       	com	r24
    3a96:	70 95       	com	r23
    3a98:	61 95       	neg	r22
    3a9a:	7f 4f       	sbci	r23, 0xFF	; 255
    3a9c:	8f 4f       	sbci	r24, 0xFF	; 255
    3a9e:	9f 4f       	sbci	r25, 0xFF	; 255
    3aa0:	f0 68       	ori	r31, 0x80	; 128
    3aa2:	3f 2e       	mov	r3, r31
    3aa4:	2a e0       	ldi	r18, 0x0A	; 10
    3aa6:	30 e0       	ldi	r19, 0x00	; 0
    3aa8:	a3 01       	movw	r20, r6
    3aaa:	1d d1       	rcall	.+570    	; 0x3ce6 <__ultoa_invert>
    3aac:	88 2e       	mov	r8, r24
    3aae:	86 18       	sub	r8, r6
    3ab0:	44 c0       	rjmp	.+136    	; 0x3b3a <vfprintf+0x29c>
    3ab2:	85 37       	cpi	r24, 0x75	; 117
    3ab4:	31 f4       	brne	.+12     	; 0x3ac2 <vfprintf+0x224>
    3ab6:	23 2d       	mov	r18, r3
    3ab8:	2f 7e       	andi	r18, 0xEF	; 239
    3aba:	b2 2e       	mov	r11, r18
    3abc:	2a e0       	ldi	r18, 0x0A	; 10
    3abe:	30 e0       	ldi	r19, 0x00	; 0
    3ac0:	25 c0       	rjmp	.+74     	; 0x3b0c <vfprintf+0x26e>
    3ac2:	93 2d       	mov	r25, r3
    3ac4:	99 7f       	andi	r25, 0xF9	; 249
    3ac6:	b9 2e       	mov	r11, r25
    3ac8:	8f 36       	cpi	r24, 0x6F	; 111
    3aca:	c1 f0       	breq	.+48     	; 0x3afc <vfprintf+0x25e>
    3acc:	18 f4       	brcc	.+6      	; 0x3ad4 <vfprintf+0x236>
    3ace:	88 35       	cpi	r24, 0x58	; 88
    3ad0:	79 f0       	breq	.+30     	; 0x3af0 <vfprintf+0x252>
    3ad2:	ae c0       	rjmp	.+348    	; 0x3c30 <vfprintf+0x392>
    3ad4:	80 37       	cpi	r24, 0x70	; 112
    3ad6:	19 f0       	breq	.+6      	; 0x3ade <vfprintf+0x240>
    3ad8:	88 37       	cpi	r24, 0x78	; 120
    3ada:	21 f0       	breq	.+8      	; 0x3ae4 <vfprintf+0x246>
    3adc:	a9 c0       	rjmp	.+338    	; 0x3c30 <vfprintf+0x392>
    3ade:	e9 2f       	mov	r30, r25
    3ae0:	e0 61       	ori	r30, 0x10	; 16
    3ae2:	be 2e       	mov	r11, r30
    3ae4:	b4 fe       	sbrs	r11, 4
    3ae6:	0d c0       	rjmp	.+26     	; 0x3b02 <vfprintf+0x264>
    3ae8:	fb 2d       	mov	r31, r11
    3aea:	f4 60       	ori	r31, 0x04	; 4
    3aec:	bf 2e       	mov	r11, r31
    3aee:	09 c0       	rjmp	.+18     	; 0x3b02 <vfprintf+0x264>
    3af0:	34 fe       	sbrs	r3, 4
    3af2:	0a c0       	rjmp	.+20     	; 0x3b08 <vfprintf+0x26a>
    3af4:	29 2f       	mov	r18, r25
    3af6:	26 60       	ori	r18, 0x06	; 6
    3af8:	b2 2e       	mov	r11, r18
    3afa:	06 c0       	rjmp	.+12     	; 0x3b08 <vfprintf+0x26a>
    3afc:	28 e0       	ldi	r18, 0x08	; 8
    3afe:	30 e0       	ldi	r19, 0x00	; 0
    3b00:	05 c0       	rjmp	.+10     	; 0x3b0c <vfprintf+0x26e>
    3b02:	20 e1       	ldi	r18, 0x10	; 16
    3b04:	30 e0       	ldi	r19, 0x00	; 0
    3b06:	02 c0       	rjmp	.+4      	; 0x3b0c <vfprintf+0x26e>
    3b08:	20 e1       	ldi	r18, 0x10	; 16
    3b0a:	32 e0       	ldi	r19, 0x02	; 2
    3b0c:	f8 01       	movw	r30, r16
    3b0e:	b7 fe       	sbrs	r11, 7
    3b10:	07 c0       	rjmp	.+14     	; 0x3b20 <vfprintf+0x282>
    3b12:	60 81       	ld	r22, Z
    3b14:	71 81       	ldd	r23, Z+1	; 0x01
    3b16:	82 81       	ldd	r24, Z+2	; 0x02
    3b18:	93 81       	ldd	r25, Z+3	; 0x03
    3b1a:	0c 5f       	subi	r16, 0xFC	; 252
    3b1c:	1f 4f       	sbci	r17, 0xFF	; 255
    3b1e:	06 c0       	rjmp	.+12     	; 0x3b2c <vfprintf+0x28e>
    3b20:	60 81       	ld	r22, Z
    3b22:	71 81       	ldd	r23, Z+1	; 0x01
    3b24:	80 e0       	ldi	r24, 0x00	; 0
    3b26:	90 e0       	ldi	r25, 0x00	; 0
    3b28:	0e 5f       	subi	r16, 0xFE	; 254
    3b2a:	1f 4f       	sbci	r17, 0xFF	; 255
    3b2c:	a3 01       	movw	r20, r6
    3b2e:	db d0       	rcall	.+438    	; 0x3ce6 <__ultoa_invert>
    3b30:	88 2e       	mov	r8, r24
    3b32:	86 18       	sub	r8, r6
    3b34:	fb 2d       	mov	r31, r11
    3b36:	ff 77       	andi	r31, 0x7F	; 127
    3b38:	3f 2e       	mov	r3, r31
    3b3a:	36 fe       	sbrs	r3, 6
    3b3c:	0d c0       	rjmp	.+26     	; 0x3b58 <vfprintf+0x2ba>
    3b3e:	23 2d       	mov	r18, r3
    3b40:	2e 7f       	andi	r18, 0xFE	; 254
    3b42:	a2 2e       	mov	r10, r18
    3b44:	89 14       	cp	r8, r9
    3b46:	58 f4       	brcc	.+22     	; 0x3b5e <vfprintf+0x2c0>
    3b48:	34 fe       	sbrs	r3, 4
    3b4a:	0b c0       	rjmp	.+22     	; 0x3b62 <vfprintf+0x2c4>
    3b4c:	32 fc       	sbrc	r3, 2
    3b4e:	09 c0       	rjmp	.+18     	; 0x3b62 <vfprintf+0x2c4>
    3b50:	83 2d       	mov	r24, r3
    3b52:	8e 7e       	andi	r24, 0xEE	; 238
    3b54:	a8 2e       	mov	r10, r24
    3b56:	05 c0       	rjmp	.+10     	; 0x3b62 <vfprintf+0x2c4>
    3b58:	b8 2c       	mov	r11, r8
    3b5a:	a3 2c       	mov	r10, r3
    3b5c:	03 c0       	rjmp	.+6      	; 0x3b64 <vfprintf+0x2c6>
    3b5e:	b8 2c       	mov	r11, r8
    3b60:	01 c0       	rjmp	.+2      	; 0x3b64 <vfprintf+0x2c6>
    3b62:	b9 2c       	mov	r11, r9
    3b64:	a4 fe       	sbrs	r10, 4
    3b66:	0f c0       	rjmp	.+30     	; 0x3b86 <vfprintf+0x2e8>
    3b68:	fe 01       	movw	r30, r28
    3b6a:	e8 0d       	add	r30, r8
    3b6c:	f1 1d       	adc	r31, r1
    3b6e:	80 81       	ld	r24, Z
    3b70:	80 33       	cpi	r24, 0x30	; 48
    3b72:	21 f4       	brne	.+8      	; 0x3b7c <vfprintf+0x2de>
    3b74:	9a 2d       	mov	r25, r10
    3b76:	99 7e       	andi	r25, 0xE9	; 233
    3b78:	a9 2e       	mov	r10, r25
    3b7a:	09 c0       	rjmp	.+18     	; 0x3b8e <vfprintf+0x2f0>
    3b7c:	a2 fe       	sbrs	r10, 2
    3b7e:	06 c0       	rjmp	.+12     	; 0x3b8c <vfprintf+0x2ee>
    3b80:	b3 94       	inc	r11
    3b82:	b3 94       	inc	r11
    3b84:	04 c0       	rjmp	.+8      	; 0x3b8e <vfprintf+0x2f0>
    3b86:	8a 2d       	mov	r24, r10
    3b88:	86 78       	andi	r24, 0x86	; 134
    3b8a:	09 f0       	breq	.+2      	; 0x3b8e <vfprintf+0x2f0>
    3b8c:	b3 94       	inc	r11
    3b8e:	a3 fc       	sbrc	r10, 3
    3b90:	10 c0       	rjmp	.+32     	; 0x3bb2 <vfprintf+0x314>
    3b92:	a0 fe       	sbrs	r10, 0
    3b94:	06 c0       	rjmp	.+12     	; 0x3ba2 <vfprintf+0x304>
    3b96:	b2 14       	cp	r11, r2
    3b98:	80 f4       	brcc	.+32     	; 0x3bba <vfprintf+0x31c>
    3b9a:	28 0c       	add	r2, r8
    3b9c:	92 2c       	mov	r9, r2
    3b9e:	9b 18       	sub	r9, r11
    3ba0:	0d c0       	rjmp	.+26     	; 0x3bbc <vfprintf+0x31e>
    3ba2:	b2 14       	cp	r11, r2
    3ba4:	58 f4       	brcc	.+22     	; 0x3bbc <vfprintf+0x31e>
    3ba6:	b6 01       	movw	r22, r12
    3ba8:	80 e2       	ldi	r24, 0x20	; 32
    3baa:	90 e0       	ldi	r25, 0x00	; 0
    3bac:	60 d0       	rcall	.+192    	; 0x3c6e <fputc>
    3bae:	b3 94       	inc	r11
    3bb0:	f8 cf       	rjmp	.-16     	; 0x3ba2 <vfprintf+0x304>
    3bb2:	b2 14       	cp	r11, r2
    3bb4:	18 f4       	brcc	.+6      	; 0x3bbc <vfprintf+0x31e>
    3bb6:	2b 18       	sub	r2, r11
    3bb8:	02 c0       	rjmp	.+4      	; 0x3bbe <vfprintf+0x320>
    3bba:	98 2c       	mov	r9, r8
    3bbc:	21 2c       	mov	r2, r1
    3bbe:	a4 fe       	sbrs	r10, 4
    3bc0:	0f c0       	rjmp	.+30     	; 0x3be0 <vfprintf+0x342>
    3bc2:	b6 01       	movw	r22, r12
    3bc4:	80 e3       	ldi	r24, 0x30	; 48
    3bc6:	90 e0       	ldi	r25, 0x00	; 0
    3bc8:	52 d0       	rcall	.+164    	; 0x3c6e <fputc>
    3bca:	a2 fe       	sbrs	r10, 2
    3bcc:	16 c0       	rjmp	.+44     	; 0x3bfa <vfprintf+0x35c>
    3bce:	a1 fc       	sbrc	r10, 1
    3bd0:	03 c0       	rjmp	.+6      	; 0x3bd8 <vfprintf+0x33a>
    3bd2:	88 e7       	ldi	r24, 0x78	; 120
    3bd4:	90 e0       	ldi	r25, 0x00	; 0
    3bd6:	02 c0       	rjmp	.+4      	; 0x3bdc <vfprintf+0x33e>
    3bd8:	88 e5       	ldi	r24, 0x58	; 88
    3bda:	90 e0       	ldi	r25, 0x00	; 0
    3bdc:	b6 01       	movw	r22, r12
    3bde:	0c c0       	rjmp	.+24     	; 0x3bf8 <vfprintf+0x35a>
    3be0:	8a 2d       	mov	r24, r10
    3be2:	86 78       	andi	r24, 0x86	; 134
    3be4:	51 f0       	breq	.+20     	; 0x3bfa <vfprintf+0x35c>
    3be6:	a1 fe       	sbrs	r10, 1
    3be8:	02 c0       	rjmp	.+4      	; 0x3bee <vfprintf+0x350>
    3bea:	8b e2       	ldi	r24, 0x2B	; 43
    3bec:	01 c0       	rjmp	.+2      	; 0x3bf0 <vfprintf+0x352>
    3bee:	80 e2       	ldi	r24, 0x20	; 32
    3bf0:	a7 fc       	sbrc	r10, 7
    3bf2:	8d e2       	ldi	r24, 0x2D	; 45
    3bf4:	b6 01       	movw	r22, r12
    3bf6:	90 e0       	ldi	r25, 0x00	; 0
    3bf8:	3a d0       	rcall	.+116    	; 0x3c6e <fputc>
    3bfa:	89 14       	cp	r8, r9
    3bfc:	30 f4       	brcc	.+12     	; 0x3c0a <vfprintf+0x36c>
    3bfe:	b6 01       	movw	r22, r12
    3c00:	80 e3       	ldi	r24, 0x30	; 48
    3c02:	90 e0       	ldi	r25, 0x00	; 0
    3c04:	34 d0       	rcall	.+104    	; 0x3c6e <fputc>
    3c06:	9a 94       	dec	r9
    3c08:	f8 cf       	rjmp	.-16     	; 0x3bfa <vfprintf+0x35c>
    3c0a:	8a 94       	dec	r8
    3c0c:	f3 01       	movw	r30, r6
    3c0e:	e8 0d       	add	r30, r8
    3c10:	f1 1d       	adc	r31, r1
    3c12:	80 81       	ld	r24, Z
    3c14:	b6 01       	movw	r22, r12
    3c16:	90 e0       	ldi	r25, 0x00	; 0
    3c18:	2a d0       	rcall	.+84     	; 0x3c6e <fputc>
    3c1a:	81 10       	cpse	r8, r1
    3c1c:	f6 cf       	rjmp	.-20     	; 0x3c0a <vfprintf+0x36c>
    3c1e:	22 20       	and	r2, r2
    3c20:	09 f4       	brne	.+2      	; 0x3c24 <vfprintf+0x386>
    3c22:	4e ce       	rjmp	.-868    	; 0x38c0 <vfprintf+0x22>
    3c24:	b6 01       	movw	r22, r12
    3c26:	80 e2       	ldi	r24, 0x20	; 32
    3c28:	90 e0       	ldi	r25, 0x00	; 0
    3c2a:	21 d0       	rcall	.+66     	; 0x3c6e <fputc>
    3c2c:	2a 94       	dec	r2
    3c2e:	f7 cf       	rjmp	.-18     	; 0x3c1e <vfprintf+0x380>
    3c30:	f6 01       	movw	r30, r12
    3c32:	86 81       	ldd	r24, Z+6	; 0x06
    3c34:	97 81       	ldd	r25, Z+7	; 0x07
    3c36:	02 c0       	rjmp	.+4      	; 0x3c3c <vfprintf+0x39e>
    3c38:	8f ef       	ldi	r24, 0xFF	; 255
    3c3a:	9f ef       	ldi	r25, 0xFF	; 255
    3c3c:	2b 96       	adiw	r28, 0x0b	; 11
    3c3e:	e2 e1       	ldi	r30, 0x12	; 18
    3c40:	e2 c0       	rjmp	.+452    	; 0x3e06 <__epilogue_restores__>

00003c42 <strnlen_P>:
    3c42:	fc 01       	movw	r30, r24
    3c44:	05 90       	lpm	r0, Z+
    3c46:	61 50       	subi	r22, 0x01	; 1
    3c48:	70 40       	sbci	r23, 0x00	; 0
    3c4a:	01 10       	cpse	r0, r1
    3c4c:	d8 f7       	brcc	.-10     	; 0x3c44 <strnlen_P+0x2>
    3c4e:	80 95       	com	r24
    3c50:	90 95       	com	r25
    3c52:	8e 0f       	add	r24, r30
    3c54:	9f 1f       	adc	r25, r31
    3c56:	08 95       	ret

00003c58 <strnlen>:
    3c58:	fc 01       	movw	r30, r24
    3c5a:	61 50       	subi	r22, 0x01	; 1
    3c5c:	70 40       	sbci	r23, 0x00	; 0
    3c5e:	01 90       	ld	r0, Z+
    3c60:	01 10       	cpse	r0, r1
    3c62:	d8 f7       	brcc	.-10     	; 0x3c5a <strnlen+0x2>
    3c64:	80 95       	com	r24
    3c66:	90 95       	com	r25
    3c68:	8e 0f       	add	r24, r30
    3c6a:	9f 1f       	adc	r25, r31
    3c6c:	08 95       	ret

00003c6e <fputc>:
    3c6e:	0f 93       	push	r16
    3c70:	1f 93       	push	r17
    3c72:	cf 93       	push	r28
    3c74:	df 93       	push	r29
    3c76:	fb 01       	movw	r30, r22
    3c78:	23 81       	ldd	r18, Z+3	; 0x03
    3c7a:	21 fd       	sbrc	r18, 1
    3c7c:	03 c0       	rjmp	.+6      	; 0x3c84 <fputc+0x16>
    3c7e:	8f ef       	ldi	r24, 0xFF	; 255
    3c80:	9f ef       	ldi	r25, 0xFF	; 255
    3c82:	2c c0       	rjmp	.+88     	; 0x3cdc <fputc+0x6e>
    3c84:	22 ff       	sbrs	r18, 2
    3c86:	16 c0       	rjmp	.+44     	; 0x3cb4 <fputc+0x46>
    3c88:	46 81       	ldd	r20, Z+6	; 0x06
    3c8a:	57 81       	ldd	r21, Z+7	; 0x07
    3c8c:	24 81       	ldd	r18, Z+4	; 0x04
    3c8e:	35 81       	ldd	r19, Z+5	; 0x05
    3c90:	42 17       	cp	r20, r18
    3c92:	53 07       	cpc	r21, r19
    3c94:	44 f4       	brge	.+16     	; 0x3ca6 <fputc+0x38>
    3c96:	a0 81       	ld	r26, Z
    3c98:	b1 81       	ldd	r27, Z+1	; 0x01
    3c9a:	9d 01       	movw	r18, r26
    3c9c:	2f 5f       	subi	r18, 0xFF	; 255
    3c9e:	3f 4f       	sbci	r19, 0xFF	; 255
    3ca0:	31 83       	std	Z+1, r19	; 0x01
    3ca2:	20 83       	st	Z, r18
    3ca4:	8c 93       	st	X, r24
    3ca6:	26 81       	ldd	r18, Z+6	; 0x06
    3ca8:	37 81       	ldd	r19, Z+7	; 0x07
    3caa:	2f 5f       	subi	r18, 0xFF	; 255
    3cac:	3f 4f       	sbci	r19, 0xFF	; 255
    3cae:	37 83       	std	Z+7, r19	; 0x07
    3cb0:	26 83       	std	Z+6, r18	; 0x06
    3cb2:	14 c0       	rjmp	.+40     	; 0x3cdc <fputc+0x6e>
    3cb4:	8b 01       	movw	r16, r22
    3cb6:	ec 01       	movw	r28, r24
    3cb8:	fb 01       	movw	r30, r22
    3cba:	00 84       	ldd	r0, Z+8	; 0x08
    3cbc:	f1 85       	ldd	r31, Z+9	; 0x09
    3cbe:	e0 2d       	mov	r30, r0
    3cc0:	09 95       	icall
    3cc2:	89 2b       	or	r24, r25
    3cc4:	e1 f6       	brne	.-72     	; 0x3c7e <fputc+0x10>
    3cc6:	d8 01       	movw	r26, r16
    3cc8:	16 96       	adiw	r26, 0x06	; 6
    3cca:	8d 91       	ld	r24, X+
    3ccc:	9c 91       	ld	r25, X
    3cce:	17 97       	sbiw	r26, 0x07	; 7
    3cd0:	01 96       	adiw	r24, 0x01	; 1
    3cd2:	17 96       	adiw	r26, 0x07	; 7
    3cd4:	9c 93       	st	X, r25
    3cd6:	8e 93       	st	-X, r24
    3cd8:	16 97       	sbiw	r26, 0x06	; 6
    3cda:	ce 01       	movw	r24, r28
    3cdc:	df 91       	pop	r29
    3cde:	cf 91       	pop	r28
    3ce0:	1f 91       	pop	r17
    3ce2:	0f 91       	pop	r16
    3ce4:	08 95       	ret

00003ce6 <__ultoa_invert>:
    3ce6:	fa 01       	movw	r30, r20
    3ce8:	aa 27       	eor	r26, r26
    3cea:	28 30       	cpi	r18, 0x08	; 8
    3cec:	51 f1       	breq	.+84     	; 0x3d42 <__ultoa_invert+0x5c>
    3cee:	20 31       	cpi	r18, 0x10	; 16
    3cf0:	81 f1       	breq	.+96     	; 0x3d52 <__ultoa_invert+0x6c>
    3cf2:	e8 94       	clt
    3cf4:	6f 93       	push	r22
    3cf6:	6e 7f       	andi	r22, 0xFE	; 254
    3cf8:	6e 5f       	subi	r22, 0xFE	; 254
    3cfa:	7f 4f       	sbci	r23, 0xFF	; 255
    3cfc:	8f 4f       	sbci	r24, 0xFF	; 255
    3cfe:	9f 4f       	sbci	r25, 0xFF	; 255
    3d00:	af 4f       	sbci	r26, 0xFF	; 255
    3d02:	b1 e0       	ldi	r27, 0x01	; 1
    3d04:	3e d0       	rcall	.+124    	; 0x3d82 <__ultoa_invert+0x9c>
    3d06:	b4 e0       	ldi	r27, 0x04	; 4
    3d08:	3c d0       	rcall	.+120    	; 0x3d82 <__ultoa_invert+0x9c>
    3d0a:	67 0f       	add	r22, r23
    3d0c:	78 1f       	adc	r23, r24
    3d0e:	89 1f       	adc	r24, r25
    3d10:	9a 1f       	adc	r25, r26
    3d12:	a1 1d       	adc	r26, r1
    3d14:	68 0f       	add	r22, r24
    3d16:	79 1f       	adc	r23, r25
    3d18:	8a 1f       	adc	r24, r26
    3d1a:	91 1d       	adc	r25, r1
    3d1c:	a1 1d       	adc	r26, r1
    3d1e:	6a 0f       	add	r22, r26
    3d20:	71 1d       	adc	r23, r1
    3d22:	81 1d       	adc	r24, r1
    3d24:	91 1d       	adc	r25, r1
    3d26:	a1 1d       	adc	r26, r1
    3d28:	20 d0       	rcall	.+64     	; 0x3d6a <__ultoa_invert+0x84>
    3d2a:	09 f4       	brne	.+2      	; 0x3d2e <__ultoa_invert+0x48>
    3d2c:	68 94       	set
    3d2e:	3f 91       	pop	r19
    3d30:	2a e0       	ldi	r18, 0x0A	; 10
    3d32:	26 9f       	mul	r18, r22
    3d34:	11 24       	eor	r1, r1
    3d36:	30 19       	sub	r19, r0
    3d38:	30 5d       	subi	r19, 0xD0	; 208
    3d3a:	31 93       	st	Z+, r19
    3d3c:	de f6       	brtc	.-74     	; 0x3cf4 <__ultoa_invert+0xe>
    3d3e:	cf 01       	movw	r24, r30
    3d40:	08 95       	ret
    3d42:	46 2f       	mov	r20, r22
    3d44:	47 70       	andi	r20, 0x07	; 7
    3d46:	40 5d       	subi	r20, 0xD0	; 208
    3d48:	41 93       	st	Z+, r20
    3d4a:	b3 e0       	ldi	r27, 0x03	; 3
    3d4c:	0f d0       	rcall	.+30     	; 0x3d6c <__ultoa_invert+0x86>
    3d4e:	c9 f7       	brne	.-14     	; 0x3d42 <__ultoa_invert+0x5c>
    3d50:	f6 cf       	rjmp	.-20     	; 0x3d3e <__ultoa_invert+0x58>
    3d52:	46 2f       	mov	r20, r22
    3d54:	4f 70       	andi	r20, 0x0F	; 15
    3d56:	40 5d       	subi	r20, 0xD0	; 208
    3d58:	4a 33       	cpi	r20, 0x3A	; 58
    3d5a:	18 f0       	brcs	.+6      	; 0x3d62 <__ultoa_invert+0x7c>
    3d5c:	49 5d       	subi	r20, 0xD9	; 217
    3d5e:	31 fd       	sbrc	r19, 1
    3d60:	40 52       	subi	r20, 0x20	; 32
    3d62:	41 93       	st	Z+, r20
    3d64:	02 d0       	rcall	.+4      	; 0x3d6a <__ultoa_invert+0x84>
    3d66:	a9 f7       	brne	.-22     	; 0x3d52 <__ultoa_invert+0x6c>
    3d68:	ea cf       	rjmp	.-44     	; 0x3d3e <__ultoa_invert+0x58>
    3d6a:	b4 e0       	ldi	r27, 0x04	; 4
    3d6c:	a6 95       	lsr	r26
    3d6e:	97 95       	ror	r25
    3d70:	87 95       	ror	r24
    3d72:	77 95       	ror	r23
    3d74:	67 95       	ror	r22
    3d76:	ba 95       	dec	r27
    3d78:	c9 f7       	brne	.-14     	; 0x3d6c <__ultoa_invert+0x86>
    3d7a:	00 97       	sbiw	r24, 0x00	; 0
    3d7c:	61 05       	cpc	r22, r1
    3d7e:	71 05       	cpc	r23, r1
    3d80:	08 95       	ret
    3d82:	9b 01       	movw	r18, r22
    3d84:	ac 01       	movw	r20, r24
    3d86:	0a 2e       	mov	r0, r26
    3d88:	06 94       	lsr	r0
    3d8a:	57 95       	ror	r21
    3d8c:	47 95       	ror	r20
    3d8e:	37 95       	ror	r19
    3d90:	27 95       	ror	r18
    3d92:	ba 95       	dec	r27
    3d94:	c9 f7       	brne	.-14     	; 0x3d88 <__ultoa_invert+0xa2>
    3d96:	62 0f       	add	r22, r18
    3d98:	73 1f       	adc	r23, r19
    3d9a:	84 1f       	adc	r24, r20
    3d9c:	95 1f       	adc	r25, r21
    3d9e:	a0 1d       	adc	r26, r0
    3da0:	08 95       	ret

00003da2 <eeprom_read_byte>:
    3da2:	f9 99       	sbic	0x1f, 1	; 31
    3da4:	fe cf       	rjmp	.-4      	; 0x3da2 <eeprom_read_byte>
    3da6:	92 bd       	out	0x22, r25	; 34
    3da8:	81 bd       	out	0x21, r24	; 33
    3daa:	f8 9a       	sbi	0x1f, 0	; 31
    3dac:	99 27       	eor	r25, r25
    3dae:	80 b5       	in	r24, 0x20	; 32
    3db0:	08 95       	ret

00003db2 <eeprom_write_byte>:
    3db2:	26 2f       	mov	r18, r22

00003db4 <eeprom_write_r18>:
    3db4:	f9 99       	sbic	0x1f, 1	; 31
    3db6:	fe cf       	rjmp	.-4      	; 0x3db4 <eeprom_write_r18>
    3db8:	1f ba       	out	0x1f, r1	; 31
    3dba:	92 bd       	out	0x22, r25	; 34
    3dbc:	81 bd       	out	0x21, r24	; 33
    3dbe:	20 bd       	out	0x20, r18	; 32
    3dc0:	0f b6       	in	r0, 0x3f	; 63
    3dc2:	f8 94       	cli
    3dc4:	fa 9a       	sbi	0x1f, 2	; 31
    3dc6:	f9 9a       	sbi	0x1f, 1	; 31
    3dc8:	0f be       	out	0x3f, r0	; 63
    3dca:	01 96       	adiw	r24, 0x01	; 1
    3dcc:	08 95       	ret

00003dce <__prologue_saves__>:
    3dce:	2f 92       	push	r2
    3dd0:	3f 92       	push	r3
    3dd2:	4f 92       	push	r4
    3dd4:	5f 92       	push	r5
    3dd6:	6f 92       	push	r6
    3dd8:	7f 92       	push	r7
    3dda:	8f 92       	push	r8
    3ddc:	9f 92       	push	r9
    3dde:	af 92       	push	r10
    3de0:	bf 92       	push	r11
    3de2:	cf 92       	push	r12
    3de4:	df 92       	push	r13
    3de6:	ef 92       	push	r14
    3de8:	ff 92       	push	r15
    3dea:	0f 93       	push	r16
    3dec:	1f 93       	push	r17
    3dee:	cf 93       	push	r28
    3df0:	df 93       	push	r29
    3df2:	cd b7       	in	r28, 0x3d	; 61
    3df4:	de b7       	in	r29, 0x3e	; 62
    3df6:	ca 1b       	sub	r28, r26
    3df8:	db 0b       	sbc	r29, r27
    3dfa:	0f b6       	in	r0, 0x3f	; 63
    3dfc:	f8 94       	cli
    3dfe:	de bf       	out	0x3e, r29	; 62
    3e00:	0f be       	out	0x3f, r0	; 63
    3e02:	cd bf       	out	0x3d, r28	; 61
    3e04:	09 94       	ijmp

00003e06 <__epilogue_restores__>:
    3e06:	2a 88       	ldd	r2, Y+18	; 0x12
    3e08:	39 88       	ldd	r3, Y+17	; 0x11
    3e0a:	48 88       	ldd	r4, Y+16	; 0x10
    3e0c:	5f 84       	ldd	r5, Y+15	; 0x0f
    3e0e:	6e 84       	ldd	r6, Y+14	; 0x0e
    3e10:	7d 84       	ldd	r7, Y+13	; 0x0d
    3e12:	8c 84       	ldd	r8, Y+12	; 0x0c
    3e14:	9b 84       	ldd	r9, Y+11	; 0x0b
    3e16:	aa 84       	ldd	r10, Y+10	; 0x0a
    3e18:	b9 84       	ldd	r11, Y+9	; 0x09
    3e1a:	c8 84       	ldd	r12, Y+8	; 0x08
    3e1c:	df 80       	ldd	r13, Y+7	; 0x07
    3e1e:	ee 80       	ldd	r14, Y+6	; 0x06
    3e20:	fd 80       	ldd	r15, Y+5	; 0x05
    3e22:	0c 81       	ldd	r16, Y+4	; 0x04
    3e24:	1b 81       	ldd	r17, Y+3	; 0x03
    3e26:	aa 81       	ldd	r26, Y+2	; 0x02
    3e28:	b9 81       	ldd	r27, Y+1	; 0x01
    3e2a:	ce 0f       	add	r28, r30
    3e2c:	d1 1d       	adc	r29, r1
    3e2e:	0f b6       	in	r0, 0x3f	; 63
    3e30:	f8 94       	cli
    3e32:	de bf       	out	0x3e, r29	; 62
    3e34:	0f be       	out	0x3f, r0	; 63
    3e36:	cd bf       	out	0x3d, r28	; 61
    3e38:	ed 01       	movw	r28, r26
    3e3a:	08 95       	ret

00003e3c <_exit>:
    3e3c:	f8 94       	cli

00003e3e <__stop_program>:
    3e3e:	ff cf       	rjmp	.-2      	; 0x3e3e <__stop_program>
