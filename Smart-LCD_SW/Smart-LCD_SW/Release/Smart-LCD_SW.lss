
Smart-LCD_SW.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000248  00800100  00004b5a  00004bee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004b5a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000145  00800348  00800348  00004e36  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00004e36  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004e94  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000440  00000000  00000000  00004ed8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000a551  00000000  00000000  00005318  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001db3  00000000  00000000  0000f869  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003cee  00000000  00000000  0001161c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000019c4  00000000  00000000  0001530c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000020c4  00000000  00000000  00016cd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000972f  00000000  00000000  00018d94  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000450  00000000  00000000  000224c3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	e7 c2       	rjmp	.+1486   	; 0x5d0 <__ctors_end>
       2:	00 00       	nop
       4:	0c 94 56 0c 	jmp	0x18ac	; 0x18ac <__vector_1>
       8:	0c 94 33 0c 	jmp	0x1866	; 0x1866 <__vector_2>
       c:	0c 94 10 0c 	jmp	0x1820	; 0x1820 <__vector_3>
      10:	0c 94 ed 0b 	jmp	0x17da	; 0x17da <__vector_4>
      14:	0c 94 ca 0b 	jmp	0x1794	; 0x1794 <__vector_5>
      18:	0c 94 a7 0b 	jmp	0x174e	; 0x174e <__vector_6>
      1c:	0c 94 84 0b 	jmp	0x1708	; 0x1708 <__vector_7>
      20:	0c 94 61 0b 	jmp	0x16c2	; 0x16c2 <__vector_8>
      24:	30 c7       	rjmp	.+3680   	; 0xe86 <__vector_9>
      26:	00 00       	nop
      28:	0c 94 3e 0b 	jmp	0x167c	; 0x167c <__vector_10>
      2c:	0c 94 1b 0b 	jmp	0x1636	; 0x1636 <__vector_11>
      30:	0c 94 f8 0a 	jmp	0x15f0	; 0x15f0 <__vector_12>
      34:	c2 c7       	rjmp	.+3972   	; 0xfba <__vector_13>
      36:	00 00       	nop
      38:	0c 94 d5 0a 	jmp	0x15aa	; 0x15aa <__vector_14>
      3c:	0c 94 b2 0a 	jmp	0x1564	; 0x1564 <__vector_15>
      40:	0c 94 8f 0a 	jmp	0x151e	; 0x151e <__vector_16>
      44:	0c 94 6c 0a 	jmp	0x14d8	; 0x14d8 <__vector_17>
      48:	0c 94 49 0a 	jmp	0x1492	; 0x1492 <__vector_18>
      4c:	0c 94 26 0a 	jmp	0x144c	; 0x144c <__vector_19>
      50:	0c 94 03 0a 	jmp	0x1406	; 0x1406 <__vector_20>
      54:	0c 94 fb 08 	jmp	0x11f6	; 0x11f6 <__vector_21>
      58:	0c 94 e0 09 	jmp	0x13c0	; 0x13c0 <__vector_22>
      5c:	0c 94 bd 09 	jmp	0x137a	; 0x137a <__vector_23>
      60:	0c 94 68 09 	jmp	0x12d0	; 0x12d0 <__vector_24>
      64:	0c 94 9a 09 	jmp	0x1334	; 0x1334 <__vector_25>
      68:	2b 1a       	sub	r2, r27
      6a:	35 1a       	sub	r3, r21
      6c:	41 1a       	sub	r4, r17
      6e:	4b 1a       	sub	r4, r27
      70:	57 1a       	sub	r5, r23
      72:	65 1a       	sub	r6, r21
      74:	75 1a       	sub	r7, r21
      76:	87 1a       	sub	r8, r23
      78:	9d 1a       	sub	r9, r29
      7a:	b7 1a       	sub	r11, r23
      7c:	d5 1a       	sub	r13, r21
      7e:	f7 1a       	sub	r15, r23
      80:	1d 1b       	sub	r17, r29
      82:	6b 1b       	sub	r22, r27
      84:	7b 1b       	sub	r23, r27
      86:	89 1b       	sub	r24, r25
      88:	95 1b       	sub	r25, r21
      8a:	a3 1b       	sub	r26, r19
      8c:	ad 1b       	sub	r26, r29
      8e:	05 1c       	adc	r0, r5
      90:	05 1c       	adc	r0, r5
      92:	b9 1b       	sub	r27, r25
      94:	c5 1b       	sub	r28, r21
      96:	cf 1b       	sub	r28, r31
      98:	d9 1b       	sub	r29, r25
      9a:	e9 1b       	sub	r30, r25
      9c:	f9 1b       	sub	r31, r25

0000009e <__trampolines_end>:
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	00 00       	nop
      a4:	00 20       	and	r0, r0
      a6:	20 20       	and	r2, r0
      a8:	20 20       	and	r2, r0
      aa:	00 20       	and	r0, r0
      ac:	50 50       	subi	r21, 0x00	; 0
      ae:	50 00       	.word	0x0050	; ????
      b0:	00 00       	nop
      b2:	00 50       	subi	r16, 0x00	; 0
      b4:	50 f8       	bld	r5, 0
      b6:	50 f8       	bld	r5, 0
      b8:	50 50       	subi	r21, 0x00	; 0
      ba:	20 78       	andi	r18, 0x80	; 128
      bc:	a0 70       	andi	r26, 0x00	; 0
      be:	28 f0       	brcs	.+10     	; 0xca <__trampolines_end+0x2c>
      c0:	20 c0       	rjmp	.+64     	; 0x102 <__trampolines_end+0x64>
      c2:	c8 10       	cpse	r12, r8
      c4:	20 40       	sbci	r18, 0x00	; 0
      c6:	98 18       	sub	r9, r8
      c8:	60 90 a0 40 	lds	r6, 0x40A0	; 0x8040a0 <__bss_end+0x3c13>
      cc:	a8 90       	.word	0x90a8	; ????
      ce:	68 60       	ori	r22, 0x08	; 8
      d0:	20 40       	sbci	r18, 0x00	; 0
      d2:	00 00       	nop
      d4:	00 00       	nop
      d6:	10 20       	and	r1, r0
      d8:	40 40       	sbci	r20, 0x00	; 0
      da:	40 20       	and	r4, r0
      dc:	10 40       	sbci	r17, 0x00	; 0
      de:	20 10       	cpse	r2, r0
      e0:	10 10       	cpse	r1, r0
      e2:	20 40       	sbci	r18, 0x00	; 0
      e4:	00 50       	subi	r16, 0x00	; 0
      e6:	20 f8       	bld	r2, 0
      e8:	20 50       	subi	r18, 0x00	; 0
      ea:	00 00       	nop
      ec:	20 20       	and	r2, r0
      ee:	f8 20       	and	r15, r8
      f0:	20 00       	.word	0x0020	; ????
      f2:	00 00       	nop
      f4:	00 00       	nop
      f6:	60 20       	and	r6, r0
      f8:	40 00       	.word	0x0040	; ????
      fa:	00 00       	nop
      fc:	f8 00       	.word	0x00f8	; ????
      fe:	00 00       	nop
     100:	00 00       	nop
     102:	00 00       	nop
     104:	00 60       	ori	r16, 0x00	; 0
     106:	60 00       	.word	0x0060	; ????
     108:	08 10       	cpse	r0, r8
     10a:	20 40       	sbci	r18, 0x00	; 0
     10c:	80 00       	.word	0x0080	; ????
     10e:	70 88       	ldd	r7, Z+16	; 0x10
     110:	98 a8       	ldd	r9, Y+48	; 0x30
     112:	c8 88       	ldd	r12, Y+16	; 0x10
     114:	70 20       	and	r7, r0
     116:	60 20       	and	r6, r0
     118:	20 20       	and	r2, r0
     11a:	20 70       	andi	r18, 0x00	; 0
     11c:	70 88       	ldd	r7, Z+16	; 0x10
     11e:	08 10       	cpse	r0, r8
     120:	20 40       	sbci	r18, 0x00	; 0
     122:	f8 f8       	.word	0xf8f8	; ????
     124:	10 20       	and	r1, r0
     126:	10 08       	sbc	r1, r0
     128:	88 70       	andi	r24, 0x08	; 8
     12a:	10 30       	cpi	r17, 0x00	; 0
     12c:	50 90 f8 10 	lds	r5, 0x10F8	; 0x8010f8 <__bss_end+0xc6b>
     130:	10 f8       	bld	r1, 0
     132:	80 f0       	brcs	.+32     	; 0x154 <__trampolines_end+0xb6>
     134:	08 08       	sbc	r0, r8
     136:	88 70       	andi	r24, 0x08	; 8
     138:	30 40       	sbci	r19, 0x00	; 0
     13a:	80 f0       	brcs	.+32     	; 0x15c <__trampolines_end+0xbe>
     13c:	88 88       	ldd	r8, Y+16	; 0x10
     13e:	70 f8       	bld	r7, 0
     140:	08 10       	cpse	r0, r8
     142:	20 40       	sbci	r18, 0x00	; 0
     144:	40 40       	sbci	r20, 0x00	; 0
     146:	70 88       	ldd	r7, Z+16	; 0x10
     148:	88 70       	andi	r24, 0x08	; 8
     14a:	88 88       	ldd	r8, Y+16	; 0x10
     14c:	70 70       	andi	r23, 0x00	; 0
     14e:	88 88       	ldd	r8, Y+16	; 0x10
     150:	78 08       	sbc	r7, r8
     152:	10 60       	ori	r17, 0x00	; 0
     154:	00 60       	ori	r16, 0x00	; 0
     156:	60 00       	.word	0x0060	; ????
     158:	60 60       	ori	r22, 0x00	; 0
     15a:	00 00       	nop
     15c:	60 60       	ori	r22, 0x00	; 0
     15e:	00 60       	ori	r16, 0x00	; 0
     160:	20 40       	sbci	r18, 0x00	; 0
     162:	08 10       	cpse	r0, r8
     164:	20 40       	sbci	r18, 0x00	; 0
     166:	20 10       	cpse	r2, r0
     168:	08 00       	.word	0x0008	; ????
     16a:	00 f8       	bld	r0, 0
     16c:	00 f8       	bld	r0, 0
     16e:	00 00       	nop
     170:	80 40       	sbci	r24, 0x00	; 0
     172:	20 10       	cpse	r2, r0
     174:	20 40       	sbci	r18, 0x00	; 0
     176:	80 70       	andi	r24, 0x00	; 0
     178:	88 08       	sbc	r8, r8
     17a:	10 20       	and	r1, r0
     17c:	00 20       	and	r0, r0
     17e:	70 88       	ldd	r7, Z+16	; 0x10
     180:	08 68       	ori	r16, 0x88	; 136
     182:	a8 a8       	ldd	r10, Y+48	; 0x30
     184:	70 70       	andi	r23, 0x00	; 0
     186:	88 88       	ldd	r8, Y+16	; 0x10
     188:	88 f8       	.word	0xf888	; ????
     18a:	88 88       	ldd	r8, Y+16	; 0x10
     18c:	f0 88       	ldd	r15, Z+16	; 0x10
     18e:	88 f0       	brcs	.+34     	; 0x1b2 <__trampolines_end+0x114>
     190:	88 88       	ldd	r8, Y+16	; 0x10
     192:	f0 70       	andi	r31, 0x00	; 0
     194:	88 80       	ld	r8, Y
     196:	80 80       	ld	r8, Z
     198:	88 70       	andi	r24, 0x08	; 8
     19a:	e0 90 88 88 	lds	r14, 0x8888	; 0x808888 <__bss_end+0x83fb>
     19e:	88 90       	.word	0x9088	; ????
     1a0:	e0 f8       	bld	r14, 0
     1a2:	80 80       	ld	r8, Z
     1a4:	f0 80       	ld	r15, Z
     1a6:	80 f8       	bld	r8, 0
     1a8:	f8 80       	ld	r15, Y
     1aa:	80 e0       	ldi	r24, 0x00	; 0
     1ac:	80 80       	ld	r8, Z
     1ae:	80 70       	andi	r24, 0x00	; 0
     1b0:	88 80       	ld	r8, Y
     1b2:	80 98       	cbi	0x10, 0	; 16
     1b4:	88 70       	andi	r24, 0x08	; 8
     1b6:	88 88       	ldd	r8, Y+16	; 0x10
     1b8:	88 f8       	.word	0xf888	; ????
     1ba:	88 88       	ldd	r8, Y+16	; 0x10
     1bc:	88 70       	andi	r24, 0x08	; 8
     1be:	20 20       	and	r2, r0
     1c0:	20 20       	and	r2, r0
     1c2:	20 70       	andi	r18, 0x00	; 0
     1c4:	38 10       	cpse	r3, r8
     1c6:	10 10       	cpse	r1, r0
     1c8:	10 90 60 88 	lds	r1, 0x8860	; 0x808860 <__bss_end+0x83d3>
     1cc:	90 a0       	ldd	r9, Z+32	; 0x20
     1ce:	c0 a0       	ldd	r12, Z+32	; 0x20
     1d0:	90 88       	ldd	r9, Z+16	; 0x10
     1d2:	80 80       	ld	r8, Z
     1d4:	80 80       	ld	r8, Z
     1d6:	80 80       	ld	r8, Z
     1d8:	f8 88       	ldd	r15, Y+16	; 0x10
     1da:	d8 a8       	ldd	r13, Y+48	; 0x30
     1dc:	88 88       	ldd	r8, Y+16	; 0x10
     1de:	88 88       	ldd	r8, Y+16	; 0x10
     1e0:	88 88       	ldd	r8, Y+16	; 0x10
     1e2:	c8 a8       	ldd	r12, Y+48	; 0x30
     1e4:	98 88       	ldd	r9, Y+16	; 0x10
     1e6:	88 70       	andi	r24, 0x08	; 8
     1e8:	88 88       	ldd	r8, Y+16	; 0x10
     1ea:	88 88       	ldd	r8, Y+16	; 0x10
     1ec:	88 70       	andi	r24, 0x08	; 8
     1ee:	f0 88       	ldd	r15, Z+16	; 0x10
     1f0:	88 f0       	brcs	.+34     	; 0x214 <__trampolines_end+0x176>
     1f2:	80 80       	ld	r8, Z
     1f4:	80 70       	andi	r24, 0x00	; 0
     1f6:	88 88       	ldd	r8, Y+16	; 0x10
     1f8:	88 a8       	ldd	r8, Y+48	; 0x30
     1fa:	90 68       	ori	r25, 0x80	; 128
     1fc:	f0 88       	ldd	r15, Z+16	; 0x10
     1fe:	88 f0       	brcs	.+34     	; 0x222 <__trampolines_end+0x184>
     200:	a0 90 88 78 	lds	r10, 0x7888	; 0x807888 <__bss_end+0x73fb>
     204:	80 80       	ld	r8, Z
     206:	70 08       	sbc	r7, r0
     208:	08 f0       	brcs	.+2      	; 0x20c <__trampolines_end+0x16e>
     20a:	f8 20       	and	r15, r8
     20c:	20 20       	and	r2, r0
     20e:	20 20       	and	r2, r0
     210:	20 88       	ldd	r2, Z+16	; 0x10
     212:	88 88       	ldd	r8, Y+16	; 0x10
     214:	88 88       	ldd	r8, Y+16	; 0x10
     216:	88 70       	andi	r24, 0x08	; 8
     218:	88 88       	ldd	r8, Y+16	; 0x10
     21a:	88 88       	ldd	r8, Y+16	; 0x10
     21c:	88 50       	subi	r24, 0x08	; 8
     21e:	20 88       	ldd	r2, Z+16	; 0x10
     220:	88 88       	ldd	r8, Y+16	; 0x10
     222:	a8 a8       	ldd	r10, Y+48	; 0x30
     224:	d8 88       	ldd	r13, Y+16	; 0x10
     226:	88 88       	ldd	r8, Y+16	; 0x10
     228:	50 20       	and	r5, r0
     22a:	50 88       	ldd	r5, Z+16	; 0x10
     22c:	88 88       	ldd	r8, Y+16	; 0x10
     22e:	88 50       	subi	r24, 0x08	; 8
     230:	20 20       	and	r2, r0
     232:	20 20       	and	r2, r0
     234:	f8 08       	sbc	r15, r8
     236:	10 20       	and	r1, r0
     238:	40 80       	ld	r4, Z
     23a:	f8 38       	cpi	r31, 0x88	; 136
     23c:	20 20       	and	r2, r0
     23e:	20 20       	and	r2, r0
     240:	20 38       	cpi	r18, 0x80	; 128
     242:	00 80       	ld	r0, Z
     244:	40 20       	and	r4, r0
     246:	10 08       	sbc	r1, r0
     248:	00 e0       	ldi	r16, 0x00	; 0
     24a:	20 20       	and	r2, r0
     24c:	20 20       	and	r2, r0
     24e:	20 e0       	ldi	r18, 0x00	; 0
     250:	20 50       	subi	r18, 0x00	; 0
     252:	88 00       	.word	0x0088	; ????
	...
     25c:	00 f8       	bld	r0, 0
     25e:	40 20       	and	r4, r0
     260:	10 00       	.word	0x0010	; ????
     262:	00 00       	nop
     264:	00 00       	nop
     266:	00 70       	andi	r16, 0x00	; 0
     268:	08 78       	andi	r16, 0x88	; 136
     26a:	88 78       	andi	r24, 0x88	; 136
     26c:	80 80       	ld	r8, Z
     26e:	b0 c8       	rjmp	.-3744   	; 0xfffff3d0 <__eeprom_end+0xff7ef3d0>
     270:	88 88       	ldd	r8, Y+16	; 0x10
     272:	f0 00       	.word	0x00f0	; ????
     274:	00 70       	andi	r16, 0x00	; 0
     276:	80 80       	ld	r8, Z
     278:	88 70       	andi	r24, 0x08	; 8
     27a:	08 08       	sbc	r0, r8
     27c:	68 98       	cbi	0x0d, 0	; 13
     27e:	88 88       	ldd	r8, Y+16	; 0x10
     280:	78 00       	.word	0x0078	; ????
     282:	00 70       	andi	r16, 0x00	; 0
     284:	88 f8       	.word	0xf888	; ????
     286:	80 70       	andi	r24, 0x00	; 0
     288:	30 48       	sbci	r19, 0x80	; 128
     28a:	40 e0       	ldi	r20, 0x00	; 0
     28c:	40 40       	sbci	r20, 0x00	; 0
     28e:	40 00       	.word	0x0040	; ????
     290:	00 78       	andi	r16, 0x80	; 128
     292:	88 78       	andi	r24, 0x88	; 136
     294:	08 30       	cpi	r16, 0x08	; 8
     296:	80 80       	ld	r8, Z
     298:	b0 c8       	rjmp	.-3744   	; 0xfffff3fa <__eeprom_end+0xff7ef3fa>
     29a:	88 88       	ldd	r8, Y+16	; 0x10
     29c:	88 20       	and	r8, r8
     29e:	00 60       	ori	r16, 0x00	; 0
     2a0:	20 20       	and	r2, r0
     2a2:	20 70       	andi	r18, 0x00	; 0
     2a4:	10 00       	.word	0x0010	; ????
     2a6:	30 10       	cpse	r3, r0
     2a8:	10 90 60 40 	lds	r1, 0x4060	; 0x804060 <__bss_end+0x3bd3>
     2ac:	40 48       	sbci	r20, 0x80	; 128
     2ae:	50 60       	ori	r21, 0x00	; 0
     2b0:	50 48       	sbci	r21, 0x80	; 128
     2b2:	60 20       	and	r6, r0
     2b4:	20 20       	and	r2, r0
     2b6:	20 20       	and	r2, r0
     2b8:	70 00       	.word	0x0070	; ????
     2ba:	00 d0       	rcall	.+0      	; 0x2bc <__trampolines_end+0x21e>
     2bc:	a8 a8       	ldd	r10, Y+48	; 0x30
     2be:	88 88       	ldd	r8, Y+16	; 0x10
     2c0:	00 00       	nop
     2c2:	b0 c8       	rjmp	.-3744   	; 0xfffff424 <__eeprom_end+0xff7ef424>
     2c4:	88 88       	ldd	r8, Y+16	; 0x10
     2c6:	88 00       	.word	0x0088	; ????
     2c8:	00 70       	andi	r16, 0x00	; 0
     2ca:	88 88       	ldd	r8, Y+16	; 0x10
     2cc:	88 70       	andi	r24, 0x08	; 8
     2ce:	00 00       	nop
     2d0:	f0 88       	ldd	r15, Z+16	; 0x10
     2d2:	f0 80       	ld	r15, Z
     2d4:	80 00       	.word	0x0080	; ????
     2d6:	00 68       	ori	r16, 0x80	; 128
     2d8:	98 78       	andi	r25, 0x88	; 136
     2da:	08 08       	sbc	r0, r8
     2dc:	00 00       	nop
     2de:	b0 c8       	rjmp	.-3744   	; 0xfffff440 <__eeprom_end+0xff7ef440>
     2e0:	80 80       	ld	r8, Z
     2e2:	80 00       	.word	0x0080	; ????
     2e4:	00 70       	andi	r16, 0x00	; 0
     2e6:	80 70       	andi	r24, 0x00	; 0
     2e8:	08 f0       	brcs	.+2      	; 0x2ec <__trampolines_end+0x24e>
     2ea:	40 40       	sbci	r20, 0x00	; 0
     2ec:	e0 40       	sbci	r30, 0x00	; 0
     2ee:	40 48       	sbci	r20, 0x80	; 128
     2f0:	30 00       	.word	0x0030	; ????
     2f2:	00 88       	ldd	r0, Z+16	; 0x10
     2f4:	88 88       	ldd	r8, Y+16	; 0x10
     2f6:	98 68       	ori	r25, 0x88	; 136
     2f8:	00 00       	nop
     2fa:	88 88       	ldd	r8, Y+16	; 0x10
     2fc:	88 50       	subi	r24, 0x08	; 8
     2fe:	20 00       	.word	0x0020	; ????
     300:	00 88       	ldd	r0, Z+16	; 0x10
     302:	88 a8       	ldd	r8, Y+48	; 0x30
     304:	a8 50       	subi	r26, 0x08	; 8
     306:	00 00       	nop
     308:	88 50       	subi	r24, 0x08	; 8
     30a:	20 50       	subi	r18, 0x00	; 0
     30c:	88 00       	.word	0x0088	; ????
     30e:	00 88       	ldd	r0, Z+16	; 0x10
     310:	88 78       	andi	r24, 0x88	; 136
     312:	08 70       	andi	r16, 0x08	; 8
     314:	00 00       	nop
     316:	f8 10       	cpse	r15, r8
     318:	20 40       	sbci	r18, 0x00	; 0
     31a:	f8 10       	cpse	r15, r8
     31c:	20 20       	and	r2, r0
     31e:	40 20       	and	r4, r0
     320:	20 10       	cpse	r2, r0
     322:	20 20       	and	r2, r0
     324:	20 20       	and	r2, r0
     326:	20 20       	and	r2, r0
     328:	20 40       	sbci	r18, 0x00	; 0
     32a:	20 20       	and	r2, r0
     32c:	10 20       	and	r1, r0
     32e:	20 40       	sbci	r18, 0x00	; 0
     330:	20 50       	subi	r18, 0x00	; 0
     332:	20 00       	.word	0x0020	; ????
     334:	00 00       	nop
	...

00000337 <sysfont_glyphs>:
     337:	00 00 00 00 00 00 00 20 20 20 20 20 00 20 50 50     .......     . PP
     347:	50 00 00 00 00 50 50 f8 50 f8 50 50 20 78 a0 70     P....PP.P.PP x.p
     357:	28 f0 20 c0 c8 10 20 40 98 18 60 90 a0 40 a8 90     (. ... @..`..@..
     367:	68 60 20 40 00 00 00 00 10 20 40 40 40 20 10 40     h` @..... @@@ .@
     377:	20 10 10 10 20 40 00 50 20 f8 20 50 00 00 20 20      ... @.P . P..  
     387:	f8 20 20 00 00 00 00 00 60 20 40 00 00 00 f8 00     .  .....` @.....
     397:	00 00 00 00 00 00 00 60 60 00 08 10 20 40 80 00     .......``... @..
     3a7:	70 88 98 a8 c8 88 70 20 60 20 20 20 20 70 70 88     p.....p `    pp.
     3b7:	08 10 20 40 f8 f8 10 20 10 08 88 70 10 30 50 90     .. @... ...p.0P.
     3c7:	f8 10 10 f8 80 f0 08 08 88 70 30 40 80 f0 88 88     .........p0@....
     3d7:	70 f8 08 10 20 40 40 40 70 88 88 70 88 88 70 70     p... @@@p..p..pp
     3e7:	88 88 78 08 10 60 00 60 60 00 60 60 00 00 60 60     ..x..`.``.``..``
     3f7:	00 60 20 40 08 10 20 40 20 10 08 00 00 f8 00 f8     .` @.. @ .......
     407:	00 00 80 40 20 10 20 40 80 70 88 08 10 20 00 20     ...@ . @.p... . 
     417:	70 88 08 68 a8 a8 70 70 88 88 88 f8 88 88 f0 88     p..h..pp........
     427:	88 f0 88 88 f0 70 88 80 80 80 88 70 e0 90 88 88     .....p.....p....
     437:	88 90 e0 f8 80 80 f0 80 80 f8 f8 80 80 e0 80 80     ................
     447:	80 70 88 80 80 98 88 70 88 88 88 f8 88 88 88 70     .p.....p.......p
     457:	20 20 20 20 20 70 38 10 10 10 10 90 60 88 90 a0          p8.....`...
     467:	c0 a0 90 88 80 80 80 80 80 80 f8 88 d8 a8 88 88     ................
     477:	88 88 88 88 c8 a8 98 88 88 70 88 88 88 88 88 70     .........p.....p
     487:	f0 88 88 f0 80 80 80 70 88 88 88 a8 90 68 f0 88     .......p.....h..
     497:	88 f0 a0 90 88 78 80 80 70 08 08 f0 f8 20 20 20     .....x..p....   
     4a7:	20 20 20 88 88 88 88 88 88 70 88 88 88 88 88 50        ......p.....P
     4b7:	20 88 88 88 a8 a8 d8 88 88 88 50 20 50 88 88 88      .........P P...
     4c7:	88 50 20 20 20 20 f8 08 10 20 40 80 f8 38 20 20     .P    ... @..8  
     4d7:	20 20 20 38 00 80 40 20 10 08 00 e0 20 20 20 20        8..@ ....    
     4e7:	20 e0 20 50 88 00 00 00 00 00 00 00 00 00 00 f8      . P............
     4f7:	40 20 10 00 00 00 00 00 00 70 08 78 88 78 80 80     @ .......p.x.x..
     507:	b0 c8 88 88 f0 00 00 70 80 80 88 70 08 08 68 98     .......p...p..h.
     517:	88 88 78 00 00 70 88 f8 80 70 30 48 40 e0 40 40     ..x..p...p0H@.@@
     527:	40 00 00 78 88 78 08 30 80 80 b0 c8 88 88 88 20     @..x.x.0....... 
     537:	00 60 20 20 20 70 10 00 30 10 10 90 60 40 40 48     .`   p..0...`@@H
     547:	50 60 50 48 60 20 20 20 20 20 70 00 00 d0 a8 a8     P`PH`     p.....
     557:	88 88 00 00 b0 c8 88 88 88 00 00 70 88 88 88 70     ...........p...p
     567:	00 00 f0 88 f0 80 80 00 00 68 98 78 08 08 00 00     .........h.x....
     577:	b0 c8 80 80 80 00 00 70 80 70 08 f0 40 40 e0 40     .......p.p..@@.@
     587:	40 48 30 00 00 88 88 88 98 68 00 00 88 88 88 50     @H0......h.....P
     597:	20 00 00 88 88 a8 a8 50 00 00 88 50 20 50 88 00      ......P...P P..
     5a7:	00 88 88 78 08 70 00 00 f8 10 20 40 f8 10 20 20     ...x.p.... @..  
     5b7:	40 20 20 10 20 20 20 20 20 20 20 40 20 20 10 20     @  .       @  . 
     5c7:	20 40 20 50 20 00 00 00 00                           @ P ....

000005d0 <__ctors_end>:
     5d0:	11 24       	eor	r1, r1
     5d2:	1f be       	out	0x3f, r1	; 63
     5d4:	cf ef       	ldi	r28, 0xFF	; 255
     5d6:	d8 e0       	ldi	r29, 0x08	; 8
     5d8:	de bf       	out	0x3e, r29	; 62
     5da:	cd bf       	out	0x3d, r28	; 61

000005dc <__do_copy_data>:
     5dc:	13 e0       	ldi	r17, 0x03	; 3
     5de:	a0 e0       	ldi	r26, 0x00	; 0
     5e0:	b1 e0       	ldi	r27, 0x01	; 1
     5e2:	ea e5       	ldi	r30, 0x5A	; 90
     5e4:	fb e4       	ldi	r31, 0x4B	; 75
     5e6:	02 c0       	rjmp	.+4      	; 0x5ec <__do_copy_data+0x10>
     5e8:	05 90       	lpm	r0, Z+
     5ea:	0d 92       	st	X+, r0
     5ec:	a8 34       	cpi	r26, 0x48	; 72
     5ee:	b1 07       	cpc	r27, r17
     5f0:	d9 f7       	brne	.-10     	; 0x5e8 <__do_copy_data+0xc>

000005f2 <__do_clear_bss>:
     5f2:	24 e0       	ldi	r18, 0x04	; 4
     5f4:	a8 e4       	ldi	r26, 0x48	; 72
     5f6:	b3 e0       	ldi	r27, 0x03	; 3
     5f8:	01 c0       	rjmp	.+2      	; 0x5fc <.do_clear_bss_start>

000005fa <.do_clear_bss_loop>:
     5fa:	1d 92       	st	X+, r1

000005fc <.do_clear_bss_start>:
     5fc:	ad 38       	cpi	r26, 0x8D	; 141
     5fe:	b2 07       	cpc	r27, r18
     600:	e1 f7       	brne	.-8      	; 0x5fa <.do_clear_bss_loop>
     602:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <main>
     606:	0c 94 ab 25 	jmp	0x4b56	; 0x4b56 <_exit>

0000060a <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
     60a:	08 95       	ret

0000060c <sysclk_init>:

/**
 *  Function to initialize the clock and disable clock for not required modules.
 */
void sysclk_init(void)
{
     60c:	cf 93       	push	r28
     60e:	df 93       	push	r29
     610:	1f 92       	push	r1
     612:	cd b7       	in	r28, 0x3d	; 61
     614:	de b7       	in	r29, 0x3e	; 62
	/* Turn off all peripheral clocks that can be turned off.
	 * The debugWIRE system of some devices that shares system clock with the SPI module.
	 * Thus the PRSPI bit in the PRR register must not be set when debugging.
	 */
	for (i = 0; i < NUMBER_OF_POWER_REG; i++) {
		*(reg++) = 0xFF;
     616:	8f ef       	ldi	r24, 0xFF	; 255
     618:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
     61c:	8f b7       	in	r24, 0x3f	; 63
     61e:	89 83       	std	Y+1, r24	; 0x01
	cpu_irq_disable();
     620:	f8 94       	cli
	return flags;
     622:	89 81       	ldd	r24, Y+1	; 0x01
static inline void sysclk_set_prescalers(uint8_t psdiv)
{
#if !MEGA_UNSPECIFIED
	irqflags_t flags = cpu_irq_save();

	ASM(
     624:	5f 93       	push	r21
     626:	50 e8       	ldi	r21, 0x80	; 128
     628:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     62c:	50 e0       	ldi	r21, 0x00	; 0
     62e:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     632:	5f 91       	pop	r21
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     634:	8f bf       	out	0x3f, r24	; 63
	if ((CONFIG_SYSCLK_PSDIV != SYSCLK_PSDIV_8) ||
			(SYSCLK_PSDIV_8 != CLKPR)) {
		sysclk_set_prescalers(CONFIG_SYSCLK_PSDIV);
	}
#endif
}
     636:	0f 90       	pop	r0
     638:	df 91       	pop	r29
     63a:	cf 91       	pop	r28
     63c:	08 95       	ret

0000063e <sysclk_enable_module>:
 * \param port ID of the port to which the module is connected (one of
 * the \c power_red_id *definitions).
 * \param id The ID (bitmask) of the peripheral module to be enabled.
 */
void sysclk_enable_module(enum power_red_id port, uint8_t id)
{
     63e:	cf 93       	push	r28
     640:	df 93       	push	r29
     642:	1f 92       	push	r1
     644:	cd b7       	in	r28, 0x3d	; 61
     646:	de b7       	in	r29, 0x3e	; 62

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
     648:	9f b7       	in	r25, 0x3f	; 63
     64a:	99 83       	std	Y+1, r25	; 0x01
	cpu_irq_disable();
     64c:	f8 94       	cli
	return flags;
     64e:	99 81       	ldd	r25, Y+1	; 0x01
#if !MEGA_UNSPECIFIED && !MEGA_XX
	uint8_t *reg = (uint8_t *)&(POWER_REG_ADD);
	irqflags_t flags = cpu_irq_save();

	if (port < NUMBER_OF_POWER_REG) {
     650:	81 11       	cpse	r24, r1
     652:	06 c0       	rjmp	.+12     	; 0x660 <sysclk_enable_module+0x22>
		*(reg + port)  &= ~id;
     654:	60 95       	com	r22
     656:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
     65a:	68 23       	and	r22, r24
     65c:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     660:	9f bf       	out	0x3f, r25	; 63
	}
	cpu_irq_restore(flags);
#endif
}
     662:	0f 90       	pop	r0
     664:	df 91       	pop	r29
     666:	cf 91       	pop	r28
     668:	08 95       	ret

0000066a <sysclk_disable_module>:
 * \param port ID of the port to which the module is connected (one of
 * the \c power_red_id *definitions).
 * \param id The ID (bit mask) of the peripheral module to be disabled.
 */
void sysclk_disable_module( enum power_red_id port, uint8_t id)
{
     66a:	cf 93       	push	r28
     66c:	df 93       	push	r29
     66e:	1f 92       	push	r1
     670:	cd b7       	in	r28, 0x3d	; 61
     672:	de b7       	in	r29, 0x3e	; 62

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
     674:	9f b7       	in	r25, 0x3f	; 63
     676:	99 83       	std	Y+1, r25	; 0x01
	cpu_irq_disable();
     678:	f8 94       	cli
	return flags;
     67a:	99 81       	ldd	r25, Y+1	; 0x01
#if !MEGA_UNSPECIFIED && !MEGA_XX
	uint8_t *reg = (uint8_t *)&(POWER_REG_ADD);
	irqflags_t flags = cpu_irq_save();
	if (port < NUMBER_OF_POWER_REG) {
     67c:	81 11       	cpse	r24, r1
     67e:	05 c0       	rjmp	.+10     	; 0x68a <sysclk_disable_module+0x20>
		*(reg + port) |= id;
     680:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
     684:	68 2b       	or	r22, r24
     686:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     68a:	9f bf       	out	0x3f, r25	; 63
	}
	cpu_irq_restore(flags);
#endif
}
     68c:	0f 90       	pop	r0
     68e:	df 91       	pop	r29
     690:	cf 91       	pop	r28
     692:	08 95       	ret

00000694 <gfx_mono_generic_draw_horizontal_line>:
 * \param  length     Length of the line in pixels.
 * \param  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
     694:	ff 92       	push	r15
     696:	0f 93       	push	r16
     698:	1f 93       	push	r17
     69a:	cf 93       	push	r28
     69c:	df 93       	push	r29
     69e:	08 2f       	mov	r16, r24
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
     6a0:	84 2f       	mov	r24, r20
     6a2:	90 e0       	ldi	r25, 0x00	; 0
     6a4:	80 0f       	add	r24, r16
     6a6:	91 1d       	adc	r25, r1
     6a8:	81 3f       	cpi	r24, 0xF1	; 241
     6aa:	91 05       	cpc	r25, r1
     6ac:	14 f0       	brlt	.+4      	; 0x6b2 <gfx_mono_generic_draw_horizontal_line+0x1e>
		length = GFX_MONO_LCD_WIDTH - x;
     6ae:	40 ef       	ldi	r20, 0xF0	; 240
     6b0:	40 1b       	sub	r20, r16
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
     6b2:	44 23       	and	r20, r20
     6b4:	09 f4       	brne	.+2      	; 0x6b8 <gfx_mono_generic_draw_horizontal_line+0x24>
     6b6:	47 c0       	rjmp	.+142    	; 0x746 <gfx_mono_generic_draw_horizontal_line+0xb2>
	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
		length = GFX_MONO_LCD_WIDTH - x;
	}

	page = y / 8;
     6b8:	d6 2f       	mov	r29, r22
     6ba:	d6 95       	lsr	r29
     6bc:	d6 95       	lsr	r29
     6be:	d6 95       	lsr	r29
	pixelmask = (1 << (y - (page * 8)));
     6c0:	70 e0       	ldi	r23, 0x00	; 0
     6c2:	88 e0       	ldi	r24, 0x08	; 8
     6c4:	d8 9f       	mul	r29, r24
     6c6:	60 19       	sub	r22, r0
     6c8:	71 09       	sbc	r23, r1
     6ca:	11 24       	eor	r1, r1
     6cc:	81 e0       	ldi	r24, 0x01	; 1
     6ce:	90 e0       	ldi	r25, 0x00	; 0
     6d0:	01 c0       	rjmp	.+2      	; 0x6d4 <gfx_mono_generic_draw_horizontal_line+0x40>
     6d2:	88 0f       	add	r24, r24
     6d4:	6a 95       	dec	r22
     6d6:	ea f7       	brpl	.-6      	; 0x6d2 <gfx_mono_generic_draw_horizontal_line+0x3e>
     6d8:	f8 2e       	mov	r15, r24
	if (length == 0) {
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
     6da:	21 30       	cpi	r18, 0x01	; 1
     6dc:	31 f0       	breq	.+12     	; 0x6ea <gfx_mono_generic_draw_horizontal_line+0x56>
     6de:	40 f0       	brcs	.+16     	; 0x6f0 <gfx_mono_generic_draw_horizontal_line+0x5c>
     6e0:	22 30       	cpi	r18, 0x02	; 2
     6e2:	89 f5       	brne	.+98     	; 0x746 <gfx_mono_generic_draw_horizontal_line+0xb2>
     6e4:	cf ef       	ldi	r28, 0xFF	; 255
     6e6:	c4 0f       	add	r28, r20
     6e8:	22 c0       	rjmp	.+68     	; 0x72e <gfx_mono_generic_draw_horizontal_line+0x9a>
     6ea:	cf ef       	ldi	r28, 0xFF	; 255
     6ec:	c4 0f       	add	r28, r20
     6ee:	05 c0       	rjmp	.+10     	; 0x6fa <gfx_mono_generic_draw_horizontal_line+0x66>
     6f0:	cf ef       	ldi	r28, 0xFF	; 255
     6f2:	c4 0f       	add	r28, r20
		break;

	case GFX_PIXEL_CLR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
			temp &= ~pixelmask;
     6f4:	18 2f       	mov	r17, r24
     6f6:	10 95       	com	r17
     6f8:	0d c0       	rjmp	.+26     	; 0x714 <gfx_mono_generic_draw_horizontal_line+0x80>
     6fa:	10 2f       	mov	r17, r16
     6fc:	1c 0f       	add	r17, r28
	}

	switch (color) {
	case GFX_PIXEL_SET:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
     6fe:	61 2f       	mov	r22, r17
     700:	8d 2f       	mov	r24, r29
     702:	cc d2       	rcall	.+1432   	; 0xc9c <gfx_mono_lcd_uc1608_get_byte>
			temp |= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
     704:	4f 2d       	mov	r20, r15
     706:	48 2b       	or	r20, r24
     708:	61 2f       	mov	r22, r17
     70a:	8d 2f       	mov	r24, r29
     70c:	af d2       	rcall	.+1374   	; 0xc6c <gfx_mono_lcd_uc1608_put_byte>
     70e:	c1 50       	subi	r28, 0x01	; 1
     710:	a0 f7       	brcc	.-24     	; 0x6fa <gfx_mono_generic_draw_horizontal_line+0x66>
     712:	19 c0       	rjmp	.+50     	; 0x746 <gfx_mono_generic_draw_horizontal_line+0xb2>
     714:	f0 2e       	mov	r15, r16
		}
		break;

	case GFX_PIXEL_CLR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
     716:	fc 0e       	add	r15, r28
     718:	6f 2d       	mov	r22, r15
     71a:	8d 2f       	mov	r24, r29
			temp &= ~pixelmask;
     71c:	bf d2       	rcall	.+1406   	; 0xc9c <gfx_mono_lcd_uc1608_get_byte>
			gfx_mono_put_byte(page, x + length, temp);
     71e:	41 2f       	mov	r20, r17
     720:	48 23       	and	r20, r24
     722:	6f 2d       	mov	r22, r15
     724:	8d 2f       	mov	r24, r29
     726:	a2 d2       	rcall	.+1348   	; 0xc6c <gfx_mono_lcd_uc1608_put_byte>
     728:	c1 50       	subi	r28, 0x01	; 1
     72a:	a0 f7       	brcc	.-24     	; 0x714 <gfx_mono_generic_draw_horizontal_line+0x80>
     72c:	0c c0       	rjmp	.+24     	; 0x746 <gfx_mono_generic_draw_horizontal_line+0xb2>
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
     72e:	10 2f       	mov	r17, r16
     730:	1c 0f       	add	r17, r28
     732:	61 2f       	mov	r22, r17
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
     734:	8d 2f       	mov	r24, r29
     736:	b2 d2       	rcall	.+1380   	; 0xc9c <gfx_mono_lcd_uc1608_get_byte>
     738:	4f 2d       	mov	r20, r15
     73a:	48 27       	eor	r20, r24
     73c:	61 2f       	mov	r22, r17
     73e:	8d 2f       	mov	r24, r29
     740:	95 d2       	rcall	.+1322   	; 0xc6c <gfx_mono_lcd_uc1608_put_byte>
     742:	c1 50       	subi	r28, 0x01	; 1
		break;

	default:
		break;
	}
}
     744:	a0 f7       	brcc	.-24     	; 0x72e <gfx_mono_generic_draw_horizontal_line+0x9a>
     746:	df 91       	pop	r29
     748:	cf 91       	pop	r28
     74a:	1f 91       	pop	r17
     74c:	0f 91       	pop	r16
     74e:	ff 90       	pop	r15
     750:	08 95       	ret

00000752 <gfx_mono_generic_draw_vertical_line>:
 * \param  length     Length of the line in pixels.
 * \param  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_vertical_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
     752:	ef 92       	push	r14
     754:	ff 92       	push	r15
     756:	0f 93       	push	r16
     758:	1f 93       	push	r17
     75a:	cf 93       	push	r28
     75c:	df 93       	push	r29
     75e:	94 2f       	mov	r25, r20
	if (length == 0) {
     760:	44 23       	and	r20, r20
     762:	09 f4       	brne	.+2      	; 0x766 <gfx_mono_generic_draw_vertical_line+0x14>
     764:	46 c0       	rjmp	.+140    	; 0x7f2 <gfx_mono_generic_draw_vertical_line+0xa0>
		return;
	}

	gfx_coord_t y2 = y + length - 1;
     766:	4f ef       	ldi	r20, 0xFF	; 255
     768:	46 0f       	add	r20, r22
     76a:	94 0f       	add	r25, r20

	if (y == y2) {
     76c:	69 13       	cpse	r22, r25
     76e:	08 c0       	rjmp	.+16     	; 0x780 <gfx_mono_generic_draw_vertical_line+0x2e>
		gfx_mono_draw_pixel(x, y, color);
     770:	42 2f       	mov	r20, r18
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
		}

		gfx_mono_mask_byte(y2page, x, y2pixelmask, color);
	}
}
     772:	df 91       	pop	r29
     774:	cf 91       	pop	r28
     776:	1f 91       	pop	r17
     778:	0f 91       	pop	r16
     77a:	ff 90       	pop	r15
	}

	gfx_coord_t y2 = y + length - 1;

	if (y == y2) {
		gfx_mono_draw_pixel(x, y, color);
     77c:	ef 90       	pop	r14
		return;
	}

	if (y2 >= GFX_MONO_LCD_HEIGHT - 1) {
     77e:	da c2       	rjmp	.+1460   	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
     780:	9f 37       	cpi	r25, 0x7F	; 127
		y2 = GFX_MONO_LCD_HEIGHT - 1;
     782:	08 f0       	brcs	.+2      	; 0x786 <gfx_mono_generic_draw_vertical_line+0x34>
	}

	gfx_coord_t y1page = y / 8;
     784:	9f e7       	ldi	r25, 0x7F	; 127
     786:	16 2f       	mov	r17, r22
     788:	16 95       	lsr	r17
     78a:	16 95       	lsr	r17
	gfx_coord_t y2page = y2 / 8;
     78c:	16 95       	lsr	r17
     78e:	09 2f       	mov	r16, r25
     790:	06 95       	lsr	r16
     792:	06 95       	lsr	r16

	uint8_t y1bitpos = y & 0x07;
	uint8_t y2bitpos = y2 & 0x07;

	uint8_t y1pixelmask = 0xFF << y1bitpos;
     794:	06 95       	lsr	r16
     796:	67 70       	andi	r22, 0x07	; 7
     798:	ef ef       	ldi	r30, 0xFF	; 255
     79a:	f0 e0       	ldi	r31, 0x00	; 0
     79c:	af 01       	movw	r20, r30
     79e:	01 c0       	rjmp	.+2      	; 0x7a2 <gfx_mono_generic_draw_vertical_line+0x50>
     7a0:	44 0f       	add	r20, r20
     7a2:	6a 95       	dec	r22
	uint8_t y2pixelmask = 0xFF >> (7 - y2bitpos);
     7a4:	ea f7       	brpl	.-6      	; 0x7a0 <gfx_mono_generic_draw_vertical_line+0x4e>
     7a6:	97 70       	andi	r25, 0x07	; 7
     7a8:	67 e0       	ldi	r22, 0x07	; 7
     7aa:	70 e0       	ldi	r23, 0x00	; 0
     7ac:	69 1b       	sub	r22, r25
     7ae:	71 09       	sbc	r23, r1
     7b0:	7f 01       	movw	r14, r30
     7b2:	02 c0       	rjmp	.+4      	; 0x7b8 <gfx_mono_generic_draw_vertical_line+0x66>
     7b4:	f5 94       	asr	r15
     7b6:	e7 94       	ror	r14
     7b8:	6a 95       	dec	r22

	/* The pixels are on the same page; combine masks */
	if (y1page == y2page) {
     7ba:	e2 f7       	brpl	.-8      	; 0x7b4 <gfx_mono_generic_draw_vertical_line+0x62>
     7bc:	10 13       	cpse	r17, r16
		uint8_t pixelmask = y1pixelmask & y2pixelmask;
		gfx_mono_mask_byte(y1page, x, pixelmask, color);
     7be:	04 c0       	rjmp	.+8      	; 0x7c8 <gfx_mono_generic_draw_vertical_line+0x76>
     7c0:	4e 21       	and	r20, r14
     7c2:	68 2f       	mov	r22, r24
     7c4:	81 2f       	mov	r24, r17
     7c6:	0e c0       	rjmp	.+28     	; 0x7e4 <gfx_mono_generic_draw_vertical_line+0x92>
     7c8:	d2 2f       	mov	r29, r18
	} else {
		gfx_mono_mask_byte(y1page, x, y1pixelmask, color);

		while (++y1page < y2page) {
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
     7ca:	c8 2f       	mov	r28, r24
     7cc:	6c 2f       	mov	r22, r28
     7ce:	81 2f       	mov	r24, r17
		uint8_t pixelmask = y1pixelmask & y2pixelmask;
		gfx_mono_mask_byte(y1page, x, pixelmask, color);
	} else {
		gfx_mono_mask_byte(y1page, x, y1pixelmask, color);

		while (++y1page < y2page) {
     7d0:	8c d2       	rcall	.+1304   	; 0xcea <gfx_mono_lcd_uc1608_mask_byte>
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
     7d2:	1f 5f       	subi	r17, 0xFF	; 255
		uint8_t pixelmask = y1pixelmask & y2pixelmask;
		gfx_mono_mask_byte(y1page, x, pixelmask, color);
	} else {
		gfx_mono_mask_byte(y1page, x, y1pixelmask, color);

		while (++y1page < y2page) {
     7d4:	2d 2f       	mov	r18, r29
     7d6:	10 17       	cp	r17, r16
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
     7d8:	10 f4       	brcc	.+4      	; 0x7de <gfx_mono_generic_draw_vertical_line+0x8c>
     7da:	4f ef       	ldi	r20, 0xFF	; 255
		}

		gfx_mono_mask_byte(y2page, x, y2pixelmask, color);
     7dc:	f7 cf       	rjmp	.-18     	; 0x7cc <gfx_mono_generic_draw_vertical_line+0x7a>
     7de:	4e 2d       	mov	r20, r14
     7e0:	6c 2f       	mov	r22, r28
	}
}
     7e2:	80 2f       	mov	r24, r16
     7e4:	df 91       	pop	r29
     7e6:	cf 91       	pop	r28
     7e8:	1f 91       	pop	r17
     7ea:	0f 91       	pop	r16

		while (++y1page < y2page) {
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
		}

		gfx_mono_mask_byte(y2page, x, y2pixelmask, color);
     7ec:	ff 90       	pop	r15
     7ee:	ef 90       	pop	r14
	}
}
     7f0:	7c c2       	rjmp	.+1272   	; 0xcea <gfx_mono_lcd_uc1608_mask_byte>
     7f2:	df 91       	pop	r29
     7f4:	cf 91       	pop	r28
     7f6:	1f 91       	pop	r17
     7f8:	0f 91       	pop	r16
     7fa:	ff 90       	pop	r15
     7fc:	ef 90       	pop	r14
     7fe:	08 95       	ret

00000800 <gfx_mono_generic_draw_line>:
 * \param  color       Pixel operation of the line.
 */
void gfx_mono_generic_draw_line(gfx_coord_t x1, gfx_coord_t y1,
		gfx_coord_t x2, gfx_coord_t y2,
		enum gfx_mono_color color)
{
     800:	8f 92       	push	r8
     802:	9f 92       	push	r9
     804:	af 92       	push	r10
     806:	bf 92       	push	r11
     808:	cf 92       	push	r12
     80a:	df 92       	push	r13
     80c:	ef 92       	push	r14
     80e:	ff 92       	push	r15
     810:	0f 93       	push	r16
     812:	1f 93       	push	r17
     814:	cf 93       	push	r28
     816:	df 93       	push	r29
     818:	18 2f       	mov	r17, r24
     81a:	b6 2e       	mov	r11, r22
	int16_t dx;
	int16_t dy;
	int16_t e;

	/* swap x1,y1  with x2,y2 */
	if (x1 > x2) {
     81c:	48 17       	cp	r20, r24
     81e:	28 f4       	brcc	.+10     	; 0x82a <gfx_mono_generic_draw_line+0x2a>
		dx = x1;
		x1 = x2;
		x2 = dx;
		dy = y1;
		y1 = y2;
     820:	b2 2e       	mov	r11, r18
		y2 = dy;
     822:	26 2f       	mov	r18, r22
	int16_t dx;
	int16_t dy;
	int16_t e;

	/* swap x1,y1  with x2,y2 */
	if (x1 > x2) {
     824:	81 2f       	mov	r24, r17
     826:	14 2f       	mov	r17, r20
     828:	48 2f       	mov	r20, r24
		dy = y1;
		y1 = y2;
		y2 = dy;
	}

	dx = x2 - x1;
     82a:	c4 2f       	mov	r28, r20
     82c:	d0 e0       	ldi	r29, 0x00	; 0
     82e:	c1 1b       	sub	r28, r17
     830:	d1 09       	sbc	r29, r1
	dy = y2 - y1;
     832:	e2 2e       	mov	r14, r18
     834:	f1 2c       	mov	r15, r1
     836:	eb 18       	sub	r14, r11
     838:	f1 08       	sbc	r15, r1

	x = x1;
	y = y1;

	if (dx < 0) {
     83a:	d7 ff       	sbrs	r29, 7
     83c:	06 c0       	rjmp	.+12     	; 0x84a <gfx_mono_generic_draw_line+0x4a>
		xinc = -1;
		dx = -dx;
     83e:	d1 95       	neg	r29
     840:	c1 95       	neg	r28
     842:	d1 09       	sbc	r29, r1

	x = x1;
	y = y1;

	if (dx < 0) {
		xinc = -1;
     844:	99 24       	eor	r9, r9
     846:	9a 94       	dec	r9
     848:	02 c0       	rjmp	.+4      	; 0x84e <gfx_mono_generic_draw_line+0x4e>
		dx = -dx;
	} else {
		xinc = 1;
     84a:	99 24       	eor	r9, r9
     84c:	93 94       	inc	r9
	}

	if (dy < 0) {
     84e:	f7 fe       	sbrs	r15, 7
     850:	06 c0       	rjmp	.+12     	; 0x85e <gfx_mono_generic_draw_line+0x5e>
		yinc = -1;
		dy = -dy;
     852:	f1 94       	neg	r15
     854:	e1 94       	neg	r14
     856:	f1 08       	sbc	r15, r1
	} else {
		xinc = 1;
	}

	if (dy < 0) {
		yinc = -1;
     858:	88 24       	eor	r8, r8
     85a:	8a 94       	dec	r8
     85c:	02 c0       	rjmp	.+4      	; 0x862 <gfx_mono_generic_draw_line+0x62>
		dy = -dy;
	} else {
		yinc = 1;
     85e:	88 24       	eor	r8, r8
     860:	83 94       	inc	r8
	}

	if (dx > dy) {
     862:	ec 16       	cp	r14, r28
     864:	fd 06       	cpc	r15, r29
     866:	bc f4       	brge	.+46     	; 0x896 <gfx_mono_generic_draw_line+0x96>
		e = dy - dx;
     868:	67 01       	movw	r12, r14
     86a:	cc 1a       	sub	r12, r28
     86c:	dd 0a       	sbc	r13, r29
		for (i = 0; i <= dx; i++) {
     86e:	a1 2c       	mov	r10, r1
     870:	8a 2d       	mov	r24, r10
     872:	90 e0       	ldi	r25, 0x00	; 0
     874:	c8 17       	cp	r28, r24
     876:	d9 07       	cpc	r29, r25
     878:	2c f1       	brlt	.+74     	; 0x8c4 <gfx_mono_generic_draw_line+0xc4>
			gfx_mono_draw_pixel(x, y, color);
     87a:	40 2f       	mov	r20, r16
     87c:	6b 2d       	mov	r22, r11
     87e:	81 2f       	mov	r24, r17
     880:	59 d2       	rcall	.+1202   	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
			if (e >= 0) {
     882:	d7 fc       	sbrc	r13, 7
     884:	03 c0       	rjmp	.+6      	; 0x88c <gfx_mono_generic_draw_line+0x8c>
				e -= dx;
     886:	cc 1a       	sub	r12, r28
     888:	dd 0a       	sbc	r13, r29
				y += yinc;
     88a:	b8 0c       	add	r11, r8
			}

			e += dy;
     88c:	ce 0c       	add	r12, r14
     88e:	df 1c       	adc	r13, r15
     890:	19 0d       	add	r17, r9
		yinc = 1;
	}

	if (dx > dy) {
		e = dy - dx;
		for (i = 0; i <= dx; i++) {
     892:	a3 94       	inc	r10
     894:	ed cf       	rjmp	.-38     	; 0x870 <gfx_mono_generic_draw_line+0x70>

			e += dy;
			x += xinc;
		}
	} else {
		e = dx - dy;
     896:	6e 01       	movw	r12, r28
     898:	ce 18       	sub	r12, r14
     89a:	df 08       	sbc	r13, r15
		for (i = 0; i <= dy; i++) {
     89c:	a1 2c       	mov	r10, r1
     89e:	8a 2d       	mov	r24, r10
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	e8 16       	cp	r14, r24
     8a4:	f9 06       	cpc	r15, r25
     8a6:	74 f0       	brlt	.+28     	; 0x8c4 <gfx_mono_generic_draw_line+0xc4>
			gfx_mono_draw_pixel(x, y, color);
     8a8:	40 2f       	mov	r20, r16
     8aa:	6b 2d       	mov	r22, r11
     8ac:	81 2f       	mov	r24, r17
     8ae:	42 d2       	rcall	.+1156   	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
			if (e >= 0) {
     8b0:	d7 fc       	sbrc	r13, 7
     8b2:	03 c0       	rjmp	.+6      	; 0x8ba <gfx_mono_generic_draw_line+0xba>
				e -= dy;
     8b4:	ce 18       	sub	r12, r14
     8b6:	df 08       	sbc	r13, r15
				x += xinc;
     8b8:	19 0d       	add	r17, r9
			}

			e += dx;
     8ba:	cc 0e       	add	r12, r28
     8bc:	dd 1e       	adc	r13, r29
     8be:	b8 0c       	add	r11, r8
			e += dy;
			x += xinc;
		}
	} else {
		e = dx - dy;
		for (i = 0; i <= dy; i++) {
     8c0:	a3 94       	inc	r10
     8c2:	ed cf       	rjmp	.-38     	; 0x89e <gfx_mono_generic_draw_line+0x9e>

			e += dx;
			y += yinc;
		}
	}
}
     8c4:	df 91       	pop	r29
     8c6:	cf 91       	pop	r28
     8c8:	1f 91       	pop	r17
     8ca:	0f 91       	pop	r16
     8cc:	ff 90       	pop	r15
     8ce:	ef 90       	pop	r14
     8d0:	df 90       	pop	r13
     8d2:	cf 90       	pop	r12
     8d4:	bf 90       	pop	r11
     8d6:	af 90       	pop	r10
     8d8:	9f 90       	pop	r9
     8da:	8f 90       	pop	r8
     8dc:	08 95       	ret

000008de <gfx_mono_generic_draw_rect>:
 * \param  color       Pixel operation of the line.
 */
void gfx_mono_generic_draw_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
     8de:	ff 92       	push	r15
     8e0:	0f 93       	push	r16
     8e2:	1f 93       	push	r17
     8e4:	cf 93       	push	r28
     8e6:	df 93       	push	r29
     8e8:	d8 2f       	mov	r29, r24
     8ea:	16 2f       	mov	r17, r22
     8ec:	c4 2f       	mov	r28, r20
     8ee:	f2 2e       	mov	r15, r18
	gfx_mono_draw_horizontal_line(x, y, width, color);
     8f0:	20 2f       	mov	r18, r16
     8f2:	d0 de       	rcall	.-608    	; 0x694 <gfx_mono_generic_draw_horizontal_line>
	gfx_mono_draw_horizontal_line(x, y + height - 1, width, color);
     8f4:	6f ef       	ldi	r22, 0xFF	; 255
     8f6:	6f 0d       	add	r22, r15
     8f8:	61 0f       	add	r22, r17
     8fa:	20 2f       	mov	r18, r16
     8fc:	4c 2f       	mov	r20, r28
     8fe:	8d 2f       	mov	r24, r29
     900:	c9 de       	rcall	.-622    	; 0x694 <gfx_mono_generic_draw_horizontal_line>

	gfx_mono_draw_vertical_line(x, y, height, color);
     902:	20 2f       	mov	r18, r16
     904:	4f 2d       	mov	r20, r15
     906:	61 2f       	mov	r22, r17
     908:	8d 2f       	mov	r24, r29
     90a:	23 df       	rcall	.-442    	; 0x752 <gfx_mono_generic_draw_vertical_line>
	gfx_mono_draw_vertical_line(x + width - 1, y, height, color);
     90c:	8f ef       	ldi	r24, 0xFF	; 255
     90e:	8c 0f       	add	r24, r28
     910:	20 2f       	mov	r18, r16
     912:	4f 2d       	mov	r20, r15
     914:	61 2f       	mov	r22, r17
     916:	8d 0f       	add	r24, r29
}
     918:	df 91       	pop	r29
     91a:	cf 91       	pop	r28
     91c:	1f 91       	pop	r17
     91e:	0f 91       	pop	r16
{
	gfx_mono_draw_horizontal_line(x, y, width, color);
	gfx_mono_draw_horizontal_line(x, y + height - 1, width, color);

	gfx_mono_draw_vertical_line(x, y, height, color);
	gfx_mono_draw_vertical_line(x + width - 1, y, height, color);
     920:	ff 90       	pop	r15
     922:	17 cf       	rjmp	.-466    	; 0x752 <gfx_mono_generic_draw_vertical_line>

00000924 <gfx_mono_generic_draw_filled_rect>:
 * \param  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
     924:	ff 92       	push	r15
     926:	0f 93       	push	r16
     928:	1f 93       	push	r17
     92a:	cf 93       	push	r28
     92c:	df 93       	push	r29
	if (height == 0) {
     92e:	22 23       	and	r18, r18
     930:	69 f0       	breq	.+26     	; 0x94c <gfx_mono_generic_draw_filled_rect+0x28>
     932:	14 2f       	mov	r17, r20
     934:	f6 2e       	mov	r15, r22
     936:	d8 2f       	mov	r29, r24
     938:	cf ef       	ldi	r28, 0xFF	; 255
     93a:	c2 0f       	add	r28, r18
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
     93c:	6f 2d       	mov	r22, r15
     93e:	6c 0f       	add	r22, r28
     940:	20 2f       	mov	r18, r16
     942:	41 2f       	mov	r20, r17
     944:	8d 2f       	mov	r24, r29
     946:	a6 de       	rcall	.-692    	; 0x694 <gfx_mono_generic_draw_horizontal_line>
     948:	c1 50       	subi	r28, 0x01	; 1
     94a:	c0 f7       	brcc	.-16     	; 0x93c <gfx_mono_generic_draw_filled_rect+0x18>
	}
}
     94c:	df 91       	pop	r29
     94e:	cf 91       	pop	r28
     950:	1f 91       	pop	r17
     952:	0f 91       	pop	r16
     954:	ff 90       	pop	r15
     956:	08 95       	ret

00000958 <gfx_mono_generic_draw_circle>:
 * \param  octant_mask Bitmask indicating which octants to draw.
 */
void gfx_mono_generic_draw_circle(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t radius, enum gfx_mono_color color,
		uint8_t octant_mask)
{
     958:	5f 92       	push	r5
     95a:	6f 92       	push	r6
     95c:	7f 92       	push	r7
     95e:	8f 92       	push	r8
     960:	9f 92       	push	r9
     962:	af 92       	push	r10
     964:	bf 92       	push	r11
     966:	cf 92       	push	r12
     968:	df 92       	push	r13
     96a:	ef 92       	push	r14
     96c:	ff 92       	push	r15
     96e:	0f 93       	push	r16
     970:	1f 93       	push	r17
     972:	cf 93       	push	r28
     974:	df 93       	push	r29
     976:	18 2f       	mov	r17, r24
     978:	f6 2e       	mov	r15, r22
     97a:	c4 2f       	mov	r28, r20
     97c:	e2 2e       	mov	r14, r18
	gfx_coord_t offset_x;
	gfx_coord_t offset_y;
	int16_t error;

	/* Draw only a pixel if radius is zero. */
	if (radius == 0) {
     97e:	41 11       	cpse	r20, r1
     980:	11 c0       	rjmp	.+34     	; 0x9a4 <gfx_mono_generic_draw_circle+0x4c>
		gfx_mono_draw_pixel(x, y, color);
     982:	42 2f       	mov	r20, r18
		}

		/* Next X. */
		++offset_x;
	}
}
     984:	df 91       	pop	r29
     986:	cf 91       	pop	r28
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	cf 90       	pop	r12
     994:	bf 90       	pop	r11
     996:	af 90       	pop	r10
     998:	9f 90       	pop	r9
     99a:	8f 90       	pop	r8
     99c:	7f 90       	pop	r7
     99e:	6f 90       	pop	r6
	gfx_coord_t offset_y;
	int16_t error;

	/* Draw only a pixel if radius is zero. */
	if (radius == 0) {
		gfx_mono_draw_pixel(x, y, color);
     9a0:	5f 90       	pop	r5
	}

	/* Set up start iterators. */
	offset_x = 0;
	offset_y = radius;
	error = 3 - 2 * radius;
     9a2:	c8 c1       	rjmp	.+912    	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
     9a4:	83 e0       	ldi	r24, 0x03	; 3
     9a6:	90 e0       	ldi	r25, 0x00	; 0
     9a8:	6c 01       	movw	r12, r24
     9aa:	22 e0       	ldi	r18, 0x02	; 2
     9ac:	42 9f       	mul	r20, r18
     9ae:	c0 18       	sub	r12, r0
     9b0:	d1 08       	sbc	r13, r1
		gfx_mono_draw_pixel(x, y, color);
		return;
	}

	/* Set up start iterators. */
	offset_x = 0;
     9b2:	11 24       	eor	r1, r1
	error = 3 - 2 * radius;

	/* Iterate offsetX from 0 to radius. */
	while (offset_x <= offset_y) {
		/* Draw one pixel for each octant enabled in octant_mask. */
		if (octant_mask & GFX_OCTANT0) {
     9b4:	d0 e0       	ldi	r29, 0x00	; 0
     9b6:	80 2f       	mov	r24, r16
     9b8:	81 70       	andi	r24, 0x01	; 1
			gfx_mono_draw_pixel(x + offset_y, y - offset_x, color);
		}

		if (octant_mask & GFX_OCTANT1) {
     9ba:	b8 2e       	mov	r11, r24
     9bc:	20 2f       	mov	r18, r16
     9be:	22 70       	andi	r18, 0x02	; 2
			gfx_mono_draw_pixel(x + offset_x, y - offset_y, color);
		}

		if (octant_mask & GFX_OCTANT2) {
     9c0:	a2 2e       	mov	r10, r18
     9c2:	80 2f       	mov	r24, r16
     9c4:	84 70       	andi	r24, 0x04	; 4
			gfx_mono_draw_pixel(x - offset_x, y - offset_y, color);
		}

		if (octant_mask & GFX_OCTANT3) {
     9c6:	98 2e       	mov	r9, r24
     9c8:	20 2f       	mov	r18, r16
     9ca:	28 70       	andi	r18, 0x08	; 8
			gfx_mono_draw_pixel(x - offset_y, y - offset_x, color);
		}

		if (octant_mask & GFX_OCTANT4) {
     9cc:	82 2e       	mov	r8, r18
     9ce:	80 2f       	mov	r24, r16
     9d0:	80 71       	andi	r24, 0x10	; 16
			gfx_mono_draw_pixel(x - offset_y, y + offset_x, color);
		}

		if (octant_mask & GFX_OCTANT5) {
     9d2:	78 2e       	mov	r7, r24
     9d4:	20 2f       	mov	r18, r16
     9d6:	20 72       	andi	r18, 0x20	; 32
			gfx_mono_draw_pixel(x - offset_x, y + offset_y, color);
		}

		if (octant_mask & GFX_OCTANT6) {
     9d8:	62 2e       	mov	r6, r18
     9da:	80 2f       	mov	r24, r16
     9dc:	80 74       	andi	r24, 0x40	; 64
	error = 3 - 2 * radius;

	/* Iterate offsetX from 0 to radius. */
	while (offset_x <= offset_y) {
		/* Draw one pixel for each octant enabled in octant_mask. */
		if (octant_mask & GFX_OCTANT0) {
     9de:	58 2e       	mov	r5, r24
     9e0:	bb 20       	and	r11, r11
			gfx_mono_draw_pixel(x + offset_y, y - offset_x, color);
     9e2:	31 f0       	breq	.+12     	; 0x9f0 <gfx_mono_generic_draw_circle+0x98>
     9e4:	4e 2d       	mov	r20, r14
     9e6:	6f 2d       	mov	r22, r15
     9e8:	6d 1b       	sub	r22, r29
     9ea:	81 2f       	mov	r24, r17
     9ec:	8c 0f       	add	r24, r28
		}

		if (octant_mask & GFX_OCTANT1) {
     9ee:	a2 d1       	rcall	.+836    	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
     9f0:	aa 20       	and	r10, r10
			gfx_mono_draw_pixel(x + offset_x, y - offset_y, color);
     9f2:	31 f0       	breq	.+12     	; 0xa00 <gfx_mono_generic_draw_circle+0xa8>
     9f4:	4e 2d       	mov	r20, r14
     9f6:	6f 2d       	mov	r22, r15
     9f8:	6c 1b       	sub	r22, r28
     9fa:	81 2f       	mov	r24, r17
     9fc:	8d 0f       	add	r24, r29
		}

		if (octant_mask & GFX_OCTANT2) {
     9fe:	9a d1       	rcall	.+820    	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
     a00:	99 20       	and	r9, r9
			gfx_mono_draw_pixel(x - offset_x, y - offset_y, color);
     a02:	31 f0       	breq	.+12     	; 0xa10 <gfx_mono_generic_draw_circle+0xb8>
     a04:	4e 2d       	mov	r20, r14
     a06:	6f 2d       	mov	r22, r15
     a08:	6c 1b       	sub	r22, r28
     a0a:	81 2f       	mov	r24, r17
     a0c:	8d 1b       	sub	r24, r29
		}

		if (octant_mask & GFX_OCTANT3) {
     a0e:	92 d1       	rcall	.+804    	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
     a10:	88 20       	and	r8, r8
			gfx_mono_draw_pixel(x - offset_y, y - offset_x, color);
     a12:	31 f0       	breq	.+12     	; 0xa20 <gfx_mono_generic_draw_circle+0xc8>
     a14:	4e 2d       	mov	r20, r14
     a16:	6f 2d       	mov	r22, r15
     a18:	6d 1b       	sub	r22, r29
     a1a:	81 2f       	mov	r24, r17
     a1c:	8c 1b       	sub	r24, r28
		}

		if (octant_mask & GFX_OCTANT4) {
     a1e:	8a d1       	rcall	.+788    	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
			gfx_mono_draw_pixel(x - offset_y, y + offset_x, color);
     a20:	77 20       	and	r7, r7
     a22:	31 f0       	breq	.+12     	; 0xa30 <gfx_mono_generic_draw_circle+0xd8>
     a24:	4e 2d       	mov	r20, r14
     a26:	6f 2d       	mov	r22, r15
     a28:	6d 0f       	add	r22, r29
     a2a:	81 2f       	mov	r24, r17
		}

		if (octant_mask & GFX_OCTANT5) {
     a2c:	8c 1b       	sub	r24, r28
			gfx_mono_draw_pixel(x - offset_x, y + offset_y, color);
     a2e:	82 d1       	rcall	.+772    	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
     a30:	66 20       	and	r6, r6
     a32:	31 f0       	breq	.+12     	; 0xa40 <gfx_mono_generic_draw_circle+0xe8>
     a34:	4e 2d       	mov	r20, r14
     a36:	6f 2d       	mov	r22, r15
     a38:	6c 0f       	add	r22, r28
		}

		if (octant_mask & GFX_OCTANT6) {
     a3a:	81 2f       	mov	r24, r17
			gfx_mono_draw_pixel(x + offset_x, y + offset_y, color);
     a3c:	8d 1b       	sub	r24, r29
     a3e:	7a d1       	rcall	.+756    	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
     a40:	55 20       	and	r5, r5
     a42:	31 f0       	breq	.+12     	; 0xa50 <gfx_mono_generic_draw_circle+0xf8>
     a44:	4e 2d       	mov	r20, r14
     a46:	6f 2d       	mov	r22, r15
		}

		if (octant_mask & GFX_OCTANT7) {
     a48:	6c 0f       	add	r22, r28
     a4a:	81 2f       	mov	r24, r17
			gfx_mono_draw_pixel(x + offset_y, y + offset_x, color);
     a4c:	8d 0f       	add	r24, r29
     a4e:	72 d1       	rcall	.+740    	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
     a50:	07 ff       	sbrs	r16, 7
     a52:	06 c0       	rjmp	.+12     	; 0xa60 <gfx_mono_generic_draw_circle+0x108>
     a54:	4e 2d       	mov	r20, r14
     a56:	6f 2d       	mov	r22, r15
     a58:	6d 0f       	add	r22, r29
     a5a:	81 2f       	mov	r24, r17
     a5c:	8c 0f       	add	r24, r28
		}

		/* Update error value and step offset_y when required. */
		if (error < 0) {
     a5e:	6a d1       	rcall	.+724    	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
     a60:	8d 2f       	mov	r24, r29
			error += ((offset_x << 2) + 6);
     a62:	90 e0       	ldi	r25, 0x00	; 0
     a64:	d7 fe       	sbrs	r13, 7
     a66:	08 c0       	rjmp	.+16     	; 0xa78 <gfx_mono_generic_draw_circle+0x120>
     a68:	88 0f       	add	r24, r24
     a6a:	99 1f       	adc	r25, r25
     a6c:	88 0f       	add	r24, r24
     a6e:	99 1f       	adc	r25, r25
     a70:	06 96       	adiw	r24, 0x06	; 6
		} else {
			error += (((offset_x - offset_y) << 2) + 10);
     a72:	c8 0e       	add	r12, r24
     a74:	d9 1e       	adc	r13, r25
     a76:	0a c0       	rjmp	.+20     	; 0xa8c <gfx_mono_generic_draw_circle+0x134>
     a78:	8c 1b       	sub	r24, r28
     a7a:	91 09       	sbc	r25, r1
     a7c:	88 0f       	add	r24, r24
     a7e:	99 1f       	adc	r25, r25
     a80:	88 0f       	add	r24, r24
     a82:	99 1f       	adc	r25, r25
			--offset_y;
     a84:	0a 96       	adiw	r24, 0x0a	; 10
		}

		/* Next X. */
		++offset_x;
     a86:	c8 0e       	add	r12, r24
	offset_x = 0;
	offset_y = radius;
	error = 3 - 2 * radius;

	/* Iterate offsetX from 0 to radius. */
	while (offset_x <= offset_y) {
     a88:	d9 1e       	adc	r13, r25
     a8a:	c1 50       	subi	r28, 0x01	; 1
     a8c:	df 5f       	subi	r29, 0xFF	; 255
		}

		/* Next X. */
		++offset_x;
	}
}
     a8e:	cd 17       	cp	r28, r29
     a90:	08 f0       	brcs	.+2      	; 0xa94 <gfx_mono_generic_draw_circle+0x13c>
     a92:	a6 cf       	rjmp	.-180    	; 0x9e0 <gfx_mono_generic_draw_circle+0x88>
     a94:	df 91       	pop	r29
     a96:	cf 91       	pop	r28
     a98:	1f 91       	pop	r17
     a9a:	0f 91       	pop	r16
     a9c:	ff 90       	pop	r15
     a9e:	ef 90       	pop	r14
     aa0:	df 90       	pop	r13
     aa2:	cf 90       	pop	r12
     aa4:	bf 90       	pop	r11
     aa6:	af 90       	pop	r10
     aa8:	9f 90       	pop	r9
     aaa:	8f 90       	pop	r8
     aac:	7f 90       	pop	r7
     aae:	6f 90       	pop	r6
     ab0:	5f 90       	pop	r5
     ab2:	08 95       	ret

00000ab4 <gfx_mono_generic_draw_filled_circle>:
 * \param  quadrant_mask Bitmask indicating which quadrants to draw.
 */
void gfx_mono_generic_draw_filled_circle(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t radius, enum gfx_mono_color color,
		uint8_t quadrant_mask)
{
     ab4:	8f 92       	push	r8
     ab6:	9f 92       	push	r9
     ab8:	af 92       	push	r10
     aba:	bf 92       	push	r11
     abc:	cf 92       	push	r12
     abe:	df 92       	push	r13
     ac0:	ef 92       	push	r14
     ac2:	ff 92       	push	r15
     ac4:	0f 93       	push	r16
     ac6:	1f 93       	push	r17
     ac8:	cf 93       	push	r28
     aca:	df 93       	push	r29
     acc:	18 2f       	mov	r17, r24
     ace:	d6 2e       	mov	r13, r22
     ad0:	c4 2f       	mov	r28, r20
     ad2:	c2 2e       	mov	r12, r18
	gfx_coord_t offset_x;
	gfx_coord_t offset_y;
	int16_t error;

	/* Draw only a pixel if radius is zero. */
	if (radius == 0) {
     ad4:	41 11       	cpse	r20, r1
     ad6:	0e c0       	rjmp	.+28     	; 0xaf4 <gfx_mono_generic_draw_filled_circle+0x40>
		gfx_mono_draw_pixel(x, y, color);
     ad8:	42 2f       	mov	r20, r18
		}

		/* Next X. */
		++offset_x;
	}
}
     ada:	df 91       	pop	r29
     adc:	cf 91       	pop	r28
     ade:	1f 91       	pop	r17
     ae0:	0f 91       	pop	r16
     ae2:	ff 90       	pop	r15
     ae4:	ef 90       	pop	r14
     ae6:	df 90       	pop	r13
     ae8:	cf 90       	pop	r12
     aea:	bf 90       	pop	r11
     aec:	af 90       	pop	r10
     aee:	9f 90       	pop	r9
	gfx_coord_t offset_y;
	int16_t error;

	/* Draw only a pixel if radius is zero. */
	if (radius == 0) {
		gfx_mono_draw_pixel(x, y, color);
     af0:	8f 90       	pop	r8
	}

	/* Set up start iterators. */
	offset_x = 0;
	offset_y = radius;
	error = 3 - 2 * radius;
     af2:	20 c1       	rjmp	.+576    	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
     af4:	83 e0       	ldi	r24, 0x03	; 3
     af6:	90 e0       	ldi	r25, 0x00	; 0
     af8:	7c 01       	movw	r14, r24
     afa:	22 e0       	ldi	r18, 0x02	; 2
     afc:	42 9f       	mul	r20, r18
     afe:	e0 18       	sub	r14, r0
     b00:	f1 08       	sbc	r15, r1
     b02:	11 24       	eor	r1, r1
     b04:	bb 24       	eor	r11, r11
		gfx_mono_draw_pixel(x, y, color);
		return;
	}

	/* Set up start iterators. */
	offset_x = 0;
     b06:	b3 94       	inc	r11
	error = 3 - 2 * radius;

	/* Iterate offset_x from 0 to radius. */
	while (offset_x <= offset_y) {
		/* Draw vertical lines tracking each quadrant. */
		if (quadrant_mask & GFX_QUADRANT0) {
     b08:	d0 e0       	ldi	r29, 0x00	; 0
     b0a:	80 2f       	mov	r24, r16
     b0c:	83 70       	andi	r24, 0x03	; 3
					y - offset_x, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x + offset_x,
					y - offset_y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT1) {
     b0e:	a8 2e       	mov	r10, r24
     b10:	20 2f       	mov	r18, r16
     b12:	2c 70       	andi	r18, 0x0C	; 12
					y - offset_x, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x - offset_x,
					y - offset_y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT2) {
     b14:	92 2e       	mov	r9, r18
     b16:	80 2f       	mov	r24, r16
     b18:	80 73       	andi	r24, 0x30	; 48
					y, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x - offset_x,
					y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT3) {
     b1a:	88 2e       	mov	r8, r24
	error = 3 - 2 * radius;

	/* Iterate offset_x from 0 to radius. */
	while (offset_x <= offset_y) {
		/* Draw vertical lines tracking each quadrant. */
		if (quadrant_mask & GFX_QUADRANT0) {
     b1c:	00 7c       	andi	r16, 0xC0	; 192
     b1e:	aa 20       	and	r10, r10
			gfx_mono_draw_vertical_line(x + offset_y,
     b20:	79 f0       	breq	.+30     	; 0xb40 <gfx_mono_generic_draw_filled_circle+0x8c>
     b22:	2c 2d       	mov	r18, r12
     b24:	4b 2d       	mov	r20, r11
     b26:	6d 2d       	mov	r22, r13
     b28:	6d 1b       	sub	r22, r29
     b2a:	81 2f       	mov	r24, r17
     b2c:	8c 0f       	add	r24, r28
					y - offset_x, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x + offset_x,
     b2e:	11 de       	rcall	.-990    	; 0x752 <gfx_mono_generic_draw_vertical_line>
     b30:	2c 2d       	mov	r18, r12
     b32:	41 e0       	ldi	r20, 0x01	; 1
     b34:	4c 0f       	add	r20, r28
     b36:	6d 2d       	mov	r22, r13
     b38:	6c 1b       	sub	r22, r28
     b3a:	81 2f       	mov	r24, r17
     b3c:	8d 0f       	add	r24, r29
					y - offset_y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT1) {
     b3e:	09 de       	rcall	.-1006   	; 0x752 <gfx_mono_generic_draw_vertical_line>
     b40:	99 20       	and	r9, r9
			gfx_mono_draw_vertical_line(x - offset_y,
     b42:	79 f0       	breq	.+30     	; 0xb62 <gfx_mono_generic_draw_filled_circle+0xae>
     b44:	2c 2d       	mov	r18, r12
     b46:	4b 2d       	mov	r20, r11
     b48:	6d 2d       	mov	r22, r13
     b4a:	6d 1b       	sub	r22, r29
     b4c:	81 2f       	mov	r24, r17
     b4e:	8c 1b       	sub	r24, r28
					y - offset_x, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x - offset_x,
     b50:	00 de       	rcall	.-1024   	; 0x752 <gfx_mono_generic_draw_vertical_line>
     b52:	2c 2d       	mov	r18, r12
     b54:	41 e0       	ldi	r20, 0x01	; 1
     b56:	4c 0f       	add	r20, r28
     b58:	6d 2d       	mov	r22, r13
     b5a:	6c 1b       	sub	r22, r28
     b5c:	81 2f       	mov	r24, r17
     b5e:	8d 1b       	sub	r24, r29
					y - offset_y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT2) {
     b60:	f8 dd       	rcall	.-1040   	; 0x752 <gfx_mono_generic_draw_vertical_line>
			gfx_mono_draw_vertical_line(x - offset_y,
     b62:	88 20       	and	r8, r8
     b64:	69 f0       	breq	.+26     	; 0xb80 <gfx_mono_generic_draw_filled_circle+0xcc>
     b66:	2c 2d       	mov	r18, r12
     b68:	4b 2d       	mov	r20, r11
     b6a:	6d 2d       	mov	r22, r13
					y, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x - offset_x,
     b6c:	81 2f       	mov	r24, r17
     b6e:	8c 1b       	sub	r24, r28
     b70:	f0 dd       	rcall	.-1056   	; 0x752 <gfx_mono_generic_draw_vertical_line>
     b72:	2c 2d       	mov	r18, r12
     b74:	41 e0       	ldi	r20, 0x01	; 1
     b76:	4c 0f       	add	r20, r28
					y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT3) {
     b78:	6d 2d       	mov	r22, r13
			gfx_mono_draw_vertical_line(x + offset_y,
     b7a:	81 2f       	mov	r24, r17
     b7c:	8d 1b       	sub	r24, r29
     b7e:	e9 dd       	rcall	.-1070   	; 0x752 <gfx_mono_generic_draw_vertical_line>
     b80:	00 23       	and	r16, r16
     b82:	69 f0       	breq	.+26     	; 0xb9e <gfx_mono_generic_draw_filled_circle+0xea>
     b84:	2c 2d       	mov	r18, r12
					y, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x + offset_x,
     b86:	4b 2d       	mov	r20, r11
     b88:	6d 2d       	mov	r22, r13
     b8a:	81 2f       	mov	r24, r17
     b8c:	8c 0f       	add	r24, r28
     b8e:	e1 dd       	rcall	.-1086   	; 0x752 <gfx_mono_generic_draw_vertical_line>
     b90:	2c 2d       	mov	r18, r12
     b92:	41 e0       	ldi	r20, 0x01	; 1
     b94:	4c 0f       	add	r20, r28
     b96:	6d 2d       	mov	r22, r13
     b98:	81 2f       	mov	r24, r17
					y, offset_y + 1, color);
		}

		/* Update error value and step offset_y when required. */
		if (error < 0) {
     b9a:	8d 0f       	add	r24, r29
     b9c:	da dd       	rcall	.-1100   	; 0x752 <gfx_mono_generic_draw_vertical_line>
			error += ((offset_x << 2) + 6);
     b9e:	8d 2f       	mov	r24, r29
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	f7 fe       	sbrs	r15, 7
     ba4:	08 c0       	rjmp	.+16     	; 0xbb6 <gfx_mono_generic_draw_filled_circle+0x102>
     ba6:	88 0f       	add	r24, r24
     ba8:	99 1f       	adc	r25, r25
     baa:	88 0f       	add	r24, r24
     bac:	99 1f       	adc	r25, r25
		} else {
			error += (((offset_x - offset_y) << 2) + 10);
     bae:	06 96       	adiw	r24, 0x06	; 6
     bb0:	e8 0e       	add	r14, r24
     bb2:	f9 1e       	adc	r15, r25
     bb4:	0a c0       	rjmp	.+20     	; 0xbca <gfx_mono_generic_draw_filled_circle+0x116>
     bb6:	8c 1b       	sub	r24, r28
     bb8:	91 09       	sbc	r25, r1
     bba:	88 0f       	add	r24, r24
     bbc:	99 1f       	adc	r25, r25
     bbe:	88 0f       	add	r24, r24
			--offset_y;
     bc0:	99 1f       	adc	r25, r25
		}

		/* Next X. */
		++offset_x;
     bc2:	0a 96       	adiw	r24, 0x0a	; 10
     bc4:	e8 0e       	add	r14, r24
	offset_x = 0;
	offset_y = radius;
	error = 3 - 2 * radius;

	/* Iterate offset_x from 0 to radius. */
	while (offset_x <= offset_y) {
     bc6:	f9 1e       	adc	r15, r25
     bc8:	c1 50       	subi	r28, 0x01	; 1
     bca:	df 5f       	subi	r29, 0xFF	; 255
		}

		/* Next X. */
		++offset_x;
	}
}
     bcc:	b3 94       	inc	r11
     bce:	cd 17       	cp	r28, r29
     bd0:	08 f0       	brcs	.+2      	; 0xbd4 <gfx_mono_generic_draw_filled_circle+0x120>
     bd2:	a5 cf       	rjmp	.-182    	; 0xb1e <gfx_mono_generic_draw_filled_circle+0x6a>
     bd4:	df 91       	pop	r29
     bd6:	cf 91       	pop	r28
     bd8:	1f 91       	pop	r17
     bda:	0f 91       	pop	r16
     bdc:	ff 90       	pop	r15
     bde:	ef 90       	pop	r14
     be0:	df 90       	pop	r13
     be2:	cf 90       	pop	r12
     be4:	bf 90       	pop	r11
     be6:	af 90       	pop	r10
     be8:	9f 90       	pop	r9
     bea:	8f 90       	pop	r8
     bec:	08 95       	ret

00000bee <gfx_mono_lcd_uc1608_cache_write_byte>:
		uint8_t				byte = gfx_mono_lcd_uc1608_get_byte(page, x);

		isSet = (byte & pixel_mask) ?  GFX_PIXEL_SET : GFX_PIXEL_CLR;
	}
	return isSet;
}
     bee:	80 31       	cpi	r24, 0x10	; 16
     bf0:	30 f4       	brcc	.+12     	; 0xbfe <gfx_mono_lcd_uc1608_cache_write_byte+0x10>
     bf2:	60 3f       	cpi	r22, 0xF0	; 240
     bf4:	20 f4       	brcc	.+8      	; 0xbfe <gfx_mono_lcd_uc1608_cache_write_byte+0x10>
     bf6:	70 e0       	ldi	r23, 0x00	; 0
     bf8:	70 64       	ori	r23, 0x40	; 64
     bfa:	78 2b       	or	r23, r24
     bfc:	02 c0       	rjmp	.+4      	; 0xc02 <gfx_mono_lcd_uc1608_cache_write_byte+0x14>
     bfe:	60 e0       	ldi	r22, 0x00	; 0
     c00:	70 e8       	ldi	r23, 0x80	; 128
     c02:	76 ff       	sbrs	r23, 6
     c04:	06 c0       	rjmp	.+12     	; 0xc12 <gfx_mono_lcd_uc1608_cache_write_byte+0x24>
     c06:	70 93 49 03 	sts	0x0349, r23	; 0x800349 <__data_end+0x1>
     c0a:	60 93 48 03 	sts	0x0348, r22	; 0x800348 <__data_end>
     c0e:	40 93 4a 03 	sts	0x034A, r20	; 0x80034a <__data_end+0x2>
     c12:	08 95       	ret

00000c14 <gfx_mono_lcd_uc1608_put_page>:
     c14:	0f 93       	push	r16
     c16:	1f 93       	push	r17
     c18:	cf 93       	push	r28
     c1a:	df 93       	push	r29
     c1c:	8c 01       	movw	r16, r24
     c1e:	86 2f       	mov	r24, r22
     c20:	d4 2f       	mov	r29, r20
     c22:	c2 2f       	mov	r28, r18
     c24:	01 15       	cp	r16, r1
     c26:	11 05       	cpc	r17, r1
     c28:	49 f4       	brne	.+18     	; 0xc3c <gfx_mono_lcd_uc1608_put_page+0x28>
     c2a:	10 92 49 03 	sts	0x0349, r1	; 0x800349 <__data_end+0x1>
     c2e:	10 92 48 03 	sts	0x0348, r1	; 0x800348 <__data_end>
     c32:	df 91       	pop	r29
     c34:	cf 91       	pop	r28
     c36:	1f 91       	pop	r17
     c38:	0f 91       	pop	r16
     c3a:	08 95       	ret
     c3c:	60 31       	cpi	r22, 0x10	; 16
     c3e:	a8 f7       	brcc	.-22     	; 0xc2a <gfx_mono_lcd_uc1608_put_page+0x16>
     c40:	40 3f       	cpi	r20, 0xF0	; 240
     c42:	98 f7       	brcc	.-26     	; 0xc2a <gfx_mono_lcd_uc1608_put_page+0x16>
     c44:	d2 d6       	rcall	.+3492   	; 0x19ea <lcd_page_set>
     c46:	8d 2f       	mov	r24, r29
     c48:	d8 d6       	rcall	.+3504   	; 0x19fa <lcd_col_set>
     c4a:	8c 2f       	mov	r24, r28
     c4c:	90 e0       	ldi	r25, 0x00	; 0
     c4e:	8d 0f       	add	r24, r29
     c50:	91 1d       	adc	r25, r1
     c52:	81 3f       	cpi	r24, 0xF1	; 241
     c54:	91 05       	cpc	r25, r1
     c56:	14 f0       	brlt	.+4      	; 0xc5c <gfx_mono_lcd_uc1608_put_page+0x48>
     c58:	c0 ef       	ldi	r28, 0xF0	; 240
     c5a:	cd 1b       	sub	r28, r29
     c5c:	cc 23       	and	r28, r28
     c5e:	29 f3       	breq	.-54     	; 0xc2a <gfx_mono_lcd_uc1608_put_page+0x16>
     c60:	f8 01       	movw	r30, r16
     c62:	81 91       	ld	r24, Z+
     c64:	8f 01       	movw	r16, r30
     c66:	76 d6       	rcall	.+3308   	; 0x1954 <lcd_bus_write_ram>
     c68:	c1 50       	subi	r28, 0x01	; 1
     c6a:	f8 cf       	rjmp	.-16     	; 0xc5c <gfx_mono_lcd_uc1608_put_page+0x48>

00000c6c <gfx_mono_lcd_uc1608_put_byte>:
     c6c:	1f 93       	push	r17
     c6e:	cf 93       	push	r28
     c70:	df 93       	push	r29
     c72:	80 31       	cpi	r24, 0x10	; 16
     c74:	78 f4       	brcc	.+30     	; 0xc94 <gfx_mono_lcd_uc1608_put_byte+0x28>
     c76:	60 3f       	cpi	r22, 0xF0	; 240
     c78:	68 f4       	brcc	.+26     	; 0xc94 <gfx_mono_lcd_uc1608_put_byte+0x28>
     c7a:	14 2f       	mov	r17, r20
     c7c:	c6 2f       	mov	r28, r22
     c7e:	d8 2f       	mov	r29, r24
     c80:	b6 df       	rcall	.-148    	; 0xbee <gfx_mono_lcd_uc1608_cache_write_byte>
     c82:	8d 2f       	mov	r24, r29
     c84:	b2 d6       	rcall	.+3428   	; 0x19ea <lcd_page_set>
     c86:	8c 2f       	mov	r24, r28
     c88:	b8 d6       	rcall	.+3440   	; 0x19fa <lcd_col_set>
     c8a:	81 2f       	mov	r24, r17
     c8c:	df 91       	pop	r29
     c8e:	cf 91       	pop	r28
     c90:	1f 91       	pop	r17
     c92:	60 c6       	rjmp	.+3264   	; 0x1954 <lcd_bus_write_ram>
     c94:	df 91       	pop	r29
     c96:	cf 91       	pop	r28
     c98:	1f 91       	pop	r17
     c9a:	08 95       	ret

00000c9c <gfx_mono_lcd_uc1608_get_byte>:
     c9c:	1f 93       	push	r17
     c9e:	cf 93       	push	r28
     ca0:	df 93       	push	r29
     ca2:	80 31       	cpi	r24, 0x10	; 16
     ca4:	80 f4       	brcc	.+32     	; 0xcc6 <gfx_mono_lcd_uc1608_get_byte+0x2a>
     ca6:	60 3f       	cpi	r22, 0xF0	; 240
     ca8:	70 f4       	brcc	.+28     	; 0xcc6 <gfx_mono_lcd_uc1608_get_byte+0x2a>
     caa:	26 2f       	mov	r18, r22
     cac:	30 e0       	ldi	r19, 0x00	; 0
     cae:	30 64       	ori	r19, 0x40	; 64
     cb0:	38 2b       	or	r19, r24
     cb2:	40 91 48 03 	lds	r20, 0x0348	; 0x800348 <__data_end>
     cb6:	50 91 49 03 	lds	r21, 0x0349	; 0x800349 <__data_end+0x1>
     cba:	42 17       	cp	r20, r18
     cbc:	53 07       	cpc	r21, r19
     cbe:	29 f4       	brne	.+10     	; 0xcca <gfx_mono_lcd_uc1608_get_byte+0x2e>
     cc0:	10 91 4a 03 	lds	r17, 0x034A	; 0x80034a <__data_end+0x2>
     cc4:	0d c0       	rjmp	.+26     	; 0xce0 <gfx_mono_lcd_uc1608_get_byte+0x44>
     cc6:	10 e0       	ldi	r17, 0x00	; 0
     cc8:	0b c0       	rjmp	.+22     	; 0xce0 <gfx_mono_lcd_uc1608_get_byte+0x44>
     cca:	d6 2f       	mov	r29, r22
     ccc:	c8 2f       	mov	r28, r24
     cce:	8d d6       	rcall	.+3354   	; 0x19ea <lcd_page_set>
     cd0:	8d 2f       	mov	r24, r29
     cd2:	93 d6       	rcall	.+3366   	; 0x19fa <lcd_col_set>
     cd4:	4c d6       	rcall	.+3224   	; 0x196e <lcd_bus_read_ram>
     cd6:	18 2f       	mov	r17, r24
     cd8:	48 2f       	mov	r20, r24
     cda:	6d 2f       	mov	r22, r29
     cdc:	8c 2f       	mov	r24, r28
     cde:	87 df       	rcall	.-242    	; 0xbee <gfx_mono_lcd_uc1608_cache_write_byte>
     ce0:	81 2f       	mov	r24, r17
     ce2:	df 91       	pop	r29
     ce4:	cf 91       	pop	r28
     ce6:	1f 91       	pop	r17
     ce8:	08 95       	ret

00000cea <gfx_mono_lcd_uc1608_mask_byte>:
 * \param column     Page offset (x coordinate)
 * \param pixel_mask Mask for pixel operation
 * \param color      Pixel operation
 */
void gfx_mono_lcd_uc1608_mask_byte(gfx_coord_t page, gfx_coord_t column, gfx_mono_color_t pixel_mask, gfx_mono_color_t color)
{
     cea:	0f 93       	push	r16
     cec:	1f 93       	push	r17
     cee:	cf 93       	push	r28
     cf0:	df 93       	push	r29
	uint8_t data = 0;

	if ((page < GFX_MONO_LCD_PAGES) && (column < GFX_MONO_LCD_WIDTH)) {
     cf2:	80 31       	cpi	r24, 0x10	; 16
     cf4:	d0 f4       	brcc	.+52     	; 0xd2a <gfx_mono_lcd_uc1608_mask_byte+0x40>
     cf6:	60 3f       	cpi	r22, 0xF0	; 240
     cf8:	c0 f4       	brcc	.+48     	; 0xd2a <gfx_mono_lcd_uc1608_mask_byte+0x40>
     cfa:	02 2f       	mov	r16, r18
     cfc:	c4 2f       	mov	r28, r20
     cfe:	16 2f       	mov	r17, r22
		data = gfx_mono_lcd_uc1608_get_byte(page, column);
     d00:	d8 2f       	mov	r29, r24

		switch (color) {
     d02:	cc df       	rcall	.-104    	; 0xc9c <gfx_mono_lcd_uc1608_get_byte>
     d04:	01 30       	cpi	r16, 0x01	; 1
     d06:	41 f0       	breq	.+16     	; 0xd18 <gfx_mono_lcd_uc1608_mask_byte+0x2e>
     d08:	20 f0       	brcs	.+8      	; 0xd12 <gfx_mono_lcd_uc1608_mask_byte+0x28>
     d0a:	02 30       	cpi	r16, 0x02	; 2
			case GFX_PIXEL_SET:
				data |= pixel_mask;
				break;

			case GFX_PIXEL_XOR:
				data ^= pixel_mask;
     d0c:	31 f4       	brne	.+12     	; 0xd1a <gfx_mono_lcd_uc1608_mask_byte+0x30>
     d0e:	8c 27       	eor	r24, r28
	if ((page < GFX_MONO_LCD_PAGES) && (column < GFX_MONO_LCD_WIDTH)) {
		data = gfx_mono_lcd_uc1608_get_byte(page, column);

		switch (color) {
			case GFX_PIXEL_CLR:
				data &= ~pixel_mask;
     d10:	04 c0       	rjmp	.+8      	; 0xd1a <gfx_mono_lcd_uc1608_mask_byte+0x30>
     d12:	c0 95       	com	r28
     d14:	8c 23       	and	r24, r28
				break;

			case GFX_PIXEL_SET:
				data |= pixel_mask;
     d16:	01 c0       	rjmp	.+2      	; 0xd1a <gfx_mono_lcd_uc1608_mask_byte+0x30>
			case GFX_PIXEL_XOR:
				data ^= pixel_mask;
				break;
		}

		gfx_mono_lcd_uc1608_put_byte(page, column, data);
     d18:	8c 2b       	or	r24, r28
     d1a:	48 2f       	mov	r20, r24
     d1c:	61 2f       	mov	r22, r17
	}
}
     d1e:	8d 2f       	mov	r24, r29
     d20:	df 91       	pop	r29
     d22:	cf 91       	pop	r28
			case GFX_PIXEL_XOR:
				data ^= pixel_mask;
				break;
		}

		gfx_mono_lcd_uc1608_put_byte(page, column, data);
     d24:	1f 91       	pop	r17
     d26:	0f 91       	pop	r16
	}
}
     d28:	a1 cf       	rjmp	.-190    	; 0xc6c <gfx_mono_lcd_uc1608_put_byte>
     d2a:	df 91       	pop	r29
     d2c:	cf 91       	pop	r28
     d2e:	1f 91       	pop	r17
     d30:	0f 91       	pop	r16
     d32:	08 95       	ret

00000d34 <gfx_mono_lcd_uc1608_draw_pixel>:
 * \param x         X coordinate of the pixel
 * \param y         Y coordinate of the pixel
 * \param color     Pixel operation.
 */
void gfx_mono_lcd_uc1608_draw_pixel(gfx_coord_t x, gfx_coord_t y, gfx_mono_color_t color)
{
     d34:	96 2f       	mov	r25, r22
     d36:	24 2f       	mov	r18, r20
	if ((x < GFX_MONO_LCD_WIDTH) && (y < GFX_MONO_LCD_HEIGHT)) {
     d38:	80 3f       	cpi	r24, 0xF0	; 240
     d3a:	88 f4       	brcc	.+34     	; 0xd5e <gfx_mono_lcd_uc1608_draw_pixel+0x2a>
     d3c:	67 fd       	sbrc	r22, 7
     d3e:	0f c0       	rjmp	.+30     	; 0xd5e <gfx_mono_lcd_uc1608_draw_pixel+0x2a>
		gfx_coord_t			page		= y / GFX_MONO_LCD_PIXELS_PER_BYTE;
		gfx_mono_color_t	pixel_mask	= 1 << (y % GFX_MONO_LCD_PIXELS_PER_BYTE);

		gfx_mono_lcd_uc1608_mask_byte(page, x, pixel_mask, color);
     d40:	36 2f       	mov	r19, r22
     d42:	37 70       	andi	r19, 0x07	; 7
     d44:	61 e0       	ldi	r22, 0x01	; 1
     d46:	70 e0       	ldi	r23, 0x00	; 0
     d48:	ab 01       	movw	r20, r22
     d4a:	01 c0       	rjmp	.+2      	; 0xd4e <gfx_mono_lcd_uc1608_draw_pixel+0x1a>
     d4c:	44 0f       	add	r20, r20
     d4e:	3a 95       	dec	r19
     d50:	ea f7       	brpl	.-6      	; 0xd4c <gfx_mono_lcd_uc1608_draw_pixel+0x18>
     d52:	68 2f       	mov	r22, r24
     d54:	89 2f       	mov	r24, r25
     d56:	86 95       	lsr	r24
     d58:	86 95       	lsr	r24
     d5a:	86 95       	lsr	r24
     d5c:	c6 cf       	rjmp	.-116    	; 0xcea <gfx_mono_lcd_uc1608_mask_byte>
     d5e:	08 95       	ret

00000d60 <gfx_mono_lcd_uc1608_cache_clear>:
 *
 */
inline
void gfx_mono_lcd_uc1608_cache_clear()
{
	g_gfx_mono_lcd_uc1608_cache.adr = 0;
     d60:	10 92 49 03 	sts	0x0349, r1	; 0x800349 <__data_end+0x1>
     d64:	10 92 48 03 	sts	0x0348, r1	; 0x800348 <__data_end>
     d68:	08 95       	ret

00000d6a <gfx_mono_draw_char>:
 * \param y        Y coordinate on screen.
 * \param font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
     d6a:	9f 92       	push	r9
     d6c:	af 92       	push	r10
     d6e:	bf 92       	push	r11
     d70:	cf 92       	push	r12
     d72:	df 92       	push	r13
     d74:	ef 92       	push	r14
     d76:	ff 92       	push	r15
     d78:	0f 93       	push	r16
     d7a:	1f 93       	push	r17
     d7c:	cf 93       	push	r28
     d7e:	df 93       	push	r29
     d80:	d8 2f       	mov	r29, r24
     d82:	c6 2e       	mov	r12, r22
     d84:	d4 2e       	mov	r13, r20
     d86:	79 01       	movw	r14, r18
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
     d88:	00 e0       	ldi	r16, 0x00	; 0
     d8a:	f9 01       	movw	r30, r18
     d8c:	24 81       	ldd	r18, Z+4	; 0x04
     d8e:	43 81       	ldd	r20, Z+3	; 0x03
     d90:	6d 2d       	mov	r22, r13
     d92:	8c 2d       	mov	r24, r12
     d94:	c7 dd       	rcall	.-1138   	; 0x924 <gfx_mono_generic_draw_filled_rect>
			GFX_PIXEL_CLR);

	switch (font->type) {
     d96:	f7 01       	movw	r30, r14
     d98:	80 81       	ld	r24, Z
     d9a:	81 11       	cpse	r24, r1
     d9c:	39 c0       	rjmp	.+114    	; 0xe10 <gfx_mono_draw_char+0xa6>
	Assert(font != NULL);

	gfx_coord_t inc_x = x;
	gfx_coord_t inc_y = y;

	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
     d9e:	83 81       	ldd	r24, Z+3	; 0x03
     da0:	28 2f       	mov	r18, r24
     da2:	26 95       	lsr	r18
     da4:	26 95       	lsr	r18
     da6:	26 95       	lsr	r18
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
     da8:	87 70       	andi	r24, 0x07	; 7
     daa:	09 f0       	breq	.+2      	; 0xdae <gfx_mono_draw_char+0x44>
		char_row_size++;
     dac:	2f 5f       	subi	r18, 0xFF	; 255
	}

	glyph_data_offset = char_row_size * font->height *
     dae:	f7 01       	movw	r30, r14
     db0:	c4 81       	ldd	r28, Z+4	; 0x04
			((uint8_t)ch - font->first_char);
	glyph_data = font->data.progmem + glyph_data_offset;
     db2:	8d 2f       	mov	r24, r29
     db4:	90 e0       	ldi	r25, 0x00	; 0
     db6:	35 81       	ldd	r19, Z+5	; 0x05
     db8:	83 1b       	sub	r24, r19
     dba:	91 09       	sbc	r25, r1
     dbc:	2c 9f       	mul	r18, r28
     dbe:	90 01       	movw	r18, r0
     dc0:	11 24       	eor	r1, r1
     dc2:	82 9f       	mul	r24, r18
     dc4:	a0 01       	movw	r20, r0
     dc6:	83 9f       	mul	r24, r19
     dc8:	50 0d       	add	r21, r0
     dca:	92 9f       	mul	r25, r18
     dcc:	50 0d       	add	r21, r0
     dce:	11 24       	eor	r1, r1
     dd0:	01 81       	ldd	r16, Z+1	; 0x01
     dd2:	12 81       	ldd	r17, Z+2	; 0x02
     dd4:	04 0f       	add	r16, r20
     dd6:	15 1f       	adc	r17, r21
     dd8:	dc 0e       	add	r13, r28
     dda:	9d 2c       	mov	r9, r13
     ddc:	9c 1a       	sub	r9, r28
	rows_left = font->height;

	do {
		uint8_t glyph_byte = 0;
		uint8_t pixelsToDraw = font->width;
     dde:	f7 01       	movw	r30, r14
     de0:	a3 80       	ldd	r10, Z+3	; 0x03
			((uint8_t)ch - font->first_char);
	glyph_data = font->data.progmem + glyph_data_offset;
	rows_left = font->height;

	do {
		uint8_t glyph_byte = 0;
     de2:	b1 2c       	mov	r11, r1
		uint8_t pixelsToDraw = font->width;

		for (i = 0; i < pixelsToDraw; i++) {
     de4:	d0 e0       	ldi	r29, 0x00	; 0
     de6:	8c 2d       	mov	r24, r12
     de8:	8d 0f       	add	r24, r29
     dea:	ad 16       	cp	r10, r29
     dec:	79 f0       	breq	.+30     	; 0xe0c <gfx_mono_draw_char+0xa2>
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
     dee:	9d 2f       	mov	r25, r29
     df0:	97 70       	andi	r25, 0x07	; 7
     df2:	21 f4       	brne	.+8      	; 0xdfc <gfx_mono_draw_char+0x92>
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
     df4:	f8 01       	movw	r30, r16
     df6:	b4 90       	lpm	r11, Z
				glyph_data++;
     df8:	0f 5f       	subi	r16, 0xFF	; 255
     dfa:	1f 4f       	sbci	r17, 0xFF	; 255
			}

			if ((glyph_byte & 0x80)) {
     dfc:	b7 fe       	sbrs	r11, 7
     dfe:	03 c0       	rjmp	.+6      	; 0xe06 <gfx_mono_draw_char+0x9c>
				gfx_mono_draw_pixel(inc_x, inc_y,
     e00:	41 e0       	ldi	r20, 0x01	; 1
     e02:	69 2d       	mov	r22, r9
     e04:	97 df       	rcall	.-210    	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
						GFX_PIXEL_SET);
			}

			inc_x += 1;
			glyph_byte <<= 1;
     e06:	bb 0c       	add	r11, r11

	do {
		uint8_t glyph_byte = 0;
		uint8_t pixelsToDraw = font->width;

		for (i = 0; i < pixelsToDraw; i++) {
     e08:	df 5f       	subi	r29, 0xFF	; 255
     e0a:	ed cf       	rjmp	.-38     	; 0xde6 <gfx_mono_draw_char+0x7c>
			glyph_byte <<= 1;
		}

		inc_y += 1;
		inc_x = x;
		rows_left--;
     e0c:	c1 50       	subi	r28, 0x01	; 1
	} while (rows_left > 0);
     e0e:	29 f7       	brne	.-54     	; 0xdda <gfx_mono_draw_char+0x70>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
     e10:	df 91       	pop	r29
     e12:	cf 91       	pop	r28
     e14:	1f 91       	pop	r17
     e16:	0f 91       	pop	r16
     e18:	ff 90       	pop	r15
     e1a:	ef 90       	pop	r14
     e1c:	df 90       	pop	r13
     e1e:	cf 90       	pop	r12
     e20:	bf 90       	pop	r11
     e22:	af 90       	pop	r10
     e24:	9f 90       	pop	r9
     e26:	08 95       	ret

00000e28 <gfx_mono_draw_string>:
 * \param y         Y coordinate on screen.
 * \param font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
     e28:	df 92       	push	r13
     e2a:	ef 92       	push	r14
     e2c:	ff 92       	push	r15
     e2e:	0f 93       	push	r16
     e30:	1f 93       	push	r17
     e32:	cf 93       	push	r28
     e34:	df 93       	push	r29
     e36:	d6 2e       	mov	r13, r22
     e38:	d4 2f       	mov	r29, r20
     e3a:	79 01       	movw	r14, r18
     e3c:	8c 01       	movw	r16, r24
     e3e:	c6 2f       	mov	r28, r22
	Assert(font != NULL);

	/* Draw characters until trailing null byte */
	do {
		/* Handle '\n' as newline, draw normal characters. */
		if (*str == '\n') {
     e40:	f8 01       	movw	r30, r16
     e42:	81 91       	ld	r24, Z+
     e44:	8f 01       	movw	r16, r30
     e46:	8a 30       	cpi	r24, 0x0A	; 10
     e48:	31 f4       	brne	.+12     	; 0xe56 <gfx_mono_draw_string+0x2e>
			x = start_of_string_position_x;
			y += font->height + 1;
     e4a:	f7 01       	movw	r30, r14
     e4c:	84 81       	ldd	r24, Z+4	; 0x04
     e4e:	8f 5f       	subi	r24, 0xFF	; 255
     e50:	d8 0f       	add	r29, r24

	/* Draw characters until trailing null byte */
	do {
		/* Handle '\n' as newline, draw normal characters. */
		if (*str == '\n') {
			x = start_of_string_position_x;
     e52:	cd 2d       	mov	r28, r13
     e54:	09 c0       	rjmp	.+18     	; 0xe68 <gfx_mono_draw_string+0x40>
			y += font->height + 1;
		} else if (*str == '\r') {
     e56:	8d 30       	cpi	r24, 0x0D	; 13
     e58:	39 f0       	breq	.+14     	; 0xe68 <gfx_mono_draw_string+0x40>
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
     e5a:	97 01       	movw	r18, r14
     e5c:	4d 2f       	mov	r20, r29
     e5e:	6c 2f       	mov	r22, r28
     e60:	84 df       	rcall	.-248    	; 0xd6a <gfx_mono_draw_char>
			x += font->width;
     e62:	f7 01       	movw	r30, r14
     e64:	83 81       	ldd	r24, Z+3	; 0x03
     e66:	c8 0f       	add	r28, r24
		}
	} while (*(++str));
     e68:	f8 01       	movw	r30, r16
     e6a:	80 81       	ld	r24, Z
     e6c:	81 11       	cpse	r24, r1
     e6e:	e8 cf       	rjmp	.-48     	; 0xe40 <gfx_mono_draw_string+0x18>
}
     e70:	df 91       	pop	r29
     e72:	cf 91       	pop	r28
     e74:	1f 91       	pop	r17
     e76:	0f 91       	pop	r16
     e78:	ff 90       	pop	r15
     e7a:	ef 90       	pop	r14
     e7c:	df 90       	pop	r13
     e7e:	08 95       	ret

00000e80 <asm_break>:

/* Helper functions */

void asm_break(void)
{
	__asm__ __volatile__ ("break" ::: "memory");
     e80:	98 95       	break
	nop();
     e82:	00 00       	nop
     e84:	08 95       	ret

00000e86 <__vector_9>:
{	/* TIMER 2 COMP-B */
	s_bad_interrupt();
}

ISR(__vector_9, ISR_BLOCK)
{	/* TIMER 2 OVF - Overflow */
     e86:	1f 92       	push	r1
     e88:	0f 92       	push	r0
     e8a:	0f b6       	in	r0, 0x3f	; 63
     e8c:	0f 92       	push	r0
     e8e:	11 24       	eor	r1, r1
     e90:	2f 93       	push	r18
     e92:	3f 93       	push	r19
     e94:	4f 93       	push	r20
     e96:	5f 93       	push	r21
     e98:	6f 93       	push	r22
     e9a:	7f 93       	push	r23
     e9c:	8f 93       	push	r24
     e9e:	9f 93       	push	r25
     ea0:	af 93       	push	r26
     ea2:	bf 93       	push	r27
     ea4:	ef 93       	push	r30
     ea6:	ff 93       	push	r31
	if (g_status.isAnimationStopped && (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)) {
     ea8:	80 91 75 04 	lds	r24, 0x0475	; 0x800475 <g_status>
     eac:	81 ff       	sbrs	r24, 1
     eae:	74 c0       	rjmp	.+232    	; 0xf98 <__vector_9+0x112>
     eb0:	80 91 35 04 	lds	r24, 0x0435	; 0x800435 <g_SmartLCD_mode>
     eb4:	80 32       	cpi	r24, 0x20	; 32
     eb6:	09 f0       	breq	.+2      	; 0xeba <__vector_9+0x34>
     eb8:	6f c0       	rjmp	.+222    	; 0xf98 <__vector_9+0x112>
		static uint8_t state_old = 0;
		static uint8_t state_ctr = 0;
		static uint8_t second_old = 0;
		static uint8_t button_ctr = 0;
		uint8_t cur = PORTB & 0x3f;
     eba:	85 b1       	in	r24, 0x05	; 5
     ebc:	8f 73       	andi	r24, 0x3F	; 63

		/* signaling the grade of deviation */
		g_audio_out_loudness = 0;
		if (g_showData.clkState_clk_state < 0xf) {
     ebe:	90 91 60 04 	lds	r25, 0x0460	; 0x800460 <g_showData+0x2a>
     ec2:	9f 30       	cpi	r25, 0x0F	; 15
     ec4:	60 f4       	brcc	.+24     	; 0xede <__vector_9+0x58>
			cur |= _BV(PORTB6);  // LED = red
     ec6:	80 64       	ori	r24, 0x40	; 64
			if (state_old != 0x02) {
     ec8:	90 91 4e 03 	lds	r25, 0x034E	; 0x80034e <state_old.3080>
     ecc:	92 30       	cpi	r25, 0x02	; 2
     ece:	19 f0       	breq	.+6      	; 0xed6 <__vector_9+0x50>
				state_ctr = 122;  // 1 sec
     ed0:	9a e7       	ldi	r25, 0x7A	; 122
     ed2:	90 93 4d 03 	sts	0x034D, r25	; 0x80034d <state_ctr.3081>
			}
			state_old = 0x02;
     ed6:	92 e0       	ldi	r25, 0x02	; 2
     ed8:	90 93 4e 03 	sts	0x034E, r25	; 0x80034e <state_old.3080>
     edc:	24 c0       	rjmp	.+72     	; 0xf26 <__vector_9+0xa0>

		} else if ((g_showData.clkState_clk_state == 0xf) && (-4 < g_showData.ppb_int) && (g_showData.ppb_int < 4)) {
     ede:	9f 30       	cpi	r25, 0x0F	; 15
     ee0:	c1 f4       	brne	.+48     	; 0xf12 <__vector_9+0x8c>
     ee2:	20 91 52 04 	lds	r18, 0x0452	; 0x800452 <g_showData+0x1c>
     ee6:	30 91 53 04 	lds	r19, 0x0453	; 0x800453 <g_showData+0x1d>
     eea:	2d 5f       	subi	r18, 0xFD	; 253
     eec:	3f 4f       	sbci	r19, 0xFF	; 255
     eee:	27 30       	cpi	r18, 0x07	; 7
     ef0:	31 05       	cpc	r19, r1
     ef2:	78 f4       	brcc	.+30     	; 0xf12 <__vector_9+0x8c>
			cur |= _BV(PORTB7);  // LED = green
     ef4:	80 68       	ori	r24, 0x80	; 128
			state_old = 0x00;
     ef6:	10 92 4e 03 	sts	0x034E, r1	; 0x80034e <state_old.3080>

			/* Acoustic phase tracker */
			if (g_showData.time_second != second_old) {
     efa:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <g_showData+0x2f>
     efe:	20 91 4c 03 	lds	r18, 0x034C	; 0x80034c <second_old.3082>
     f02:	92 17       	cp	r25, r18
     f04:	81 f0       	breq	.+32     	; 0xf26 <__vector_9+0xa0>
				second_old = g_showData.time_second;
     f06:	90 93 4c 03 	sts	0x034C, r25	; 0x80034c <second_old.3082>
				state_ctr = 6;
     f0a:	96 e0       	ldi	r25, 0x06	; 6
     f0c:	90 93 4d 03 	sts	0x034D, r25	; 0x80034d <state_ctr.3081>
     f10:	0a c0       	rjmp	.+20     	; 0xf26 <__vector_9+0xa0>
			}

		} else {
			if (!state_old) {
     f12:	90 91 4e 03 	lds	r25, 0x034E	; 0x80034e <state_old.3080>
     f16:	91 11       	cpse	r25, r1
     f18:	03 c0       	rjmp	.+6      	; 0xf20 <__vector_9+0x9a>
				state_ctr = 30;  // 1/4 sec
     f1a:	9e e1       	ldi	r25, 0x1E	; 30
     f1c:	90 93 4d 03 	sts	0x034D, r25	; 0x80034d <state_ctr.3081>
			}
			state_old = 0x01;
     f20:	91 e0       	ldi	r25, 0x01	; 1
     f22:	90 93 4e 03 	sts	0x034E, r25	; 0x80034e <state_old.3080>
		}

		if (state_ctr) {
     f26:	90 91 4d 03 	lds	r25, 0x034D	; 0x80034d <state_ctr.3081>
     f2a:	99 23       	and	r25, r25
     f2c:	39 f0       	breq	.+14     	; 0xf3c <__vector_9+0xb6>
			--state_ctr;
     f2e:	91 50       	subi	r25, 0x01	; 1
     f30:	90 93 4d 03 	sts	0x034D, r25	; 0x80034d <state_ctr.3081>
			g_audio_out_loudness = 9;  // max 9
     f34:	99 e0       	ldi	r25, 0x09	; 9
     f36:	90 93 79 04 	sts	0x0479, r25	; 0x800479 <g_audio_out_loudness>
     f3a:	02 c0       	rjmp	.+4      	; 0xf40 <__vector_9+0xba>
		} else {
			g_audio_out_loudness = 0;
     f3c:	10 92 79 04 	sts	0x0479, r1	; 0x800479 <g_audio_out_loudness>
		}

		PORTB = cur;
     f40:	85 b9       	out	0x05, r24	; 5

		/* sampling I/Q and push buttons */
		if (button_ctr) {
     f42:	80 91 4b 03 	lds	r24, 0x034B	; 0x80034b <button_ctr.3083>
     f46:	88 23       	and	r24, r24
     f48:	21 f0       	breq	.+8      	; 0xf52 <__vector_9+0xcc>
			--button_ctr;
     f4a:	81 50       	subi	r24, 0x01	; 1
     f4c:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <button_ctr.3083>
     f50:	23 c0       	rjmp	.+70     	; 0xf98 <__vector_9+0x112>
		} else {
			button_ctr = 12;
     f52:	8c e0       	ldi	r24, 0x0C	; 12
     f54:	80 93 4b 03 	sts	0x034B, r24	; 0x80034b <button_ctr.3083>
			uint8_t sw = (PINC & 0x06) >> 1;
     f58:	86 b1       	in	r24, 0x06	; 6
     f5a:	86 70       	andi	r24, 0x06	; 6
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	95 95       	asr	r25
     f60:	87 95       	ror	r24
			if (!(sw & 0x01)) {									// SW-I: decrement contrast voltage
     f62:	80 fd       	sbrc	r24, 0
     f64:	09 c0       	rjmp	.+18     	; 0xf78 <__vector_9+0xf2>
				if (g_lcd_contrast_pm) {
     f66:	80 91 7a 04 	lds	r24, 0x047A	; 0x80047a <g_lcd_contrast_pm>
     f6a:	88 23       	and	r24, r24
     f6c:	a9 f0       	breq	.+42     	; 0xf98 <__vector_9+0x112>
					--g_lcd_contrast_pm;
     f6e:	81 50       	subi	r24, 0x01	; 1
     f70:	80 93 7a 04 	sts	0x047A, r24	; 0x80047a <g_lcd_contrast_pm>
					lcd_contrast_update();
     f74:	11 d5       	rcall	.+2594   	; 0x1998 <lcd_contrast_update>
				}
			} else if (!(sw & 0x02)) {							// SW-Q: increment contrast voltage
     f76:	10 c0       	rjmp	.+32     	; 0xf98 <__vector_9+0x112>
     f78:	81 fd       	sbrc	r24, 1
				if (g_lcd_contrast_pm < 0x3F) {
     f7a:	09 c0       	rjmp	.+18     	; 0xf8e <__vector_9+0x108>
     f7c:	80 91 7a 04 	lds	r24, 0x047A	; 0x80047a <g_lcd_contrast_pm>
     f80:	8f 33       	cpi	r24, 0x3F	; 63
					++g_lcd_contrast_pm;
     f82:	50 f4       	brcc	.+20     	; 0xf98 <__vector_9+0x112>
     f84:	8f 5f       	subi	r24, 0xFF	; 255
					lcd_contrast_update();
     f86:	80 93 7a 04 	sts	0x047A, r24	; 0x80047a <g_lcd_contrast_pm>
     f8a:	06 d5       	rcall	.+2572   	; 0x1998 <lcd_contrast_update>
				}
			} else if (!(PINB & _BV(PINB2))) {					// Pushbutton: store value in EEPROM
     f8c:	05 c0       	rjmp	.+10     	; 0xf98 <__vector_9+0x112>
     f8e:	1a 99       	sbic	0x03, 2	; 3
				eeprom_nvm_settings_write(C_EEPROM_NVM_SETTING_LCD_CONTRAST);
     f90:	03 c0       	rjmp	.+6      	; 0xf98 <__vector_9+0x112>
     f92:	81 e0       	ldi	r24, 0x01	; 1
     f94:	0e 94 db 1d 	call	0x3bb6	; 0x3bb6 <eeprom_nvm_settings_write>
			}
		}
	}
}
     f98:	ff 91       	pop	r31
     f9a:	ef 91       	pop	r30
     f9c:	bf 91       	pop	r27
     f9e:	af 91       	pop	r26
     fa0:	9f 91       	pop	r25
     fa2:	8f 91       	pop	r24
     fa4:	7f 91       	pop	r23
     fa6:	6f 91       	pop	r22
     fa8:	5f 91       	pop	r21
     faa:	4f 91       	pop	r20
     fac:	3f 91       	pop	r19
     fae:	2f 91       	pop	r18
     fb0:	0f 90       	pop	r0
     fb2:	0f be       	out	0x3f, r0	; 63
     fb4:	0f 90       	pop	r0
     fb6:	1f 90       	pop	r1
     fb8:	18 95       	reti

00000fba <__vector_13>:
{	/* TIMER 1 COMP-B */
	s_bad_interrupt();
}

ISR(__vector_13, ISR_BLOCK)
{	/* TIMER 1 OVF - Overflow */
     fba:	1f 92       	push	r1
     fbc:	0f 92       	push	r0
     fbe:	0f b6       	in	r0, 0x3f	; 63
     fc0:	0f 92       	push	r0
     fc2:	11 24       	eor	r1, r1
     fc4:	2f 93       	push	r18
     fc6:	3f 93       	push	r19
     fc8:	4f 93       	push	r20
     fca:	5f 93       	push	r21
     fcc:	6f 93       	push	r22
     fce:	7f 93       	push	r23
     fd0:	8f 93       	push	r24
     fd2:	9f 93       	push	r25
     fd4:	af 93       	push	r26
     fd6:	bf 93       	push	r27
	++g_timer_abs_msb;
     fd8:	80 91 89 04 	lds	r24, 0x0489	; 0x800489 <g_timer_abs_msb>
     fdc:	90 91 8a 04 	lds	r25, 0x048A	; 0x80048a <g_timer_abs_msb+0x1>
     fe0:	a0 91 8b 04 	lds	r26, 0x048B	; 0x80048b <g_timer_abs_msb+0x2>
     fe4:	b0 91 8c 04 	lds	r27, 0x048C	; 0x80048c <g_timer_abs_msb+0x3>
     fe8:	01 96       	adiw	r24, 0x01	; 1
     fea:	a1 1d       	adc	r26, r1
     fec:	b1 1d       	adc	r27, r1
     fee:	80 93 89 04 	sts	0x0489, r24	; 0x800489 <g_timer_abs_msb>
     ff2:	90 93 8a 04 	sts	0x048A, r25	; 0x80048a <g_timer_abs_msb+0x1>
     ff6:	a0 93 8b 04 	sts	0x048B, r26	; 0x80048b <g_timer_abs_msb+0x2>
     ffa:	b0 93 8c 04 	sts	0x048C, r27	; 0x80048c <g_timer_abs_msb+0x3>

	if (g_status.isAnimationStopped && g_audio_out_loudness) {
     ffe:	80 91 75 04 	lds	r24, 0x0475	; 0x800475 <g_status>
    1002:	81 ff       	sbrs	r24, 1
    1004:	56 c0       	rjmp	.+172    	; 0x10b2 <__vector_13+0xf8>
    1006:	40 91 79 04 	lds	r20, 0x0479	; 0x800479 <g_audio_out_loudness>
    100a:	44 23       	and	r20, r20
    100c:	09 f4       	brne	.+2      	; 0x1010 <__vector_13+0x56>
    100e:	51 c0       	rjmp	.+162    	; 0x10b2 <__vector_13+0xf8>
		int16_t l_audio_pwm_inc = 3691 + (g_showData.clkState_phaseDeg100 >> 2);  // (880 Hz / 15625 Hz) * 16384 Steps * 8
    1010:	80 91 4e 04 	lds	r24, 0x044E	; 0x80044e <g_showData+0x18>
    1014:	90 91 4f 04 	lds	r25, 0x044F	; 0x80044f <g_showData+0x19>
    1018:	95 95       	asr	r25
    101a:	87 95       	ror	r24
    101c:	95 95       	asr	r25
    101e:	87 95       	ror	r24
    1020:	9c 01       	movw	r18, r24
    1022:	25 59       	subi	r18, 0x95	; 149
    1024:	31 4f       	sbci	r19, 0xF1	; 241

		/* Generate triangle signal */
		if (g_audio_pwm_ramp_dwn) {
    1026:	50 91 76 04 	lds	r21, 0x0476	; 0x800476 <g_audio_pwm_ramp_dwn>
    102a:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <g_audio_pwm_accu>
    102e:	90 91 78 04 	lds	r25, 0x0478	; 0x800478 <g_audio_pwm_accu+0x1>
    1032:	55 23       	and	r21, r21
    1034:	b1 f0       	breq	.+44     	; 0x1062 <__vector_13+0xa8>
			g_audio_pwm_accu -= l_audio_pwm_inc;
    1036:	82 1b       	sub	r24, r18
    1038:	93 0b       	sbc	r25, r19
    103a:	90 93 78 04 	sts	0x0478, r25	; 0x800478 <g_audio_pwm_accu+0x1>
    103e:	80 93 77 04 	sts	0x0477, r24	; 0x800477 <g_audio_pwm_accu>
			if (g_audio_pwm_accu <= -16383) {
    1042:	82 30       	cpi	r24, 0x02	; 2
    1044:	20 ec       	ldi	r18, 0xC0	; 192
    1046:	92 07       	cpc	r25, r18
    1048:	14 f5       	brge	.+68     	; 0x108e <__vector_13+0xd4>
				g_audio_pwm_ramp_dwn = false;
    104a:	10 92 76 04 	sts	0x0476, r1	; 0x800476 <g_audio_pwm_ramp_dwn>
				int16_t residue = -g_audio_pwm_accu - 16383;
				g_audio_pwm_accu = -16383 + residue;
    104e:	22 e0       	ldi	r18, 0x02	; 2
    1050:	30 e8       	ldi	r19, 0x80	; 128
    1052:	b9 01       	movw	r22, r18
    1054:	68 1b       	sub	r22, r24
    1056:	79 0b       	sbc	r23, r25
    1058:	70 93 78 04 	sts	0x0478, r23	; 0x800478 <g_audio_pwm_accu+0x1>
    105c:	60 93 77 04 	sts	0x0477, r22	; 0x800477 <g_audio_pwm_accu>
    1060:	16 c0       	rjmp	.+44     	; 0x108e <__vector_13+0xd4>
			}
		} else {
			g_audio_pwm_accu += l_audio_pwm_inc;
    1062:	82 0f       	add	r24, r18
    1064:	93 1f       	adc	r25, r19
    1066:	90 93 78 04 	sts	0x0478, r25	; 0x800478 <g_audio_pwm_accu+0x1>
    106a:	80 93 77 04 	sts	0x0477, r24	; 0x800477 <g_audio_pwm_accu>
			if (g_audio_pwm_accu >= +16383) {
    106e:	8f 3f       	cpi	r24, 0xFF	; 255
    1070:	7f e3       	ldi	r23, 0x3F	; 63
    1072:	97 07       	cpc	r25, r23
    1074:	64 f0       	brlt	.+24     	; 0x108e <__vector_13+0xd4>
				g_audio_pwm_ramp_dwn = true;
    1076:	21 e0       	ldi	r18, 0x01	; 1
    1078:	20 93 76 04 	sts	0x0476, r18	; 0x800476 <g_audio_pwm_ramp_dwn>
				int16_t residue = g_audio_pwm_accu - 16383;
				g_audio_pwm_accu = 16383 - residue;
    107c:	2e ef       	ldi	r18, 0xFE	; 254
    107e:	3f e7       	ldi	r19, 0x7F	; 127
    1080:	b9 01       	movw	r22, r18
    1082:	68 1b       	sub	r22, r24
    1084:	79 0b       	sbc	r23, r25
    1086:	70 93 78 04 	sts	0x0478, r23	; 0x800478 <g_audio_pwm_accu+0x1>
    108a:	60 93 77 04 	sts	0x0477, r22	; 0x800477 <g_audio_pwm_accu>
			}
		}

		int16_t audio_out = 256 + (g_audio_pwm_accu >> (15 - g_audio_out_loudness));  // 6 + 9
    108e:	2f e0       	ldi	r18, 0x0F	; 15
    1090:	30 e0       	ldi	r19, 0x00	; 0
    1092:	24 1b       	sub	r18, r20
    1094:	31 09       	sbc	r19, r1
    1096:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <g_audio_pwm_accu>
    109a:	90 91 78 04 	lds	r25, 0x0478	; 0x800478 <g_audio_pwm_accu+0x1>
    109e:	02 c0       	rjmp	.+4      	; 0x10a4 <__vector_13+0xea>
    10a0:	95 95       	asr	r25
    10a2:	87 95       	ror	r24
    10a4:	2a 95       	dec	r18
    10a6:	e2 f7       	brpl	.-8      	; 0x10a0 <__vector_13+0xe6>
    10a8:	93 95       	inc	r25
		OCR1AH = (uint8_t) (audio_out >> 8);					// 9 bit
    10aa:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
		OCR1AL = (uint8_t) (audio_out & 0xff);
    10ae:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	}
}
    10b2:	bf 91       	pop	r27
    10b4:	af 91       	pop	r26
    10b6:	9f 91       	pop	r25
    10b8:	8f 91       	pop	r24
    10ba:	7f 91       	pop	r23
    10bc:	6f 91       	pop	r22
    10be:	5f 91       	pop	r21
    10c0:	4f 91       	pop	r20
    10c2:	3f 91       	pop	r19
    10c4:	2f 91       	pop	r18
    10c6:	0f 90       	pop	r0
    10c8:	0f be       	out	0x3f, r0	; 63
    10ca:	0f 90       	pop	r0
    10cc:	1f 90       	pop	r1
    10ce:	18 95       	reti

000010d0 <__vector_21__bottom>:
	__vector_21__bottom(reason, adc_val, adc_light_last, adc_temp_last);
}

/* do not static this function to avoid code inlining that would inherit many push operations in the critical section */
void __vector_21__bottom(uint8_t reason, uint16_t adc_val, uint16_t adc_light_last, uint16_t adc_temp_last)
{
    10d0:	8f 92       	push	r8
    10d2:	9f 92       	push	r9
    10d4:	af 92       	push	r10
    10d6:	bf 92       	push	r11
    10d8:	cf 92       	push	r12
    10da:	df 92       	push	r13
    10dc:	ef 92       	push	r14
    10de:	ff 92       	push	r15
    10e0:	cf 93       	push	r28
    10e2:	df 93       	push	r29
    10e4:	eb 01       	movw	r28, r22
	/* Low pass filtering and enhancing the data depth */
	if (reason == ADC_STATE_VLD_LDR) {
    10e6:	81 30       	cpi	r24, 0x01	; 1
    10e8:	e9 f5       	brne	.+122    	; 0x1164 <__vector_21__bottom+0x94>
		float calc = g_adc_light ?  0.998f * g_adc_light + 0.002f * adc_val : adc_val;			// load with initial value if none is set before
    10ea:	c0 90 84 04 	lds	r12, 0x0484	; 0x800484 <g_adc_light>
    10ee:	d0 90 85 04 	lds	r13, 0x0485	; 0x800485 <g_adc_light+0x1>
    10f2:	e0 90 86 04 	lds	r14, 0x0486	; 0x800486 <g_adc_light+0x2>
    10f6:	f0 90 87 04 	lds	r15, 0x0487	; 0x800487 <g_adc_light+0x3>
    10fa:	20 e0       	ldi	r18, 0x00	; 0
    10fc:	30 e0       	ldi	r19, 0x00	; 0
    10fe:	a9 01       	movw	r20, r18
    1100:	c7 01       	movw	r24, r14
    1102:	b6 01       	movw	r22, r12
    1104:	0e 94 66 20 	call	0x40cc	; 0x40cc <__cmpsf2>
    1108:	ae 01       	movw	r20, r28
    110a:	60 e0       	ldi	r22, 0x00	; 0
    110c:	70 e0       	ldi	r23, 0x00	; 0
    110e:	88 23       	and	r24, r24
    1110:	d9 f0       	breq	.+54     	; 0x1148 <__vector_21__bottom+0x78>
    1112:	cb 01       	movw	r24, r22
    1114:	ba 01       	movw	r22, r20
    1116:	0e 94 03 21 	call	0x4206	; 0x4206 <__floatunsisf>
    111a:	2f e6       	ldi	r18, 0x6F	; 111
    111c:	32 e1       	ldi	r19, 0x12	; 18
    111e:	43 e0       	ldi	r20, 0x03	; 3
    1120:	5b e3       	ldi	r21, 0x3B	; 59
    1122:	0e 94 0c 22 	call	0x4418	; 0x4418 <__mulsf3>
    1126:	4b 01       	movw	r8, r22
    1128:	5c 01       	movw	r10, r24
    112a:	2e ee       	ldi	r18, 0xEE	; 238
    112c:	3c e7       	ldi	r19, 0x7C	; 124
    112e:	4f e7       	ldi	r20, 0x7F	; 127
    1130:	5f e3       	ldi	r21, 0x3F	; 63
    1132:	c7 01       	movw	r24, r14
    1134:	b6 01       	movw	r22, r12
    1136:	0e 94 0c 22 	call	0x4418	; 0x4418 <__mulsf3>
    113a:	9b 01       	movw	r18, r22
    113c:	ac 01       	movw	r20, r24
    113e:	c5 01       	movw	r24, r10
    1140:	b4 01       	movw	r22, r8
    1142:	0e 94 02 20 	call	0x4004	; 0x4004 <__addsf3>
    1146:	04 c0       	rjmp	.+8      	; 0x1150 <__vector_21__bottom+0x80>
    1148:	cb 01       	movw	r24, r22
    114a:	ba 01       	movw	r22, r20
    114c:	0e 94 03 21 	call	0x4206	; 0x4206 <__floatunsisf>

		cpu_irq_disable();
    1150:	f8 94       	cli
		g_adc_light = calc;
    1152:	60 93 84 04 	sts	0x0484, r22	; 0x800484 <g_adc_light>
    1156:	70 93 85 04 	sts	0x0485, r23	; 0x800485 <g_adc_light+0x1>
    115a:	80 93 86 04 	sts	0x0486, r24	; 0x800486 <g_adc_light+0x2>
    115e:	90 93 87 04 	sts	0x0487, r25	; 0x800487 <g_adc_light+0x3>
    1162:	3e c0       	rjmp	.+124    	; 0x11e0 <__vector_21__bottom+0x110>

	} else if (reason == ADC_STATE_VLD_TEMP) {
    1164:	83 30       	cpi	r24, 0x03	; 3
    1166:	e1 f5       	brne	.+120    	; 0x11e0 <__vector_21__bottom+0x110>
		float calc = g_adc_temp ?  0.9995f * g_adc_temp + 0.0005f * adc_val : adc_val;		// load with initial value if none is set before
    1168:	c0 90 80 04 	lds	r12, 0x0480	; 0x800480 <g_adc_temp>
    116c:	d0 90 81 04 	lds	r13, 0x0481	; 0x800481 <g_adc_temp+0x1>
    1170:	e0 90 82 04 	lds	r14, 0x0482	; 0x800482 <g_adc_temp+0x2>
    1174:	f0 90 83 04 	lds	r15, 0x0483	; 0x800483 <g_adc_temp+0x3>
    1178:	20 e0       	ldi	r18, 0x00	; 0
    117a:	30 e0       	ldi	r19, 0x00	; 0
    117c:	a9 01       	movw	r20, r18
    117e:	c7 01       	movw	r24, r14
    1180:	b6 01       	movw	r22, r12
    1182:	0e 94 66 20 	call	0x40cc	; 0x40cc <__cmpsf2>
    1186:	ae 01       	movw	r20, r28
    1188:	60 e0       	ldi	r22, 0x00	; 0
    118a:	70 e0       	ldi	r23, 0x00	; 0
    118c:	88 23       	and	r24, r24
    118e:	d9 f0       	breq	.+54     	; 0x11c6 <__vector_21__bottom+0xf6>
    1190:	cb 01       	movw	r24, r22
    1192:	ba 01       	movw	r22, r20
    1194:	0e 94 03 21 	call	0x4206	; 0x4206 <__floatunsisf>
    1198:	2f e6       	ldi	r18, 0x6F	; 111
    119a:	32 e1       	ldi	r19, 0x12	; 18
    119c:	43 e0       	ldi	r20, 0x03	; 3
    119e:	5a e3       	ldi	r21, 0x3A	; 58
    11a0:	0e 94 0c 22 	call	0x4418	; 0x4418 <__mulsf3>
    11a4:	4b 01       	movw	r8, r22
    11a6:	5c 01       	movw	r10, r24
    11a8:	2b e3       	ldi	r18, 0x3B	; 59
    11aa:	3f ed       	ldi	r19, 0xDF	; 223
    11ac:	4f e7       	ldi	r20, 0x7F	; 127
    11ae:	5f e3       	ldi	r21, 0x3F	; 63
    11b0:	c7 01       	movw	r24, r14
    11b2:	b6 01       	movw	r22, r12
    11b4:	0e 94 0c 22 	call	0x4418	; 0x4418 <__mulsf3>
    11b8:	9b 01       	movw	r18, r22
    11ba:	ac 01       	movw	r20, r24
    11bc:	c5 01       	movw	r24, r10
    11be:	b4 01       	movw	r22, r8
    11c0:	0e 94 02 20 	call	0x4004	; 0x4004 <__addsf3>
    11c4:	04 c0       	rjmp	.+8      	; 0x11ce <__vector_21__bottom+0xfe>
    11c6:	cb 01       	movw	r24, r22
    11c8:	ba 01       	movw	r22, r20
    11ca:	0e 94 03 21 	call	0x4206	; 0x4206 <__floatunsisf>

		cpu_irq_disable();
    11ce:	f8 94       	cli
		g_adc_temp = calc;
    11d0:	60 93 80 04 	sts	0x0480, r22	; 0x800480 <g_adc_temp>
    11d4:	70 93 81 04 	sts	0x0481, r23	; 0x800481 <g_adc_temp+0x1>
    11d8:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <g_adc_temp+0x2>
    11dc:	90 93 83 04 	sts	0x0483, r25	; 0x800483 <g_adc_temp+0x3>
	}
}
    11e0:	df 91       	pop	r29
    11e2:	cf 91       	pop	r28
    11e4:	ff 90       	pop	r15
    11e6:	ef 90       	pop	r14
    11e8:	df 90       	pop	r13
    11ea:	cf 90       	pop	r12
    11ec:	bf 90       	pop	r11
    11ee:	af 90       	pop	r10
    11f0:	9f 90       	pop	r9
    11f2:	8f 90       	pop	r8
    11f4:	08 95       	ret

000011f6 <__vector_21>:
{	/* USART, TX - Complete */
	s_bad_interrupt();
}

ISR(__vector_21, ISR_BLOCK)
{	/* ADC */
    11f6:	1f 92       	push	r1
    11f8:	0f 92       	push	r0
    11fa:	0f b6       	in	r0, 0x3f	; 63
    11fc:	0f 92       	push	r0
    11fe:	11 24       	eor	r1, r1
    1200:	cf 92       	push	r12
    1202:	df 92       	push	r13
    1204:	ef 92       	push	r14
    1206:	ff 92       	push	r15
    1208:	1f 93       	push	r17
    120a:	2f 93       	push	r18
    120c:	3f 93       	push	r19
    120e:	4f 93       	push	r20
    1210:	5f 93       	push	r21
    1212:	6f 93       	push	r22
    1214:	7f 93       	push	r23
    1216:	8f 93       	push	r24
    1218:	9f 93       	push	r25
    121a:	af 93       	push	r26
    121c:	bf 93       	push	r27
    121e:	cf 93       	push	r28
    1220:	df 93       	push	r29
    1222:	ef 93       	push	r30
    1224:	ff 93       	push	r31
	uint16_t adc_val;
	uint8_t  reason = g_adc_state;
    1226:	10 91 88 04 	lds	r17, 0x0488	; 0x800488 <g_adc_state>

	/* CLI part */
	adc_val  = ADCL;
    122a:	c0 91 78 00 	lds	r28, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
	adc_val |= ADCH << 8;
    122e:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
    1232:	d0 e0       	ldi	r29, 0x00	; 0
    1234:	d8 2b       	or	r29, r24

	//TIFR1 |= _BV(TOV1);							// Reset Timer1 overflow status bit (no ISR for TOV1 activated!)

	switch (g_adc_state) {
    1236:	11 30       	cpi	r17, 0x01	; 1
    1238:	59 f0       	breq	.+22     	; 0x1250 <__vector_21+0x5a>
    123a:	30 f0       	brcs	.+12     	; 0x1248 <__vector_21+0x52>
    123c:	12 30       	cpi	r17, 0x02	; 2
    123e:	79 f4       	brne	.+30     	; 0x125e <__vector_21+0x68>
			g_adc_state = ADC_STATE_PRE_TEMP;
		break;

		case ADC_STATE_PRE_TEMP:
			// drop one ADC value after switching MUX
			g_adc_state = ADC_STATE_VLD_TEMP;
    1240:	83 e0       	ldi	r24, 0x03	; 3
    1242:	80 93 88 04 	sts	0x0488, r24	; 0x800488 <g_adc_state>
		break;
    1246:	10 c0       	rjmp	.+32     	; 0x1268 <__vector_21+0x72>
	//TIFR1 |= _BV(TOV1);							// Reset Timer1 overflow status bit (no ISR for TOV1 activated!)

	switch (g_adc_state) {
		case ADC_STATE_PRE_LDR:
			// drop one ADC value after switching MUX
			g_adc_state = ADC_STATE_VLD_LDR;
    1248:	81 e0       	ldi	r24, 0x01	; 1
    124a:	80 93 88 04 	sts	0x0488, r24	; 0x800488 <g_adc_state>
		break;
    124e:	0c c0       	rjmp	.+24     	; 0x1268 <__vector_21+0x72>
 *
 * \param regval   ADC input mux selection and voltage reference
 */
static inline void adc_set_admux(uint8_t regval)
{
	ADMUX = regval;
    1250:	88 ec       	ldi	r24, 0xC8	; 200
    1252:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>

		case ADC_STATE_VLD_LDR:
			adc_set_admux(ADC_MUX_TEMPSENSE | ADC_VREF_1V1 | ADC_ADJUSTMENT_RIGHT);
			g_adc_state = ADC_STATE_PRE_TEMP;
    1256:	82 e0       	ldi	r24, 0x02	; 2
    1258:	80 93 88 04 	sts	0x0488, r24	; 0x800488 <g_adc_state>
		break;
    125c:	05 c0       	rjmp	.+10     	; 0x1268 <__vector_21+0x72>
    125e:	80 ec       	ldi	r24, 0xC0	; 192
    1260:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>

		case ADC_STATE_VLD_TEMP:
			// fall-through.
		default:
			adc_set_admux(ADC_MUX_ADC0 | ADC_VREF_1V1 | ADC_ADJUSTMENT_RIGHT);
			g_adc_state = ADC_STATE_PRE_LDR;
    1264:	10 92 88 04 	sts	0x0488, r1	; 0x800488 <g_adc_state>
	}

	uint16_t adc_light_last = g_adc_light;
    1268:	60 91 84 04 	lds	r22, 0x0484	; 0x800484 <g_adc_light>
    126c:	70 91 85 04 	lds	r23, 0x0485	; 0x800485 <g_adc_light+0x1>
    1270:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <g_adc_light+0x2>
    1274:	90 91 87 04 	lds	r25, 0x0487	; 0x800487 <g_adc_light+0x3>
    1278:	0e 94 d7 20 	call	0x41ae	; 0x41ae <__fixunssfsi>
    127c:	6b 01       	movw	r12, r22
    127e:	7c 01       	movw	r14, r24
	uint16_t adc_temp_last  = g_adc_temp;
    1280:	60 91 80 04 	lds	r22, 0x0480	; 0x800480 <g_adc_temp>
    1284:	70 91 81 04 	lds	r23, 0x0481	; 0x800481 <g_adc_temp+0x1>
    1288:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <g_adc_temp+0x2>
    128c:	90 91 83 04 	lds	r25, 0x0483	; 0x800483 <g_adc_temp+0x3>
    1290:	0e 94 d7 20 	call	0x41ae	; 0x41ae <__fixunssfsi>

	/* SEI part */
	cpu_irq_enable();
    1294:	78 94       	sei

	__vector_21__bottom(reason, adc_val, adc_light_last, adc_temp_last);
    1296:	9b 01       	movw	r18, r22
    1298:	a6 01       	movw	r20, r12
    129a:	be 01       	movw	r22, r28
    129c:	81 2f       	mov	r24, r17
    129e:	18 df       	rcall	.-464    	; 0x10d0 <__vector_21__bottom>
}
    12a0:	ff 91       	pop	r31
    12a2:	ef 91       	pop	r30
    12a4:	df 91       	pop	r29
    12a6:	cf 91       	pop	r28
    12a8:	bf 91       	pop	r27
    12aa:	af 91       	pop	r26
    12ac:	9f 91       	pop	r25
    12ae:	8f 91       	pop	r24
    12b0:	7f 91       	pop	r23
    12b2:	6f 91       	pop	r22
    12b4:	5f 91       	pop	r21
    12b6:	4f 91       	pop	r20
    12b8:	3f 91       	pop	r19
    12ba:	2f 91       	pop	r18
    12bc:	1f 91       	pop	r17
    12be:	ff 90       	pop	r15
    12c0:	ef 90       	pop	r14
    12c2:	df 90       	pop	r13
    12c4:	cf 90       	pop	r12
    12c6:	0f 90       	pop	r0
    12c8:	0f be       	out	0x3f, r0	; 63
    12ca:	0f 90       	pop	r0
    12cc:	1f 90       	pop	r1
    12ce:	18 95       	reti

000012d0 <__vector_24>:
{	/* ANALOG COMP */
	s_bad_interrupt();
}

ISR(__vector_24, ISR_BLOCK)
{	/* TWI */
    12d0:	1f 92       	push	r1
    12d2:	0f 92       	push	r0
    12d4:	0f b6       	in	r0, 0x3f	; 63
    12d6:	0f 92       	push	r0
    12d8:	11 24       	eor	r1, r1
    12da:	2f 93       	push	r18
    12dc:	3f 93       	push	r19
    12de:	4f 93       	push	r20
    12e0:	5f 93       	push	r21
    12e2:	6f 93       	push	r22
    12e4:	7f 93       	push	r23
    12e6:	8f 93       	push	r24
    12e8:	9f 93       	push	r25
    12ea:	af 93       	push	r26
    12ec:	bf 93       	push	r27
    12ee:	cf 93       	push	r28
    12f0:	df 93       	push	r29
    12f2:	ef 93       	push	r30
    12f4:	ff 93       	push	r31
	uint8_t tws = TWSR & (0b11111 << TWS3);
    12f6:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	uint8_t twd = TWDR;
    12fa:	60 91 bb 00 	lds	r22, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	uint8_t twcr_cur = TWCR;
    12fe:	cc eb       	ldi	r28, 0xBC	; 188
    1300:	d0 e0       	ldi	r29, 0x00	; 0
    1302:	48 81       	ld	r20, Y

	uint8_t twcr_new = __vector_24__bottom(tws, twd, twcr_cur);
    1304:	88 7f       	andi	r24, 0xF8	; 248
    1306:	0e 94 0b 1c 	call	0x3816	; 0x3816 <__vector_24__bottom>
	TWCR = twcr_new | _BV(TWINT) | _BV(TWEN) | _BV(TWIE);
    130a:	85 68       	ori	r24, 0x85	; 133
    130c:	88 83       	st	Y, r24
}
    130e:	ff 91       	pop	r31
    1310:	ef 91       	pop	r30
    1312:	df 91       	pop	r29
    1314:	cf 91       	pop	r28
    1316:	bf 91       	pop	r27
    1318:	af 91       	pop	r26
    131a:	9f 91       	pop	r25
    131c:	8f 91       	pop	r24
    131e:	7f 91       	pop	r23
    1320:	6f 91       	pop	r22
    1322:	5f 91       	pop	r21
    1324:	4f 91       	pop	r20
    1326:	3f 91       	pop	r19
    1328:	2f 91       	pop	r18
    132a:	0f 90       	pop	r0
    132c:	0f be       	out	0x3f, r0	; 63
    132e:	0f 90       	pop	r0
    1330:	1f 90       	pop	r1
    1332:	18 95       	reti

00001334 <__vector_25>:

ISR(__vector_25, ISR_BLOCK)
{	/* SPM READY - Store Program Memory Ready */
    1334:	1f 92       	push	r1
    1336:	0f 92       	push	r0
    1338:	0f b6       	in	r0, 0x3f	; 63
    133a:	0f 92       	push	r0
    133c:	11 24       	eor	r1, r1
    133e:	2f 93       	push	r18
    1340:	3f 93       	push	r19
    1342:	4f 93       	push	r20
    1344:	5f 93       	push	r21
    1346:	6f 93       	push	r22
    1348:	7f 93       	push	r23
    134a:	8f 93       	push	r24
    134c:	9f 93       	push	r25
    134e:	af 93       	push	r26
    1350:	bf 93       	push	r27
    1352:	ef 93       	push	r30

/* ISR routines */

static void s_bad_interrupt(void)
{
	asm_break();
    1354:	ff 93       	push	r31
}

ISR(__vector_25, ISR_BLOCK)
{	/* SPM READY - Store Program Memory Ready */
	s_bad_interrupt();
}
    1356:	94 dd       	rcall	.-1240   	; 0xe80 <asm_break>
    1358:	ff 91       	pop	r31
    135a:	ef 91       	pop	r30
    135c:	bf 91       	pop	r27
    135e:	af 91       	pop	r26
    1360:	9f 91       	pop	r25
    1362:	8f 91       	pop	r24
    1364:	7f 91       	pop	r23
    1366:	6f 91       	pop	r22
    1368:	5f 91       	pop	r21
    136a:	4f 91       	pop	r20
    136c:	3f 91       	pop	r19
    136e:	2f 91       	pop	r18
    1370:	0f 90       	pop	r0
    1372:	0f be       	out	0x3f, r0	; 63
    1374:	0f 90       	pop	r0
    1376:	1f 90       	pop	r1
    1378:	18 95       	reti

0000137a <__vector_23>:
    137a:	1f 92       	push	r1
    137c:	0f 92       	push	r0
    137e:	0f b6       	in	r0, 0x3f	; 63
    1380:	0f 92       	push	r0
    1382:	11 24       	eor	r1, r1
    1384:	2f 93       	push	r18
    1386:	3f 93       	push	r19
    1388:	4f 93       	push	r20
    138a:	5f 93       	push	r21
    138c:	6f 93       	push	r22
    138e:	7f 93       	push	r23
    1390:	8f 93       	push	r24
    1392:	9f 93       	push	r25
    1394:	af 93       	push	r26
    1396:	bf 93       	push	r27
    1398:	ef 93       	push	r30
    139a:	ff 93       	push	r31
    139c:	cb df       	rcall	.-106    	; 0x1334 <__vector_25>
    139e:	ff 91       	pop	r31
    13a0:	ef 91       	pop	r30
    13a2:	bf 91       	pop	r27
    13a4:	af 91       	pop	r26
    13a6:	9f 91       	pop	r25
    13a8:	8f 91       	pop	r24
    13aa:	7f 91       	pop	r23
    13ac:	6f 91       	pop	r22
    13ae:	5f 91       	pop	r21
    13b0:	4f 91       	pop	r20
    13b2:	3f 91       	pop	r19
    13b4:	2f 91       	pop	r18
    13b6:	0f 90       	pop	r0
    13b8:	0f be       	out	0x3f, r0	; 63
    13ba:	0f 90       	pop	r0
    13bc:	1f 90       	pop	r1
    13be:	18 95       	reti

000013c0 <__vector_22>:
    13c0:	1f 92       	push	r1
    13c2:	0f 92       	push	r0
    13c4:	0f b6       	in	r0, 0x3f	; 63
    13c6:	0f 92       	push	r0
    13c8:	11 24       	eor	r1, r1
    13ca:	2f 93       	push	r18
    13cc:	3f 93       	push	r19
    13ce:	4f 93       	push	r20
    13d0:	5f 93       	push	r21
    13d2:	6f 93       	push	r22
    13d4:	7f 93       	push	r23
    13d6:	8f 93       	push	r24
    13d8:	9f 93       	push	r25
    13da:	af 93       	push	r26
    13dc:	bf 93       	push	r27
    13de:	ef 93       	push	r30
    13e0:	ff 93       	push	r31
    13e2:	a8 df       	rcall	.-176    	; 0x1334 <__vector_25>
    13e4:	ff 91       	pop	r31
    13e6:	ef 91       	pop	r30
    13e8:	bf 91       	pop	r27
    13ea:	af 91       	pop	r26
    13ec:	9f 91       	pop	r25
    13ee:	8f 91       	pop	r24
    13f0:	7f 91       	pop	r23
    13f2:	6f 91       	pop	r22
    13f4:	5f 91       	pop	r21
    13f6:	4f 91       	pop	r20
    13f8:	3f 91       	pop	r19
    13fa:	2f 91       	pop	r18
    13fc:	0f 90       	pop	r0
    13fe:	0f be       	out	0x3f, r0	; 63
    1400:	0f 90       	pop	r0
    1402:	1f 90       	pop	r1
    1404:	18 95       	reti

00001406 <__vector_20>:
    1406:	1f 92       	push	r1
    1408:	0f 92       	push	r0
    140a:	0f b6       	in	r0, 0x3f	; 63
    140c:	0f 92       	push	r0
    140e:	11 24       	eor	r1, r1
    1410:	2f 93       	push	r18
    1412:	3f 93       	push	r19
    1414:	4f 93       	push	r20
    1416:	5f 93       	push	r21
    1418:	6f 93       	push	r22
    141a:	7f 93       	push	r23
    141c:	8f 93       	push	r24
    141e:	9f 93       	push	r25
    1420:	af 93       	push	r26
    1422:	bf 93       	push	r27
    1424:	ef 93       	push	r30
    1426:	ff 93       	push	r31
    1428:	85 df       	rcall	.-246    	; 0x1334 <__vector_25>
    142a:	ff 91       	pop	r31
    142c:	ef 91       	pop	r30
    142e:	bf 91       	pop	r27
    1430:	af 91       	pop	r26
    1432:	9f 91       	pop	r25
    1434:	8f 91       	pop	r24
    1436:	7f 91       	pop	r23
    1438:	6f 91       	pop	r22
    143a:	5f 91       	pop	r21
    143c:	4f 91       	pop	r20
    143e:	3f 91       	pop	r19
    1440:	2f 91       	pop	r18
    1442:	0f 90       	pop	r0
    1444:	0f be       	out	0x3f, r0	; 63
    1446:	0f 90       	pop	r0
    1448:	1f 90       	pop	r1
    144a:	18 95       	reti

0000144c <__vector_19>:
    144c:	1f 92       	push	r1
    144e:	0f 92       	push	r0
    1450:	0f b6       	in	r0, 0x3f	; 63
    1452:	0f 92       	push	r0
    1454:	11 24       	eor	r1, r1
    1456:	2f 93       	push	r18
    1458:	3f 93       	push	r19
    145a:	4f 93       	push	r20
    145c:	5f 93       	push	r21
    145e:	6f 93       	push	r22
    1460:	7f 93       	push	r23
    1462:	8f 93       	push	r24
    1464:	9f 93       	push	r25
    1466:	af 93       	push	r26
    1468:	bf 93       	push	r27
    146a:	ef 93       	push	r30
    146c:	ff 93       	push	r31
    146e:	62 df       	rcall	.-316    	; 0x1334 <__vector_25>
    1470:	ff 91       	pop	r31
    1472:	ef 91       	pop	r30
    1474:	bf 91       	pop	r27
    1476:	af 91       	pop	r26
    1478:	9f 91       	pop	r25
    147a:	8f 91       	pop	r24
    147c:	7f 91       	pop	r23
    147e:	6f 91       	pop	r22
    1480:	5f 91       	pop	r21
    1482:	4f 91       	pop	r20
    1484:	3f 91       	pop	r19
    1486:	2f 91       	pop	r18
    1488:	0f 90       	pop	r0
    148a:	0f be       	out	0x3f, r0	; 63
    148c:	0f 90       	pop	r0
    148e:	1f 90       	pop	r1
    1490:	18 95       	reti

00001492 <__vector_18>:
    1492:	1f 92       	push	r1
    1494:	0f 92       	push	r0
    1496:	0f b6       	in	r0, 0x3f	; 63
    1498:	0f 92       	push	r0
    149a:	11 24       	eor	r1, r1
    149c:	2f 93       	push	r18
    149e:	3f 93       	push	r19
    14a0:	4f 93       	push	r20
    14a2:	5f 93       	push	r21
    14a4:	6f 93       	push	r22
    14a6:	7f 93       	push	r23
    14a8:	8f 93       	push	r24
    14aa:	9f 93       	push	r25
    14ac:	af 93       	push	r26
    14ae:	bf 93       	push	r27
    14b0:	ef 93       	push	r30
    14b2:	ff 93       	push	r31
    14b4:	3f df       	rcall	.-386    	; 0x1334 <__vector_25>
    14b6:	ff 91       	pop	r31
    14b8:	ef 91       	pop	r30
    14ba:	bf 91       	pop	r27
    14bc:	af 91       	pop	r26
    14be:	9f 91       	pop	r25
    14c0:	8f 91       	pop	r24
    14c2:	7f 91       	pop	r23
    14c4:	6f 91       	pop	r22
    14c6:	5f 91       	pop	r21
    14c8:	4f 91       	pop	r20
    14ca:	3f 91       	pop	r19
    14cc:	2f 91       	pop	r18
    14ce:	0f 90       	pop	r0
    14d0:	0f be       	out	0x3f, r0	; 63
    14d2:	0f 90       	pop	r0
    14d4:	1f 90       	pop	r1
    14d6:	18 95       	reti

000014d8 <__vector_17>:
    14d8:	1f 92       	push	r1
    14da:	0f 92       	push	r0
    14dc:	0f b6       	in	r0, 0x3f	; 63
    14de:	0f 92       	push	r0
    14e0:	11 24       	eor	r1, r1
    14e2:	2f 93       	push	r18
    14e4:	3f 93       	push	r19
    14e6:	4f 93       	push	r20
    14e8:	5f 93       	push	r21
    14ea:	6f 93       	push	r22
    14ec:	7f 93       	push	r23
    14ee:	8f 93       	push	r24
    14f0:	9f 93       	push	r25
    14f2:	af 93       	push	r26
    14f4:	bf 93       	push	r27
    14f6:	ef 93       	push	r30
    14f8:	ff 93       	push	r31
    14fa:	1c df       	rcall	.-456    	; 0x1334 <__vector_25>
    14fc:	ff 91       	pop	r31
    14fe:	ef 91       	pop	r30
    1500:	bf 91       	pop	r27
    1502:	af 91       	pop	r26
    1504:	9f 91       	pop	r25
    1506:	8f 91       	pop	r24
    1508:	7f 91       	pop	r23
    150a:	6f 91       	pop	r22
    150c:	5f 91       	pop	r21
    150e:	4f 91       	pop	r20
    1510:	3f 91       	pop	r19
    1512:	2f 91       	pop	r18
    1514:	0f 90       	pop	r0
    1516:	0f be       	out	0x3f, r0	; 63
    1518:	0f 90       	pop	r0
    151a:	1f 90       	pop	r1
    151c:	18 95       	reti

0000151e <__vector_16>:
    151e:	1f 92       	push	r1
    1520:	0f 92       	push	r0
    1522:	0f b6       	in	r0, 0x3f	; 63
    1524:	0f 92       	push	r0
    1526:	11 24       	eor	r1, r1
    1528:	2f 93       	push	r18
    152a:	3f 93       	push	r19
    152c:	4f 93       	push	r20
    152e:	5f 93       	push	r21
    1530:	6f 93       	push	r22
    1532:	7f 93       	push	r23
    1534:	8f 93       	push	r24
    1536:	9f 93       	push	r25
    1538:	af 93       	push	r26
    153a:	bf 93       	push	r27
    153c:	ef 93       	push	r30
    153e:	ff 93       	push	r31
    1540:	f9 de       	rcall	.-526    	; 0x1334 <__vector_25>
    1542:	ff 91       	pop	r31
    1544:	ef 91       	pop	r30
    1546:	bf 91       	pop	r27
    1548:	af 91       	pop	r26
    154a:	9f 91       	pop	r25
    154c:	8f 91       	pop	r24
    154e:	7f 91       	pop	r23
    1550:	6f 91       	pop	r22
    1552:	5f 91       	pop	r21
    1554:	4f 91       	pop	r20
    1556:	3f 91       	pop	r19
    1558:	2f 91       	pop	r18
    155a:	0f 90       	pop	r0
    155c:	0f be       	out	0x3f, r0	; 63
    155e:	0f 90       	pop	r0
    1560:	1f 90       	pop	r1
    1562:	18 95       	reti

00001564 <__vector_15>:
    1564:	1f 92       	push	r1
    1566:	0f 92       	push	r0
    1568:	0f b6       	in	r0, 0x3f	; 63
    156a:	0f 92       	push	r0
    156c:	11 24       	eor	r1, r1
    156e:	2f 93       	push	r18
    1570:	3f 93       	push	r19
    1572:	4f 93       	push	r20
    1574:	5f 93       	push	r21
    1576:	6f 93       	push	r22
    1578:	7f 93       	push	r23
    157a:	8f 93       	push	r24
    157c:	9f 93       	push	r25
    157e:	af 93       	push	r26
    1580:	bf 93       	push	r27
    1582:	ef 93       	push	r30
    1584:	ff 93       	push	r31
    1586:	d6 de       	rcall	.-596    	; 0x1334 <__vector_25>
    1588:	ff 91       	pop	r31
    158a:	ef 91       	pop	r30
    158c:	bf 91       	pop	r27
    158e:	af 91       	pop	r26
    1590:	9f 91       	pop	r25
    1592:	8f 91       	pop	r24
    1594:	7f 91       	pop	r23
    1596:	6f 91       	pop	r22
    1598:	5f 91       	pop	r21
    159a:	4f 91       	pop	r20
    159c:	3f 91       	pop	r19
    159e:	2f 91       	pop	r18
    15a0:	0f 90       	pop	r0
    15a2:	0f be       	out	0x3f, r0	; 63
    15a4:	0f 90       	pop	r0
    15a6:	1f 90       	pop	r1
    15a8:	18 95       	reti

000015aa <__vector_14>:
    15aa:	1f 92       	push	r1
    15ac:	0f 92       	push	r0
    15ae:	0f b6       	in	r0, 0x3f	; 63
    15b0:	0f 92       	push	r0
    15b2:	11 24       	eor	r1, r1
    15b4:	2f 93       	push	r18
    15b6:	3f 93       	push	r19
    15b8:	4f 93       	push	r20
    15ba:	5f 93       	push	r21
    15bc:	6f 93       	push	r22
    15be:	7f 93       	push	r23
    15c0:	8f 93       	push	r24
    15c2:	9f 93       	push	r25
    15c4:	af 93       	push	r26
    15c6:	bf 93       	push	r27
    15c8:	ef 93       	push	r30
    15ca:	ff 93       	push	r31
    15cc:	b3 de       	rcall	.-666    	; 0x1334 <__vector_25>
    15ce:	ff 91       	pop	r31
    15d0:	ef 91       	pop	r30
    15d2:	bf 91       	pop	r27
    15d4:	af 91       	pop	r26
    15d6:	9f 91       	pop	r25
    15d8:	8f 91       	pop	r24
    15da:	7f 91       	pop	r23
    15dc:	6f 91       	pop	r22
    15de:	5f 91       	pop	r21
    15e0:	4f 91       	pop	r20
    15e2:	3f 91       	pop	r19
    15e4:	2f 91       	pop	r18
    15e6:	0f 90       	pop	r0
    15e8:	0f be       	out	0x3f, r0	; 63
    15ea:	0f 90       	pop	r0
    15ec:	1f 90       	pop	r1
    15ee:	18 95       	reti

000015f0 <__vector_12>:
    15f0:	1f 92       	push	r1
    15f2:	0f 92       	push	r0
    15f4:	0f b6       	in	r0, 0x3f	; 63
    15f6:	0f 92       	push	r0
    15f8:	11 24       	eor	r1, r1
    15fa:	2f 93       	push	r18
    15fc:	3f 93       	push	r19
    15fe:	4f 93       	push	r20
    1600:	5f 93       	push	r21
    1602:	6f 93       	push	r22
    1604:	7f 93       	push	r23
    1606:	8f 93       	push	r24
    1608:	9f 93       	push	r25
    160a:	af 93       	push	r26
    160c:	bf 93       	push	r27
    160e:	ef 93       	push	r30
    1610:	ff 93       	push	r31
    1612:	90 de       	rcall	.-736    	; 0x1334 <__vector_25>
    1614:	ff 91       	pop	r31
    1616:	ef 91       	pop	r30
    1618:	bf 91       	pop	r27
    161a:	af 91       	pop	r26
    161c:	9f 91       	pop	r25
    161e:	8f 91       	pop	r24
    1620:	7f 91       	pop	r23
    1622:	6f 91       	pop	r22
    1624:	5f 91       	pop	r21
    1626:	4f 91       	pop	r20
    1628:	3f 91       	pop	r19
    162a:	2f 91       	pop	r18
    162c:	0f 90       	pop	r0
    162e:	0f be       	out	0x3f, r0	; 63
    1630:	0f 90       	pop	r0
    1632:	1f 90       	pop	r1
    1634:	18 95       	reti

00001636 <__vector_11>:
    1636:	1f 92       	push	r1
    1638:	0f 92       	push	r0
    163a:	0f b6       	in	r0, 0x3f	; 63
    163c:	0f 92       	push	r0
    163e:	11 24       	eor	r1, r1
    1640:	2f 93       	push	r18
    1642:	3f 93       	push	r19
    1644:	4f 93       	push	r20
    1646:	5f 93       	push	r21
    1648:	6f 93       	push	r22
    164a:	7f 93       	push	r23
    164c:	8f 93       	push	r24
    164e:	9f 93       	push	r25
    1650:	af 93       	push	r26
    1652:	bf 93       	push	r27
    1654:	ef 93       	push	r30
    1656:	ff 93       	push	r31
    1658:	6d de       	rcall	.-806    	; 0x1334 <__vector_25>
    165a:	ff 91       	pop	r31
    165c:	ef 91       	pop	r30
    165e:	bf 91       	pop	r27
    1660:	af 91       	pop	r26
    1662:	9f 91       	pop	r25
    1664:	8f 91       	pop	r24
    1666:	7f 91       	pop	r23
    1668:	6f 91       	pop	r22
    166a:	5f 91       	pop	r21
    166c:	4f 91       	pop	r20
    166e:	3f 91       	pop	r19
    1670:	2f 91       	pop	r18
    1672:	0f 90       	pop	r0
    1674:	0f be       	out	0x3f, r0	; 63
    1676:	0f 90       	pop	r0
    1678:	1f 90       	pop	r1
    167a:	18 95       	reti

0000167c <__vector_10>:
    167c:	1f 92       	push	r1
    167e:	0f 92       	push	r0
    1680:	0f b6       	in	r0, 0x3f	; 63
    1682:	0f 92       	push	r0
    1684:	11 24       	eor	r1, r1
    1686:	2f 93       	push	r18
    1688:	3f 93       	push	r19
    168a:	4f 93       	push	r20
    168c:	5f 93       	push	r21
    168e:	6f 93       	push	r22
    1690:	7f 93       	push	r23
    1692:	8f 93       	push	r24
    1694:	9f 93       	push	r25
    1696:	af 93       	push	r26
    1698:	bf 93       	push	r27
    169a:	ef 93       	push	r30
    169c:	ff 93       	push	r31
    169e:	4a de       	rcall	.-876    	; 0x1334 <__vector_25>
    16a0:	ff 91       	pop	r31
    16a2:	ef 91       	pop	r30
    16a4:	bf 91       	pop	r27
    16a6:	af 91       	pop	r26
    16a8:	9f 91       	pop	r25
    16aa:	8f 91       	pop	r24
    16ac:	7f 91       	pop	r23
    16ae:	6f 91       	pop	r22
    16b0:	5f 91       	pop	r21
    16b2:	4f 91       	pop	r20
    16b4:	3f 91       	pop	r19
    16b6:	2f 91       	pop	r18
    16b8:	0f 90       	pop	r0
    16ba:	0f be       	out	0x3f, r0	; 63
    16bc:	0f 90       	pop	r0
    16be:	1f 90       	pop	r1
    16c0:	18 95       	reti

000016c2 <__vector_8>:
    16c2:	1f 92       	push	r1
    16c4:	0f 92       	push	r0
    16c6:	0f b6       	in	r0, 0x3f	; 63
    16c8:	0f 92       	push	r0
    16ca:	11 24       	eor	r1, r1
    16cc:	2f 93       	push	r18
    16ce:	3f 93       	push	r19
    16d0:	4f 93       	push	r20
    16d2:	5f 93       	push	r21
    16d4:	6f 93       	push	r22
    16d6:	7f 93       	push	r23
    16d8:	8f 93       	push	r24
    16da:	9f 93       	push	r25
    16dc:	af 93       	push	r26
    16de:	bf 93       	push	r27
    16e0:	ef 93       	push	r30
    16e2:	ff 93       	push	r31
    16e4:	27 de       	rcall	.-946    	; 0x1334 <__vector_25>
    16e6:	ff 91       	pop	r31
    16e8:	ef 91       	pop	r30
    16ea:	bf 91       	pop	r27
    16ec:	af 91       	pop	r26
    16ee:	9f 91       	pop	r25
    16f0:	8f 91       	pop	r24
    16f2:	7f 91       	pop	r23
    16f4:	6f 91       	pop	r22
    16f6:	5f 91       	pop	r21
    16f8:	4f 91       	pop	r20
    16fa:	3f 91       	pop	r19
    16fc:	2f 91       	pop	r18
    16fe:	0f 90       	pop	r0
    1700:	0f be       	out	0x3f, r0	; 63
    1702:	0f 90       	pop	r0
    1704:	1f 90       	pop	r1
    1706:	18 95       	reti

00001708 <__vector_7>:
    1708:	1f 92       	push	r1
    170a:	0f 92       	push	r0
    170c:	0f b6       	in	r0, 0x3f	; 63
    170e:	0f 92       	push	r0
    1710:	11 24       	eor	r1, r1
    1712:	2f 93       	push	r18
    1714:	3f 93       	push	r19
    1716:	4f 93       	push	r20
    1718:	5f 93       	push	r21
    171a:	6f 93       	push	r22
    171c:	7f 93       	push	r23
    171e:	8f 93       	push	r24
    1720:	9f 93       	push	r25
    1722:	af 93       	push	r26
    1724:	bf 93       	push	r27
    1726:	ef 93       	push	r30
    1728:	ff 93       	push	r31
    172a:	04 de       	rcall	.-1016   	; 0x1334 <__vector_25>
    172c:	ff 91       	pop	r31
    172e:	ef 91       	pop	r30
    1730:	bf 91       	pop	r27
    1732:	af 91       	pop	r26
    1734:	9f 91       	pop	r25
    1736:	8f 91       	pop	r24
    1738:	7f 91       	pop	r23
    173a:	6f 91       	pop	r22
    173c:	5f 91       	pop	r21
    173e:	4f 91       	pop	r20
    1740:	3f 91       	pop	r19
    1742:	2f 91       	pop	r18
    1744:	0f 90       	pop	r0
    1746:	0f be       	out	0x3f, r0	; 63
    1748:	0f 90       	pop	r0
    174a:	1f 90       	pop	r1
    174c:	18 95       	reti

0000174e <__vector_6>:
    174e:	1f 92       	push	r1
    1750:	0f 92       	push	r0
    1752:	0f b6       	in	r0, 0x3f	; 63
    1754:	0f 92       	push	r0
    1756:	11 24       	eor	r1, r1
    1758:	2f 93       	push	r18
    175a:	3f 93       	push	r19
    175c:	4f 93       	push	r20
    175e:	5f 93       	push	r21
    1760:	6f 93       	push	r22
    1762:	7f 93       	push	r23
    1764:	8f 93       	push	r24
    1766:	9f 93       	push	r25
    1768:	af 93       	push	r26
    176a:	bf 93       	push	r27
    176c:	ef 93       	push	r30
    176e:	ff 93       	push	r31
    1770:	e1 dd       	rcall	.-1086   	; 0x1334 <__vector_25>
    1772:	ff 91       	pop	r31
    1774:	ef 91       	pop	r30
    1776:	bf 91       	pop	r27
    1778:	af 91       	pop	r26
    177a:	9f 91       	pop	r25
    177c:	8f 91       	pop	r24
    177e:	7f 91       	pop	r23
    1780:	6f 91       	pop	r22
    1782:	5f 91       	pop	r21
    1784:	4f 91       	pop	r20
    1786:	3f 91       	pop	r19
    1788:	2f 91       	pop	r18
    178a:	0f 90       	pop	r0
    178c:	0f be       	out	0x3f, r0	; 63
    178e:	0f 90       	pop	r0
    1790:	1f 90       	pop	r1
    1792:	18 95       	reti

00001794 <__vector_5>:
    1794:	1f 92       	push	r1
    1796:	0f 92       	push	r0
    1798:	0f b6       	in	r0, 0x3f	; 63
    179a:	0f 92       	push	r0
    179c:	11 24       	eor	r1, r1
    179e:	2f 93       	push	r18
    17a0:	3f 93       	push	r19
    17a2:	4f 93       	push	r20
    17a4:	5f 93       	push	r21
    17a6:	6f 93       	push	r22
    17a8:	7f 93       	push	r23
    17aa:	8f 93       	push	r24
    17ac:	9f 93       	push	r25
    17ae:	af 93       	push	r26
    17b0:	bf 93       	push	r27
    17b2:	ef 93       	push	r30
    17b4:	ff 93       	push	r31
    17b6:	be dd       	rcall	.-1156   	; 0x1334 <__vector_25>
    17b8:	ff 91       	pop	r31
    17ba:	ef 91       	pop	r30
    17bc:	bf 91       	pop	r27
    17be:	af 91       	pop	r26
    17c0:	9f 91       	pop	r25
    17c2:	8f 91       	pop	r24
    17c4:	7f 91       	pop	r23
    17c6:	6f 91       	pop	r22
    17c8:	5f 91       	pop	r21
    17ca:	4f 91       	pop	r20
    17cc:	3f 91       	pop	r19
    17ce:	2f 91       	pop	r18
    17d0:	0f 90       	pop	r0
    17d2:	0f be       	out	0x3f, r0	; 63
    17d4:	0f 90       	pop	r0
    17d6:	1f 90       	pop	r1
    17d8:	18 95       	reti

000017da <__vector_4>:
    17da:	1f 92       	push	r1
    17dc:	0f 92       	push	r0
    17de:	0f b6       	in	r0, 0x3f	; 63
    17e0:	0f 92       	push	r0
    17e2:	11 24       	eor	r1, r1
    17e4:	2f 93       	push	r18
    17e6:	3f 93       	push	r19
    17e8:	4f 93       	push	r20
    17ea:	5f 93       	push	r21
    17ec:	6f 93       	push	r22
    17ee:	7f 93       	push	r23
    17f0:	8f 93       	push	r24
    17f2:	9f 93       	push	r25
    17f4:	af 93       	push	r26
    17f6:	bf 93       	push	r27
    17f8:	ef 93       	push	r30
    17fa:	ff 93       	push	r31
    17fc:	9b dd       	rcall	.-1226   	; 0x1334 <__vector_25>
    17fe:	ff 91       	pop	r31
    1800:	ef 91       	pop	r30
    1802:	bf 91       	pop	r27
    1804:	af 91       	pop	r26
    1806:	9f 91       	pop	r25
    1808:	8f 91       	pop	r24
    180a:	7f 91       	pop	r23
    180c:	6f 91       	pop	r22
    180e:	5f 91       	pop	r21
    1810:	4f 91       	pop	r20
    1812:	3f 91       	pop	r19
    1814:	2f 91       	pop	r18
    1816:	0f 90       	pop	r0
    1818:	0f be       	out	0x3f, r0	; 63
    181a:	0f 90       	pop	r0
    181c:	1f 90       	pop	r1
    181e:	18 95       	reti

00001820 <__vector_3>:
    1820:	1f 92       	push	r1
    1822:	0f 92       	push	r0
    1824:	0f b6       	in	r0, 0x3f	; 63
    1826:	0f 92       	push	r0
    1828:	11 24       	eor	r1, r1
    182a:	2f 93       	push	r18
    182c:	3f 93       	push	r19
    182e:	4f 93       	push	r20
    1830:	5f 93       	push	r21
    1832:	6f 93       	push	r22
    1834:	7f 93       	push	r23
    1836:	8f 93       	push	r24
    1838:	9f 93       	push	r25
    183a:	af 93       	push	r26
    183c:	bf 93       	push	r27
    183e:	ef 93       	push	r30
    1840:	ff 93       	push	r31
    1842:	78 dd       	rcall	.-1296   	; 0x1334 <__vector_25>
    1844:	ff 91       	pop	r31
    1846:	ef 91       	pop	r30
    1848:	bf 91       	pop	r27
    184a:	af 91       	pop	r26
    184c:	9f 91       	pop	r25
    184e:	8f 91       	pop	r24
    1850:	7f 91       	pop	r23
    1852:	6f 91       	pop	r22
    1854:	5f 91       	pop	r21
    1856:	4f 91       	pop	r20
    1858:	3f 91       	pop	r19
    185a:	2f 91       	pop	r18
    185c:	0f 90       	pop	r0
    185e:	0f be       	out	0x3f, r0	; 63
    1860:	0f 90       	pop	r0
    1862:	1f 90       	pop	r1
    1864:	18 95       	reti

00001866 <__vector_2>:
    1866:	1f 92       	push	r1
    1868:	0f 92       	push	r0
    186a:	0f b6       	in	r0, 0x3f	; 63
    186c:	0f 92       	push	r0
    186e:	11 24       	eor	r1, r1
    1870:	2f 93       	push	r18
    1872:	3f 93       	push	r19
    1874:	4f 93       	push	r20
    1876:	5f 93       	push	r21
    1878:	6f 93       	push	r22
    187a:	7f 93       	push	r23
    187c:	8f 93       	push	r24
    187e:	9f 93       	push	r25
    1880:	af 93       	push	r26
    1882:	bf 93       	push	r27
    1884:	ef 93       	push	r30
    1886:	ff 93       	push	r31
    1888:	55 dd       	rcall	.-1366   	; 0x1334 <__vector_25>
    188a:	ff 91       	pop	r31
    188c:	ef 91       	pop	r30
    188e:	bf 91       	pop	r27
    1890:	af 91       	pop	r26
    1892:	9f 91       	pop	r25
    1894:	8f 91       	pop	r24
    1896:	7f 91       	pop	r23
    1898:	6f 91       	pop	r22
    189a:	5f 91       	pop	r21
    189c:	4f 91       	pop	r20
    189e:	3f 91       	pop	r19
    18a0:	2f 91       	pop	r18
    18a2:	0f 90       	pop	r0
    18a4:	0f be       	out	0x3f, r0	; 63
    18a6:	0f 90       	pop	r0
    18a8:	1f 90       	pop	r1
    18aa:	18 95       	reti

000018ac <__vector_1>:
    18ac:	1f 92       	push	r1
    18ae:	0f 92       	push	r0
    18b0:	0f b6       	in	r0, 0x3f	; 63
    18b2:	0f 92       	push	r0
    18b4:	11 24       	eor	r1, r1
    18b6:	2f 93       	push	r18
    18b8:	3f 93       	push	r19
    18ba:	4f 93       	push	r20
    18bc:	5f 93       	push	r21
    18be:	6f 93       	push	r22
    18c0:	7f 93       	push	r23
    18c2:	8f 93       	push	r24
    18c4:	9f 93       	push	r25
    18c6:	af 93       	push	r26
    18c8:	bf 93       	push	r27
    18ca:	ef 93       	push	r30
    18cc:	ff 93       	push	r31
    18ce:	32 dd       	rcall	.-1436   	; 0x1334 <__vector_25>
    18d0:	ff 91       	pop	r31
    18d2:	ef 91       	pop	r30
    18d4:	bf 91       	pop	r27
    18d6:	af 91       	pop	r26
    18d8:	9f 91       	pop	r25
    18da:	8f 91       	pop	r24
    18dc:	7f 91       	pop	r23
    18de:	6f 91       	pop	r22
    18e0:	5f 91       	pop	r21
    18e2:	4f 91       	pop	r20
    18e4:	3f 91       	pop	r19
    18e6:	2f 91       	pop	r18
    18e8:	0f 90       	pop	r0
    18ea:	0f be       	out	0x3f, r0	; 63
    18ec:	0f 90       	pop	r0
    18ee:	1f 90       	pop	r1
    18f0:	18 95       	reti

000018f2 <cpu_irq_save>:
}

void lcd_enable(uint8_t on)
{
	if (!on) {
		lcd_bus_write_cmd(0b10101110);									// Disable DC[2] (Display)
    18f2:	cf 93       	push	r28
    18f4:	df 93       	push	r29
    18f6:	1f 92       	push	r1
    18f8:	cd b7       	in	r28, 0x3d	; 61
    18fa:	de b7       	in	r29, 0x3e	; 62
    18fc:	8f b7       	in	r24, 0x3f	; 63
    18fe:	89 83       	std	Y+1, r24	; 0x01
    1900:	f8 94       	cli
    1902:	89 81       	ldd	r24, Y+1	; 0x01
    1904:	0f 90       	pop	r0
    1906:	df 91       	pop	r29
    1908:	cf 91       	pop	r28
    190a:	08 95       	ret

0000190c <__portable_avr_delay_cycles>:
    190c:	04 c0       	rjmp	.+8      	; 0x1916 <__portable_avr_delay_cycles+0xa>
    190e:	61 50       	subi	r22, 0x01	; 1
    1910:	71 09       	sbc	r23, r1
    1912:	81 09       	sbc	r24, r1
    1914:	91 09       	sbc	r25, r1
    1916:	61 15       	cp	r22, r1
    1918:	71 05       	cpc	r23, r1
    191a:	81 05       	cpc	r24, r1
    191c:	91 05       	cpc	r25, r1
    191e:	b9 f7       	brne	.-18     	; 0x190e <__portable_avr_delay_cycles+0x2>
    1920:	08 95       	ret

00001922 <lcd_bus_read_status>:
    1922:	e7 df       	rcall	.-50     	; 0x18f2 <cpu_irq_save>
    1924:	98 2f       	mov	r25, r24
    1926:	8f ef       	ldi	r24, 0xFF	; 255
    1928:	8b b9       	out	0x0b, r24	; 11
    192a:	1a b8       	out	0x0a, r1	; 10
    192c:	28 98       	cbi	0x05, 0	; 5
    192e:	2c 9a       	sbi	0x05, 4	; 5
    1930:	2d 9a       	sbi	0x05, 5	; 5
    1932:	2d 98       	cbi	0x05, 5	; 5
    1934:	89 b1       	in	r24, 0x09	; 9
    1936:	9f bf       	out	0x3f, r25	; 63
    1938:	08 95       	ret

0000193a <lcd_bus_write_cmd>:
    193a:	cf 93       	push	r28
    193c:	c8 2f       	mov	r28, r24
    193e:	d9 df       	rcall	.-78     	; 0x18f2 <cpu_irq_save>
    1940:	cb b9       	out	0x0b, r28	; 11
    1942:	9f ef       	ldi	r25, 0xFF	; 255
    1944:	9a b9       	out	0x0a, r25	; 10
    1946:	28 98       	cbi	0x05, 0	; 5
    1948:	2c 98       	cbi	0x05, 4	; 5
    194a:	2d 9a       	sbi	0x05, 5	; 5
    194c:	2d 98       	cbi	0x05, 5	; 5
    194e:	8f bf       	out	0x3f, r24	; 63
    1950:	cf 91       	pop	r28
    1952:	08 95       	ret

00001954 <lcd_bus_write_ram>:
    1954:	cf 93       	push	r28
    1956:	c8 2f       	mov	r28, r24
    1958:	cc df       	rcall	.-104    	; 0x18f2 <cpu_irq_save>
    195a:	cb b9       	out	0x0b, r28	; 11
    195c:	9f ef       	ldi	r25, 0xFF	; 255
    195e:	9a b9       	out	0x0a, r25	; 10
    1960:	28 9a       	sbi	0x05, 0	; 5
    1962:	2c 98       	cbi	0x05, 4	; 5
    1964:	2d 9a       	sbi	0x05, 5	; 5
    1966:	2d 98       	cbi	0x05, 5	; 5
    1968:	8f bf       	out	0x3f, r24	; 63
    196a:	cf 91       	pop	r28
    196c:	08 95       	ret

0000196e <lcd_bus_read_ram>:
    196e:	c1 df       	rcall	.-126    	; 0x18f2 <cpu_irq_save>
    1970:	98 2f       	mov	r25, r24
    1972:	8f ef       	ldi	r24, 0xFF	; 255
    1974:	8b b9       	out	0x0b, r24	; 11
    1976:	1a b8       	out	0x0a, r1	; 10
    1978:	28 9a       	sbi	0x05, 0	; 5
    197a:	2c 9a       	sbi	0x05, 4	; 5
    197c:	2d 9a       	sbi	0x05, 5	; 5
    197e:	2d 98       	cbi	0x05, 5	; 5
    1980:	80 91 0f 04 	lds	r24, 0x040F	; 0x80040f <s_lcd_ram_read_nonvalid>
    1984:	88 23       	and	r24, r24
    1986:	19 f0       	breq	.+6      	; 0x198e <lcd_bus_read_ram+0x20>
    1988:	89 b1       	in	r24, 0x09	; 9
    198a:	2d 9a       	sbi	0x05, 5	; 5
    198c:	2d 98       	cbi	0x05, 5	; 5
    198e:	89 b1       	in	r24, 0x09	; 9
    1990:	10 92 0f 04 	sts	0x040F, r1	; 0x80040f <s_lcd_ram_read_nonvalid>
    1994:	9f bf       	out	0x3f, r25	; 63
    1996:	08 95       	ret

00001998 <lcd_contrast_update>:
    1998:	81 e8       	ldi	r24, 0x81	; 129
    199a:	cf df       	rcall	.-98     	; 0x193a <lcd_bus_write_cmd>
    199c:	80 91 7a 04 	lds	r24, 0x047A	; 0x80047a <g_lcd_contrast_pm>
    19a0:	8f 73       	andi	r24, 0x3F	; 63
    19a2:	80 68       	ori	r24, 0x80	; 128
    19a4:	ca cf       	rjmp	.-108    	; 0x193a <lcd_bus_write_cmd>

000019a6 <lcd_enable.part.0>:
    19a6:	8d e2       	ldi	r24, 0x2D	; 45
    19a8:	c8 df       	rcall	.-112    	; 0x193a <lcd_bus_write_cmd>
    19aa:	84 e2       	ldi	r24, 0x24	; 36
    19ac:	c6 df       	rcall	.-116    	; 0x193a <lcd_bus_write_cmd>
    19ae:	8a ee       	ldi	r24, 0xEA	; 234
    19b0:	c4 df       	rcall	.-120    	; 0x193a <lcd_bus_write_cmd>
    19b2:	f2 df       	rcall	.-28     	; 0x1998 <lcd_contrast_update>
    19b4:	88 ec       	ldi	r24, 0xC8	; 200
    19b6:	c1 df       	rcall	.-126    	; 0x193a <lcd_bus_write_cmd>
    19b8:	88 e8       	ldi	r24, 0x88	; 136
    19ba:	bf df       	rcall	.-130    	; 0x193a <lcd_bus_write_cmd>
    19bc:	80 e4       	ldi	r24, 0x40	; 64
    19be:	bd df       	rcall	.-134    	; 0x193a <lcd_bus_write_cmd>
    19c0:	80 e9       	ldi	r24, 0x90	; 144
    19c2:	bb df       	rcall	.-138    	; 0x193a <lcd_bus_write_cmd>
    19c4:	80 eb       	ldi	r24, 0xB0	; 176
    19c6:	b9 df       	rcall	.-142    	; 0x193a <lcd_bus_write_cmd>
    19c8:	80 e0       	ldi	r24, 0x00	; 0
    19ca:	b7 df       	rcall	.-146    	; 0x193a <lcd_bus_write_cmd>
    19cc:	80 e1       	ldi	r24, 0x10	; 16
    19ce:	b5 df       	rcall	.-150    	; 0x193a <lcd_bus_write_cmd>
    19d0:	81 e0       	ldi	r24, 0x01	; 1
    19d2:	80 93 0f 04 	sts	0x040F, r24	; 0x80040f <s_lcd_ram_read_nonvalid>
    19d6:	8f ee       	ldi	r24, 0xEF	; 239
    19d8:	b0 df       	rcall	.-160    	; 0x193a <lcd_bus_write_cmd>
    19da:	8e ee       	ldi	r24, 0xEE	; 238
    19dc:	ae df       	rcall	.-164    	; 0x193a <lcd_bus_write_cmd>
    19de:	84 ea       	ldi	r24, 0xA4	; 164
    19e0:	ac df       	rcall	.-168    	; 0x193a <lcd_bus_write_cmd>
    19e2:	86 ea       	ldi	r24, 0xA6	; 166
    19e4:	aa df       	rcall	.-172    	; 0x193a <lcd_bus_write_cmd>
    19e6:	8f ea       	ldi	r24, 0xAF	; 175
    19e8:	a8 cf       	rjmp	.-176    	; 0x193a <lcd_bus_write_cmd>

000019ea <lcd_page_set>:
	}
}

void lcd_page_set(uint8_t page)
{
	if ((0 <= page) && (page < GFX_MONO_LCD_PAGES)) {
    19ea:	80 31       	cpi	r24, 0x10	; 16
    19ec:	28 f4       	brcc	.+10     	; 0x19f8 <lcd_page_set+0xe>
		lcd_bus_write_cmd(0b10110000 | page);					// Set Page Address
    19ee:	80 6b       	ori	r24, 0xB0	; 176
    19f0:	a4 df       	rcall	.-184    	; 0x193a <lcd_bus_write_cmd>

		s_lcd_ram_read_nonvalid = 1;
    19f2:	81 e0       	ldi	r24, 0x01	; 1
    19f4:	80 93 0f 04 	sts	0x040F, r24	; 0x80040f <s_lcd_ram_read_nonvalid>
    19f8:	08 95       	ret

000019fa <lcd_col_set>:
// hold a copy of a font size in the PROG memory section
SYSFONT_DEFINE_GLYPHS;


uint8_t lcd_bus_read_status(void)
{
    19fa:	cf 93       	push	r28
    19fc:	80 3f       	cpi	r24, 0xF0	; 240
    19fe:	58 f4       	brcc	.+22     	; 0x1a16 <lcd_col_set+0x1c>
    1a00:	c8 2f       	mov	r28, r24
    1a02:	8f 70       	andi	r24, 0x0F	; 15
    1a04:	9a df       	rcall	.-204    	; 0x193a <lcd_bus_write_cmd>
    1a06:	8c 2f       	mov	r24, r28
    1a08:	82 95       	swap	r24
    1a0a:	8f 70       	andi	r24, 0x0F	; 15
    1a0c:	80 61       	ori	r24, 0x10	; 16
    1a0e:	95 df       	rcall	.-214    	; 0x193a <lcd_bus_write_cmd>
    1a10:	81 e0       	ldi	r24, 0x01	; 1
    1a12:	80 93 0f 04 	sts	0x040F, r24	; 0x80040f <s_lcd_ram_read_nonvalid>
    1a16:	cf 91       	pop	r28
    1a18:	08 95       	ret

00001a1a <lcd_cr>:
    1a1a:	80 e0       	ldi	r24, 0x00	; 0
    1a1c:	8e df       	rcall	.-228    	; 0x193a <lcd_bus_write_cmd>
    1a1e:	80 e1       	ldi	r24, 0x10	; 16
    1a20:	8c df       	rcall	.-232    	; 0x193a <lcd_bus_write_cmd>
    1a22:	81 e0       	ldi	r24, 0x01	; 1
    1a24:	80 93 0f 04 	sts	0x040F, r24	; 0x80040f <s_lcd_ram_read_nonvalid>
    1a28:	08 95       	ret

00001a2a <lcd_home>:
    1a2a:	80 eb       	ldi	r24, 0xB0	; 176
    1a2c:	86 df       	rcall	.-244    	; 0x193a <lcd_bus_write_cmd>
    1a2e:	f5 cf       	rjmp	.-22     	; 0x1a1a <lcd_cr>

00001a30 <lcd_cls>:
    1a30:	cf 93       	push	r28
    1a32:	df 93       	push	r29
    1a34:	c0 e0       	ldi	r28, 0x00	; 0
    1a36:	8c 2f       	mov	r24, r28
    1a38:	80 6b       	ori	r24, 0xB0	; 176
    1a3a:	7f df       	rcall	.-258    	; 0x193a <lcd_bus_write_cmd>
    1a3c:	80 e0       	ldi	r24, 0x00	; 0
    1a3e:	7d df       	rcall	.-262    	; 0x193a <lcd_bus_write_cmd>
    1a40:	80 e1       	ldi	r24, 0x10	; 16
    1a42:	7b df       	rcall	.-266    	; 0x193a <lcd_bus_write_cmd>
    1a44:	d0 ef       	ldi	r29, 0xF0	; 240
    1a46:	80 e0       	ldi	r24, 0x00	; 0
    1a48:	85 df       	rcall	.-246    	; 0x1954 <lcd_bus_write_ram>
    1a4a:	d1 50       	subi	r29, 0x01	; 1
    1a4c:	e1 f7       	brne	.-8      	; 0x1a46 <lcd_cls+0x16>
    1a4e:	cf 5f       	subi	r28, 0xFF	; 255
    1a50:	c0 31       	cpi	r28, 0x10	; 16
    1a52:	89 f7       	brne	.-30     	; 0x1a36 <lcd_cls+0x6>
    1a54:	df 91       	pop	r29
    1a56:	cf 91       	pop	r28
    1a58:	e8 cf       	rjmp	.-48     	; 0x1a2a <lcd_home>

00001a5a <lcd_show_template>:
    1a5a:	ff 92       	push	r15
    1a5c:	0f 93       	push	r16
    1a5e:	1f 93       	push	r17
    1a60:	cf 93       	push	r28
    1a62:	df 93       	push	r29
    1a64:	6a e0       	ldi	r22, 0x0A	; 10
    1a66:	71 e0       	ldi	r23, 0x01	; 1
    1a68:	8f ed       	ldi	r24, 0xDF	; 223
    1a6a:	93 e0       	ldi	r25, 0x03	; 3
    1a6c:	0e 94 a8 22 	call	0x4550	; 0x4550 <strcpy>
    1a70:	23 e0       	ldi	r18, 0x03	; 3
    1a72:	31 e0       	ldi	r19, 0x01	; 1
    1a74:	4b e0       	ldi	r20, 0x0B	; 11
    1a76:	63 e0       	ldi	r22, 0x03	; 3
    1a78:	8f ed       	ldi	r24, 0xDF	; 223
    1a7a:	93 e0       	ldi	r25, 0x03	; 3
    1a7c:	d5 d9       	rcall	.-3158   	; 0xe28 <gfx_mono_draw_string>
    1a7e:	67 e1       	ldi	r22, 0x17	; 23
    1a80:	71 e0       	ldi	r23, 0x01	; 1
    1a82:	8f ed       	ldi	r24, 0xDF	; 223
    1a84:	93 e0       	ldi	r25, 0x03	; 3
    1a86:	0e 94 a8 22 	call	0x4550	; 0x4550 <strcpy>
    1a8a:	23 e0       	ldi	r18, 0x03	; 3
    1a8c:	31 e0       	ldi	r19, 0x01	; 1
    1a8e:	44 e1       	ldi	r20, 0x14	; 20
    1a90:	63 e0       	ldi	r22, 0x03	; 3
    1a92:	8f ed       	ldi	r24, 0xDF	; 223
    1a94:	93 e0       	ldi	r25, 0x03	; 3
    1a96:	c8 d9       	rcall	.-3184   	; 0xe28 <gfx_mono_draw_string>
    1a98:	61 e2       	ldi	r22, 0x21	; 33
    1a9a:	71 e0       	ldi	r23, 0x01	; 1
    1a9c:	8f ed       	ldi	r24, 0xDF	; 223
    1a9e:	93 e0       	ldi	r25, 0x03	; 3
    1aa0:	0e 94 a8 22 	call	0x4550	; 0x4550 <strcpy>
    1aa4:	23 e0       	ldi	r18, 0x03	; 3
    1aa6:	31 e0       	ldi	r19, 0x01	; 1
    1aa8:	4d e1       	ldi	r20, 0x1D	; 29
    1aaa:	63 e0       	ldi	r22, 0x03	; 3
    1aac:	8f ed       	ldi	r24, 0xDF	; 223
    1aae:	93 e0       	ldi	r25, 0x03	; 3
    1ab0:	bb d9       	rcall	.-3210   	; 0xe28 <gfx_mono_draw_string>
    1ab2:	1f 92       	push	r1
    1ab4:	1f 92       	push	r1
    1ab6:	1f 92       	push	r1
    1ab8:	1f 92       	push	r1
    1aba:	88 e3       	ldi	r24, 0x38	; 56
    1abc:	91 e0       	ldi	r25, 0x01	; 1
    1abe:	9f 93       	push	r25
    1ac0:	8f 93       	push	r24
    1ac2:	1f 92       	push	r1
    1ac4:	10 e3       	ldi	r17, 0x30	; 48
    1ac6:	1f 93       	push	r17
    1ac8:	cf ed       	ldi	r28, 0xDF	; 223
    1aca:	d3 e0       	ldi	r29, 0x03	; 3
    1acc:	df 93       	push	r29
    1ace:	cf 93       	push	r28
    1ad0:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    1ad4:	23 e0       	ldi	r18, 0x03	; 3
    1ad6:	31 e0       	ldi	r19, 0x01	; 1
    1ad8:	46 e2       	ldi	r20, 0x26	; 38
    1ada:	63 e0       	ldi	r22, 0x03	; 3
    1adc:	ce 01       	movw	r24, r28
    1ade:	a4 d9       	rcall	.-3256   	; 0xe28 <gfx_mono_draw_string>
    1ae0:	1f 92       	push	r1
    1ae2:	1f 92       	push	r1
    1ae4:	1f 92       	push	r1
    1ae6:	1f 92       	push	r1
    1ae8:	1f 92       	push	r1
    1aea:	1f 92       	push	r1
    1aec:	1f 92       	push	r1
    1aee:	1f 92       	push	r1
    1af0:	80 e5       	ldi	r24, 0x50	; 80
    1af2:	91 e0       	ldi	r25, 0x01	; 1
    1af4:	9f 93       	push	r25
    1af6:	8f 93       	push	r24
    1af8:	1f 92       	push	r1
    1afa:	1f 93       	push	r17
    1afc:	df 93       	push	r29
    1afe:	cf 93       	push	r28
    1b00:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    1b04:	23 e0       	ldi	r18, 0x03	; 3
    1b06:	31 e0       	ldi	r19, 0x01	; 1
    1b08:	4f e2       	ldi	r20, 0x2F	; 47
    1b0a:	63 e0       	ldi	r22, 0x03	; 3
    1b0c:	ce 01       	movw	r24, r28
    1b0e:	8c d9       	rcall	.-3304   	; 0xe28 <gfx_mono_draw_string>
    1b10:	1f 92       	push	r1
    1b12:	1f 92       	push	r1
    1b14:	1f 92       	push	r1
    1b16:	1f 92       	push	r1
    1b18:	83 e7       	ldi	r24, 0x73	; 115
    1b1a:	91 e0       	ldi	r25, 0x01	; 1
    1b1c:	9f 93       	push	r25
    1b1e:	8f 93       	push	r24
    1b20:	1f 92       	push	r1
    1b22:	1f 93       	push	r17
    1b24:	df 93       	push	r29
    1b26:	cf 93       	push	r28
    1b28:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    1b2c:	8d b7       	in	r24, 0x3d	; 61
    1b2e:	9e b7       	in	r25, 0x3e	; 62
    1b30:	82 96       	adiw	r24, 0x22	; 34
    1b32:	0f b6       	in	r0, 0x3f	; 63
    1b34:	f8 94       	cli
    1b36:	9e bf       	out	0x3e, r25	; 62
    1b38:	0f be       	out	0x3f, r0	; 63
    1b3a:	8d bf       	out	0x3d, r24	; 61
    1b3c:	23 e0       	ldi	r18, 0x03	; 3
    1b3e:	31 e0       	ldi	r19, 0x01	; 1
    1b40:	48 e3       	ldi	r20, 0x38	; 56
    1b42:	63 e0       	ldi	r22, 0x03	; 3
    1b44:	ce 01       	movw	r24, r28
    1b46:	70 d9       	rcall	.-3360   	; 0xe28 <gfx_mono_draw_string>
    1b48:	1f 92       	push	r1
    1b4a:	1f 92       	push	r1
    1b4c:	1f 92       	push	r1
    1b4e:	1f 92       	push	r1
    1b50:	88 e8       	ldi	r24, 0x88	; 136
    1b52:	91 e0       	ldi	r25, 0x01	; 1
    1b54:	9f 93       	push	r25
    1b56:	8f 93       	push	r24
    1b58:	1f 92       	push	r1
    1b5a:	1f 93       	push	r17
    1b5c:	df 93       	push	r29
    1b5e:	cf 93       	push	r28
    1b60:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    1b64:	23 e0       	ldi	r18, 0x03	; 3
    1b66:	31 e0       	ldi	r19, 0x01	; 1
    1b68:	48 e3       	ldi	r20, 0x38	; 56
    1b6a:	6b e7       	ldi	r22, 0x7B	; 123
    1b6c:	ce 01       	movw	r24, r28
    1b6e:	5c d9       	rcall	.-3400   	; 0xe28 <gfx_mono_draw_string>
    1b70:	1f 92       	push	r1
    1b72:	1f 92       	push	r1
    1b74:	1f 92       	push	r1
    1b76:	1f 92       	push	r1
    1b78:	1f 92       	push	r1
    1b7a:	1f 92       	push	r1
    1b7c:	8e e9       	ldi	r24, 0x9E	; 158
    1b7e:	91 e0       	ldi	r25, 0x01	; 1
    1b80:	9f 93       	push	r25
    1b82:	8f 93       	push	r24
    1b84:	1f 92       	push	r1
    1b86:	1f 93       	push	r17
    1b88:	df 93       	push	r29
    1b8a:	cf 93       	push	r28
    1b8c:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    1b90:	23 e0       	ldi	r18, 0x03	; 3
    1b92:	31 e0       	ldi	r19, 0x01	; 1
    1b94:	41 e4       	ldi	r20, 0x41	; 65
    1b96:	63 e0       	ldi	r22, 0x03	; 3
    1b98:	ce 01       	movw	r24, r28
    1b9a:	46 d9       	rcall	.-3444   	; 0xe28 <gfx_mono_draw_string>
    1b9c:	1f 92       	push	r1
    1b9e:	1f 92       	push	r1
    1ba0:	1f 92       	push	r1
    1ba2:	1f 92       	push	r1
    1ba4:	8b ec       	ldi	r24, 0xCB	; 203
    1ba6:	91 e0       	ldi	r25, 0x01	; 1
    1ba8:	9f 93       	push	r25
    1baa:	8f 93       	push	r24
    1bac:	1f 92       	push	r1
    1bae:	1f 93       	push	r17
    1bb0:	df 93       	push	r29
    1bb2:	cf 93       	push	r28
    1bb4:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    1bb8:	8d b7       	in	r24, 0x3d	; 61
    1bba:	9e b7       	in	r25, 0x3e	; 62
    1bbc:	80 96       	adiw	r24, 0x20	; 32
    1bbe:	0f b6       	in	r0, 0x3f	; 63
    1bc0:	f8 94       	cli
    1bc2:	9e bf       	out	0x3e, r25	; 62
    1bc4:	0f be       	out	0x3f, r0	; 63
    1bc6:	8d bf       	out	0x3d, r24	; 61
    1bc8:	23 e0       	ldi	r18, 0x03	; 3
    1bca:	31 e0       	ldi	r19, 0x01	; 1
    1bcc:	4a e4       	ldi	r20, 0x4A	; 74
    1bce:	63 e0       	ldi	r22, 0x03	; 3
    1bd0:	ce 01       	movw	r24, r28
    1bd2:	2a d9       	rcall	.-3500   	; 0xe28 <gfx_mono_draw_string>
    1bd4:	1f 92       	push	r1
    1bd6:	1f 92       	push	r1
    1bd8:	1f 92       	push	r1
    1bda:	1f 92       	push	r1
    1bdc:	8f ed       	ldi	r24, 0xDF	; 223
    1bde:	91 e0       	ldi	r25, 0x01	; 1
    1be0:	9f 93       	push	r25
    1be2:	8f 93       	push	r24
    1be4:	1f 92       	push	r1
    1be6:	1f 93       	push	r17
    1be8:	df 93       	push	r29
    1bea:	cf 93       	push	r28
    1bec:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    1bf0:	23 e0       	ldi	r18, 0x03	; 3
    1bf2:	31 e0       	ldi	r19, 0x01	; 1
    1bf4:	43 e5       	ldi	r20, 0x53	; 83
    1bf6:	63 e0       	ldi	r22, 0x03	; 3
    1bf8:	ce 01       	movw	r24, r28
    1bfa:	16 d9       	rcall	.-3540   	; 0xe28 <gfx_mono_draw_string>
    1bfc:	1f 92       	push	r1
    1bfe:	1f 92       	push	r1
    1c00:	1f 92       	push	r1
    1c02:	1f 92       	push	r1
    1c04:	1f 92       	push	r1
    1c06:	0e e7       	ldi	r16, 0x7E	; 126
    1c08:	0f 93       	push	r16
    1c0a:	1f 92       	push	r1
    1c0c:	1f 92       	push	r1
    1c0e:	1f 92       	push	r1
    1c10:	80 e2       	ldi	r24, 0x20	; 32
    1c12:	f8 2e       	mov	r15, r24
    1c14:	ff 92       	push	r15
    1c16:	87 ef       	ldi	r24, 0xF7	; 247
    1c18:	91 e0       	ldi	r25, 0x01	; 1
    1c1a:	9f 93       	push	r25
    1c1c:	8f 93       	push	r24
    1c1e:	1f 92       	push	r1
    1c20:	1f 93       	push	r17
    1c22:	df 93       	push	r29
    1c24:	cf 93       	push	r28
    1c26:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    1c2a:	23 e0       	ldi	r18, 0x03	; 3
    1c2c:	31 e0       	ldi	r19, 0x01	; 1
    1c2e:	4c e5       	ldi	r20, 0x5C	; 92
    1c30:	63 e0       	ldi	r22, 0x03	; 3
    1c32:	ce 01       	movw	r24, r28
    1c34:	f9 d8       	rcall	.-3598   	; 0xe28 <gfx_mono_draw_string>
    1c36:	1f 92       	push	r1
    1c38:	1f 92       	push	r1
    1c3a:	1f 92       	push	r1
    1c3c:	1f 92       	push	r1
    1c3e:	1f 92       	push	r1
    1c40:	0f 93       	push	r16
    1c42:	1f 92       	push	r1
    1c44:	1f 92       	push	r1
    1c46:	1f 92       	push	r1
    1c48:	ff 92       	push	r15
    1c4a:	86 e1       	ldi	r24, 0x16	; 22
    1c4c:	92 e0       	ldi	r25, 0x02	; 2
    1c4e:	9f 93       	push	r25
    1c50:	8f 93       	push	r24
    1c52:	1f 92       	push	r1
    1c54:	1f 93       	push	r17
    1c56:	df 93       	push	r29
    1c58:	cf 93       	push	r28
    1c5a:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    1c5e:	8d b7       	in	r24, 0x3d	; 61
    1c60:	9e b7       	in	r25, 0x3e	; 62
    1c62:	8a 96       	adiw	r24, 0x2a	; 42
    1c64:	0f b6       	in	r0, 0x3f	; 63
    1c66:	f8 94       	cli
    1c68:	9e bf       	out	0x3e, r25	; 62
    1c6a:	0f be       	out	0x3f, r0	; 63
    1c6c:	8d bf       	out	0x3d, r24	; 61
    1c6e:	23 e0       	ldi	r18, 0x03	; 3
    1c70:	31 e0       	ldi	r19, 0x01	; 1
    1c72:	45 e6       	ldi	r20, 0x65	; 101
    1c74:	63 e0       	ldi	r22, 0x03	; 3
    1c76:	ce 01       	movw	r24, r28
    1c78:	d7 d8       	rcall	.-3666   	; 0xe28 <gfx_mono_draw_string>
    1c7a:	1f 92       	push	r1
    1c7c:	1f 92       	push	r1
    1c7e:	1f 92       	push	r1
    1c80:	1f 92       	push	r1
    1c82:	84 e3       	ldi	r24, 0x34	; 52
    1c84:	92 e0       	ldi	r25, 0x02	; 2
    1c86:	9f 93       	push	r25
    1c88:	8f 93       	push	r24
    1c8a:	1f 92       	push	r1
    1c8c:	1f 93       	push	r17
    1c8e:	df 93       	push	r29
    1c90:	cf 93       	push	r28
    1c92:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    1c96:	23 e0       	ldi	r18, 0x03	; 3
    1c98:	31 e0       	ldi	r19, 0x01	; 1
    1c9a:	4e e6       	ldi	r20, 0x6E	; 110
    1c9c:	63 e0       	ldi	r22, 0x03	; 3
    1c9e:	ce 01       	movw	r24, r28
    1ca0:	c3 d8       	rcall	.-3706   	; 0xe28 <gfx_mono_draw_string>
    1ca2:	1f 92       	push	r1
    1ca4:	0f 93       	push	r16
    1ca6:	1f 92       	push	r1
    1ca8:	1f 92       	push	r1
    1caa:	8a e4       	ldi	r24, 0x4A	; 74
    1cac:	92 e0       	ldi	r25, 0x02	; 2
    1cae:	9f 93       	push	r25
    1cb0:	8f 93       	push	r24
    1cb2:	1f 92       	push	r1
    1cb4:	1f 93       	push	r17
    1cb6:	df 93       	push	r29
    1cb8:	cf 93       	push	r28
    1cba:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    1cbe:	23 e0       	ldi	r18, 0x03	; 3
    1cc0:	31 e0       	ldi	r19, 0x01	; 1
    1cc2:	4e e6       	ldi	r20, 0x6E	; 110
    1cc4:	6f e9       	ldi	r22, 0x9F	; 159
    1cc6:	ce 01       	movw	r24, r28
    1cc8:	af d8       	rcall	.-3746   	; 0xe28 <gfx_mono_draw_string>
    1cca:	8d b7       	in	r24, 0x3d	; 61
    1ccc:	9e b7       	in	r25, 0x3e	; 62
    1cce:	44 96       	adiw	r24, 0x14	; 20
    1cd0:	0f b6       	in	r0, 0x3f	; 63
    1cd2:	f8 94       	cli
    1cd4:	9e bf       	out	0x3e, r25	; 62
    1cd6:	0f be       	out	0x3f, r0	; 63
    1cd8:	8d bf       	out	0x3d, r24	; 61
    1cda:	23 e0       	ldi	r18, 0x03	; 3
    1cdc:	31 e0       	ldi	r19, 0x01	; 1
    1cde:	47 e7       	ldi	r20, 0x77	; 119
    1ce0:	63 e0       	ldi	r22, 0x03	; 3
    1ce2:	89 e5       	ldi	r24, 0x59	; 89
    1ce4:	92 e0       	ldi	r25, 0x02	; 2
    1ce6:	df 91       	pop	r29
    1ce8:	cf 91       	pop	r28
    1cea:	1f 91       	pop	r17
    1cec:	0f 91       	pop	r16
    1cee:	ff 90       	pop	r15
    1cf0:	9b c8       	rjmp	.-3786   	; 0xe28 <gfx_mono_draw_string>

00001cf2 <lcd_show_new_refosc_data>:
    1cf2:	3f 92       	push	r3
    1cf4:	4f 92       	push	r4
    1cf6:	5f 92       	push	r5
    1cf8:	6f 92       	push	r6
    1cfa:	7f 92       	push	r7
    1cfc:	8f 92       	push	r8
    1cfe:	9f 92       	push	r9
    1d00:	af 92       	push	r10
    1d02:	bf 92       	push	r11
    1d04:	cf 92       	push	r12
    1d06:	df 92       	push	r13
    1d08:	ef 92       	push	r14
    1d0a:	ff 92       	push	r15
    1d0c:	0f 93       	push	r16
    1d0e:	1f 93       	push	r17
    1d10:	cf 93       	push	r28
    1d12:	df 93       	push	r29
    1d14:	ee dd       	rcall	.-1060   	; 0x18f2 <cpu_irq_save>
    1d16:	c8 2f       	mov	r28, r24
    1d18:	90 91 36 04 	lds	r25, 0x0436	; 0x800436 <g_showData>
    1d1c:	92 ff       	sbrs	r25, 2
    1d1e:	30 c0       	rjmp	.+96     	; 0x1d80 <lcd_show_new_refosc_data+0x8e>
    1d20:	9b 7f       	andi	r25, 0xFB	; 251
    1d22:	90 93 36 04 	sts	0x0436, r25	; 0x800436 <g_showData>
    1d26:	80 91 65 04 	lds	r24, 0x0465	; 0x800465 <g_showData+0x2f>
    1d2a:	1f 92       	push	r1
    1d2c:	8f 93       	push	r24
    1d2e:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <g_showData+0x2e>
    1d32:	1f 92       	push	r1
    1d34:	8f 93       	push	r24
    1d36:	80 91 63 04 	lds	r24, 0x0463	; 0x800463 <g_showData+0x2d>
    1d3a:	1f 92       	push	r1
    1d3c:	8f 93       	push	r24
    1d3e:	83 e6       	ldi	r24, 0x63	; 99
    1d40:	92 e0       	ldi	r25, 0x02	; 2
    1d42:	9f 93       	push	r25
    1d44:	8f 93       	push	r24
    1d46:	1f 92       	push	r1
    1d48:	80 e3       	ldi	r24, 0x30	; 48
    1d4a:	8f 93       	push	r24
    1d4c:	8f ed       	ldi	r24, 0xDF	; 223
    1d4e:	93 e0       	ldi	r25, 0x03	; 3
    1d50:	9f 93       	push	r25
    1d52:	8f 93       	push	r24
    1d54:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    1d58:	cf bf       	out	0x3f, r28	; 63
    1d5a:	23 e0       	ldi	r18, 0x03	; 3
    1d5c:	31 e0       	ldi	r19, 0x01	; 1
    1d5e:	4d e1       	ldi	r20, 0x1D	; 29
    1d60:	6f e3       	ldi	r22, 0x3F	; 63
    1d62:	8f ed       	ldi	r24, 0xDF	; 223
    1d64:	93 e0       	ldi	r25, 0x03	; 3
    1d66:	60 d8       	rcall	.-3904   	; 0xe28 <gfx_mono_draw_string>
    1d68:	0e 94 b0 06 	call	0xd60	; 0xd60 <gfx_mono_lcd_uc1608_cache_clear>
    1d6c:	8d b7       	in	r24, 0x3d	; 61
    1d6e:	9e b7       	in	r25, 0x3e	; 62
    1d70:	0c 96       	adiw	r24, 0x0c	; 12
    1d72:	0f b6       	in	r0, 0x3f	; 63
    1d74:	f8 94       	cli
    1d76:	9e bf       	out	0x3e, r25	; 62
    1d78:	0f be       	out	0x3f, r0	; 63
    1d7a:	8d bf       	out	0x3d, r24	; 61
    1d7c:	8f ef       	ldi	r24, 0xFF	; 255
    1d7e:	17 c4       	rjmp	.+2094   	; 0x25ae <lcd_show_new_refosc_data+0x8bc>
    1d80:	91 ff       	sbrs	r25, 1
    1d82:	32 c0       	rjmp	.+100    	; 0x1de8 <lcd_show_new_refosc_data+0xf6>
    1d84:	9d 7f       	andi	r25, 0xFD	; 253
    1d86:	90 93 36 04 	sts	0x0436, r25	; 0x800436 <g_showData>
    1d8a:	80 91 51 04 	lds	r24, 0x0451	; 0x800451 <g_showData+0x1b>
    1d8e:	8f 93       	push	r24
    1d90:	80 91 50 04 	lds	r24, 0x0450	; 0x800450 <g_showData+0x1a>
    1d94:	8f 93       	push	r24
    1d96:	80 91 61 04 	lds	r24, 0x0461	; 0x800461 <g_showData+0x2b>
    1d9a:	1f 92       	push	r1
    1d9c:	8f 93       	push	r24
    1d9e:	80 91 62 04 	lds	r24, 0x0462	; 0x800462 <g_showData+0x2c>
    1da2:	1f 92       	push	r1
    1da4:	8f 93       	push	r24
    1da6:	82 e7       	ldi	r24, 0x72	; 114
    1da8:	92 e0       	ldi	r25, 0x02	; 2
    1daa:	9f 93       	push	r25
    1dac:	8f 93       	push	r24
    1dae:	1f 92       	push	r1
    1db0:	80 e3       	ldi	r24, 0x30	; 48
    1db2:	8f 93       	push	r24
    1db4:	8f ed       	ldi	r24, 0xDF	; 223
    1db6:	93 e0       	ldi	r25, 0x03	; 3
    1db8:	9f 93       	push	r25
    1dba:	8f 93       	push	r24
    1dbc:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    1dc0:	cf bf       	out	0x3f, r28	; 63
    1dc2:	23 e0       	ldi	r18, 0x03	; 3
    1dc4:	31 e0       	ldi	r19, 0x01	; 1
    1dc6:	44 e1       	ldi	r20, 0x14	; 20
    1dc8:	6f e3       	ldi	r22, 0x3F	; 63
    1dca:	8f ed       	ldi	r24, 0xDF	; 223
    1dcc:	93 e0       	ldi	r25, 0x03	; 3
    1dce:	2c d8       	rcall	.-4008   	; 0xe28 <gfx_mono_draw_string>
    1dd0:	0e 94 b0 06 	call	0xd60	; 0xd60 <gfx_mono_lcd_uc1608_cache_clear>
    1dd4:	8d b7       	in	r24, 0x3d	; 61
    1dd6:	9e b7       	in	r25, 0x3e	; 62
    1dd8:	0c 96       	adiw	r24, 0x0c	; 12
    1dda:	0f b6       	in	r0, 0x3f	; 63
    1ddc:	f8 94       	cli
    1dde:	9e bf       	out	0x3e, r25	; 62
    1de0:	0f be       	out	0x3f, r0	; 63
    1de2:	8d bf       	out	0x3d, r24	; 61
    1de4:	8e ef       	ldi	r24, 0xFE	; 254
    1de6:	e3 c3       	rjmp	.+1990   	; 0x25ae <lcd_show_new_refosc_data+0x8bc>
    1de8:	89 2f       	mov	r24, r25
    1dea:	81 70       	andi	r24, 0x01	; 1
    1dec:	90 ff       	sbrs	r25, 0
    1dee:	57 c1       	rjmp	.+686    	; 0x209e <lcd_show_new_refosc_data+0x3ac>
    1df0:	9e 7f       	andi	r25, 0xFE	; 254
    1df2:	90 93 36 04 	sts	0x0436, r25	; 0x800436 <g_showData>
    1df6:	cf bf       	out	0x3f, r28	; 63
    1df8:	c0 91 4e 04 	lds	r28, 0x044E	; 0x80044e <g_showData+0x18>
    1dfc:	d0 91 4f 04 	lds	r29, 0x044F	; 0x80044f <g_showData+0x19>
    1e00:	a0 90 4c 04 	lds	r10, 0x044C	; 0x80044c <g_showData+0x16>
    1e04:	b0 90 4d 04 	lds	r11, 0x044D	; 0x80044d <g_showData+0x17>
    1e08:	90 90 60 04 	lds	r9, 0x0460	; 0x800460 <g_showData+0x2a>
    1e0c:	c1 35       	cpi	r28, 0x51	; 81
    1e0e:	96 e4       	ldi	r25, 0x46	; 70
    1e10:	d9 07       	cpc	r29, r25
    1e12:	9c f4       	brge	.+38     	; 0x1e3a <lcd_show_new_refosc_data+0x148>
    1e14:	c0 3b       	cpi	r28, 0xB0	; 176
    1e16:	89 eb       	ldi	r24, 0xB9	; 185
    1e18:	d8 07       	cpc	r29, r24
    1e1a:	2c f0       	brlt	.+10     	; 0x1e26 <lcd_show_new_refosc_data+0x134>
    1e1c:	c5 39       	cpi	r28, 0x95	; 149
    1e1e:	91 e1       	ldi	r25, 0x11	; 17
    1e20:	d9 07       	cpc	r29, r25
    1e22:	1c f0       	brlt	.+6      	; 0x1e2a <lcd_show_new_refosc_data+0x138>
    1e24:	0f c0       	rjmp	.+30     	; 0x1e44 <lcd_show_new_refosc_data+0x152>
    1e26:	c0 eb       	ldi	r28, 0xB0	; 176
    1e28:	d9 eb       	ldi	r29, 0xB9	; 185
    1e2a:	be 01       	movw	r22, r28
    1e2c:	cc 36       	cpi	r28, 0x6C	; 108
    1e2e:	8e ee       	ldi	r24, 0xEE	; 238
    1e30:	d8 07       	cpc	r29, r24
    1e32:	54 f4       	brge	.+20     	; 0x1e48 <lcd_show_new_refosc_data+0x156>
    1e34:	6c e6       	ldi	r22, 0x6C	; 108
    1e36:	7e ee       	ldi	r23, 0xEE	; 238
    1e38:	07 c0       	rjmp	.+14     	; 0x1e48 <lcd_show_new_refosc_data+0x156>
    1e3a:	c0 e5       	ldi	r28, 0x50	; 80
    1e3c:	d6 e4       	ldi	r29, 0x46	; 70
    1e3e:	60 e5       	ldi	r22, 0x50	; 80
    1e40:	76 e4       	ldi	r23, 0x46	; 70
    1e42:	02 c0       	rjmp	.+4      	; 0x1e48 <lcd_show_new_refosc_data+0x156>
    1e44:	60 e5       	ldi	r22, 0x50	; 80
    1e46:	76 e4       	ldi	r23, 0x46	; 70
    1e48:	07 2e       	mov	r0, r23
    1e4a:	00 0c       	add	r0, r0
    1e4c:	88 0b       	sbc	r24, r24
    1e4e:	99 0b       	sbc	r25, r25
    1e50:	0e 94 05 21 	call	0x420a	; 0x420a <__floatsisf>
    1e54:	20 e0       	ldi	r18, 0x00	; 0
    1e56:	30 ea       	ldi	r19, 0xA0	; 160
    1e58:	4c e8       	ldi	r20, 0x8C	; 140
    1e5a:	55 e4       	ldi	r21, 0x45	; 69
    1e5c:	0e 94 6a 20 	call	0x40d4	; 0x40d4 <__divsf3>
    1e60:	20 e0       	ldi	r18, 0x00	; 0
    1e62:	30 e0       	ldi	r19, 0x00	; 0
    1e64:	48 e9       	ldi	r20, 0x98	; 152
    1e66:	52 e4       	ldi	r21, 0x42	; 66
    1e68:	0e 94 0c 22 	call	0x4418	; 0x4418 <__mulsf3>
    1e6c:	0e 94 d2 20 	call	0x41a4	; 0x41a4 <__fixsfsi>
    1e70:	2b 01       	movw	r4, r22
    1e72:	3c 01       	movw	r6, r24
    1e74:	7b 01       	movw	r14, r22
    1e76:	77 ff       	sbrs	r23, 7
    1e78:	08 c0       	rjmp	.+16     	; 0x1e8a <lcd_show_new_refosc_data+0x198>
    1e7a:	36 e9       	ldi	r19, 0x96	; 150
    1e7c:	83 2e       	mov	r8, r19
    1e7e:	86 0e       	add	r8, r22
    1e80:	cc 24       	eor	r12, r12
    1e82:	dd 24       	eor	r13, r13
    1e84:	c6 1a       	sub	r12, r22
    1e86:	d7 0a       	sbc	r13, r23
    1e88:	03 c0       	rjmp	.+6      	; 0x1e90 <lcd_show_new_refosc_data+0x19e>
    1e8a:	6b 01       	movw	r12, r22
    1e8c:	26 e9       	ldi	r18, 0x96	; 150
    1e8e:	82 2e       	mov	r8, r18
    1e90:	1f 92       	push	r1
    1e92:	9f 92       	push	r9
    1e94:	81 e8       	ldi	r24, 0x81	; 129
    1e96:	92 e0       	ldi	r25, 0x02	; 2
    1e98:	9f 93       	push	r25
    1e9a:	8f 93       	push	r24
    1e9c:	1f 92       	push	r1
    1e9e:	90 e3       	ldi	r25, 0x30	; 48
    1ea0:	39 2e       	mov	r3, r25
    1ea2:	3f 92       	push	r3
    1ea4:	0f ed       	ldi	r16, 0xDF	; 223
    1ea6:	13 e0       	ldi	r17, 0x03	; 3
    1ea8:	1f 93       	push	r17
    1eaa:	0f 93       	push	r16
    1eac:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    1eb0:	23 e0       	ldi	r18, 0x03	; 3
    1eb2:	31 e0       	ldi	r19, 0x01	; 1
    1eb4:	4b e0       	ldi	r20, 0x0B	; 11
    1eb6:	6b e4       	ldi	r22, 0x4B	; 75
    1eb8:	c8 01       	movw	r24, r16
    1eba:	0e 94 14 07 	call	0xe28	; 0xe28 <gfx_mono_draw_string>
    1ebe:	c5 01       	movw	r24, r10
    1ec0:	68 ee       	ldi	r22, 0xE8	; 232
    1ec2:	73 e0       	ldi	r23, 0x03	; 3
    1ec4:	0e 94 7b 22 	call	0x44f6	; 0x44f6 <__udivmodhi4>
    1ec8:	9f 93       	push	r25
    1eca:	8f 93       	push	r24
    1ecc:	7f 93       	push	r23
    1ece:	6f 93       	push	r22
    1ed0:	85 e8       	ldi	r24, 0x85	; 133
    1ed2:	92 e0       	ldi	r25, 0x02	; 2
    1ed4:	9f 93       	push	r25
    1ed6:	8f 93       	push	r24
    1ed8:	1f 92       	push	r1
    1eda:	3f 92       	push	r3
    1edc:	1f 93       	push	r17
    1ede:	0f 93       	push	r16
    1ee0:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    1ee4:	23 e0       	ldi	r18, 0x03	; 3
    1ee6:	31 e0       	ldi	r19, 0x01	; 1
    1ee8:	48 e3       	ldi	r20, 0x38	; 56
    1eea:	6d eb       	ldi	r22, 0xBD	; 189
    1eec:	c8 01       	movw	r24, r16
    1eee:	0e 94 14 07 	call	0xe28	; 0xe28 <gfx_mono_draw_string>
    1ef2:	ce 01       	movw	r24, r28
    1ef4:	64 e6       	ldi	r22, 0x64	; 100
    1ef6:	70 e0       	ldi	r23, 0x00	; 0
    1ef8:	0e 94 8f 22 	call	0x451e	; 0x451e <__divmodhi4>
    1efc:	7f 93       	push	r23
    1efe:	6f 93       	push	r22
    1f00:	8e e8       	ldi	r24, 0x8E	; 142
    1f02:	92 e0       	ldi	r25, 0x02	; 2
    1f04:	9f 93       	push	r25
    1f06:	8f 93       	push	r24
    1f08:	1f 92       	push	r1
    1f0a:	3f 92       	push	r3
    1f0c:	1f 93       	push	r17
    1f0e:	0f 93       	push	r16
    1f10:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    1f14:	23 e0       	ldi	r18, 0x03	; 3
    1f16:	31 e0       	ldi	r19, 0x01	; 1
    1f18:	4e e6       	ldi	r20, 0x6E	; 110
    1f1a:	69 ec       	ldi	r22, 0xC9	; 201
    1f1c:	c8 01       	movw	r24, r16
    1f1e:	0e 94 14 07 	call	0xe28	; 0xe28 <gfx_mono_draw_string>
    1f22:	8d b7       	in	r24, 0x3d	; 61
    1f24:	9e b7       	in	r25, 0x3e	; 62
    1f26:	4a 96       	adiw	r24, 0x1a	; 26
    1f28:	0f b6       	in	r0, 0x3f	; 63
    1f2a:	f8 94       	cli
    1f2c:	9e bf       	out	0x3e, r25	; 62
    1f2e:	0f be       	out	0x3f, r0	; 63
    1f30:	8d bf       	out	0x3d, r24	; 61
    1f32:	80 91 59 03 	lds	r24, 0x0359	; 0x800359 <clk_state_old.3556>
    1f36:	98 12       	cpse	r9, r24
    1f38:	22 c0       	rjmp	.+68     	; 0x1f7e <lcd_show_new_refosc_data+0x28c>
    1f3a:	c1 14       	cp	r12, r1
    1f3c:	d1 04       	cpc	r13, r1
    1f3e:	f9 f0       	breq	.+62     	; 0x1f7e <lcd_show_new_refosc_data+0x28c>
    1f40:	44 2d       	mov	r20, r4
    1f42:	1e 14       	cp	r1, r14
    1f44:	1f 04       	cpc	r1, r15
    1f46:	0c f4       	brge	.+2      	; 0x1f4a <lcd_show_new_refosc_data+0x258>
    1f48:	40 e0       	ldi	r20, 0x00	; 0
    1f4a:	d4 2d       	mov	r29, r4
    1f4c:	f7 fc       	sbrc	r15, 7
    1f4e:	d0 e0       	ldi	r29, 0x00	; 0
    1f50:	97 e0       	ldi	r25, 0x07	; 7
    1f52:	99 16       	cp	r9, r25
    1f54:	09 f4       	brne	.+2      	; 0x1f58 <lcd_show_new_refosc_data+0x266>
    1f56:	62 c0       	rjmp	.+196    	; 0x201c <lcd_show_new_refosc_data+0x32a>
    1f58:	99 15       	cp	r25, r9
    1f5a:	68 f0       	brcs	.+26     	; 0x1f76 <lcd_show_new_refosc_data+0x284>
    1f5c:	8f ef       	ldi	r24, 0xFF	; 255
    1f5e:	89 0d       	add	r24, r9
    1f60:	83 30       	cpi	r24, 0x03	; 3
    1f62:	08 f0       	brcs	.+2      	; 0x1f66 <lcd_show_new_refosc_data+0x274>
    1f64:	96 c0       	rjmp	.+300    	; 0x2092 <lcd_show_new_refosc_data+0x3a0>
    1f66:	01 e0       	ldi	r16, 0x01	; 1
    1f68:	21 e0       	ldi	r18, 0x01	; 1
    1f6a:	48 e9       	ldi	r20, 0x98	; 152
    1f6c:	6a e7       	ldi	r22, 0x7A	; 122
    1f6e:	8a e4       	ldi	r24, 0x4A	; 74
    1f70:	0e 94 92 04 	call	0x924	; 0x924 <gfx_mono_generic_draw_filled_rect>
    1f74:	8e c0       	rjmp	.+284    	; 0x2092 <lcd_show_new_refosc_data+0x3a0>
    1f76:	8f e0       	ldi	r24, 0x0F	; 15
    1f78:	98 16       	cp	r9, r24
    1f7a:	99 f0       	breq	.+38     	; 0x1fa2 <lcd_show_new_refosc_data+0x2b0>
    1f7c:	8a c0       	rjmp	.+276    	; 0x2092 <lcd_show_new_refosc_data+0x3a0>
    1f7e:	00 e0       	ldi	r16, 0x00	; 0
    1f80:	25 e0       	ldi	r18, 0x05	; 5
    1f82:	40 ea       	ldi	r20, 0xA0	; 160
    1f84:	68 e7       	ldi	r22, 0x78	; 120
    1f86:	86 e4       	ldi	r24, 0x46	; 70
    1f88:	0e 94 92 04 	call	0x924	; 0x924 <gfx_mono_generic_draw_filled_rect>
    1f8c:	c1 14       	cp	r12, r1
    1f8e:	d1 04       	cpc	r13, r1
    1f90:	b9 f6       	brne	.-82     	; 0x1f40 <lcd_show_new_refosc_data+0x24e>
    1f92:	01 e0       	ldi	r16, 0x01	; 1
    1f94:	2c e7       	ldi	r18, 0x7C	; 124
    1f96:	46 e9       	ldi	r20, 0x96	; 150
    1f98:	68 e7       	ldi	r22, 0x78	; 120
    1f9a:	86 e9       	ldi	r24, 0x96	; 150
    1f9c:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    1fa0:	78 c0       	rjmp	.+240    	; 0x2092 <lcd_show_new_refosc_data+0x3a0>
    1fa2:	40 5b       	subi	r20, 0xB0	; 176
    1fa4:	00 e0       	ldi	r16, 0x00	; 0
    1fa6:	25 e0       	ldi	r18, 0x05	; 5
    1fa8:	68 e7       	ldi	r22, 0x78	; 120
    1faa:	86 e4       	ldi	r24, 0x46	; 70
    1fac:	0e 94 92 04 	call	0x924	; 0x924 <gfx_mono_generic_draw_filled_rect>
    1fb0:	f7 fe       	sbrs	r15, 7
    1fb2:	0f c0       	rjmp	.+30     	; 0x1fd2 <lcd_show_new_refosc_data+0x2e0>
    1fb4:	01 e0       	ldi	r16, 0x01	; 1
    1fb6:	28 e7       	ldi	r18, 0x78	; 120
    1fb8:	48 2d       	mov	r20, r8
    1fba:	6a e7       	ldi	r22, 0x7A	; 122
    1fbc:	cc ef       	ldi	r28, 0xFC	; 252
    1fbe:	c8 0d       	add	r28, r8
    1fc0:	8c 2f       	mov	r24, r28
    1fc2:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    1fc6:	2c e7       	ldi	r18, 0x7C	; 124
    1fc8:	48 2d       	mov	r20, r8
    1fca:	6a e7       	ldi	r22, 0x7A	; 122
    1fcc:	8c 2f       	mov	r24, r28
    1fce:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    1fd2:	01 e0       	ldi	r16, 0x01	; 1
    1fd4:	25 e0       	ldi	r18, 0x05	; 5
    1fd6:	4c 2d       	mov	r20, r12
    1fd8:	68 e7       	ldi	r22, 0x78	; 120
    1fda:	88 2d       	mov	r24, r8
    1fdc:	0e 94 92 04 	call	0x924	; 0x924 <gfx_mono_generic_draw_filled_rect>
    1fe0:	40 e5       	ldi	r20, 0x50	; 80
    1fe2:	4d 1b       	sub	r20, r29
    1fe4:	00 e0       	ldi	r16, 0x00	; 0
    1fe6:	25 e0       	ldi	r18, 0x05	; 5
    1fe8:	68 e7       	ldi	r22, 0x78	; 120
    1fea:	86 e9       	ldi	r24, 0x96	; 150
    1fec:	8d 0f       	add	r24, r29
    1fee:	0e 94 92 04 	call	0x924	; 0x924 <gfx_mono_generic_draw_filled_rect>
    1ff2:	1e 14       	cp	r1, r14
    1ff4:	1f 04       	cpc	r1, r15
    1ff6:	0c f0       	brlt	.+2      	; 0x1ffa <lcd_show_new_refosc_data+0x308>
    1ff8:	4c c0       	rjmp	.+152    	; 0x2092 <lcd_show_new_refosc_data+0x3a0>
    1ffa:	c5 e9       	ldi	r28, 0x95	; 149
    1ffc:	cd 0f       	add	r28, r29
    1ffe:	d7 56       	subi	r29, 0x67	; 103
    2000:	01 e0       	ldi	r16, 0x01	; 1
    2002:	28 e7       	ldi	r18, 0x78	; 120
    2004:	4c 2f       	mov	r20, r28
    2006:	6a e7       	ldi	r22, 0x7A	; 122
    2008:	8d 2f       	mov	r24, r29
    200a:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    200e:	2c e7       	ldi	r18, 0x7C	; 124
    2010:	4c 2f       	mov	r20, r28
    2012:	6a e7       	ldi	r22, 0x7A	; 122
    2014:	8d 2f       	mov	r24, r29
    2016:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    201a:	3b c0       	rjmp	.+118    	; 0x2092 <lcd_show_new_refosc_data+0x3a0>
    201c:	40 5b       	subi	r20, 0xB0	; 176
    201e:	00 e0       	ldi	r16, 0x00	; 0
    2020:	23 e0       	ldi	r18, 0x03	; 3
    2022:	69 e7       	ldi	r22, 0x79	; 121
    2024:	86 e4       	ldi	r24, 0x46	; 70
    2026:	0e 94 92 04 	call	0x924	; 0x924 <gfx_mono_generic_draw_filled_rect>
    202a:	f7 fe       	sbrs	r15, 7
    202c:	0f c0       	rjmp	.+30     	; 0x204c <lcd_show_new_refosc_data+0x35a>
    202e:	01 e0       	ldi	r16, 0x01	; 1
    2030:	29 e7       	ldi	r18, 0x79	; 121
    2032:	48 2d       	mov	r20, r8
    2034:	6a e7       	ldi	r22, 0x7A	; 122
    2036:	cc ef       	ldi	r28, 0xFC	; 252
    2038:	c8 0d       	add	r28, r8
    203a:	8c 2f       	mov	r24, r28
    203c:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    2040:	2b e7       	ldi	r18, 0x7B	; 123
    2042:	48 2d       	mov	r20, r8
    2044:	6a e7       	ldi	r22, 0x7A	; 122
    2046:	8c 2f       	mov	r24, r28
    2048:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    204c:	01 e0       	ldi	r16, 0x01	; 1
    204e:	23 e0       	ldi	r18, 0x03	; 3
    2050:	4c 2d       	mov	r20, r12
    2052:	69 e7       	ldi	r22, 0x79	; 121
    2054:	88 2d       	mov	r24, r8
    2056:	0e 94 92 04 	call	0x924	; 0x924 <gfx_mono_generic_draw_filled_rect>
    205a:	40 e5       	ldi	r20, 0x50	; 80
    205c:	4d 1b       	sub	r20, r29
    205e:	00 e0       	ldi	r16, 0x00	; 0
    2060:	23 e0       	ldi	r18, 0x03	; 3
    2062:	69 e7       	ldi	r22, 0x79	; 121
    2064:	86 e9       	ldi	r24, 0x96	; 150
    2066:	8d 0f       	add	r24, r29
    2068:	0e 94 92 04 	call	0x924	; 0x924 <gfx_mono_generic_draw_filled_rect>
    206c:	1e 14       	cp	r1, r14
    206e:	1f 04       	cpc	r1, r15
    2070:	84 f4       	brge	.+32     	; 0x2092 <lcd_show_new_refosc_data+0x3a0>
    2072:	c5 e9       	ldi	r28, 0x95	; 149
    2074:	cd 0f       	add	r28, r29
    2076:	d7 56       	subi	r29, 0x67	; 103
    2078:	01 e0       	ldi	r16, 0x01	; 1
    207a:	29 e7       	ldi	r18, 0x79	; 121
    207c:	4c 2f       	mov	r20, r28
    207e:	6a e7       	ldi	r22, 0x7A	; 122
    2080:	8d 2f       	mov	r24, r29
    2082:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    2086:	2b e7       	ldi	r18, 0x7B	; 123
    2088:	4c 2f       	mov	r20, r28
    208a:	6a e7       	ldi	r22, 0x7A	; 122
    208c:	8d 2f       	mov	r24, r29
    208e:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    2092:	90 92 59 03 	sts	0x0359, r9	; 0x800359 <clk_state_old.3556>
    2096:	0e 94 b0 06 	call	0xd60	; 0xd60 <gfx_mono_lcd_uc1608_cache_clear>
    209a:	8d ef       	ldi	r24, 0xFD	; 253
    209c:	88 c2       	rjmp	.+1296   	; 0x25ae <lcd_show_new_refosc_data+0x8bc>
    209e:	96 ff       	sbrs	r25, 6
    20a0:	38 c0       	rjmp	.+112    	; 0x2112 <lcd_show_new_refosc_data+0x420>
    20a2:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <idx.3599>
    20a6:	22 30       	cpi	r18, 0x02	; 2
    20a8:	a0 f5       	brcc	.+104    	; 0x2112 <lcd_show_new_refosc_data+0x420>
    20aa:	9f 7b       	andi	r25, 0xBF	; 191
    20ac:	90 93 36 04 	sts	0x0436, r25	; 0x800436 <g_showData>
    20b0:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <g_showData+0x35>
    20b4:	1f 92       	push	r1
    20b6:	8f 93       	push	r24
    20b8:	80 91 6a 04 	lds	r24, 0x046A	; 0x80046a <g_showData+0x34>
    20bc:	1f 92       	push	r1
    20be:	8f 93       	push	r24
    20c0:	80 91 69 04 	lds	r24, 0x0469	; 0x800469 <g_showData+0x33>
    20c4:	1f 92       	push	r1
    20c6:	8f 93       	push	r24
    20c8:	84 e9       	ldi	r24, 0x94	; 148
    20ca:	92 e0       	ldi	r25, 0x02	; 2
    20cc:	9f 93       	push	r25
    20ce:	8f 93       	push	r24
    20d0:	1f 92       	push	r1
    20d2:	80 e3       	ldi	r24, 0x30	; 48
    20d4:	8f 93       	push	r24
    20d6:	8f ed       	ldi	r24, 0xDF	; 223
    20d8:	93 e0       	ldi	r25, 0x03	; 3
    20da:	9f 93       	push	r25
    20dc:	8f 93       	push	r24
    20de:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    20e2:	cf bf       	out	0x3f, r28	; 63
    20e4:	23 e0       	ldi	r18, 0x03	; 3
    20e6:	31 e0       	ldi	r19, 0x01	; 1
    20e8:	41 e4       	ldi	r20, 0x41	; 65
    20ea:	6d e5       	ldi	r22, 0x5D	; 93
    20ec:	8f ed       	ldi	r24, 0xDF	; 223
    20ee:	93 e0       	ldi	r25, 0x03	; 3
    20f0:	0e 94 14 07 	call	0xe28	; 0xe28 <gfx_mono_draw_string>
    20f4:	0e 94 b0 06 	call	0xd60	; 0xd60 <gfx_mono_lcd_uc1608_cache_clear>
    20f8:	82 e0       	ldi	r24, 0x02	; 2
    20fa:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3599>
    20fe:	8d b7       	in	r24, 0x3d	; 61
    2100:	9e b7       	in	r25, 0x3e	; 62
    2102:	0c 96       	adiw	r24, 0x0c	; 12
    2104:	0f b6       	in	r0, 0x3f	; 63
    2106:	f8 94       	cli
    2108:	9e bf       	out	0x3e, r25	; 62
    210a:	0f be       	out	0x3f, r0	; 63
    210c:	8d bf       	out	0x3d, r24	; 61
    210e:	81 e0       	ldi	r24, 0x01	; 1
    2110:	4e c2       	rjmp	.+1180   	; 0x25ae <lcd_show_new_refosc_data+0x8bc>
    2112:	97 ff       	sbrs	r25, 7
    2114:	49 c0       	rjmp	.+146    	; 0x21a8 <lcd_show_new_refosc_data+0x4b6>
    2116:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <idx.3599>
    211a:	23 30       	cpi	r18, 0x03	; 3
    211c:	08 f0       	brcs	.+2      	; 0x2120 <lcd_show_new_refosc_data+0x42e>
    211e:	44 c0       	rjmp	.+136    	; 0x21a8 <lcd_show_new_refosc_data+0x4b6>
    2120:	80 91 36 04 	lds	r24, 0x0436	; 0x800436 <g_showData>
    2124:	8f 77       	andi	r24, 0x7F	; 127
    2126:	80 93 36 04 	sts	0x0436, r24	; 0x800436 <g_showData>
    212a:	20 91 58 04 	lds	r18, 0x0458	; 0x800458 <g_showData+0x22>
    212e:	30 91 59 04 	lds	r19, 0x0459	; 0x800459 <g_showData+0x23>
    2132:	c9 01       	movw	r24, r18
    2134:	64 e6       	ldi	r22, 0x64	; 100
    2136:	70 e0       	ldi	r23, 0x00	; 0
    2138:	0e 94 7b 22 	call	0x44f6	; 0x44f6 <__udivmodhi4>
    213c:	9f 93       	push	r25
    213e:	8f 93       	push	r24
    2140:	b9 01       	movw	r22, r18
    2142:	80 e0       	ldi	r24, 0x00	; 0
    2144:	90 e0       	ldi	r25, 0x00	; 0
    2146:	0e 94 03 21 	call	0x4206	; 0x4206 <__floatunsisf>
    214a:	20 e0       	ldi	r18, 0x00	; 0
    214c:	30 e0       	ldi	r19, 0x00	; 0
    214e:	48 ec       	ldi	r20, 0xC8	; 200
    2150:	52 e4       	ldi	r21, 0x42	; 66
    2152:	0e 94 6a 20 	call	0x40d4	; 0x40d4 <__divsf3>
    2156:	0e 94 d2 20 	call	0x41a4	; 0x41a4 <__fixsfsi>
    215a:	7f 93       	push	r23
    215c:	6f 93       	push	r22
    215e:	85 ed       	ldi	r24, 0xD5	; 213
    2160:	91 e0       	ldi	r25, 0x01	; 1
    2162:	9f 93       	push	r25
    2164:	8f 93       	push	r24
    2166:	1f 92       	push	r1
    2168:	80 e3       	ldi	r24, 0x30	; 48
    216a:	8f 93       	push	r24
    216c:	8f ed       	ldi	r24, 0xDF	; 223
    216e:	93 e0       	ldi	r25, 0x03	; 3
    2170:	9f 93       	push	r25
    2172:	8f 93       	push	r24
    2174:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    2178:	cf bf       	out	0x3f, r28	; 63
    217a:	23 e0       	ldi	r18, 0x03	; 3
    217c:	31 e0       	ldi	r19, 0x01	; 1
    217e:	4a e4       	ldi	r20, 0x4A	; 74
    2180:	6f e3       	ldi	r22, 0x3F	; 63
    2182:	8f ed       	ldi	r24, 0xDF	; 223
    2184:	93 e0       	ldi	r25, 0x03	; 3
    2186:	0e 94 14 07 	call	0xe28	; 0xe28 <gfx_mono_draw_string>
    218a:	0e 94 b0 06 	call	0xd60	; 0xd60 <gfx_mono_lcd_uc1608_cache_clear>
    218e:	83 e0       	ldi	r24, 0x03	; 3
    2190:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3599>
    2194:	8d b7       	in	r24, 0x3d	; 61
    2196:	9e b7       	in	r25, 0x3e	; 62
    2198:	0a 96       	adiw	r24, 0x0a	; 10
    219a:	0f b6       	in	r0, 0x3f	; 63
    219c:	f8 94       	cli
    219e:	9e bf       	out	0x3e, r25	; 62
    21a0:	0f be       	out	0x3f, r0	; 63
    21a2:	8d bf       	out	0x3d, r24	; 61
    21a4:	82 e0       	ldi	r24, 0x02	; 2
    21a6:	03 c2       	rjmp	.+1030   	; 0x25ae <lcd_show_new_refosc_data+0x8bc>
    21a8:	20 91 37 04 	lds	r18, 0x0437	; 0x800437 <g_showData+0x1>
    21ac:	20 ff       	sbrs	r18, 0
    21ae:	34 c0       	rjmp	.+104    	; 0x2218 <lcd_show_new_refosc_data+0x526>
    21b0:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <idx.3599>
    21b4:	34 30       	cpi	r19, 0x04	; 4
    21b6:	80 f5       	brcc	.+96     	; 0x2218 <lcd_show_new_refosc_data+0x526>
    21b8:	2e 7f       	andi	r18, 0xFE	; 254
    21ba:	20 93 37 04 	sts	0x0437, r18	; 0x800437 <g_showData+0x1>
    21be:	80 91 6d 04 	lds	r24, 0x046D	; 0x80046d <g_showData+0x37>
    21c2:	1f 92       	push	r1
    21c4:	8f 93       	push	r24
    21c6:	80 91 6c 04 	lds	r24, 0x046C	; 0x80046c <g_showData+0x36>
    21ca:	1f 92       	push	r1
    21cc:	8f 93       	push	r24
    21ce:	8c ee       	ldi	r24, 0xEC	; 236
    21d0:	91 e0       	ldi	r25, 0x01	; 1
    21d2:	9f 93       	push	r25
    21d4:	8f 93       	push	r24
    21d6:	1f 92       	push	r1
    21d8:	80 e3       	ldi	r24, 0x30	; 48
    21da:	8f 93       	push	r24
    21dc:	8f ed       	ldi	r24, 0xDF	; 223
    21de:	93 e0       	ldi	r25, 0x03	; 3
    21e0:	9f 93       	push	r25
    21e2:	8f 93       	push	r24
    21e4:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    21e8:	cf bf       	out	0x3f, r28	; 63
    21ea:	23 e0       	ldi	r18, 0x03	; 3
    21ec:	31 e0       	ldi	r19, 0x01	; 1
    21ee:	43 e5       	ldi	r20, 0x53	; 83
    21f0:	61 e5       	ldi	r22, 0x51	; 81
    21f2:	8f ed       	ldi	r24, 0xDF	; 223
    21f4:	93 e0       	ldi	r25, 0x03	; 3
    21f6:	0e 94 14 07 	call	0xe28	; 0xe28 <gfx_mono_draw_string>
    21fa:	0e 94 b0 06 	call	0xd60	; 0xd60 <gfx_mono_lcd_uc1608_cache_clear>
    21fe:	84 e0       	ldi	r24, 0x04	; 4
    2200:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3599>
    2204:	8d b7       	in	r24, 0x3d	; 61
    2206:	9e b7       	in	r25, 0x3e	; 62
    2208:	0a 96       	adiw	r24, 0x0a	; 10
    220a:	0f b6       	in	r0, 0x3f	; 63
    220c:	f8 94       	cli
    220e:	9e bf       	out	0x3e, r25	; 62
    2210:	0f be       	out	0x3f, r0	; 63
    2212:	8d bf       	out	0x3d, r24	; 61
    2214:	83 e0       	ldi	r24, 0x03	; 3
    2216:	cb c1       	rjmp	.+918    	; 0x25ae <lcd_show_new_refosc_data+0x8bc>
    2218:	21 ff       	sbrs	r18, 1
    221a:	44 c0       	rjmp	.+136    	; 0x22a4 <lcd_show_new_refosc_data+0x5b2>
    221c:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <idx.3599>
    2220:	35 30       	cpi	r19, 0x05	; 5
    2222:	08 f0       	brcs	.+2      	; 0x2226 <lcd_show_new_refosc_data+0x534>
    2224:	3f c0       	rjmp	.+126    	; 0x22a4 <lcd_show_new_refosc_data+0x5b2>
    2226:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <g_showData+0x1>
    222a:	8d 7f       	andi	r24, 0xFD	; 253
    222c:	80 93 37 04 	sts	0x0437, r24	; 0x800437 <g_showData+0x1>
    2230:	80 91 5b 04 	lds	r24, 0x045B	; 0x80045b <g_showData+0x25>
    2234:	8f 93       	push	r24
    2236:	80 91 5a 04 	lds	r24, 0x045A	; 0x80045a <g_showData+0x24>
    223a:	8f 93       	push	r24
    223c:	80 91 70 04 	lds	r24, 0x0470	; 0x800470 <g_showData+0x3a>
    2240:	1f 92       	push	r1
    2242:	8f 93       	push	r24
    2244:	1f 92       	push	r1
    2246:	8e e7       	ldi	r24, 0x7E	; 126
    2248:	8f 93       	push	r24
    224a:	80 91 6f 04 	lds	r24, 0x046F	; 0x80046f <g_showData+0x39>
    224e:	1f 92       	push	r1
    2250:	8f 93       	push	r24
    2252:	80 91 6e 04 	lds	r24, 0x046E	; 0x80046e <g_showData+0x38>
    2256:	1f 92       	push	r1
    2258:	8f 93       	push	r24
    225a:	8d ea       	ldi	r24, 0xAD	; 173
    225c:	92 e0       	ldi	r25, 0x02	; 2
    225e:	9f 93       	push	r25
    2260:	8f 93       	push	r24
    2262:	1f 92       	push	r1
    2264:	80 e3       	ldi	r24, 0x30	; 48
    2266:	8f 93       	push	r24
    2268:	8f ed       	ldi	r24, 0xDF	; 223
    226a:	93 e0       	ldi	r25, 0x03	; 3
    226c:	9f 93       	push	r25
    226e:	8f 93       	push	r24
    2270:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    2274:	cf bf       	out	0x3f, r28	; 63
    2276:	23 e0       	ldi	r18, 0x03	; 3
    2278:	31 e0       	ldi	r19, 0x01	; 1
    227a:	4c e5       	ldi	r20, 0x5C	; 92
    227c:	6f e3       	ldi	r22, 0x3F	; 63
    227e:	8f ed       	ldi	r24, 0xDF	; 223
    2280:	93 e0       	ldi	r25, 0x03	; 3
    2282:	0e 94 14 07 	call	0xe28	; 0xe28 <gfx_mono_draw_string>
    2286:	0e 94 b0 06 	call	0xd60	; 0xd60 <gfx_mono_lcd_uc1608_cache_clear>
    228a:	85 e0       	ldi	r24, 0x05	; 5
    228c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3599>
    2290:	8d b7       	in	r24, 0x3d	; 61
    2292:	9e b7       	in	r25, 0x3e	; 62
    2294:	40 96       	adiw	r24, 0x10	; 16
    2296:	0f b6       	in	r0, 0x3f	; 63
    2298:	f8 94       	cli
    229a:	9e bf       	out	0x3e, r25	; 62
    229c:	0f be       	out	0x3f, r0	; 63
    229e:	8d bf       	out	0x3d, r24	; 61
    22a0:	84 e0       	ldi	r24, 0x04	; 4
    22a2:	85 c1       	rjmp	.+778    	; 0x25ae <lcd_show_new_refosc_data+0x8bc>
    22a4:	22 ff       	sbrs	r18, 2
    22a6:	44 c0       	rjmp	.+136    	; 0x2330 <lcd_show_new_refosc_data+0x63e>
    22a8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <idx.3599>
    22ac:	36 30       	cpi	r19, 0x06	; 6
    22ae:	08 f0       	brcs	.+2      	; 0x22b2 <lcd_show_new_refosc_data+0x5c0>
    22b0:	3f c0       	rjmp	.+126    	; 0x2330 <lcd_show_new_refosc_data+0x63e>
    22b2:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <g_showData+0x1>
    22b6:	8b 7f       	andi	r24, 0xFB	; 251
    22b8:	80 93 37 04 	sts	0x0437, r24	; 0x800437 <g_showData+0x1>
    22bc:	80 91 5d 04 	lds	r24, 0x045D	; 0x80045d <g_showData+0x27>
    22c0:	8f 93       	push	r24
    22c2:	80 91 5c 04 	lds	r24, 0x045C	; 0x80045c <g_showData+0x26>
    22c6:	8f 93       	push	r24
    22c8:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <g_showData+0x3d>
    22cc:	1f 92       	push	r1
    22ce:	8f 93       	push	r24
    22d0:	1f 92       	push	r1
    22d2:	8e e7       	ldi	r24, 0x7E	; 126
    22d4:	8f 93       	push	r24
    22d6:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <g_showData+0x3c>
    22da:	1f 92       	push	r1
    22dc:	8f 93       	push	r24
    22de:	80 91 71 04 	lds	r24, 0x0471	; 0x800471 <g_showData+0x3b>
    22e2:	1f 92       	push	r1
    22e4:	8f 93       	push	r24
    22e6:	81 ec       	ldi	r24, 0xC1	; 193
    22e8:	92 e0       	ldi	r25, 0x02	; 2
    22ea:	9f 93       	push	r25
    22ec:	8f 93       	push	r24
    22ee:	1f 92       	push	r1
    22f0:	80 e3       	ldi	r24, 0x30	; 48
    22f2:	8f 93       	push	r24
    22f4:	8f ed       	ldi	r24, 0xDF	; 223
    22f6:	93 e0       	ldi	r25, 0x03	; 3
    22f8:	9f 93       	push	r25
    22fa:	8f 93       	push	r24
    22fc:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    2300:	cf bf       	out	0x3f, r28	; 63
    2302:	23 e0       	ldi	r18, 0x03	; 3
    2304:	31 e0       	ldi	r19, 0x01	; 1
    2306:	45 e6       	ldi	r20, 0x65	; 101
    2308:	6f e3       	ldi	r22, 0x3F	; 63
    230a:	8f ed       	ldi	r24, 0xDF	; 223
    230c:	93 e0       	ldi	r25, 0x03	; 3
    230e:	0e 94 14 07 	call	0xe28	; 0xe28 <gfx_mono_draw_string>
    2312:	0e 94 b0 06 	call	0xd60	; 0xd60 <gfx_mono_lcd_uc1608_cache_clear>
    2316:	86 e0       	ldi	r24, 0x06	; 6
    2318:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3599>
    231c:	8d b7       	in	r24, 0x3d	; 61
    231e:	9e b7       	in	r25, 0x3e	; 62
    2320:	40 96       	adiw	r24, 0x10	; 16
    2322:	0f b6       	in	r0, 0x3f	; 63
    2324:	f8 94       	cli
    2326:	9e bf       	out	0x3e, r25	; 62
    2328:	0f be       	out	0x3f, r0	; 63
    232a:	8d bf       	out	0x3d, r24	; 61
    232c:	85 e0       	ldi	r24, 0x05	; 5
    232e:	3f c1       	rjmp	.+638    	; 0x25ae <lcd_show_new_refosc_data+0x8bc>
    2330:	23 ff       	sbrs	r18, 3
    2332:	38 c0       	rjmp	.+112    	; 0x23a4 <lcd_show_new_refosc_data+0x6b2>
    2334:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <idx.3599>
    2338:	27 30       	cpi	r18, 0x07	; 7
    233a:	a0 f5       	brcc	.+104    	; 0x23a4 <lcd_show_new_refosc_data+0x6b2>
    233c:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <g_showData+0x1>
    2340:	87 7f       	andi	r24, 0xF7	; 247
    2342:	80 93 37 04 	sts	0x0437, r24	; 0x800437 <g_showData+0x1>
    2346:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <g_showData+0x3e>
    234a:	1f 92       	push	r1
    234c:	8f 93       	push	r24
    234e:	80 91 5f 04 	lds	r24, 0x045F	; 0x80045f <g_showData+0x29>
    2352:	8f 93       	push	r24
    2354:	80 91 5e 04 	lds	r24, 0x045E	; 0x80045e <g_showData+0x28>
    2358:	8f 93       	push	r24
    235a:	84 ed       	ldi	r24, 0xD4	; 212
    235c:	92 e0       	ldi	r25, 0x02	; 2
    235e:	9f 93       	push	r25
    2360:	8f 93       	push	r24
    2362:	1f 92       	push	r1
    2364:	80 e3       	ldi	r24, 0x30	; 48
    2366:	8f 93       	push	r24
    2368:	8f ed       	ldi	r24, 0xDF	; 223
    236a:	93 e0       	ldi	r25, 0x03	; 3
    236c:	9f 93       	push	r25
    236e:	8f 93       	push	r24
    2370:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    2374:	cf bf       	out	0x3f, r28	; 63
    2376:	23 e0       	ldi	r18, 0x03	; 3
    2378:	31 e0       	ldi	r19, 0x01	; 1
    237a:	4e e6       	ldi	r20, 0x6E	; 110
    237c:	6f e3       	ldi	r22, 0x3F	; 63
    237e:	8f ed       	ldi	r24, 0xDF	; 223
    2380:	93 e0       	ldi	r25, 0x03	; 3
    2382:	0e 94 14 07 	call	0xe28	; 0xe28 <gfx_mono_draw_string>
    2386:	0e 94 b0 06 	call	0xd60	; 0xd60 <gfx_mono_lcd_uc1608_cache_clear>
    238a:	87 e0       	ldi	r24, 0x07	; 7
    238c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3599>
    2390:	8d b7       	in	r24, 0x3d	; 61
    2392:	9e b7       	in	r25, 0x3e	; 62
    2394:	0a 96       	adiw	r24, 0x0a	; 10
    2396:	0f b6       	in	r0, 0x3f	; 63
    2398:	f8 94       	cli
    239a:	9e bf       	out	0x3e, r25	; 62
    239c:	0f be       	out	0x3f, r0	; 63
    239e:	8d bf       	out	0x3d, r24	; 61
    23a0:	86 e0       	ldi	r24, 0x06	; 6
    23a2:	05 c1       	rjmp	.+522    	; 0x25ae <lcd_show_new_refosc_data+0x8bc>
    23a4:	93 ff       	sbrs	r25, 3
    23a6:	3a c0       	rjmp	.+116    	; 0x241c <lcd_show_new_refosc_data+0x72a>
    23a8:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <idx.3599>
    23ac:	28 30       	cpi	r18, 0x08	; 8
    23ae:	b0 f5       	brcc	.+108    	; 0x241c <lcd_show_new_refosc_data+0x72a>
    23b0:	80 91 36 04 	lds	r24, 0x0436	; 0x800436 <g_showData>
    23b4:	87 7f       	andi	r24, 0xF7	; 247
    23b6:	80 93 36 04 	sts	0x0436, r24	; 0x800436 <g_showData>
    23ba:	80 91 55 04 	lds	r24, 0x0455	; 0x800455 <g_showData+0x1f>
    23be:	8f 93       	push	r24
    23c0:	80 91 54 04 	lds	r24, 0x0454	; 0x800454 <g_showData+0x1e>
    23c4:	8f 93       	push	r24
    23c6:	80 91 53 04 	lds	r24, 0x0453	; 0x800453 <g_showData+0x1d>
    23ca:	8f 93       	push	r24
    23cc:	80 91 52 04 	lds	r24, 0x0452	; 0x800452 <g_showData+0x1c>
    23d0:	8f 93       	push	r24
    23d2:	8d ed       	ldi	r24, 0xDD	; 221
    23d4:	92 e0       	ldi	r25, 0x02	; 2
    23d6:	9f 93       	push	r25
    23d8:	8f 93       	push	r24
    23da:	1f 92       	push	r1
    23dc:	80 e3       	ldi	r24, 0x30	; 48
    23de:	8f 93       	push	r24
    23e0:	8f ed       	ldi	r24, 0xDF	; 223
    23e2:	93 e0       	ldi	r25, 0x03	; 3
    23e4:	9f 93       	push	r25
    23e6:	8f 93       	push	r24
    23e8:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    23ec:	cf bf       	out	0x3f, r28	; 63
    23ee:	23 e0       	ldi	r18, 0x03	; 3
    23f0:	31 e0       	ldi	r19, 0x01	; 1
    23f2:	46 e2       	ldi	r20, 0x26	; 38
    23f4:	6f e3       	ldi	r22, 0x3F	; 63
    23f6:	8f ed       	ldi	r24, 0xDF	; 223
    23f8:	93 e0       	ldi	r25, 0x03	; 3
    23fa:	0e 94 14 07 	call	0xe28	; 0xe28 <gfx_mono_draw_string>
    23fe:	0e 94 b0 06 	call	0xd60	; 0xd60 <gfx_mono_lcd_uc1608_cache_clear>
    2402:	88 e0       	ldi	r24, 0x08	; 8
    2404:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3599>
    2408:	8d b7       	in	r24, 0x3d	; 61
    240a:	9e b7       	in	r25, 0x3e	; 62
    240c:	0a 96       	adiw	r24, 0x0a	; 10
    240e:	0f b6       	in	r0, 0x3f	; 63
    2410:	f8 94       	cli
    2412:	9e bf       	out	0x3e, r25	; 62
    2414:	0f be       	out	0x3f, r0	; 63
    2416:	8d bf       	out	0x3d, r24	; 61
    2418:	87 e0       	ldi	r24, 0x07	; 7
    241a:	c9 c0       	rjmp	.+402    	; 0x25ae <lcd_show_new_refosc_data+0x8bc>
    241c:	94 ff       	sbrs	r25, 4
    241e:	89 c0       	rjmp	.+274    	; 0x2532 <lcd_show_new_refosc_data+0x840>
    2420:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <idx.3599>
    2424:	29 30       	cpi	r18, 0x09	; 9
    2426:	08 f0       	brcs	.+2      	; 0x242a <lcd_show_new_refosc_data+0x738>
    2428:	84 c0       	rjmp	.+264    	; 0x2532 <lcd_show_new_refosc_data+0x840>
    242a:	f0 90 66 04 	lds	r15, 0x0466	; 0x800466 <g_showData+0x30>
    242e:	60 91 67 04 	lds	r22, 0x0467	; 0x800467 <g_showData+0x31>
    2432:	80 91 36 04 	lds	r24, 0x0436	; 0x800436 <g_showData>
    2436:	8f 7e       	andi	r24, 0xEF	; 239
    2438:	80 93 36 04 	sts	0x0436, r24	; 0x800436 <g_showData>
    243c:	cf bf       	out	0x3f, r28	; 63
    243e:	70 e0       	ldi	r23, 0x00	; 0
    2440:	80 e0       	ldi	r24, 0x00	; 0
    2442:	90 e0       	ldi	r25, 0x00	; 0
    2444:	0e 94 05 21 	call	0x420a	; 0x420a <__floatsisf>
    2448:	2b 01       	movw	r4, r22
    244a:	3c 01       	movw	r6, r24
    244c:	20 e0       	ldi	r18, 0x00	; 0
    244e:	30 e0       	ldi	r19, 0x00	; 0
    2450:	4a e7       	ldi	r20, 0x7A	; 122
    2452:	50 e4       	ldi	r21, 0x40	; 64
    2454:	0e 94 0c 22 	call	0x4418	; 0x4418 <__mulsf3>
    2458:	0e 94 d2 20 	call	0x41a4	; 0x41a4 <__fixsfsi>
    245c:	7f 93       	push	r23
    245e:	6f 93       	push	r22
    2460:	1f 92       	push	r1
    2462:	ff 92       	push	r15
    2464:	07 ee       	ldi	r16, 0xE7	; 231
    2466:	12 e0       	ldi	r17, 0x02	; 2
    2468:	1f 93       	push	r17
    246a:	0f 93       	push	r16
    246c:	1f 92       	push	r1
    246e:	80 e3       	ldi	r24, 0x30	; 48
    2470:	b8 2e       	mov	r11, r24
    2472:	bf 92       	push	r11
    2474:	cf ed       	ldi	r28, 0xDF	; 223
    2476:	d3 e0       	ldi	r29, 0x03	; 3
    2478:	df 93       	push	r29
    247a:	cf 93       	push	r28
    247c:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    2480:	23 e0       	ldi	r18, 0x03	; 3
    2482:	31 e0       	ldi	r19, 0x01	; 1
    2484:	4f e2       	ldi	r20, 0x2F	; 47
    2486:	6f e3       	ldi	r22, 0x3F	; 63
    2488:	ce 01       	movw	r24, r28
    248a:	0e 94 14 07 	call	0xe28	; 0xe28 <gfx_mono_draw_string>
    248e:	6f 2d       	mov	r22, r15
    2490:	70 e0       	ldi	r23, 0x00	; 0
    2492:	80 e0       	ldi	r24, 0x00	; 0
    2494:	90 e0       	ldi	r25, 0x00	; 0
    2496:	0e 94 03 21 	call	0x4206	; 0x4206 <__floatunsisf>
    249a:	6b 01       	movw	r12, r22
    249c:	7c 01       	movw	r14, r24
    249e:	20 e0       	ldi	r18, 0x00	; 0
    24a0:	30 e0       	ldi	r19, 0x00	; 0
    24a2:	40 e8       	ldi	r20, 0x80	; 128
    24a4:	5b e3       	ldi	r21, 0x3B	; 59
    24a6:	c3 01       	movw	r24, r6
    24a8:	b2 01       	movw	r22, r4
    24aa:	0e 94 0c 22 	call	0x4418	; 0x4418 <__mulsf3>
    24ae:	a7 01       	movw	r20, r14
    24b0:	96 01       	movw	r18, r12
    24b2:	0e 94 02 20 	call	0x4004	; 0x4004 <__addsf3>
    24b6:	20 e0       	ldi	r18, 0x00	; 0
    24b8:	30 e0       	ldi	r19, 0x00	; 0
    24ba:	48 ec       	ldi	r20, 0xC8	; 200
    24bc:	5e e3       	ldi	r21, 0x3E	; 62
    24be:	0e 94 0c 22 	call	0x4418	; 0x4418 <__mulsf3>
    24c2:	6b 01       	movw	r12, r22
    24c4:	7c 01       	movw	r14, r24
    24c6:	0e 94 40 21 	call	0x4280	; 0x4280 <floor>
    24ca:	9b 01       	movw	r18, r22
    24cc:	ac 01       	movw	r20, r24
    24ce:	c7 01       	movw	r24, r14
    24d0:	b6 01       	movw	r22, r12
    24d2:	0e 94 01 20 	call	0x4002	; 0x4002 <__subsf3>
    24d6:	20 e0       	ldi	r18, 0x00	; 0
    24d8:	30 e0       	ldi	r19, 0x00	; 0
    24da:	4a e7       	ldi	r20, 0x7A	; 122
    24dc:	54 e4       	ldi	r21, 0x44	; 68
    24de:	0e 94 0c 22 	call	0x4418	; 0x4418 <__mulsf3>
    24e2:	0e 94 d2 20 	call	0x41a4	; 0x41a4 <__fixsfsi>
    24e6:	7f 93       	push	r23
    24e8:	6f 93       	push	r22
    24ea:	c7 01       	movw	r24, r14
    24ec:	b6 01       	movw	r22, r12
    24ee:	0e 94 d2 20 	call	0x41a4	; 0x41a4 <__fixsfsi>
    24f2:	7f 93       	push	r23
    24f4:	6f 93       	push	r22
    24f6:	1f 93       	push	r17
    24f8:	0f 93       	push	r16
    24fa:	1f 92       	push	r1
    24fc:	bf 92       	push	r11
    24fe:	df 93       	push	r29
    2500:	cf 93       	push	r28
    2502:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    2506:	23 e0       	ldi	r18, 0x03	; 3
    2508:	31 e0       	ldi	r19, 0x01	; 1
    250a:	4f e2       	ldi	r20, 0x2F	; 47
    250c:	6d e8       	ldi	r22, 0x8D	; 141
    250e:	ce 01       	movw	r24, r28
    2510:	0e 94 14 07 	call	0xe28	; 0xe28 <gfx_mono_draw_string>
    2514:	0e 94 b0 06 	call	0xd60	; 0xd60 <gfx_mono_lcd_uc1608_cache_clear>
    2518:	89 e0       	ldi	r24, 0x09	; 9
    251a:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3599>
    251e:	8d b7       	in	r24, 0x3d	; 61
    2520:	9e b7       	in	r25, 0x3e	; 62
    2522:	44 96       	adiw	r24, 0x14	; 20
    2524:	0f b6       	in	r0, 0x3f	; 63
    2526:	f8 94       	cli
    2528:	9e bf       	out	0x3e, r25	; 62
    252a:	0f be       	out	0x3f, r0	; 63
    252c:	8d bf       	out	0x3d, r24	; 61
    252e:	88 e0       	ldi	r24, 0x08	; 8
    2530:	3e c0       	rjmp	.+124    	; 0x25ae <lcd_show_new_refosc_data+0x8bc>
    2532:	95 ff       	sbrs	r25, 5
    2534:	38 c0       	rjmp	.+112    	; 0x25a6 <lcd_show_new_refosc_data+0x8b4>
    2536:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <idx.3599>
    253a:	9a 30       	cpi	r25, 0x0A	; 10
    253c:	a0 f5       	brcc	.+104    	; 0x25a6 <lcd_show_new_refosc_data+0x8b4>
    253e:	80 91 36 04 	lds	r24, 0x0436	; 0x800436 <g_showData>
    2542:	8f 7d       	andi	r24, 0xDF	; 223
    2544:	80 93 36 04 	sts	0x0436, r24	; 0x800436 <g_showData>
    2548:	80 91 57 04 	lds	r24, 0x0457	; 0x800457 <g_showData+0x21>
    254c:	8f 93       	push	r24
    254e:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <g_showData+0x20>
    2552:	8f 93       	push	r24
    2554:	80 91 68 04 	lds	r24, 0x0468	; 0x800468 <g_showData+0x32>
    2558:	1f 92       	push	r1
    255a:	8f 93       	push	r24
    255c:	85 e8       	ldi	r24, 0x85	; 133
    255e:	92 e0       	ldi	r25, 0x02	; 2
    2560:	9f 93       	push	r25
    2562:	8f 93       	push	r24
    2564:	1f 92       	push	r1
    2566:	80 e3       	ldi	r24, 0x30	; 48
    2568:	8f 93       	push	r24
    256a:	8f ed       	ldi	r24, 0xDF	; 223
    256c:	93 e0       	ldi	r25, 0x03	; 3
    256e:	9f 93       	push	r25
    2570:	8f 93       	push	r24
    2572:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    2576:	cf bf       	out	0x3f, r28	; 63
    2578:	23 e0       	ldi	r18, 0x03	; 3
    257a:	31 e0       	ldi	r19, 0x01	; 1
    257c:	48 e3       	ldi	r20, 0x38	; 56
    257e:	6f e3       	ldi	r22, 0x3F	; 63
    2580:	8f ed       	ldi	r24, 0xDF	; 223
    2582:	93 e0       	ldi	r25, 0x03	; 3
    2584:	0e 94 14 07 	call	0xe28	; 0xe28 <gfx_mono_draw_string>
    2588:	0e 94 b0 06 	call	0xd60	; 0xd60 <gfx_mono_lcd_uc1608_cache_clear>
    258c:	8a e0       	ldi	r24, 0x0A	; 10
    258e:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3599>
    2592:	8d b7       	in	r24, 0x3d	; 61
    2594:	9e b7       	in	r25, 0x3e	; 62
    2596:	0a 96       	adiw	r24, 0x0a	; 10
    2598:	0f b6       	in	r0, 0x3f	; 63
    259a:	f8 94       	cli
    259c:	9e bf       	out	0x3e, r25	; 62
    259e:	0f be       	out	0x3f, r0	; 63
    25a0:	8d bf       	out	0x3d, r24	; 61
    25a2:	89 e0       	ldi	r24, 0x09	; 9
    25a4:	04 c0       	rjmp	.+8      	; 0x25ae <lcd_show_new_refosc_data+0x8bc>
    25a6:	91 e0       	ldi	r25, 0x01	; 1
    25a8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <idx.3599>
    25ac:	cf bf       	out	0x3f, r28	; 63
    25ae:	df 91       	pop	r29
    25b0:	cf 91       	pop	r28
    25b2:	1f 91       	pop	r17
    25b4:	0f 91       	pop	r16
    25b6:	ff 90       	pop	r15
    25b8:	ef 90       	pop	r14
    25ba:	df 90       	pop	r13
    25bc:	cf 90       	pop	r12
    25be:	bf 90       	pop	r11
    25c0:	af 90       	pop	r10
    25c2:	9f 90       	pop	r9
    25c4:	8f 90       	pop	r8
    25c6:	7f 90       	pop	r7
    25c8:	6f 90       	pop	r6
    25ca:	5f 90       	pop	r5
    25cc:	4f 90       	pop	r4
    25ce:	3f 90       	pop	r3
    25d0:	08 95       	ret

000025d2 <lcd_animation_prepare>:
    25d2:	ef 92       	push	r14
    25d4:	ff 92       	push	r15
    25d6:	0f 93       	push	r16
    25d8:	1f 93       	push	r17
    25da:	cf 93       	push	r28
    25dc:	df 93       	push	r29
    25de:	83 ec       	ldi	r24, 0xC3	; 195
    25e0:	9f ef       	ldi	r25, 0xFF	; 255
    25e2:	90 93 de 03 	sts	0x03DE, r25	; 0x8003de <s_animation_train_origin+0x1>
    25e6:	80 93 dd 03 	sts	0x03DD, r24	; 0x8003dd <s_animation_train_origin>
    25ea:	81 e0       	ldi	r24, 0x01	; 1
    25ec:	80 93 dc 03 	sts	0x03DC, r24	; 0x8003dc <s_animation_dx>
    25f0:	20 e0       	ldi	r18, 0x00	; 0
    25f2:	30 e0       	ldi	r19, 0x00	; 0
    25f4:	8b e0       	ldi	r24, 0x0B	; 11
    25f6:	e8 2e       	mov	r14, r24
    25f8:	f1 2c       	mov	r15, r1
    25fa:	c0 e4       	ldi	r28, 0x40	; 64
    25fc:	48 ef       	ldi	r20, 0xF8	; 248
    25fe:	d8 ec       	ldi	r29, 0xC8	; 200
    2600:	18 ed       	ldi	r17, 0xD8	; 216
    2602:	0f ed       	ldi	r16, 0xDF	; 223
    2604:	21 15       	cp	r18, r1
    2606:	31 05       	cpc	r19, r1
    2608:	19 f4       	brne	.+6      	; 0x2610 <lcd_animation_prepare+0x3e>
    260a:	10 92 97 03 	sts	0x0397, r1	; 0x800397 <s_animation_train_left>
    260e:	43 c0       	rjmp	.+134    	; 0x2696 <lcd_animation_prepare+0xc4>
    2610:	23 30       	cpi	r18, 0x03	; 3
    2612:	31 05       	cpc	r19, r1
    2614:	5c f4       	brge	.+22     	; 0x262c <lcd_animation_prepare+0x5a>
    2616:	f9 01       	movw	r30, r18
    2618:	e9 56       	subi	r30, 0x69	; 105
    261a:	fc 4f       	sbci	r31, 0xFC	; 252
    261c:	40 83       	st	Z, r20
    261e:	2f 5f       	subi	r18, 0xFF	; 255
    2620:	3f 4f       	sbci	r19, 0xFF	; 255
    2622:	f9 01       	movw	r30, r18
    2624:	e9 56       	subi	r30, 0x69	; 105
    2626:	fc 4f       	sbci	r31, 0xFC	; 252
    2628:	10 83       	st	Z, r17
    262a:	35 c0       	rjmp	.+106    	; 0x2696 <lcd_animation_prepare+0xc4>
    262c:	25 30       	cpi	r18, 0x05	; 5
    262e:	31 05       	cpc	r19, r1
    2630:	2c f4       	brge	.+10     	; 0x263c <lcd_animation_prepare+0x6a>
    2632:	f9 01       	movw	r30, r18
    2634:	e9 56       	subi	r30, 0x69	; 105
    2636:	fc 4f       	sbci	r31, 0xFC	; 252
    2638:	00 83       	st	Z, r16
    263a:	2d c0       	rjmp	.+90     	; 0x2696 <lcd_animation_prepare+0xc4>
    263c:	2b 30       	cpi	r18, 0x0B	; 11
    263e:	31 05       	cpc	r19, r1
    2640:	2c f4       	brge	.+10     	; 0x264c <lcd_animation_prepare+0x7a>
    2642:	f9 01       	movw	r30, r18
    2644:	e9 56       	subi	r30, 0x69	; 105
    2646:	fc 4f       	sbci	r31, 0xFC	; 252
    2648:	10 83       	st	Z, r17
    264a:	25 c0       	rjmp	.+74     	; 0x2696 <lcd_animation_prepare+0xc4>
    264c:	20 31       	cpi	r18, 0x10	; 16
    264e:	31 05       	cpc	r19, r1
    2650:	e4 f0       	brlt	.+56     	; 0x268a <lcd_animation_prepare+0xb8>
    2652:	2c 33       	cpi	r18, 0x3C	; 60
    2654:	31 05       	cpc	r19, r1
    2656:	19 f4       	brne	.+6      	; 0x265e <lcd_animation_prepare+0x8c>
    2658:	10 92 d3 03 	sts	0x03D3, r1	; 0x8003d3 <s_animation_train_left+0x3c>
    265c:	1c c0       	rjmp	.+56     	; 0x2696 <lcd_animation_prepare+0xc4>
    265e:	c9 01       	movw	r24, r18
    2660:	40 97       	sbiw	r24, 0x10	; 16
    2662:	b7 01       	movw	r22, r14
    2664:	0e 94 8f 22 	call	0x451e	; 0x451e <__divmodhi4>
    2668:	f9 01       	movw	r30, r18
    266a:	e9 56       	subi	r30, 0x69	; 105
    266c:	fc 4f       	sbci	r31, 0xFC	; 252
    266e:	89 2b       	or	r24, r25
    2670:	89 f4       	brne	.+34     	; 0x2694 <lcd_animation_prepare+0xc2>
    2672:	c0 83       	st	Z, r28
    2674:	c1 83       	std	Z+1, r28	; 0x01
    2676:	c2 83       	std	Z+2, r28	; 0x02
    2678:	43 83       	std	Z+3, r20	; 0x03
    267a:	44 83       	std	Z+4, r20	; 0x04
    267c:	d5 83       	std	Z+5, r29	; 0x05
    267e:	46 83       	std	Z+6, r20	; 0x06
    2680:	47 83       	std	Z+7, r20	; 0x07
    2682:	d0 87       	std	Z+8, r29	; 0x08
    2684:	41 87       	std	Z+9, r20	; 0x09
    2686:	26 5f       	subi	r18, 0xF6	; 246
    2688:	3f 4f       	sbci	r19, 0xFF	; 255
    268a:	f9 01       	movw	r30, r18
    268c:	e9 56       	subi	r30, 0x69	; 105
    268e:	fc 4f       	sbci	r31, 0xFC	; 252
    2690:	40 83       	st	Z, r20
    2692:	01 c0       	rjmp	.+2      	; 0x2696 <lcd_animation_prepare+0xc4>
    2694:	10 82       	st	Z, r1
    2696:	2f 5f       	subi	r18, 0xFF	; 255
    2698:	3f 4f       	sbci	r19, 0xFF	; 255
    269a:	2d 33       	cpi	r18, 0x3D	; 61
    269c:	31 05       	cpc	r19, r1
    269e:	0c f4       	brge	.+2      	; 0x26a2 <lcd_animation_prepare+0xd0>
    26a0:	b1 cf       	rjmp	.-158    	; 0x2604 <lcd_animation_prepare+0x32>
    26a2:	a7 e9       	ldi	r26, 0x97	; 151
    26a4:	b3 e0       	ldi	r27, 0x03	; 3
    26a6:	e7 e9       	ldi	r30, 0x97	; 151
    26a8:	f3 e0       	ldi	r31, 0x03	; 3
    26aa:	8d 91       	ld	r24, X+
    26ac:	82 93       	st	-Z, r24
    26ae:	83 e0       	ldi	r24, 0x03	; 3
    26b0:	ea 35       	cpi	r30, 0x5A	; 90
    26b2:	f8 07       	cpc	r31, r24
    26b4:	d1 f7       	brne	.-12     	; 0x26aa <lcd_animation_prepare+0xd8>
    26b6:	00 e0       	ldi	r16, 0x00	; 0
    26b8:	28 e0       	ldi	r18, 0x08	; 8
    26ba:	40 ef       	ldi	r20, 0xF0	; 240
    26bc:	68 e7       	ldi	r22, 0x78	; 120
    26be:	80 e0       	ldi	r24, 0x00	; 0
    26c0:	0e 94 92 04 	call	0x924	; 0x924 <gfx_mono_generic_draw_filled_rect>
    26c4:	df 91       	pop	r29
    26c6:	cf 91       	pop	r28
    26c8:	1f 91       	pop	r17
    26ca:	0f 91       	pop	r16
    26cc:	ff 90       	pop	r15
    26ce:	ef 90       	pop	r14
    26d0:	08 95       	ret

000026d2 <lcd_animation_loop>:
    26d2:	2f 92       	push	r2
    26d4:	3f 92       	push	r3
    26d6:	4f 92       	push	r4
    26d8:	5f 92       	push	r5
    26da:	6f 92       	push	r6
    26dc:	7f 92       	push	r7
    26de:	8f 92       	push	r8
    26e0:	9f 92       	push	r9
    26e2:	af 92       	push	r10
    26e4:	bf 92       	push	r11
    26e6:	cf 92       	push	r12
    26e8:	df 92       	push	r13
    26ea:	ef 92       	push	r14
    26ec:	ff 92       	push	r15
    26ee:	0f 93       	push	r16
    26f0:	1f 93       	push	r17
    26f2:	cf 93       	push	r28
    26f4:	df 93       	push	r29
    26f6:	fd d8       	rcall	.-3590   	; 0x18f2 <cpu_irq_save>
    26f8:	90 91 75 04 	lds	r25, 0x0475	; 0x800475 <g_status>
    26fc:	91 70       	andi	r25, 0x01	; 1
    26fe:	8f bf       	out	0x3f, r24	; 63
    2700:	87 e9       	ldi	r24, 0x97	; 151
    2702:	28 2e       	mov	r2, r24
    2704:	83 e0       	ldi	r24, 0x03	; 3
    2706:	38 2e       	mov	r3, r24
    2708:	2a e0       	ldi	r18, 0x0A	; 10
    270a:	a2 2e       	mov	r10, r18
    270c:	b1 2c       	mov	r11, r1
    270e:	31 e0       	ldi	r19, 0x01	; 1
    2710:	e3 2e       	mov	r14, r19
    2712:	33 e0       	ldi	r19, 0x03	; 3
    2714:	f3 2e       	mov	r15, r19
    2716:	cf ed       	ldi	r28, 0xDF	; 223
    2718:	d3 e0       	ldi	r29, 0x03	; 3
    271a:	44 e6       	ldi	r20, 0x64	; 100
    271c:	84 2e       	mov	r8, r20
    271e:	91 2c       	mov	r9, r1
    2720:	50 ef       	ldi	r21, 0xF0	; 240
    2722:	c5 2e       	mov	r12, r21
    2724:	52 e0       	ldi	r21, 0x02	; 2
    2726:	d5 2e       	mov	r13, r21
    2728:	13 e0       	ldi	r17, 0x03	; 3
    272a:	99 23       	and	r25, r25
    272c:	09 f4       	brne	.+2      	; 0x2730 <lcd_animation_loop+0x5e>
    272e:	92 c1       	rjmp	.+804    	; 0x2a54 <lcd_animation_loop+0x382>
    2730:	80 91 dc 03 	lds	r24, 0x03DC	; 0x8003dc <s_animation_dx>
    2734:	88 23       	and	r24, r24
    2736:	09 f4       	brne	.+2      	; 0x273a <lcd_animation_loop+0x68>
    2738:	8d c1       	rjmp	.+794    	; 0x2a54 <lcd_animation_loop+0x382>
    273a:	0e 94 93 1d 	call	0x3b26	; 0x3b26 <get_abs_time>
    273e:	2b 01       	movw	r4, r22
    2740:	3c 01       	movw	r6, r24
    2742:	20 91 d4 03 	lds	r18, 0x03D4	; 0x8003d4 <s_animation_time_last_train>
    2746:	30 91 d5 03 	lds	r19, 0x03D5	; 0x8003d5 <s_animation_time_last_train+0x1>
    274a:	40 91 d6 03 	lds	r20, 0x03D6	; 0x8003d6 <s_animation_time_last_train+0x2>
    274e:	50 91 d7 03 	lds	r21, 0x03D7	; 0x8003d7 <s_animation_time_last_train+0x3>
    2752:	0e 94 01 20 	call	0x4002	; 0x4002 <__subsf3>
    2756:	2a e0       	ldi	r18, 0x0A	; 10
    2758:	37 ed       	ldi	r19, 0xD7	; 215
    275a:	43 e2       	ldi	r20, 0x23	; 35
    275c:	5d e3       	ldi	r21, 0x3D	; 61
    275e:	0e 94 08 22 	call	0x4410	; 0x4410 <__gesf2>
    2762:	87 fd       	sbrc	r24, 7
    2764:	60 c0       	rjmp	.+192    	; 0x2826 <lcd_animation_loop+0x154>
    2766:	40 92 d4 03 	sts	0x03D4, r4	; 0x8003d4 <s_animation_time_last_train>
    276a:	50 92 d5 03 	sts	0x03D5, r5	; 0x8003d5 <s_animation_time_last_train+0x1>
    276e:	60 92 d6 03 	sts	0x03D6, r6	; 0x8003d6 <s_animation_time_last_train+0x2>
    2772:	70 92 d7 03 	sts	0x03D7, r7	; 0x8003d7 <s_animation_time_last_train+0x3>
    2776:	20 91 dc 03 	lds	r18, 0x03DC	; 0x8003dc <s_animation_dx>
    277a:	80 91 dd 03 	lds	r24, 0x03DD	; 0x8003dd <s_animation_train_origin>
    277e:	90 91 de 03 	lds	r25, 0x03DE	; 0x8003de <s_animation_train_origin+0x1>
    2782:	82 0f       	add	r24, r18
    2784:	91 1d       	adc	r25, r1
    2786:	27 fd       	sbrc	r18, 7
    2788:	9a 95       	dec	r25
    278a:	90 93 de 03 	sts	0x03DE, r25	; 0x8003de <s_animation_train_origin+0x1>
    278e:	80 93 dd 03 	sts	0x03DD, r24	; 0x8003dd <s_animation_train_origin>
    2792:	8a 3b       	cpi	r24, 0xBA	; 186
    2794:	2f ef       	ldi	r18, 0xFF	; 255
    2796:	92 07       	cpc	r25, r18
    2798:	24 f4       	brge	.+8      	; 0x27a2 <lcd_animation_loop+0xd0>
    279a:	e1 e0       	ldi	r30, 0x01	; 1
    279c:	e0 93 dc 03 	sts	0x03DC, r30	; 0x8003dc <s_animation_dx>
    27a0:	06 c0       	rjmp	.+12     	; 0x27ae <lcd_animation_loop+0xdc>
    27a2:	8a 3f       	cpi	r24, 0xFA	; 250
    27a4:	91 05       	cpc	r25, r1
    27a6:	1c f0       	brlt	.+6      	; 0x27ae <lcd_animation_loop+0xdc>
    27a8:	ff ef       	ldi	r31, 0xFF	; 255
    27aa:	f0 93 dc 03 	sts	0x03DC, r31	; 0x8003dc <s_animation_dx>
    27ae:	20 91 dc 03 	lds	r18, 0x03DC	; 0x8003dc <s_animation_dx>
    27b2:	27 ff       	sbrs	r18, 7
    27b4:	1c c0       	rjmp	.+56     	; 0x27ee <lcd_animation_loop+0x11c>
    27b6:	80 3f       	cpi	r24, 0xF0	; 240
    27b8:	91 05       	cpc	r25, r1
    27ba:	40 f4       	brcc	.+16     	; 0x27cc <lcd_animation_loop+0xfa>
    27bc:	2d e3       	ldi	r18, 0x3D	; 61
    27be:	48 2f       	mov	r20, r24
    27c0:	6f e0       	ldi	r22, 0x0F	; 15
    27c2:	87 e9       	ldi	r24, 0x97	; 151
    27c4:	93 e0       	ldi	r25, 0x03	; 3
    27c6:	0e 94 0a 06 	call	0xc14	; 0xc14 <gfx_mono_lcd_uc1608_put_page>
    27ca:	2d c0       	rjmp	.+90     	; 0x2826 <lcd_animation_loop+0x154>
    27cc:	9c 01       	movw	r18, r24
    27ce:	24 5c       	subi	r18, 0xC4	; 196
    27d0:	3f 4f       	sbci	r19, 0xFF	; 255
    27d2:	2c 33       	cpi	r18, 0x3C	; 60
    27d4:	31 05       	cpc	r19, r1
    27d6:	38 f5       	brcc	.+78     	; 0x2826 <lcd_animation_loop+0x154>
    27d8:	2d e3       	ldi	r18, 0x3D	; 61
    27da:	28 0f       	add	r18, r24
    27dc:	40 e0       	ldi	r20, 0x00	; 0
    27de:	6f e0       	ldi	r22, 0x0F	; 15
    27e0:	f1 01       	movw	r30, r2
    27e2:	e8 1b       	sub	r30, r24
    27e4:	f9 0b       	sbc	r31, r25
    27e6:	cf 01       	movw	r24, r30
    27e8:	0e 94 0a 06 	call	0xc14	; 0xc14 <gfx_mono_lcd_uc1608_put_page>
    27ec:	1c c0       	rjmp	.+56     	; 0x2826 <lcd_animation_loop+0x154>
    27ee:	80 3f       	cpi	r24, 0xF0	; 240
    27f0:	91 05       	cpc	r25, r1
    27f2:	40 f4       	brcc	.+16     	; 0x2804 <lcd_animation_loop+0x132>
    27f4:	2d e3       	ldi	r18, 0x3D	; 61
    27f6:	48 2f       	mov	r20, r24
    27f8:	6f e0       	ldi	r22, 0x0F	; 15
    27fa:	8a e5       	ldi	r24, 0x5A	; 90
    27fc:	93 e0       	ldi	r25, 0x03	; 3
    27fe:	0e 94 0a 06 	call	0xc14	; 0xc14 <gfx_mono_lcd_uc1608_put_page>
    2802:	11 c0       	rjmp	.+34     	; 0x2826 <lcd_animation_loop+0x154>
    2804:	9c 01       	movw	r18, r24
    2806:	24 5c       	subi	r18, 0xC4	; 196
    2808:	3f 4f       	sbci	r19, 0xFF	; 255
    280a:	2c 33       	cpi	r18, 0x3C	; 60
    280c:	31 05       	cpc	r19, r1
    280e:	58 f4       	brcc	.+22     	; 0x2826 <lcd_animation_loop+0x154>
    2810:	2d e3       	ldi	r18, 0x3D	; 61
    2812:	28 0f       	add	r18, r24
    2814:	40 e0       	ldi	r20, 0x00	; 0
    2816:	6f e0       	ldi	r22, 0x0F	; 15
    2818:	ea e5       	ldi	r30, 0x5A	; 90
    281a:	f3 e0       	ldi	r31, 0x03	; 3
    281c:	e8 1b       	sub	r30, r24
    281e:	f9 0b       	sbc	r31, r25
    2820:	cf 01       	movw	r24, r30
    2822:	0e 94 0a 06 	call	0xc14	; 0xc14 <gfx_mono_lcd_uc1608_put_page>
    2826:	20 91 d8 03 	lds	r18, 0x03D8	; 0x8003d8 <s_animation_time_last_temp>
    282a:	30 91 d9 03 	lds	r19, 0x03D9	; 0x8003d9 <s_animation_time_last_temp+0x1>
    282e:	40 91 da 03 	lds	r20, 0x03DA	; 0x8003da <s_animation_time_last_temp+0x2>
    2832:	50 91 db 03 	lds	r21, 0x03DB	; 0x8003db <s_animation_time_last_temp+0x3>
    2836:	c3 01       	movw	r24, r6
    2838:	b2 01       	movw	r22, r4
    283a:	0e 94 01 20 	call	0x4002	; 0x4002 <__subsf3>
    283e:	20 e0       	ldi	r18, 0x00	; 0
    2840:	30 e0       	ldi	r19, 0x00	; 0
    2842:	40 e0       	ldi	r20, 0x00	; 0
    2844:	5f e3       	ldi	r21, 0x3F	; 63
    2846:	0e 94 08 22 	call	0x4410	; 0x4410 <__gesf2>
    284a:	87 fd       	sbrc	r24, 7
    284c:	c3 c0       	rjmp	.+390    	; 0x29d4 <lcd_animation_loop+0x302>
    284e:	40 92 d8 03 	sts	0x03D8, r4	; 0x8003d8 <s_animation_time_last_temp>
    2852:	50 92 d9 03 	sts	0x03D9, r5	; 0x8003d9 <s_animation_time_last_temp+0x1>
    2856:	60 92 da 03 	sts	0x03DA, r6	; 0x8003da <s_animation_time_last_temp+0x2>
    285a:	70 92 db 03 	sts	0x03DB, r7	; 0x8003db <s_animation_time_last_temp+0x3>
    285e:	0e 94 fb 1d 	call	0x3bf6	; 0x3bf6 <task>
    2862:	47 d8       	rcall	.-3954   	; 0x18f2 <cpu_irq_save>
    2864:	40 90 7c 04 	lds	r4, 0x047C	; 0x80047c <g_temp>
    2868:	50 90 7d 04 	lds	r5, 0x047D	; 0x80047d <g_temp+0x1>
    286c:	60 90 7e 04 	lds	r6, 0x047E	; 0x80047e <g_temp+0x2>
    2870:	70 90 7f 04 	lds	r7, 0x047F	; 0x80047f <g_temp+0x3>
    2874:	8f bf       	out	0x3f, r24	; 63
    2876:	20 e0       	ldi	r18, 0x00	; 0
    2878:	30 e0       	ldi	r19, 0x00	; 0
    287a:	a9 01       	movw	r20, r18
    287c:	c3 01       	movw	r24, r6
    287e:	b2 01       	movw	r22, r4
    2880:	0e 94 66 20 	call	0x40cc	; 0x40cc <__cmpsf2>
    2884:	87 ff       	sbrs	r24, 7
    2886:	03 c0       	rjmp	.+6      	; 0x288e <lcd_animation_loop+0x1bc>
    2888:	41 2c       	mov	r4, r1
    288a:	51 2c       	mov	r5, r1
    288c:	32 01       	movw	r6, r4
    288e:	20 91 55 03 	lds	r18, 0x0355	; 0x800355 <t_last.3620>
    2892:	30 91 56 03 	lds	r19, 0x0356	; 0x800356 <t_last.3620+0x1>
    2896:	40 91 57 03 	lds	r20, 0x0357	; 0x800357 <t_last.3620+0x2>
    289a:	50 91 58 03 	lds	r21, 0x0358	; 0x800358 <t_last.3620+0x3>
    289e:	c3 01       	movw	r24, r6
    28a0:	b2 01       	movw	r22, r4
    28a2:	0e 94 01 20 	call	0x4002	; 0x4002 <__subsf3>
    28a6:	9f 77       	andi	r25, 0x7F	; 127
    28a8:	2a e0       	ldi	r18, 0x0A	; 10
    28aa:	37 ed       	ldi	r19, 0xD7	; 215
    28ac:	43 e2       	ldi	r20, 0x23	; 35
    28ae:	5c e3       	ldi	r21, 0x3C	; 60
    28b0:	0e 94 66 20 	call	0x40cc	; 0x40cc <__cmpsf2>
    28b4:	87 fd       	sbrc	r24, 7
    28b6:	37 c0       	rjmp	.+110    	; 0x2926 <lcd_animation_loop+0x254>
    28b8:	40 92 55 03 	sts	0x0355, r4	; 0x800355 <t_last.3620>
    28bc:	50 92 56 03 	sts	0x0356, r5	; 0x800356 <t_last.3620+0x1>
    28c0:	60 92 57 03 	sts	0x0357, r6	; 0x800357 <t_last.3620+0x2>
    28c4:	70 92 58 03 	sts	0x0358, r7	; 0x800358 <t_last.3620+0x3>
    28c8:	20 e0       	ldi	r18, 0x00	; 0
    28ca:	30 e0       	ldi	r19, 0x00	; 0
    28cc:	48 ec       	ldi	r20, 0xC8	; 200
    28ce:	52 e4       	ldi	r21, 0x42	; 66
    28d0:	c3 01       	movw	r24, r6
    28d2:	b2 01       	movw	r22, r4
    28d4:	0e 94 0c 22 	call	0x4418	; 0x4418 <__mulsf3>
    28d8:	0e 94 d2 20 	call	0x41a4	; 0x41a4 <__fixsfsi>
    28dc:	cb 01       	movw	r24, r22
    28de:	b4 01       	movw	r22, r8
    28e0:	0e 94 8f 22 	call	0x451e	; 0x451e <__divmodhi4>
    28e4:	9f 93       	push	r25
    28e6:	8f 93       	push	r24
    28e8:	c3 01       	movw	r24, r6
    28ea:	b2 01       	movw	r22, r4
    28ec:	0e 94 d2 20 	call	0x41a4	; 0x41a4 <__fixsfsi>
    28f0:	7f 93       	push	r23
    28f2:	6f 93       	push	r22
    28f4:	df 92       	push	r13
    28f6:	cf 92       	push	r12
    28f8:	1f 92       	push	r1
    28fa:	f0 e3       	ldi	r31, 0x30	; 48
    28fc:	ff 93       	push	r31
    28fe:	df 93       	push	r29
    2900:	cf 93       	push	r28
    2902:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    2906:	23 e0       	ldi	r18, 0x03	; 3
    2908:	31 e0       	ldi	r19, 0x01	; 1
    290a:	49 e6       	ldi	r20, 0x69	; 105
    290c:	60 ea       	ldi	r22, 0xA0	; 160
    290e:	8f ed       	ldi	r24, 0xDF	; 223
    2910:	93 e0       	ldi	r25, 0x03	; 3
    2912:	0e 94 14 07 	call	0xe28	; 0xe28 <gfx_mono_draw_string>
    2916:	ed b7       	in	r30, 0x3d	; 61
    2918:	fe b7       	in	r31, 0x3e	; 62
    291a:	3a 96       	adiw	r30, 0x0a	; 10
    291c:	0f b6       	in	r0, 0x3f	; 63
    291e:	f8 94       	cli
    2920:	fe bf       	out	0x3e, r31	; 62
    2922:	0f be       	out	0x3f, r0	; 63
    2924:	ed bf       	out	0x3d, r30	; 61
    2926:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <cpu_irq_save>
    292a:	40 90 84 04 	lds	r4, 0x0484	; 0x800484 <g_adc_light>
    292e:	50 90 85 04 	lds	r5, 0x0485	; 0x800485 <g_adc_light+0x1>
    2932:	60 90 86 04 	lds	r6, 0x0486	; 0x800486 <g_adc_light+0x2>
    2936:	70 90 87 04 	lds	r7, 0x0487	; 0x800487 <g_adc_light+0x3>
    293a:	8f bf       	out	0x3f, r24	; 63
    293c:	20 91 51 03 	lds	r18, 0x0351	; 0x800351 <l_last.3626>
    2940:	30 91 52 03 	lds	r19, 0x0352	; 0x800352 <l_last.3626+0x1>
    2944:	40 91 53 03 	lds	r20, 0x0353	; 0x800353 <l_last.3626+0x2>
    2948:	50 91 54 03 	lds	r21, 0x0354	; 0x800354 <l_last.3626+0x3>
    294c:	c3 01       	movw	r24, r6
    294e:	b2 01       	movw	r22, r4
    2950:	0e 94 01 20 	call	0x4002	; 0x4002 <__subsf3>
    2954:	9f 77       	andi	r25, 0x7F	; 127
    2956:	2d ec       	ldi	r18, 0xCD	; 205
    2958:	3c ec       	ldi	r19, 0xCC	; 204
    295a:	4c ec       	ldi	r20, 0xCC	; 204
    295c:	5d e3       	ldi	r21, 0x3D	; 61
    295e:	0e 94 66 20 	call	0x40cc	; 0x40cc <__cmpsf2>
    2962:	87 fd       	sbrc	r24, 7
    2964:	37 c0       	rjmp	.+110    	; 0x29d4 <lcd_animation_loop+0x302>
    2966:	40 92 51 03 	sts	0x0351, r4	; 0x800351 <l_last.3626>
    296a:	50 92 52 03 	sts	0x0352, r5	; 0x800352 <l_last.3626+0x1>
    296e:	60 92 53 03 	sts	0x0353, r6	; 0x800353 <l_last.3626+0x2>
    2972:	70 92 54 03 	sts	0x0354, r7	; 0x800354 <l_last.3626+0x3>
    2976:	20 e0       	ldi	r18, 0x00	; 0
    2978:	30 e0       	ldi	r19, 0x00	; 0
    297a:	40 e2       	ldi	r20, 0x20	; 32
    297c:	51 e4       	ldi	r21, 0x41	; 65
    297e:	c3 01       	movw	r24, r6
    2980:	b2 01       	movw	r22, r4
    2982:	0e 94 0c 22 	call	0x4418	; 0x4418 <__mulsf3>
    2986:	0e 94 d2 20 	call	0x41a4	; 0x41a4 <__fixsfsi>
    298a:	cb 01       	movw	r24, r22
    298c:	b5 01       	movw	r22, r10
    298e:	0e 94 8f 22 	call	0x451e	; 0x451e <__divmodhi4>
    2992:	9f 93       	push	r25
    2994:	8f 93       	push	r24
    2996:	c3 01       	movw	r24, r6
    2998:	b2 01       	movw	r22, r4
    299a:	0e 94 d2 20 	call	0x41a4	; 0x41a4 <__fixsfsi>
    299e:	7f 93       	push	r23
    29a0:	6f 93       	push	r22
    29a2:	ff 92       	push	r15
    29a4:	ef 92       	push	r14
    29a6:	1f 92       	push	r1
    29a8:	f0 e3       	ldi	r31, 0x30	; 48
    29aa:	ff 93       	push	r31
    29ac:	df 93       	push	r29
    29ae:	cf 93       	push	r28
    29b0:	0e 94 ba 22 	call	0x4574	; 0x4574 <snprintf>
    29b4:	23 e0       	ldi	r18, 0x03	; 3
    29b6:	31 e0       	ldi	r19, 0x01	; 1
    29b8:	4f e5       	ldi	r20, 0x5F	; 95
    29ba:	60 ea       	ldi	r22, 0xA0	; 160
    29bc:	8f ed       	ldi	r24, 0xDF	; 223
    29be:	93 e0       	ldi	r25, 0x03	; 3
    29c0:	0e 94 14 07 	call	0xe28	; 0xe28 <gfx_mono_draw_string>
    29c4:	ed b7       	in	r30, 0x3d	; 61
    29c6:	fe b7       	in	r31, 0x3e	; 62
    29c8:	3a 96       	adiw	r30, 0x0a	; 10
    29ca:	0f b6       	in	r0, 0x3f	; 63
    29cc:	f8 94       	cli
    29ce:	fe bf       	out	0x3e, r31	; 62
    29d0:	0f be       	out	0x3f, r0	; 63
    29d2:	ed bf       	out	0x3d, r30	; 61
    29d4:	20 91 4f 03 	lds	r18, 0x034F	; 0x80034f <loop.3611>
    29d8:	30 91 50 03 	lds	r19, 0x0350	; 0x800350 <loop.3611+0x1>
    29dc:	f9 01       	movw	r30, r18
    29de:	31 96       	adiw	r30, 0x01	; 1
    29e0:	f0 93 50 03 	sts	0x0350, r31	; 0x800350 <loop.3611+0x1>
    29e4:	e0 93 4f 03 	sts	0x034F, r30	; 0x80034f <loop.3611>
    29e8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    29ec:	22 31       	cpi	r18, 0x12	; 18
    29ee:	31 05       	cpc	r19, r1
    29f0:	6c f4       	brge	.+26     	; 0x2a0c <lcd_animation_loop+0x33a>
    29f2:	61 2f       	mov	r22, r17
    29f4:	0e 94 6f 22 	call	0x44de	; 0x44de <__udivmodqi4>
    29f8:	2b e1       	ldi	r18, 0x1B	; 27
    29fa:	2e 1b       	sub	r18, r30
    29fc:	6a e0       	ldi	r22, 0x0A	; 10
    29fe:	6e 0f       	add	r22, r30
    2a00:	09 2f       	mov	r16, r25
    2a02:	4f ee       	ldi	r20, 0xEF	; 239
    2a04:	80 e0       	ldi	r24, 0x00	; 0
    2a06:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    2a0a:	1d c0       	rjmp	.+58     	; 0x2a46 <lcd_animation_loop+0x374>
    2a0c:	e2 30       	cpi	r30, 0x02	; 2
    2a0e:	21 e0       	ldi	r18, 0x01	; 1
    2a10:	f2 07       	cpc	r31, r18
    2a12:	6c f4       	brge	.+26     	; 0x2a2e <lcd_animation_loop+0x35c>
    2a14:	61 2f       	mov	r22, r17
    2a16:	0e 94 6f 22 	call	0x44de	; 0x44de <__udivmodqi4>
    2a1a:	41 e0       	ldi	r20, 0x01	; 1
    2a1c:	4e 1b       	sub	r20, r30
    2a1e:	09 2f       	mov	r16, r25
    2a20:	2a e0       	ldi	r18, 0x0A	; 10
    2a22:	6b e1       	ldi	r22, 0x1B	; 27
    2a24:	8e ee       	ldi	r24, 0xEE	; 238
    2a26:	8e 0f       	add	r24, r30
    2a28:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    2a2c:	0c c0       	rjmp	.+24     	; 0x2a46 <lcd_animation_loop+0x374>
    2a2e:	10 92 50 03 	sts	0x0350, r1	; 0x800350 <loop.3611+0x1>
    2a32:	10 92 4f 03 	sts	0x034F, r1	; 0x80034f <loop.3611>
    2a36:	8f 5f       	subi	r24, 0xFF	; 255
    2a38:	83 30       	cpi	r24, 0x03	; 3
    2a3a:	18 f4       	brcc	.+6      	; 0x2a42 <lcd_animation_loop+0x370>
    2a3c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    2a40:	02 c0       	rjmp	.+4      	; 0x2a46 <lcd_animation_loop+0x374>
    2a42:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
    2a46:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <cpu_irq_save>
    2a4a:	90 91 75 04 	lds	r25, 0x0475	; 0x800475 <g_status>
    2a4e:	91 70       	andi	r25, 0x01	; 1
    2a50:	8f bf       	out	0x3f, r24	; 63
    2a52:	6b ce       	rjmp	.-810    	; 0x272a <lcd_animation_loop+0x58>
    2a54:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <cpu_irq_save>
    2a58:	90 91 75 04 	lds	r25, 0x0475	; 0x800475 <g_status>
    2a5c:	9e 7f       	andi	r25, 0xFE	; 254
    2a5e:	90 93 75 04 	sts	0x0475, r25	; 0x800475 <g_status>
    2a62:	8f bf       	out	0x3f, r24	; 63
    2a64:	df 91       	pop	r29
    2a66:	cf 91       	pop	r28
    2a68:	1f 91       	pop	r17
    2a6a:	0f 91       	pop	r16
    2a6c:	ff 90       	pop	r15
    2a6e:	ef 90       	pop	r14
    2a70:	df 90       	pop	r13
    2a72:	cf 90       	pop	r12
    2a74:	bf 90       	pop	r11
    2a76:	af 90       	pop	r10
    2a78:	9f 90       	pop	r9
    2a7a:	8f 90       	pop	r8
    2a7c:	7f 90       	pop	r7
    2a7e:	6f 90       	pop	r6
    2a80:	5f 90       	pop	r5
    2a82:	4f 90       	pop	r4
    2a84:	3f 90       	pop	r3
    2a86:	2f 90       	pop	r2
    2a88:	08 95       	ret

00002a8a <lcd_test>:
    2a8a:	ef 92       	push	r14
    2a8c:	ff 92       	push	r15
    2a8e:	0f 93       	push	r16
    2a90:	1f 93       	push	r17
    2a92:	cf 93       	push	r28
    2a94:	c8 2f       	mov	r28, r24
    2a96:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <cpu_irq_save>
    2a9a:	90 91 75 04 	lds	r25, 0x0475	; 0x800475 <g_status>
    2a9e:	9e 7f       	andi	r25, 0xFE	; 254
    2aa0:	9d 7f       	andi	r25, 0xFD	; 253
    2aa2:	90 93 75 04 	sts	0x0475, r25	; 0x800475 <g_status>
    2aa6:	8f bf       	out	0x3f, r24	; 63
    2aa8:	c0 fd       	sbrc	r28, 0
    2aaa:	03 c0       	rjmp	.+6      	; 0x2ab2 <lcd_test+0x28>
    2aac:	c1 ff       	sbrs	r28, 1
    2aae:	2a c0       	rjmp	.+84     	; 0x2b04 <lcd_test+0x7a>
    2ab0:	08 c0       	rjmp	.+16     	; 0x2ac2 <lcd_test+0x38>
    2ab2:	10 e0       	ldi	r17, 0x00	; 0
    2ab4:	81 2f       	mov	r24, r17
    2ab6:	0e 94 aa 0c 	call	0x1954	; 0x1954 <lcd_bus_write_ram>
    2aba:	1f 5f       	subi	r17, 0xFF	; 255
    2abc:	10 3f       	cpi	r17, 0xF0	; 240
    2abe:	d1 f7       	brne	.-12     	; 0x2ab4 <lcd_test+0x2a>
    2ac0:	f5 cf       	rjmp	.-22     	; 0x2aac <lcd_test+0x22>
    2ac2:	82 eb       	ldi	r24, 0xB2	; 178
    2ac4:	0e 94 9d 0c 	call	0x193a	; 0x193a <lcd_bus_write_cmd>
    2ac8:	81 e0       	ldi	r24, 0x01	; 1
    2aca:	80 93 0f 04 	sts	0x040F, r24	; 0x80040f <s_lcd_ram_read_nonvalid>
    2ace:	0e 94 0d 0d 	call	0x1a1a	; 0x1a1a <lcd_cr>
    2ad2:	00 e0       	ldi	r16, 0x00	; 0
    2ad4:	10 e0       	ldi	r17, 0x00	; 0
    2ad6:	87 e0       	ldi	r24, 0x07	; 7
    2ad8:	e8 2e       	mov	r14, r24
    2ada:	f1 2c       	mov	r15, r1
    2adc:	c8 01       	movw	r24, r16
    2ade:	b7 01       	movw	r22, r14
    2ae0:	0e 94 8f 22 	call	0x451e	; 0x451e <__divmodhi4>
    2ae4:	89 2b       	or	r24, r25
    2ae6:	19 f4       	brne	.+6      	; 0x2aee <lcd_test+0x64>
    2ae8:	80 e0       	ldi	r24, 0x00	; 0
    2aea:	0e 94 aa 0c 	call	0x1954	; 0x1954 <lcd_bus_write_ram>
    2aee:	f8 01       	movw	r30, r16
    2af0:	e2 5e       	subi	r30, 0xE2	; 226
    2af2:	fb 4f       	sbci	r31, 0xFB	; 251
    2af4:	84 91       	lpm	r24, Z
    2af6:	0e 94 aa 0c 	call	0x1954	; 0x1954 <lcd_bus_write_ram>
    2afa:	0f 5f       	subi	r16, 0xFF	; 255
    2afc:	1f 4f       	sbci	r17, 0xFF	; 255
    2afe:	00 3f       	cpi	r16, 0xF0	; 240
    2b00:	11 05       	cpc	r17, r1
    2b02:	61 f7       	brne	.-40     	; 0x2adc <lcd_test+0x52>
    2b04:	c2 ff       	sbrs	r28, 2
    2b06:	2d c0       	rjmp	.+90     	; 0x2b62 <lcd_test+0xd8>
    2b08:	41 e0       	ldi	r20, 0x01	; 1
    2b0a:	68 e2       	ldi	r22, 0x28	; 40
    2b0c:	84 e0       	ldi	r24, 0x04	; 4
    2b0e:	0e 94 9a 06 	call	0xd34	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
    2b12:	41 e0       	ldi	r20, 0x01	; 1
    2b14:	69 e2       	ldi	r22, 0x29	; 41
    2b16:	85 e0       	ldi	r24, 0x05	; 5
    2b18:	0e 94 9a 06 	call	0xd34	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
    2b1c:	41 e0       	ldi	r20, 0x01	; 1
    2b1e:	6a e2       	ldi	r22, 0x2A	; 42
    2b20:	86 e0       	ldi	r24, 0x06	; 6
    2b22:	0e 94 9a 06 	call	0xd34	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
    2b26:	41 e0       	ldi	r20, 0x01	; 1
    2b28:	6b e2       	ldi	r22, 0x2B	; 43
    2b2a:	87 e0       	ldi	r24, 0x07	; 7
    2b2c:	0e 94 9a 06 	call	0xd34	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
    2b30:	41 e0       	ldi	r20, 0x01	; 1
    2b32:	6c e2       	ldi	r22, 0x2C	; 44
    2b34:	86 e0       	ldi	r24, 0x06	; 6
    2b36:	0e 94 9a 06 	call	0xd34	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
    2b3a:	41 e0       	ldi	r20, 0x01	; 1
    2b3c:	6d e2       	ldi	r22, 0x2D	; 45
    2b3e:	85 e0       	ldi	r24, 0x05	; 5
    2b40:	0e 94 9a 06 	call	0xd34	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
    2b44:	41 e0       	ldi	r20, 0x01	; 1
    2b46:	6e e2       	ldi	r22, 0x2E	; 46
    2b48:	86 e0       	ldi	r24, 0x06	; 6
    2b4a:	0e 94 9a 06 	call	0xd34	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
    2b4e:	41 e0       	ldi	r20, 0x01	; 1
    2b50:	6f e2       	ldi	r22, 0x2F	; 47
    2b52:	87 e0       	ldi	r24, 0x07	; 7
    2b54:	0e 94 9a 06 	call	0xd34	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
    2b58:	41 e0       	ldi	r20, 0x01	; 1
    2b5a:	60 e3       	ldi	r22, 0x30	; 48
    2b5c:	88 e0       	ldi	r24, 0x08	; 8
    2b5e:	0e 94 9a 06 	call	0xd34	; 0xd34 <gfx_mono_lcd_uc1608_draw_pixel>
    2b62:	c3 ff       	sbrs	r28, 3
    2b64:	07 c0       	rjmp	.+14     	; 0x2b74 <lcd_test+0xea>
    2b66:	01 e0       	ldi	r16, 0x01	; 1
    2b68:	2f e1       	ldi	r18, 0x1F	; 31
    2b6a:	4f ee       	ldi	r20, 0xEF	; 239
    2b6c:	60 e1       	ldi	r22, 0x10	; 16
    2b6e:	80 e0       	ldi	r24, 0x00	; 0
    2b70:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    2b74:	c4 ff       	sbrs	r28, 4
    2b76:	0d c0       	rjmp	.+26     	; 0x2b92 <lcd_test+0x108>
    2b78:	01 e0       	ldi	r16, 0x01	; 1
    2b7a:	28 e2       	ldi	r18, 0x28	; 40
    2b7c:	48 e2       	ldi	r20, 0x28	; 40
    2b7e:	60 e3       	ldi	r22, 0x30	; 48
    2b80:	86 e4       	ldi	r24, 0x46	; 70
    2b82:	0e 94 6f 04 	call	0x8de	; 0x8de <gfx_mono_generic_draw_rect>
    2b86:	28 e2       	ldi	r18, 0x28	; 40
    2b88:	48 e2       	ldi	r20, 0x28	; 40
    2b8a:	60 e3       	ldi	r22, 0x30	; 48
    2b8c:	8a ea       	ldi	r24, 0xAA	; 170
    2b8e:	0e 94 92 04 	call	0x924	; 0x924 <gfx_mono_generic_draw_filled_rect>
    2b92:	c5 ff       	sbrs	r28, 5
    2b94:	0d c0       	rjmp	.+26     	; 0x2bb0 <lcd_test+0x126>
    2b96:	0f ef       	ldi	r16, 0xFF	; 255
    2b98:	21 e0       	ldi	r18, 0x01	; 1
    2b9a:	4a e0       	ldi	r20, 0x0A	; 10
    2b9c:	60 e5       	ldi	r22, 0x50	; 80
    2b9e:	8a e0       	ldi	r24, 0x0A	; 10
    2ba0:	0e 94 ac 04 	call	0x958	; 0x958 <gfx_mono_generic_draw_circle>
    2ba4:	21 e0       	ldi	r18, 0x01	; 1
    2ba6:	4a e0       	ldi	r20, 0x0A	; 10
    2ba8:	60 e5       	ldi	r22, 0x50	; 80
    2baa:	88 e2       	ldi	r24, 0x28	; 40
    2bac:	0e 94 5a 05 	call	0xab4	; 0xab4 <gfx_mono_generic_draw_filled_circle>
    2bb0:	c6 ff       	sbrs	r28, 6
    2bb2:	08 c0       	rjmp	.+16     	; 0x2bc4 <lcd_test+0x13a>
    2bb4:	23 e0       	ldi	r18, 0x03	; 3
    2bb6:	31 e0       	ldi	r19, 0x01	; 1
    2bb8:	40 e2       	ldi	r20, 0x20	; 32
    2bba:	66 e4       	ldi	r22, 0x46	; 70
    2bbc:	8f e0       	ldi	r24, 0x0F	; 15
    2bbe:	93 e0       	ldi	r25, 0x03	; 3
    2bc0:	0e 94 14 07 	call	0xe28	; 0xe28 <gfx_mono_draw_string>
    2bc4:	c7 ff       	sbrs	r28, 7
    2bc6:	0f c0       	rjmp	.+30     	; 0x2be6 <lcd_test+0x15c>
    2bc8:	04 dd       	rcall	.-1528   	; 0x25d2 <lcd_animation_prepare>
    2bca:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <cpu_irq_save>
    2bce:	90 91 75 04 	lds	r25, 0x0475	; 0x800475 <g_status>
    2bd2:	91 60       	ori	r25, 0x01	; 1
    2bd4:	90 93 75 04 	sts	0x0475, r25	; 0x800475 <g_status>
    2bd8:	8f bf       	out	0x3f, r24	; 63
    2bda:	cf 91       	pop	r28
    2bdc:	1f 91       	pop	r17
    2bde:	0f 91       	pop	r16
    2be0:	ff 90       	pop	r15
    2be2:	ef 90       	pop	r14
    2be4:	76 cd       	rjmp	.-1300   	; 0x26d2 <lcd_animation_loop>
    2be6:	cf 91       	pop	r28
    2be8:	1f 91       	pop	r17
    2bea:	0f 91       	pop	r16
    2bec:	ff 90       	pop	r15
    2bee:	ef 90       	pop	r14
    2bf0:	08 95       	ret

00002bf2 <isr_lcd_write>:
    2bf2:	0f 93       	push	r16
    2bf4:	1f 93       	push	r17
    2bf6:	cf 93       	push	r28
    2bf8:	df 93       	push	r29
    2bfa:	00 97       	sbiw	r24, 0x00	; 0
    2bfc:	a9 f0       	breq	.+42     	; 0x2c28 <isr_lcd_write+0x36>
    2bfe:	04 2f       	mov	r16, r20
    2c00:	16 2f       	mov	r17, r22
    2c02:	ec 01       	movw	r28, r24
    2c04:	6f ef       	ldi	r22, 0xFF	; 255
    2c06:	70 e0       	ldi	r23, 0x00	; 0
    2c08:	0e 94 af 22 	call	0x455e	; 0x455e <strnlen>
    2c0c:	81 50       	subi	r24, 0x01	; 1
    2c0e:	8e 3f       	cpi	r24, 0xFE	; 254
    2c10:	58 f4       	brcc	.+22     	; 0x2c28 <isr_lcd_write+0x36>
    2c12:	23 e0       	ldi	r18, 0x03	; 3
    2c14:	31 e0       	ldi	r19, 0x01	; 1
    2c16:	40 2f       	mov	r20, r16
    2c18:	61 2f       	mov	r22, r17
    2c1a:	ce 01       	movw	r24, r28
    2c1c:	df 91       	pop	r29
    2c1e:	cf 91       	pop	r28
    2c20:	1f 91       	pop	r17
    2c22:	0f 91       	pop	r16
    2c24:	0c 94 14 07 	jmp	0xe28	; 0xe28 <gfx_mono_draw_string>
    2c28:	df 91       	pop	r29
    2c2a:	cf 91       	pop	r28
    2c2c:	1f 91       	pop	r17
    2c2e:	0f 91       	pop	r16
    2c30:	08 95       	ret

00002c32 <lcd_show_new_smartlcd_data>:
    2c32:	df 92       	push	r13
    2c34:	ef 92       	push	r14
    2c36:	ff 92       	push	r15
    2c38:	0f 93       	push	r16
    2c3a:	1f 93       	push	r17
    2c3c:	cf 93       	push	r28
    2c3e:	df 93       	push	r29
    2c40:	cd b7       	in	r28, 0x3d	; 61
    2c42:	de b7       	in	r29, 0x3e	; 62
    2c44:	28 97       	sbiw	r28, 0x08	; 8
    2c46:	0f b6       	in	r0, 0x3f	; 63
    2c48:	f8 94       	cli
    2c4a:	de bf       	out	0x3e, r29	; 62
    2c4c:	0f be       	out	0x3f, r0	; 63
    2c4e:	cd bf       	out	0x3d, r28	; 61
    2c50:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <cpu_irq_save>
    2c54:	f8 2e       	mov	r15, r24
    2c56:	10 91 38 04 	lds	r17, 0x0438	; 0x800438 <g_showData+0x2>
    2c5a:	12 33       	cpi	r17, 0x32	; 50
    2c5c:	09 f4       	brne	.+2      	; 0x2c60 <lcd_show_new_smartlcd_data+0x2e>
    2c5e:	78 c0       	rjmp	.+240    	; 0x2d50 <lcd_show_new_smartlcd_data+0x11e>
    2c60:	e8 f4       	brcc	.+58     	; 0x2c9c <lcd_show_new_smartlcd_data+0x6a>
    2c62:	14 31       	cpi	r17, 0x14	; 20
    2c64:	09 f4       	brne	.+2      	; 0x2c68 <lcd_show_new_smartlcd_data+0x36>
    2c66:	4a c0       	rjmp	.+148    	; 0x2cfc <lcd_show_new_smartlcd_data+0xca>
    2c68:	58 f4       	brcc	.+22     	; 0x2c80 <lcd_show_new_smartlcd_data+0x4e>
    2c6a:	10 31       	cpi	r17, 0x10	; 16
    2c6c:	09 f0       	breq	.+2      	; 0x2c70 <lcd_show_new_smartlcd_data+0x3e>
    2c6e:	ab c0       	rjmp	.+342    	; 0x2dc6 <lcd_show_new_smartlcd_data+0x194>
    2c70:	0e 94 b0 06 	call	0xd60	; 0xd60 <gfx_mono_lcd_uc1608_cache_clear>
    2c74:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <lcd_cls>
    2c78:	10 92 38 04 	sts	0x0438, r1	; 0x800438 <g_showData+0x2>
    2c7c:	ff be       	out	0x3f, r15	; 63
    2c7e:	a5 c0       	rjmp	.+330    	; 0x2dca <lcd_show_new_smartlcd_data+0x198>
    2c80:	10 32       	cpi	r17, 0x20	; 32
    2c82:	09 f4       	brne	.+2      	; 0x2c86 <lcd_show_new_smartlcd_data+0x54>
    2c84:	43 c0       	rjmp	.+134    	; 0x2d0c <lcd_show_new_smartlcd_data+0xda>
    2c86:	10 33       	cpi	r17, 0x30	; 48
    2c88:	09 f0       	breq	.+2      	; 0x2c8c <lcd_show_new_smartlcd_data+0x5a>
    2c8a:	9d c0       	rjmp	.+314    	; 0x2dc6 <lcd_show_new_smartlcd_data+0x194>
    2c8c:	20 91 39 04 	lds	r18, 0x0439	; 0x800439 <g_showData+0x3>
    2c90:	aa e3       	ldi	r26, 0x3A	; 58
    2c92:	b4 e0       	ldi	r27, 0x04	; 4
    2c94:	ce 01       	movw	r24, r28
    2c96:	01 96       	adiw	r24, 0x01	; 1
    2c98:	fc 01       	movw	r30, r24
    2c9a:	44 c0       	rjmp	.+136    	; 0x2d24 <lcd_show_new_smartlcd_data+0xf2>
    2c9c:	16 33       	cpi	r17, 0x36	; 54
    2c9e:	09 f4       	brne	.+2      	; 0x2ca2 <lcd_show_new_smartlcd_data+0x70>
    2ca0:	6f c0       	rjmp	.+222    	; 0x2d80 <lcd_show_new_smartlcd_data+0x14e>
    2ca2:	a8 f4       	brcc	.+42     	; 0x2cce <lcd_show_new_smartlcd_data+0x9c>
    2ca4:	14 33       	cpi	r17, 0x34	; 52
    2ca6:	09 f0       	breq	.+2      	; 0x2caa <lcd_show_new_smartlcd_data+0x78>
    2ca8:	8e c0       	rjmp	.+284    	; 0x2dc6 <lcd_show_new_smartlcd_data+0x194>
    2caa:	00 91 49 04 	lds	r16, 0x0449	; 0x800449 <g_showData+0x13>
    2cae:	20 91 3a 04 	lds	r18, 0x043A	; 0x80043a <g_showData+0x4>
    2cb2:	40 91 39 04 	lds	r20, 0x0439	; 0x800439 <g_showData+0x3>
    2cb6:	60 91 4b 04 	lds	r22, 0x044B	; 0x80044b <g_showData+0x15>
    2cba:	80 91 4a 04 	lds	r24, 0x044A	; 0x80044a <g_showData+0x14>
    2cbe:	0e 94 6f 04 	call	0x8de	; 0x8de <gfx_mono_generic_draw_rect>
    2cc2:	0e 94 b0 06 	call	0xd60	; 0xd60 <gfx_mono_lcd_uc1608_cache_clear>
    2cc6:	10 92 38 04 	sts	0x0438, r1	; 0x800438 <g_showData+0x2>
    2cca:	ff be       	out	0x3f, r15	; 63
    2ccc:	7e c0       	rjmp	.+252    	; 0x2dca <lcd_show_new_smartlcd_data+0x198>
    2cce:	18 33       	cpi	r17, 0x38	; 56
    2cd0:	09 f4       	brne	.+2      	; 0x2cd4 <lcd_show_new_smartlcd_data+0xa2>
    2cd2:	68 c0       	rjmp	.+208    	; 0x2da4 <lcd_show_new_smartlcd_data+0x172>
    2cd4:	1a 33       	cpi	r17, 0x3A	; 58
    2cd6:	09 f0       	breq	.+2      	; 0x2cda <lcd_show_new_smartlcd_data+0xa8>
    2cd8:	76 c0       	rjmp	.+236    	; 0x2dc6 <lcd_show_new_smartlcd_data+0x194>
    2cda:	0f ef       	ldi	r16, 0xFF	; 255
    2cdc:	20 91 49 04 	lds	r18, 0x0449	; 0x800449 <g_showData+0x13>
    2ce0:	40 91 39 04 	lds	r20, 0x0439	; 0x800439 <g_showData+0x3>
    2ce4:	60 91 4b 04 	lds	r22, 0x044B	; 0x80044b <g_showData+0x15>
    2ce8:	80 91 4a 04 	lds	r24, 0x044A	; 0x80044a <g_showData+0x14>
    2cec:	0e 94 5a 05 	call	0xab4	; 0xab4 <gfx_mono_generic_draw_filled_circle>
    2cf0:	0e 94 b0 06 	call	0xd60	; 0xd60 <gfx_mono_lcd_uc1608_cache_clear>
    2cf4:	10 92 38 04 	sts	0x0438, r1	; 0x800438 <g_showData+0x2>
    2cf8:	ff be       	out	0x3f, r15	; 63
    2cfa:	67 c0       	rjmp	.+206    	; 0x2dca <lcd_show_new_smartlcd_data+0x198>
    2cfc:	80 91 39 04 	lds	r24, 0x0439	; 0x800439 <g_showData+0x3>
    2d00:	80 93 49 04 	sts	0x0449, r24	; 0x800449 <g_showData+0x13>
    2d04:	10 92 38 04 	sts	0x0438, r1	; 0x800438 <g_showData+0x2>
    2d08:	ff be       	out	0x3f, r15	; 63
    2d0a:	5f c0       	rjmp	.+190    	; 0x2dca <lcd_show_new_smartlcd_data+0x198>
    2d0c:	80 91 39 04 	lds	r24, 0x0439	; 0x800439 <g_showData+0x3>
    2d10:	80 93 4a 04 	sts	0x044A, r24	; 0x80044a <g_showData+0x14>
    2d14:	80 91 3a 04 	lds	r24, 0x043A	; 0x80043a <g_showData+0x4>
    2d18:	80 93 4b 04 	sts	0x044B, r24	; 0x80044b <g_showData+0x15>
    2d1c:	10 92 38 04 	sts	0x0438, r1	; 0x800438 <g_showData+0x2>
    2d20:	ff be       	out	0x3f, r15	; 63
    2d22:	53 c0       	rjmp	.+166    	; 0x2dca <lcd_show_new_smartlcd_data+0x198>
    2d24:	3e 2f       	mov	r19, r30
    2d26:	38 1b       	sub	r19, r24
    2d28:	32 17       	cp	r19, r18
    2d2a:	18 f4       	brcc	.+6      	; 0x2d32 <lcd_show_new_smartlcd_data+0x100>
    2d2c:	3d 91       	ld	r19, X+
    2d2e:	31 93       	st	Z+, r19
    2d30:	f9 cf       	rjmp	.-14     	; 0x2d24 <lcd_show_new_smartlcd_data+0xf2>
    2d32:	fc 01       	movw	r30, r24
    2d34:	e2 0f       	add	r30, r18
    2d36:	f1 1d       	adc	r31, r1
    2d38:	10 82       	st	Z, r1
    2d3a:	40 91 4b 04 	lds	r20, 0x044B	; 0x80044b <g_showData+0x15>
    2d3e:	60 91 4a 04 	lds	r22, 0x044A	; 0x80044a <g_showData+0x14>
    2d42:	57 df       	rcall	.-338    	; 0x2bf2 <isr_lcd_write>
    2d44:	0e 94 b0 06 	call	0xd60	; 0xd60 <gfx_mono_lcd_uc1608_cache_clear>
    2d48:	10 92 38 04 	sts	0x0438, r1	; 0x800438 <g_showData+0x2>
    2d4c:	ff be       	out	0x3f, r15	; 63
    2d4e:	3d c0       	rjmp	.+122    	; 0x2dca <lcd_show_new_smartlcd_data+0x198>
    2d50:	d0 90 39 04 	lds	r13, 0x0439	; 0x800439 <g_showData+0x3>
    2d54:	e0 90 3a 04 	lds	r14, 0x043A	; 0x80043a <g_showData+0x4>
    2d58:	00 91 49 04 	lds	r16, 0x0449	; 0x800449 <g_showData+0x13>
    2d5c:	2e 2d       	mov	r18, r14
    2d5e:	4d 2d       	mov	r20, r13
    2d60:	60 91 4b 04 	lds	r22, 0x044B	; 0x80044b <g_showData+0x15>
    2d64:	80 91 4a 04 	lds	r24, 0x044A	; 0x80044a <g_showData+0x14>
    2d68:	0e 94 00 04 	call	0x800	; 0x800 <gfx_mono_generic_draw_line>
    2d6c:	0e 94 b0 06 	call	0xd60	; 0xd60 <gfx_mono_lcd_uc1608_cache_clear>
    2d70:	d0 92 4a 04 	sts	0x044A, r13	; 0x80044a <g_showData+0x14>
    2d74:	e0 92 4b 04 	sts	0x044B, r14	; 0x80044b <g_showData+0x15>
    2d78:	10 92 38 04 	sts	0x0438, r1	; 0x800438 <g_showData+0x2>
    2d7c:	ff be       	out	0x3f, r15	; 63
    2d7e:	25 c0       	rjmp	.+74     	; 0x2dca <lcd_show_new_smartlcd_data+0x198>
    2d80:	00 91 49 04 	lds	r16, 0x0449	; 0x800449 <g_showData+0x13>
    2d84:	20 91 3a 04 	lds	r18, 0x043A	; 0x80043a <g_showData+0x4>
    2d88:	40 91 39 04 	lds	r20, 0x0439	; 0x800439 <g_showData+0x3>
    2d8c:	60 91 4b 04 	lds	r22, 0x044B	; 0x80044b <g_showData+0x15>
    2d90:	80 91 4a 04 	lds	r24, 0x044A	; 0x80044a <g_showData+0x14>
    2d94:	0e 94 92 04 	call	0x924	; 0x924 <gfx_mono_generic_draw_filled_rect>
    2d98:	0e 94 b0 06 	call	0xd60	; 0xd60 <gfx_mono_lcd_uc1608_cache_clear>
    2d9c:	10 92 38 04 	sts	0x0438, r1	; 0x800438 <g_showData+0x2>
    2da0:	ff be       	out	0x3f, r15	; 63
    2da2:	13 c0       	rjmp	.+38     	; 0x2dca <lcd_show_new_smartlcd_data+0x198>
    2da4:	0f ef       	ldi	r16, 0xFF	; 255
    2da6:	20 91 49 04 	lds	r18, 0x0449	; 0x800449 <g_showData+0x13>
    2daa:	40 91 39 04 	lds	r20, 0x0439	; 0x800439 <g_showData+0x3>
    2dae:	60 91 4b 04 	lds	r22, 0x044B	; 0x80044b <g_showData+0x15>
    2db2:	80 91 4a 04 	lds	r24, 0x044A	; 0x80044a <g_showData+0x14>
    2db6:	0e 94 ac 04 	call	0x958	; 0x958 <gfx_mono_generic_draw_circle>
    2dba:	0e 94 b0 06 	call	0xd60	; 0xd60 <gfx_mono_lcd_uc1608_cache_clear>
    2dbe:	10 92 38 04 	sts	0x0438, r1	; 0x800438 <g_showData+0x2>
    2dc2:	ff be       	out	0x3f, r15	; 63
    2dc4:	02 c0       	rjmp	.+4      	; 0x2dca <lcd_show_new_smartlcd_data+0x198>
    2dc6:	ff be       	out	0x3f, r15	; 63
    2dc8:	10 e0       	ldi	r17, 0x00	; 0
    2dca:	81 2f       	mov	r24, r17
    2dcc:	28 96       	adiw	r28, 0x08	; 8
    2dce:	0f b6       	in	r0, 0x3f	; 63
    2dd0:	f8 94       	cli
    2dd2:	de bf       	out	0x3e, r29	; 62
    2dd4:	0f be       	out	0x3f, r0	; 63
    2dd6:	cd bf       	out	0x3d, r28	; 61
    2dd8:	df 91       	pop	r29
    2dda:	cf 91       	pop	r28
    2ddc:	1f 91       	pop	r17
    2dde:	0f 91       	pop	r16
    2de0:	ff 90       	pop	r15
    2de2:	ef 90       	pop	r14
    2de4:	df 90       	pop	r13
    2de6:	08 95       	ret

00002de8 <isr_smartlcd_cmd>:
    2de8:	80 93 38 04 	sts	0x0438, r24	; 0x800438 <g_showData+0x2>
    2dec:	08 95       	ret

00002dee <isr_smartlcd_cmd_data1>:
    2dee:	e6 e3       	ldi	r30, 0x36	; 54
    2df0:	f4 e0       	ldi	r31, 0x04	; 4
    2df2:	82 83       	std	Z+2, r24	; 0x02
    2df4:	63 83       	std	Z+3, r22	; 0x03
    2df6:	08 95       	ret

00002df8 <isr_smartlcd_cmd_data2>:
    2df8:	e6 e3       	ldi	r30, 0x36	; 54
    2dfa:	f4 e0       	ldi	r31, 0x04	; 4
    2dfc:	82 83       	std	Z+2, r24	; 0x02
    2dfe:	63 83       	std	Z+3, r22	; 0x03
    2e00:	44 83       	std	Z+4, r20	; 0x04
    2e02:	08 95       	ret

00002e04 <isr_smartlcd_cmd_data3>:
    2e04:	e6 e3       	ldi	r30, 0x36	; 54
    2e06:	f4 e0       	ldi	r31, 0x04	; 4
    2e08:	82 83       	std	Z+2, r24	; 0x02
    2e0a:	63 83       	std	Z+3, r22	; 0x03
    2e0c:	44 83       	std	Z+4, r20	; 0x04
    2e0e:	25 83       	std	Z+5, r18	; 0x05
    2e10:	08 95       	ret

00002e12 <isr_smartlcd_cmd_data4>:
    2e12:	0f 93       	push	r16
    2e14:	e6 e3       	ldi	r30, 0x36	; 54
    2e16:	f4 e0       	ldi	r31, 0x04	; 4
    2e18:	82 83       	std	Z+2, r24	; 0x02
    2e1a:	63 83       	std	Z+3, r22	; 0x03
    2e1c:	44 83       	std	Z+4, r20	; 0x04
    2e1e:	25 83       	std	Z+5, r18	; 0x05
    2e20:	06 83       	std	Z+6, r16	; 0x06
    2e22:	0f 91       	pop	r16
    2e24:	08 95       	ret

00002e26 <isr_smartlcd_cmd_data5>:
    2e26:	ef 92       	push	r14
    2e28:	0f 93       	push	r16
    2e2a:	e6 e3       	ldi	r30, 0x36	; 54
    2e2c:	f4 e0       	ldi	r31, 0x04	; 4
    2e2e:	82 83       	std	Z+2, r24	; 0x02
    2e30:	63 83       	std	Z+3, r22	; 0x03
    2e32:	44 83       	std	Z+4, r20	; 0x04
    2e34:	25 83       	std	Z+5, r18	; 0x05
    2e36:	06 83       	std	Z+6, r16	; 0x06
    2e38:	e7 82       	std	Z+7, r14	; 0x07
    2e3a:	0f 91       	pop	r16
    2e3c:	ef 90       	pop	r14
    2e3e:	08 95       	ret

00002e40 <isr_smartlcd_cmd_data6>:
    2e40:	cf 92       	push	r12
    2e42:	ef 92       	push	r14
    2e44:	0f 93       	push	r16
    2e46:	e6 e3       	ldi	r30, 0x36	; 54
    2e48:	f4 e0       	ldi	r31, 0x04	; 4
    2e4a:	82 83       	std	Z+2, r24	; 0x02
    2e4c:	63 83       	std	Z+3, r22	; 0x03
    2e4e:	44 83       	std	Z+4, r20	; 0x04
    2e50:	25 83       	std	Z+5, r18	; 0x05
    2e52:	06 83       	std	Z+6, r16	; 0x06
    2e54:	e7 82       	std	Z+7, r14	; 0x07
    2e56:	c0 86       	std	Z+8, r12	; 0x08
    2e58:	0f 91       	pop	r16
    2e5a:	ef 90       	pop	r14
    2e5c:	cf 90       	pop	r12
    2e5e:	08 95       	ret

00002e60 <isr_smartlcd_cmd_data7>:
    2e60:	af 92       	push	r10
    2e62:	cf 92       	push	r12
    2e64:	ef 92       	push	r14
    2e66:	0f 93       	push	r16
    2e68:	e6 e3       	ldi	r30, 0x36	; 54
    2e6a:	f4 e0       	ldi	r31, 0x04	; 4
    2e6c:	82 83       	std	Z+2, r24	; 0x02
    2e6e:	63 83       	std	Z+3, r22	; 0x03
    2e70:	44 83       	std	Z+4, r20	; 0x04
    2e72:	25 83       	std	Z+5, r18	; 0x05
    2e74:	06 83       	std	Z+6, r16	; 0x06
    2e76:	e7 82       	std	Z+7, r14	; 0x07
    2e78:	c0 86       	std	Z+8, r12	; 0x08
    2e7a:	a1 86       	std	Z+9, r10	; 0x09
    2e7c:	0f 91       	pop	r16
    2e7e:	ef 90       	pop	r14
    2e80:	cf 90       	pop	r12
    2e82:	af 90       	pop	r10
    2e84:	08 95       	ret

00002e86 <isr_smartlcd_cmd_data8>:
    2e86:	8f 92       	push	r8
    2e88:	af 92       	push	r10
    2e8a:	cf 92       	push	r12
    2e8c:	ef 92       	push	r14
    2e8e:	0f 93       	push	r16
    2e90:	cf 93       	push	r28
    2e92:	df 93       	push	r29
    2e94:	cd b7       	in	r28, 0x3d	; 61
    2e96:	de b7       	in	r29, 0x3e	; 62
    2e98:	e6 e3       	ldi	r30, 0x36	; 54
    2e9a:	f4 e0       	ldi	r31, 0x04	; 4
    2e9c:	82 83       	std	Z+2, r24	; 0x02
    2e9e:	63 83       	std	Z+3, r22	; 0x03
    2ea0:	44 83       	std	Z+4, r20	; 0x04
    2ea2:	25 83       	std	Z+5, r18	; 0x05
    2ea4:	06 83       	std	Z+6, r16	; 0x06
    2ea6:	e7 82       	std	Z+7, r14	; 0x07
    2ea8:	c0 86       	std	Z+8, r12	; 0x08
    2eaa:	a1 86       	std	Z+9, r10	; 0x09
    2eac:	82 86       	std	Z+10, r8	; 0x0a
    2eae:	df 91       	pop	r29
    2eb0:	cf 91       	pop	r28
    2eb2:	0f 91       	pop	r16
    2eb4:	ef 90       	pop	r14
    2eb6:	cf 90       	pop	r12
    2eb8:	af 90       	pop	r10
    2eba:	8f 90       	pop	r8
    2ebc:	08 95       	ret

00002ebe <isr_smartlcd_cmd_data9>:
    2ebe:	8f 92       	push	r8
    2ec0:	af 92       	push	r10
    2ec2:	cf 92       	push	r12
    2ec4:	ef 92       	push	r14
    2ec6:	0f 93       	push	r16
    2ec8:	cf 93       	push	r28
    2eca:	df 93       	push	r29
    2ecc:	cd b7       	in	r28, 0x3d	; 61
    2ece:	de b7       	in	r29, 0x3e	; 62
    2ed0:	e6 e3       	ldi	r30, 0x36	; 54
    2ed2:	f4 e0       	ldi	r31, 0x04	; 4
    2ed4:	82 83       	std	Z+2, r24	; 0x02
    2ed6:	63 83       	std	Z+3, r22	; 0x03
    2ed8:	44 83       	std	Z+4, r20	; 0x04
    2eda:	25 83       	std	Z+5, r18	; 0x05
    2edc:	06 83       	std	Z+6, r16	; 0x06
    2ede:	e7 82       	std	Z+7, r14	; 0x07
    2ee0:	c0 86       	std	Z+8, r12	; 0x08
    2ee2:	a1 86       	std	Z+9, r10	; 0x09
    2ee4:	82 86       	std	Z+10, r8	; 0x0a
    2ee6:	8a 85       	ldd	r24, Y+10	; 0x0a
    2ee8:	83 87       	std	Z+11, r24	; 0x0b
    2eea:	df 91       	pop	r29
    2eec:	cf 91       	pop	r28
    2eee:	0f 91       	pop	r16
    2ef0:	ef 90       	pop	r14
    2ef2:	cf 90       	pop	r12
    2ef4:	af 90       	pop	r10
    2ef6:	8f 90       	pop	r8
    2ef8:	08 95       	ret

00002efa <isr_smartlcd_cmd_data10>:
    2efa:	8f 92       	push	r8
    2efc:	af 92       	push	r10
    2efe:	cf 92       	push	r12
    2f00:	ef 92       	push	r14
    2f02:	0f 93       	push	r16
    2f04:	cf 93       	push	r28
    2f06:	df 93       	push	r29
    2f08:	cd b7       	in	r28, 0x3d	; 61
    2f0a:	de b7       	in	r29, 0x3e	; 62
    2f0c:	e6 e3       	ldi	r30, 0x36	; 54
    2f0e:	f4 e0       	ldi	r31, 0x04	; 4
    2f10:	82 83       	std	Z+2, r24	; 0x02
    2f12:	63 83       	std	Z+3, r22	; 0x03
    2f14:	44 83       	std	Z+4, r20	; 0x04
    2f16:	25 83       	std	Z+5, r18	; 0x05
    2f18:	06 83       	std	Z+6, r16	; 0x06
    2f1a:	e7 82       	std	Z+7, r14	; 0x07
    2f1c:	c0 86       	std	Z+8, r12	; 0x08
    2f1e:	a1 86       	std	Z+9, r10	; 0x09
    2f20:	82 86       	std	Z+10, r8	; 0x0a
    2f22:	8a 85       	ldd	r24, Y+10	; 0x0a
    2f24:	83 87       	std	Z+11, r24	; 0x0b
    2f26:	8b 85       	ldd	r24, Y+11	; 0x0b
    2f28:	84 87       	std	Z+12, r24	; 0x0c
    2f2a:	df 91       	pop	r29
    2f2c:	cf 91       	pop	r28
    2f2e:	0f 91       	pop	r16
    2f30:	ef 90       	pop	r14
    2f32:	cf 90       	pop	r12
    2f34:	af 90       	pop	r10
    2f36:	8f 90       	pop	r8
    2f38:	08 95       	ret

00002f3a <isr_smartlcd_cmd_data11>:
    2f3a:	8f 92       	push	r8
    2f3c:	af 92       	push	r10
    2f3e:	cf 92       	push	r12
    2f40:	ef 92       	push	r14
    2f42:	0f 93       	push	r16
    2f44:	cf 93       	push	r28
    2f46:	df 93       	push	r29
    2f48:	cd b7       	in	r28, 0x3d	; 61
    2f4a:	de b7       	in	r29, 0x3e	; 62
    2f4c:	e6 e3       	ldi	r30, 0x36	; 54
    2f4e:	f4 e0       	ldi	r31, 0x04	; 4
    2f50:	82 83       	std	Z+2, r24	; 0x02
    2f52:	63 83       	std	Z+3, r22	; 0x03
    2f54:	44 83       	std	Z+4, r20	; 0x04
    2f56:	25 83       	std	Z+5, r18	; 0x05
    2f58:	06 83       	std	Z+6, r16	; 0x06
    2f5a:	e7 82       	std	Z+7, r14	; 0x07
    2f5c:	c0 86       	std	Z+8, r12	; 0x08
    2f5e:	a1 86       	std	Z+9, r10	; 0x09
    2f60:	82 86       	std	Z+10, r8	; 0x0a
    2f62:	8a 85       	ldd	r24, Y+10	; 0x0a
    2f64:	83 87       	std	Z+11, r24	; 0x0b
    2f66:	8b 85       	ldd	r24, Y+11	; 0x0b
    2f68:	84 87       	std	Z+12, r24	; 0x0c
    2f6a:	8c 85       	ldd	r24, Y+12	; 0x0c
    2f6c:	85 87       	std	Z+13, r24	; 0x0d
    2f6e:	df 91       	pop	r29
    2f70:	cf 91       	pop	r28
    2f72:	0f 91       	pop	r16
    2f74:	ef 90       	pop	r14
    2f76:	cf 90       	pop	r12
    2f78:	af 90       	pop	r10
    2f7a:	8f 90       	pop	r8
    2f7c:	08 95       	ret

00002f7e <isr_smartlcd_cmd_data12>:
    2f7e:	8f 92       	push	r8
    2f80:	af 92       	push	r10
    2f82:	cf 92       	push	r12
    2f84:	ef 92       	push	r14
    2f86:	0f 93       	push	r16
    2f88:	cf 93       	push	r28
    2f8a:	df 93       	push	r29
    2f8c:	cd b7       	in	r28, 0x3d	; 61
    2f8e:	de b7       	in	r29, 0x3e	; 62
    2f90:	e6 e3       	ldi	r30, 0x36	; 54
    2f92:	f4 e0       	ldi	r31, 0x04	; 4
    2f94:	82 83       	std	Z+2, r24	; 0x02
    2f96:	63 83       	std	Z+3, r22	; 0x03
    2f98:	44 83       	std	Z+4, r20	; 0x04
    2f9a:	25 83       	std	Z+5, r18	; 0x05
    2f9c:	06 83       	std	Z+6, r16	; 0x06
    2f9e:	e7 82       	std	Z+7, r14	; 0x07
    2fa0:	c0 86       	std	Z+8, r12	; 0x08
    2fa2:	a1 86       	std	Z+9, r10	; 0x09
    2fa4:	82 86       	std	Z+10, r8	; 0x0a
    2fa6:	8a 85       	ldd	r24, Y+10	; 0x0a
    2fa8:	83 87       	std	Z+11, r24	; 0x0b
    2faa:	8b 85       	ldd	r24, Y+11	; 0x0b
    2fac:	84 87       	std	Z+12, r24	; 0x0c
    2fae:	8c 85       	ldd	r24, Y+12	; 0x0c
    2fb0:	85 87       	std	Z+13, r24	; 0x0d
    2fb2:	8d 85       	ldd	r24, Y+13	; 0x0d
    2fb4:	86 87       	std	Z+14, r24	; 0x0e
    2fb6:	df 91       	pop	r29
    2fb8:	cf 91       	pop	r28
    2fba:	0f 91       	pop	r16
    2fbc:	ef 90       	pop	r14
    2fbe:	cf 90       	pop	r12
    2fc0:	af 90       	pop	r10
    2fc2:	8f 90       	pop	r8
    2fc4:	08 95       	ret

00002fc6 <isr_smartlcd_cmd_data13>:
    2fc6:	8f 92       	push	r8
    2fc8:	af 92       	push	r10
    2fca:	cf 92       	push	r12
    2fcc:	ef 92       	push	r14
    2fce:	0f 93       	push	r16
    2fd0:	cf 93       	push	r28
    2fd2:	df 93       	push	r29
    2fd4:	cd b7       	in	r28, 0x3d	; 61
    2fd6:	de b7       	in	r29, 0x3e	; 62
    2fd8:	e6 e3       	ldi	r30, 0x36	; 54
    2fda:	f4 e0       	ldi	r31, 0x04	; 4
    2fdc:	82 83       	std	Z+2, r24	; 0x02
    2fde:	63 83       	std	Z+3, r22	; 0x03
    2fe0:	44 83       	std	Z+4, r20	; 0x04
    2fe2:	25 83       	std	Z+5, r18	; 0x05
    2fe4:	06 83       	std	Z+6, r16	; 0x06
    2fe6:	e7 82       	std	Z+7, r14	; 0x07
    2fe8:	c0 86       	std	Z+8, r12	; 0x08
    2fea:	a1 86       	std	Z+9, r10	; 0x09
    2fec:	82 86       	std	Z+10, r8	; 0x0a
    2fee:	8a 85       	ldd	r24, Y+10	; 0x0a
    2ff0:	83 87       	std	Z+11, r24	; 0x0b
    2ff2:	8b 85       	ldd	r24, Y+11	; 0x0b
    2ff4:	84 87       	std	Z+12, r24	; 0x0c
    2ff6:	8c 85       	ldd	r24, Y+12	; 0x0c
    2ff8:	85 87       	std	Z+13, r24	; 0x0d
    2ffa:	8d 85       	ldd	r24, Y+13	; 0x0d
    2ffc:	86 87       	std	Z+14, r24	; 0x0e
    2ffe:	8e 85       	ldd	r24, Y+14	; 0x0e
    3000:	87 87       	std	Z+15, r24	; 0x0f
    3002:	df 91       	pop	r29
    3004:	cf 91       	pop	r28
    3006:	0f 91       	pop	r16
    3008:	ef 90       	pop	r14
    300a:	cf 90       	pop	r12
    300c:	af 90       	pop	r10
    300e:	8f 90       	pop	r8
    3010:	08 95       	ret

00003012 <isr_smartlcd_cmd_data14>:
    3012:	8f 92       	push	r8
    3014:	af 92       	push	r10
    3016:	cf 92       	push	r12
    3018:	ef 92       	push	r14
    301a:	0f 93       	push	r16
    301c:	cf 93       	push	r28
    301e:	df 93       	push	r29
    3020:	cd b7       	in	r28, 0x3d	; 61
    3022:	de b7       	in	r29, 0x3e	; 62
    3024:	e6 e3       	ldi	r30, 0x36	; 54
    3026:	f4 e0       	ldi	r31, 0x04	; 4
    3028:	82 83       	std	Z+2, r24	; 0x02
    302a:	63 83       	std	Z+3, r22	; 0x03
    302c:	44 83       	std	Z+4, r20	; 0x04
    302e:	25 83       	std	Z+5, r18	; 0x05
    3030:	06 83       	std	Z+6, r16	; 0x06
    3032:	e7 82       	std	Z+7, r14	; 0x07
    3034:	c0 86       	std	Z+8, r12	; 0x08
    3036:	a1 86       	std	Z+9, r10	; 0x09
    3038:	82 86       	std	Z+10, r8	; 0x0a
    303a:	8a 85       	ldd	r24, Y+10	; 0x0a
    303c:	83 87       	std	Z+11, r24	; 0x0b
    303e:	8b 85       	ldd	r24, Y+11	; 0x0b
    3040:	84 87       	std	Z+12, r24	; 0x0c
    3042:	8c 85       	ldd	r24, Y+12	; 0x0c
    3044:	85 87       	std	Z+13, r24	; 0x0d
    3046:	8d 85       	ldd	r24, Y+13	; 0x0d
    3048:	86 87       	std	Z+14, r24	; 0x0e
    304a:	8e 85       	ldd	r24, Y+14	; 0x0e
    304c:	87 87       	std	Z+15, r24	; 0x0f
    304e:	8f 85       	ldd	r24, Y+15	; 0x0f
    3050:	80 8b       	std	Z+16, r24	; 0x10
    3052:	df 91       	pop	r29
    3054:	cf 91       	pop	r28
    3056:	0f 91       	pop	r16
    3058:	ef 90       	pop	r14
    305a:	cf 90       	pop	r12
    305c:	af 90       	pop	r10
    305e:	8f 90       	pop	r8
    3060:	08 95       	ret

00003062 <isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100>:
    3062:	90 91 60 04 	lds	r25, 0x0460	; 0x800460 <g_showData+0x2a>
    3066:	98 13       	cpse	r25, r24
    3068:	0e c0       	rjmp	.+28     	; 0x3086 <isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100+0x24>
    306a:	20 91 4c 04 	lds	r18, 0x044C	; 0x80044c <g_showData+0x16>
    306e:	30 91 4d 04 	lds	r19, 0x044D	; 0x80044d <g_showData+0x17>
    3072:	26 17       	cp	r18, r22
    3074:	37 07       	cpc	r19, r23
    3076:	39 f4       	brne	.+14     	; 0x3086 <isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100+0x24>
    3078:	20 91 4e 04 	lds	r18, 0x044E	; 0x80044e <g_showData+0x18>
    307c:	30 91 4f 04 	lds	r19, 0x044F	; 0x80044f <g_showData+0x19>
    3080:	24 17       	cp	r18, r20
    3082:	35 07       	cpc	r19, r21
    3084:	79 f0       	breq	.+30     	; 0x30a4 <isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100+0x42>
    3086:	90 91 36 04 	lds	r25, 0x0436	; 0x800436 <g_showData>
    308a:	91 60       	ori	r25, 0x01	; 1
    308c:	90 93 36 04 	sts	0x0436, r25	; 0x800436 <g_showData>
    3090:	80 93 60 04 	sts	0x0460, r24	; 0x800460 <g_showData+0x2a>
    3094:	70 93 4d 04 	sts	0x044D, r23	; 0x80044d <g_showData+0x17>
    3098:	60 93 4c 04 	sts	0x044C, r22	; 0x80044c <g_showData+0x16>
    309c:	50 93 4f 04 	sts	0x044F, r21	; 0x80044f <g_showData+0x19>
    30a0:	40 93 4e 04 	sts	0x044E, r20	; 0x80044e <g_showData+0x18>
    30a4:	08 95       	ret

000030a6 <isr_lcd_10mhz_ref_osc_show_date>:
    30a6:	20 91 50 04 	lds	r18, 0x0450	; 0x800450 <g_showData+0x1a>
    30aa:	30 91 51 04 	lds	r19, 0x0451	; 0x800451 <g_showData+0x1b>
    30ae:	28 17       	cp	r18, r24
    30b0:	39 07       	cpc	r19, r25
    30b2:	71 f4       	brne	.+28     	; 0x30d0 <isr_lcd_10mhz_ref_osc_show_date+0x2a>
    30b4:	20 91 61 04 	lds	r18, 0x0461	; 0x800461 <g_showData+0x2b>
    30b8:	30 e0       	ldi	r19, 0x00	; 0
    30ba:	e6 2f       	mov	r30, r22
    30bc:	06 2e       	mov	r0, r22
    30be:	00 0c       	add	r0, r0
    30c0:	ff 0b       	sbc	r31, r31
    30c2:	2e 17       	cp	r18, r30
    30c4:	3f 07       	cpc	r19, r31
    30c6:	21 f4       	brne	.+8      	; 0x30d0 <isr_lcd_10mhz_ref_osc_show_date+0x2a>
    30c8:	20 91 62 04 	lds	r18, 0x0462	; 0x800462 <g_showData+0x2c>
    30cc:	24 17       	cp	r18, r20
    30ce:	69 f0       	breq	.+26     	; 0x30ea <isr_lcd_10mhz_ref_osc_show_date+0x44>
    30d0:	20 91 36 04 	lds	r18, 0x0436	; 0x800436 <g_showData>
    30d4:	22 60       	ori	r18, 0x02	; 2
    30d6:	20 93 36 04 	sts	0x0436, r18	; 0x800436 <g_showData>
    30da:	90 93 51 04 	sts	0x0451, r25	; 0x800451 <g_showData+0x1b>
    30de:	80 93 50 04 	sts	0x0450, r24	; 0x800450 <g_showData+0x1a>
    30e2:	60 93 61 04 	sts	0x0461, r22	; 0x800461 <g_showData+0x2b>
    30e6:	40 93 62 04 	sts	0x0462, r20	; 0x800462 <g_showData+0x2c>
    30ea:	08 95       	ret

000030ec <isr_lcd_10mhz_ref_osc_show_time>:
    30ec:	90 91 63 04 	lds	r25, 0x0463	; 0x800463 <g_showData+0x2d>
    30f0:	98 13       	cpse	r25, r24
    30f2:	0e c0       	rjmp	.+28     	; 0x3110 <isr_lcd_10mhz_ref_osc_show_time+0x24>
    30f4:	20 91 64 04 	lds	r18, 0x0464	; 0x800464 <g_showData+0x2e>
    30f8:	30 e0       	ldi	r19, 0x00	; 0
    30fa:	e6 2f       	mov	r30, r22
    30fc:	06 2e       	mov	r0, r22
    30fe:	00 0c       	add	r0, r0
    3100:	ff 0b       	sbc	r31, r31
    3102:	2e 17       	cp	r18, r30
    3104:	3f 07       	cpc	r19, r31
    3106:	21 f4       	brne	.+8      	; 0x3110 <isr_lcd_10mhz_ref_osc_show_time+0x24>
    3108:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <g_showData+0x2f>
    310c:	94 17       	cp	r25, r20
    310e:	59 f0       	breq	.+22     	; 0x3126 <isr_lcd_10mhz_ref_osc_show_time+0x3a>
    3110:	90 91 36 04 	lds	r25, 0x0436	; 0x800436 <g_showData>
    3114:	94 60       	ori	r25, 0x04	; 4
    3116:	90 93 36 04 	sts	0x0436, r25	; 0x800436 <g_showData>
    311a:	80 93 63 04 	sts	0x0463, r24	; 0x800463 <g_showData+0x2d>
    311e:	60 93 64 04 	sts	0x0464, r22	; 0x800464 <g_showData+0x2e>
    3122:	40 93 65 04 	sts	0x0465, r20	; 0x800465 <g_showData+0x2f>
    3126:	08 95       	ret

00003128 <isr_lcd_10mhz_ref_osc_show_ppm>:
    3128:	20 91 52 04 	lds	r18, 0x0452	; 0x800452 <g_showData+0x1c>
    312c:	30 91 53 04 	lds	r19, 0x0453	; 0x800453 <g_showData+0x1d>
    3130:	28 17       	cp	r18, r24
    3132:	39 07       	cpc	r19, r25
    3134:	39 f4       	brne	.+14     	; 0x3144 <isr_lcd_10mhz_ref_osc_show_ppm+0x1c>
    3136:	20 91 54 04 	lds	r18, 0x0454	; 0x800454 <g_showData+0x1e>
    313a:	30 91 55 04 	lds	r19, 0x0455	; 0x800455 <g_showData+0x1f>
    313e:	26 17       	cp	r18, r22
    3140:	37 07       	cpc	r19, r23
    3142:	69 f0       	breq	.+26     	; 0x315e <isr_lcd_10mhz_ref_osc_show_ppm+0x36>
    3144:	20 91 36 04 	lds	r18, 0x0436	; 0x800436 <g_showData>
    3148:	28 60       	ori	r18, 0x08	; 8
    314a:	20 93 36 04 	sts	0x0436, r18	; 0x800436 <g_showData>
    314e:	90 93 53 04 	sts	0x0453, r25	; 0x800453 <g_showData+0x1d>
    3152:	80 93 52 04 	sts	0x0452, r24	; 0x800452 <g_showData+0x1c>
    3156:	70 93 55 04 	sts	0x0455, r23	; 0x800455 <g_showData+0x1f>
    315a:	60 93 54 04 	sts	0x0454, r22	; 0x800454 <g_showData+0x1e>
    315e:	08 95       	ret

00003160 <isr_lcd_10mhz_ref_osc_show_pwm>:
    3160:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <g_showData+0x30>
    3164:	98 13       	cpse	r25, r24
    3166:	04 c0       	rjmp	.+8      	; 0x3170 <isr_lcd_10mhz_ref_osc_show_pwm+0x10>
    3168:	90 91 67 04 	lds	r25, 0x0467	; 0x800467 <g_showData+0x31>
    316c:	96 17       	cp	r25, r22
    316e:	49 f0       	breq	.+18     	; 0x3182 <isr_lcd_10mhz_ref_osc_show_pwm+0x22>
    3170:	90 91 36 04 	lds	r25, 0x0436	; 0x800436 <g_showData>
    3174:	90 61       	ori	r25, 0x10	; 16
    3176:	90 93 36 04 	sts	0x0436, r25	; 0x800436 <g_showData>
    317a:	80 93 66 04 	sts	0x0466, r24	; 0x800466 <g_showData+0x30>
    317e:	60 93 67 04 	sts	0x0467, r22	; 0x800467 <g_showData+0x31>
    3182:	08 95       	ret

00003184 <isr_lcd_10mhz_ref_osc_show_pv>:
    3184:	90 91 68 04 	lds	r25, 0x0468	; 0x800468 <g_showData+0x32>
    3188:	98 13       	cpse	r25, r24
    318a:	07 c0       	rjmp	.+14     	; 0x319a <isr_lcd_10mhz_ref_osc_show_pv+0x16>
    318c:	20 91 56 04 	lds	r18, 0x0456	; 0x800456 <g_showData+0x20>
    3190:	30 91 57 04 	lds	r19, 0x0457	; 0x800457 <g_showData+0x21>
    3194:	26 17       	cp	r18, r22
    3196:	37 07       	cpc	r19, r23
    3198:	59 f0       	breq	.+22     	; 0x31b0 <isr_lcd_10mhz_ref_osc_show_pv+0x2c>
    319a:	90 91 36 04 	lds	r25, 0x0436	; 0x800436 <g_showData>
    319e:	90 62       	ori	r25, 0x20	; 32
    31a0:	90 93 36 04 	sts	0x0436, r25	; 0x800436 <g_showData>
    31a4:	80 93 68 04 	sts	0x0468, r24	; 0x800468 <g_showData+0x32>
    31a8:	70 93 57 04 	sts	0x0457, r23	; 0x800457 <g_showData+0x21>
    31ac:	60 93 56 04 	sts	0x0456, r22	; 0x800456 <g_showData+0x20>
    31b0:	08 95       	ret

000031b2 <isr_lcd_10mhz_ref_osc_show_sat_use>:
    31b2:	90 91 69 04 	lds	r25, 0x0469	; 0x800469 <g_showData+0x33>
    31b6:	98 13       	cpse	r25, r24
    31b8:	08 c0       	rjmp	.+16     	; 0x31ca <isr_lcd_10mhz_ref_osc_show_sat_use+0x18>
    31ba:	90 91 6a 04 	lds	r25, 0x046A	; 0x80046a <g_showData+0x34>
    31be:	96 13       	cpse	r25, r22
    31c0:	04 c0       	rjmp	.+8      	; 0x31ca <isr_lcd_10mhz_ref_osc_show_sat_use+0x18>
    31c2:	90 91 6b 04 	lds	r25, 0x046B	; 0x80046b <g_showData+0x35>
    31c6:	94 17       	cp	r25, r20
    31c8:	59 f0       	breq	.+22     	; 0x31e0 <isr_lcd_10mhz_ref_osc_show_sat_use+0x2e>
    31ca:	90 91 36 04 	lds	r25, 0x0436	; 0x800436 <g_showData>
    31ce:	90 64       	ori	r25, 0x40	; 64
    31d0:	90 93 36 04 	sts	0x0436, r25	; 0x800436 <g_showData>
    31d4:	80 93 69 04 	sts	0x0469, r24	; 0x800469 <g_showData+0x33>
    31d8:	60 93 6a 04 	sts	0x046A, r22	; 0x80046a <g_showData+0x34>
    31dc:	40 93 6b 04 	sts	0x046B, r20	; 0x80046b <g_showData+0x35>
    31e0:	08 95       	ret

000031e2 <isr_lcd_10mhz_ref_osc_show_sat_dop>:
    31e2:	20 91 58 04 	lds	r18, 0x0458	; 0x800458 <g_showData+0x22>
    31e6:	30 91 59 04 	lds	r19, 0x0459	; 0x800459 <g_showData+0x23>
    31ea:	28 17       	cp	r18, r24
    31ec:	39 07       	cpc	r19, r25
    31ee:	49 f0       	breq	.+18     	; 0x3202 <isr_lcd_10mhz_ref_osc_show_sat_dop+0x20>
    31f0:	20 91 36 04 	lds	r18, 0x0436	; 0x800436 <g_showData>
    31f4:	20 68       	ori	r18, 0x80	; 128
    31f6:	20 93 36 04 	sts	0x0436, r18	; 0x800436 <g_showData>
    31fa:	90 93 59 04 	sts	0x0459, r25	; 0x800459 <g_showData+0x23>
    31fe:	80 93 58 04 	sts	0x0458, r24	; 0x800458 <g_showData+0x22>
    3202:	08 95       	ret

00003204 <isr_lcd_10mhz_ref_osc_show_pos_state>:
    3204:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <g_showData+0x36>
    3208:	98 13       	cpse	r25, r24
    320a:	04 c0       	rjmp	.+8      	; 0x3214 <isr_lcd_10mhz_ref_osc_show_pos_state+0x10>
    320c:	90 91 6d 04 	lds	r25, 0x046D	; 0x80046d <g_showData+0x37>
    3210:	96 17       	cp	r25, r22
    3212:	49 f0       	breq	.+18     	; 0x3226 <isr_lcd_10mhz_ref_osc_show_pos_state+0x22>
    3214:	90 91 37 04 	lds	r25, 0x0437	; 0x800437 <g_showData+0x1>
    3218:	91 60       	ori	r25, 0x01	; 1
    321a:	90 93 37 04 	sts	0x0437, r25	; 0x800437 <g_showData+0x1>
    321e:	80 93 6c 04 	sts	0x046C, r24	; 0x80046c <g_showData+0x36>
    3222:	60 93 6d 04 	sts	0x046D, r22	; 0x80046d <g_showData+0x37>
    3226:	08 95       	ret

00003228 <isr_lcd_10mhz_ref_osc_show_pos_lat>:
    3228:	90 91 6e 04 	lds	r25, 0x046E	; 0x80046e <g_showData+0x38>
    322c:	98 13       	cpse	r25, r24
    322e:	0f c0       	rjmp	.+30     	; 0x324e <isr_lcd_10mhz_ref_osc_show_pos_lat+0x26>
    3230:	90 91 6f 04 	lds	r25, 0x046F	; 0x80046f <g_showData+0x39>
    3234:	96 13       	cpse	r25, r22
    3236:	0b c0       	rjmp	.+22     	; 0x324e <isr_lcd_10mhz_ref_osc_show_pos_lat+0x26>
    3238:	90 91 70 04 	lds	r25, 0x0470	; 0x800470 <g_showData+0x3a>
    323c:	94 13       	cpse	r25, r20
    323e:	07 c0       	rjmp	.+14     	; 0x324e <isr_lcd_10mhz_ref_osc_show_pos_lat+0x26>
    3240:	e0 91 5a 04 	lds	r30, 0x045A	; 0x80045a <g_showData+0x24>
    3244:	f0 91 5b 04 	lds	r31, 0x045B	; 0x80045b <g_showData+0x25>
    3248:	e2 17       	cp	r30, r18
    324a:	f3 07       	cpc	r31, r19
    324c:	79 f0       	breq	.+30     	; 0x326c <isr_lcd_10mhz_ref_osc_show_pos_lat+0x44>
    324e:	90 91 37 04 	lds	r25, 0x0437	; 0x800437 <g_showData+0x1>
    3252:	92 60       	ori	r25, 0x02	; 2
    3254:	90 93 37 04 	sts	0x0437, r25	; 0x800437 <g_showData+0x1>
    3258:	80 93 6e 04 	sts	0x046E, r24	; 0x80046e <g_showData+0x38>
    325c:	60 93 6f 04 	sts	0x046F, r22	; 0x80046f <g_showData+0x39>
    3260:	40 93 70 04 	sts	0x0470, r20	; 0x800470 <g_showData+0x3a>
    3264:	30 93 5b 04 	sts	0x045B, r19	; 0x80045b <g_showData+0x25>
    3268:	20 93 5a 04 	sts	0x045A, r18	; 0x80045a <g_showData+0x24>
    326c:	08 95       	ret

0000326e <isr_lcd_10mhz_ref_osc_show_pos_lon>:
    326e:	90 91 71 04 	lds	r25, 0x0471	; 0x800471 <g_showData+0x3b>
    3272:	98 13       	cpse	r25, r24
    3274:	0f c0       	rjmp	.+30     	; 0x3294 <isr_lcd_10mhz_ref_osc_show_pos_lon+0x26>
    3276:	90 91 72 04 	lds	r25, 0x0472	; 0x800472 <g_showData+0x3c>
    327a:	96 13       	cpse	r25, r22
    327c:	0b c0       	rjmp	.+22     	; 0x3294 <isr_lcd_10mhz_ref_osc_show_pos_lon+0x26>
    327e:	90 91 73 04 	lds	r25, 0x0473	; 0x800473 <g_showData+0x3d>
    3282:	94 13       	cpse	r25, r20
    3284:	07 c0       	rjmp	.+14     	; 0x3294 <isr_lcd_10mhz_ref_osc_show_pos_lon+0x26>
    3286:	e0 91 5c 04 	lds	r30, 0x045C	; 0x80045c <g_showData+0x26>
    328a:	f0 91 5d 04 	lds	r31, 0x045D	; 0x80045d <g_showData+0x27>
    328e:	e2 17       	cp	r30, r18
    3290:	f3 07       	cpc	r31, r19
    3292:	79 f0       	breq	.+30     	; 0x32b2 <isr_lcd_10mhz_ref_osc_show_pos_lon+0x44>
    3294:	90 91 37 04 	lds	r25, 0x0437	; 0x800437 <g_showData+0x1>
    3298:	94 60       	ori	r25, 0x04	; 4
    329a:	90 93 37 04 	sts	0x0437, r25	; 0x800437 <g_showData+0x1>
    329e:	80 93 71 04 	sts	0x0471, r24	; 0x800471 <g_showData+0x3b>
    32a2:	60 93 72 04 	sts	0x0472, r22	; 0x800472 <g_showData+0x3c>
    32a6:	40 93 73 04 	sts	0x0473, r20	; 0x800473 <g_showData+0x3d>
    32aa:	30 93 5d 04 	sts	0x045D, r19	; 0x80045d <g_showData+0x27>
    32ae:	20 93 5c 04 	sts	0x045C, r18	; 0x80045c <g_showData+0x26>
    32b2:	08 95       	ret

000032b4 <isr_lcd_10mhz_ref_osc_show_pos_height>:
    32b4:	20 91 5e 04 	lds	r18, 0x045E	; 0x80045e <g_showData+0x28>
    32b8:	30 91 5f 04 	lds	r19, 0x045F	; 0x80045f <g_showData+0x29>
    32bc:	28 17       	cp	r18, r24
    32be:	39 07       	cpc	r19, r25
    32c0:	21 f4       	brne	.+8      	; 0x32ca <isr_lcd_10mhz_ref_osc_show_pos_height+0x16>
    32c2:	20 91 74 04 	lds	r18, 0x0474	; 0x800474 <g_showData+0x3e>
    32c6:	26 17       	cp	r18, r22
    32c8:	59 f0       	breq	.+22     	; 0x32e0 <isr_lcd_10mhz_ref_osc_show_pos_height+0x2c>
    32ca:	20 91 37 04 	lds	r18, 0x0437	; 0x800437 <g_showData+0x1>
    32ce:	28 60       	ori	r18, 0x08	; 8
    32d0:	20 93 37 04 	sts	0x0437, r18	; 0x800437 <g_showData+0x1>
    32d4:	90 93 5f 04 	sts	0x045F, r25	; 0x80045f <g_showData+0x29>
    32d8:	80 93 5e 04 	sts	0x045E, r24	; 0x80045e <g_showData+0x28>
    32dc:	60 93 74 04 	sts	0x0474, r22	; 0x800474 <g_showData+0x3e>
    32e0:	08 95       	ret

000032e2 <lcd_get_sysfont>:
    32e2:	83 e0       	ldi	r24, 0x03	; 3
    32e4:	91 e0       	ldi	r25, 0x01	; 1
    32e6:	08 95       	ret

000032e8 <lcd_init>:
    32e8:	82 ee       	ldi	r24, 0xE2	; 226
    32ea:	0e 94 9d 0c 	call	0x193a	; 0x193a <lcd_bus_write_cmd>
    32ee:	6b e2       	ldi	r22, 0x2B	; 43
    32f0:	78 e6       	ldi	r23, 0x68	; 104
    32f2:	80 e0       	ldi	r24, 0x00	; 0
    32f4:	90 e0       	ldi	r25, 0x00	; 0
    32f6:	0e 94 86 0c 	call	0x190c	; 0x190c <__portable_avr_delay_cycles>
    32fa:	0e 94 91 0c 	call	0x1922	; 0x1922 <lcd_bus_read_status>
    32fe:	87 fd       	sbrc	r24, 7
    3300:	06 c0       	rjmp	.+12     	; 0x330e <lcd_init+0x26>
    3302:	0e 94 d3 0c 	call	0x19a6	; 0x19a6 <lcd_enable.part.0>
    3306:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <lcd_cls>
    330a:	80 e0       	ldi	r24, 0x00	; 0
    330c:	08 95       	ret
    330e:	81 e0       	ldi	r24, 0x01	; 1
    3310:	08 95       	ret

00003312 <isr_lcd_set_mode>:
    3312:	80 93 35 04 	sts	0x0435, r24	; 0x800435 <g_SmartLCD_mode>
    3316:	88 23       	and	r24, r24
    3318:	31 f0       	breq	.+12     	; 0x3326 <isr_lcd_set_mode+0x14>
    331a:	80 91 75 04 	lds	r24, 0x0475	; 0x800475 <g_status>
    331e:	8e 7f       	andi	r24, 0xFE	; 254
    3320:	80 93 75 04 	sts	0x0475, r24	; 0x800475 <g_status>
    3324:	08 95       	ret
    3326:	e0 df       	rcall	.-64     	; 0x32e8 <lcd_init>
    3328:	81 ef       	ldi	r24, 0xF1	; 241
    332a:	af cb       	rjmp	.-2210   	; 0x2a8a <lcd_test>

0000332c <lcd_shutdown>:
    332c:	82 ee       	ldi	r24, 0xE2	; 226
    332e:	0e 94 9d 0c 	call	0x193a	; 0x193a <lcd_bus_write_cmd>
    3332:	6b e6       	ldi	r22, 0x6B	; 107
    3334:	7a e0       	ldi	r23, 0x0A	; 10
    3336:	80 e0       	ldi	r24, 0x00	; 0
    3338:	90 e0       	ldi	r25, 0x00	; 0
    333a:	0c 94 86 0c 	jmp	0x190c	; 0x190c <__portable_avr_delay_cycles>

0000333e <s_twi_tx_done>:
#endif

static void s_twi_tx_done(void)
{
	// Called when  s_tx_lock == 0
	if (s_tx_next_len) {
    333e:	e0 91 2f 04 	lds	r30, 0x042F	; 0x80042f <s_tx_next_len>
    3342:	ee 23       	and	r30, r30
    3344:	51 f0       	breq	.+20     	; 0x335a <s_twi_tx_done+0x1c>
    3346:	f0 e0       	ldi	r31, 0x00	; 0
    3348:	e8 5d       	subi	r30, 0xD8	; 216
    334a:	fb 4f       	sbci	r31, 0xFB	; 251
		// Load	next master message
		for (int idx = s_tx_next_len; idx >= 0; --idx) {
			s_tx_d[idx] = s_tx_next_d[idx];
    334c:	12 92       	st	-Z, r1
static void s_twi_tx_done(void)
{
	// Called when  s_tx_lock == 0
	if (s_tx_next_len) {
		// Load	next master message
		for (int idx = s_tx_next_len; idx >= 0; --idx) {
    334e:	84 e0       	ldi	r24, 0x04	; 4
    3350:	e7 32       	cpi	r30, 0x27	; 39
    3352:	f8 07       	cpc	r31, r24
    3354:	d9 f7       	brne	.-10     	; 0x334c <s_twi_tx_done+0xe>
			s_tx_d[idx] = s_tx_next_d[idx];
		}
		s_tx_len = s_tx_next_len;
		s_tx_next_len = 0;
    3356:	10 92 2f 04 	sts	0x042F, r1	; 0x80042f <s_tx_next_len>
    335a:	08 95       	ret

0000335c <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2>:
	uint8_t err = 1;
	// TODO: implementation
	return err;
}

static void s_isr_twi_rcvd_command_closed_form(uint8_t data[], uint8_t cnt)
    335c:	8f 92       	push	r8
    335e:	af 92       	push	r10
    3360:	cf 92       	push	r12
    3362:	ef 92       	push	r14
    3364:	0f 93       	push	r16
				// do nothing
			}
		}
	}  // if (isGCA)

	else if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD)) {
    3366:	80 91 17 04 	lds	r24, 0x0417	; 0x800417 <s_rx_d>
    336a:	82 32       	cpi	r24, 0x22	; 34
    336c:	09 f0       	breq	.+2      	; 0x3370 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x14>
    336e:	4d c2       	rjmp	.+1178   	; 0x380a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
}

static void s_isr_twi_rcvd_command_closed_form(uint8_t data[], uint8_t cnt)
{
	uint8_t isGCA	= !data[0];
	uint8_t cmd		=  data[1];
    3370:	e0 91 18 04 	lds	r30, 0x0418	; 0x800418 <s_rx_d+0x1>
		}
	}  // if (isGCA)

	else if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD)) {
		/* unique command section for all modes */
		switch (cmd) {
    3374:	e2 30       	cpi	r30, 0x02	; 2
    3376:	51 f0       	breq	.+20     	; 0x338c <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x30>
    3378:	e3 30       	cpi	r30, 0x03	; 3
    337a:	81 f0       	breq	.+32     	; 0x339c <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x40>
    337c:	e1 30       	cpi	r30, 0x01	; 1
    337e:	d9 f4       	brne	.+54     	; 0x33b6 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x5a>
			case TWI_SMART_LCD_CMD_GET_VER:
			s_rx_ret_d[0] = VERSION;
    3380:	81 e1       	ldi	r24, 0x11	; 17
    3382:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <s_rx_ret_d>
			s_rx_ret_len = 1;
    3386:	e0 93 14 04 	sts	0x0414, r30	; 0x800414 <s_rx_ret_len>
    338a:	3f c2       	rjmp	.+1150   	; 0x380a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
			return;

			case TWI_SMART_LCD_CMD_SET_MODE:
			isr_lcd_set_mode(data[2]);
    338c:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <s_rx_d+0x2>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3390:	0f 91       	pop	r16
    3392:	ef 90       	pop	r14
    3394:	cf 90       	pop	r12
    3396:	af 90       	pop	r10
			s_rx_ret_d[0] = VERSION;
			s_rx_ret_len = 1;
			return;

			case TWI_SMART_LCD_CMD_SET_MODE:
			isr_lcd_set_mode(data[2]);
    3398:	8f 90       	pop	r8
			return;

			case TWI_SMART_LCD_CMD_GET_STATE:
			s_rx_ret_d[0] = g_showData.cmd ?  0x81 : 0x80;		// (Valid << 7) | (Busy << 0)
    339a:	bb cf       	rjmp	.-138    	; 0x3312 <isr_lcd_set_mode>
    339c:	80 91 38 04 	lds	r24, 0x0438	; 0x800438 <g_showData+0x2>
    33a0:	88 23       	and	r24, r24
    33a2:	11 f0       	breq	.+4      	; 0x33a8 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4c>
    33a4:	81 e8       	ldi	r24, 0x81	; 129
    33a6:	01 c0       	rjmp	.+2      	; 0x33aa <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4e>
    33a8:	80 e8       	ldi	r24, 0x80	; 128
    33aa:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <s_rx_ret_d>
			s_rx_ret_len = 1;
    33ae:	81 e0       	ldi	r24, 0x01	; 1
    33b0:	80 93 14 04 	sts	0x0414, r24	; 0x800414 <s_rx_ret_len>
			return;

			default:
			s_rx_ret_len = 0;
    33b4:	2a c2       	rjmp	.+1108   	; 0x380a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    33b6:	10 92 14 04 	sts	0x0414, r1	; 0x800414 <s_rx_ret_len>
		}

		if (g_SmartLCD_mode == C_SMART_LCD_MODE_SMARTLCD) {
    33ba:	80 91 35 04 	lds	r24, 0x0435	; 0x800435 <g_SmartLCD_mode>
    33be:	80 31       	cpi	r24, 0x10	; 16
    33c0:	09 f0       	breq	.+2      	; 0x33c4 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x68>
			if (!(g_showData.cmd)) {							// Do when no command in process only
    33c2:	7a c1       	rjmp	.+756    	; 0x36b8 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x35c>
    33c4:	80 91 38 04 	lds	r24, 0x0438	; 0x800438 <g_showData+0x2>
    33c8:	81 11       	cpse	r24, r1
				switch (cmd) {
    33ca:	1f c2       	rjmp	.+1086   	; 0x380a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    33cc:	e2 33       	cpi	r30, 0x32	; 50
    33ce:	09 f4       	brne	.+2      	; 0x33d2 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x76>
    33d0:	5e c1       	rjmp	.+700    	; 0x368e <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x332>
    33d2:	90 f4       	brcc	.+36     	; 0x33f8 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x9c>
    33d4:	e4 31       	cpi	r30, 0x14	; 20
    33d6:	39 f1       	breq	.+78     	; 0x3426 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xca>
    33d8:	50 f4       	brcc	.+20     	; 0x33ee <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x92>
    33da:	e0 31       	cpi	r30, 0x10	; 16
    33dc:	09 f0       	breq	.+2      	; 0x33e0 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x84>
					case TWI_SMART_LCD_CMD_CLS:					// Clear screen
						isr_smartlcd_cmd(cmd);
    33de:	15 c2       	rjmp	.+1066   	; 0x380a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    33e0:	80 e1       	ldi	r24, 0x10	; 16
    33e2:	0f 91       	pop	r16
    33e4:	ef 90       	pop	r14
    33e6:	cf 90       	pop	r12

		if (g_SmartLCD_mode == C_SMART_LCD_MODE_SMARTLCD) {
			if (!(g_showData.cmd)) {							// Do when no command in process only
				switch (cmd) {
					case TWI_SMART_LCD_CMD_CLS:					// Clear screen
						isr_smartlcd_cmd(cmd);
    33e8:	af 90       	pop	r10
    33ea:	8f 90       	pop	r8
			s_rx_ret_len = 0;
		}

		if (g_SmartLCD_mode == C_SMART_LCD_MODE_SMARTLCD) {
			if (!(g_showData.cmd)) {							// Do when no command in process only
				switch (cmd) {
    33ec:	fd cc       	rjmp	.-1542   	; 0x2de8 <isr_smartlcd_cmd>
    33ee:	e0 32       	cpi	r30, 0x20	; 32
    33f0:	f1 f0       	breq	.+60     	; 0x342e <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xd2>
    33f2:	e0 33       	cpi	r30, 0x30	; 48
    33f4:	11 f1       	breq	.+68     	; 0x343a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xde>
    33f6:	09 c2       	rjmp	.+1042   	; 0x380a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    33f8:	e6 33       	cpi	r30, 0x36	; 54
    33fa:	09 f4       	brne	.+2      	; 0x33fe <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xa2>
    33fc:	4e c1       	rjmp	.+668    	; 0x369a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x33e>
    33fe:	48 f4       	brcc	.+18     	; 0x3412 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xb6>
    3400:	e4 33       	cpi	r30, 0x34	; 52
    3402:	09 f0       	breq	.+2      	; 0x3406 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xaa>
					case TWI_SMART_LCD_CMD_DRAW_LINE:			// Draw line from current pencil position to next position (x, y)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
					break;

					case TWI_SMART_LCD_CMD_DRAW_RECT:			// Draw rectangular frame with pencil's start position with dimension (width, height)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
    3404:	02 c2       	rjmp	.+1028   	; 0x380a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    3406:	40 91 1a 04 	lds	r20, 0x041A	; 0x80041a <s_rx_d+0x3>
    340a:	60 91 19 04 	lds	r22, 0x0419	; 0x800419 <s_rx_d+0x2>
    340e:	84 e3       	ldi	r24, 0x34	; 52
			s_rx_ret_len = 0;
		}

		if (g_SmartLCD_mode == C_SMART_LCD_MODE_SMARTLCD) {
			if (!(g_showData.cmd)) {							// Do when no command in process only
				switch (cmd) {
    3410:	26 c0       	rjmp	.+76     	; 0x345e <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x102>
    3412:	e8 33       	cpi	r30, 0x38	; 56
    3414:	09 f4       	brne	.+2      	; 0x3418 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xbc>
    3416:	47 c1       	rjmp	.+654    	; 0x36a6 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x34a>
    3418:	ea 33       	cpi	r30, 0x3A	; 58
    341a:	09 f0       	breq	.+2      	; 0x341e <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xc2>
					case TWI_SMART_LCD_CMD_DRAW_CIRC:			// Draw circle or ellipse from the pencil's center point with (radius)
						isr_smartlcd_cmd_data1(cmd, data[2]);
					break;

					case TWI_SMART_LCD_CMD_DRAW_FILLED_CIRC:	// Draw filled circle or ellipse from the pencil's center point with (radius)
						isr_smartlcd_cmd_data1(cmd, data[2]);
    341c:	f6 c1       	rjmp	.+1004   	; 0x380a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    341e:	60 91 19 04 	lds	r22, 0x0419	; 0x800419 <s_rx_d+0x2>
    3422:	8a e3       	ldi	r24, 0x3A	; 58
					case TWI_SMART_LCD_CMD_CLS:					// Clear screen
						isr_smartlcd_cmd(cmd);
					break;

					case TWI_SMART_LCD_CMD_SET_PIXEL_TYPE:		// Set next pixels (OFF / ON / XOR)
						isr_smartlcd_cmd_data1(cmd, data[2]);
    3424:	43 c1       	rjmp	.+646    	; 0x36ac <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x350>
    3426:	60 91 19 04 	lds	r22, 0x0419	; 0x800419 <s_rx_d+0x2>
    342a:	84 e1       	ldi	r24, 0x14	; 20
					break;

					case TWI_SMART_LCD_CMD_SET_POS_X_Y:			// Set pencil position (x, y)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
    342c:	3f c1       	rjmp	.+638    	; 0x36ac <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x350>
    342e:	40 91 1a 04 	lds	r20, 0x041A	; 0x80041a <s_rx_d+0x3>
    3432:	60 91 19 04 	lds	r22, 0x0419	; 0x800419 <s_rx_d+0x2>
    3436:	80 e2       	ldi	r24, 0x20	; 32
					break;

					case TWI_SMART_LCD_CMD_WRITE:				// Write text of length (length, buffer...)
					{
						switch (data[2]) {
    3438:	12 c0       	rjmp	.+36     	; 0x345e <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x102>
    343a:	e0 91 19 04 	lds	r30, 0x0419	; 0x800419 <s_rx_d+0x2>
    343e:	8e 2f       	mov	r24, r30
    3440:	90 e0       	ldi	r25, 0x00	; 0
    3442:	fc 01       	movw	r30, r24
    3444:	31 97       	sbiw	r30, 0x01	; 1
    3446:	ed 30       	cpi	r30, 0x0D	; 13
    3448:	f1 05       	cpc	r31, r1
    344a:	08 f0       	brcs	.+2      	; 0x344e <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xf2>
    344c:	de c1       	rjmp	.+956    	; 0x380a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    344e:	ec 5c       	subi	r30, 0xCC	; 204
    3450:	ff 4f       	sbci	r31, 0xFF	; 255
    3452:	0c 94 a2 22 	jmp	0x4544	; 0x4544 <__tablejump2__>
							case 1:
								isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
    3456:	40 91 1a 04 	lds	r20, 0x041A	; 0x80041a <s_rx_d+0x3>
    345a:	61 e0       	ldi	r22, 0x01	; 1
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    345c:	80 e3       	ldi	r24, 0x30	; 48
    345e:	0f 91       	pop	r16
    3460:	ef 90       	pop	r14
    3462:	cf 90       	pop	r12

					case TWI_SMART_LCD_CMD_WRITE:				// Write text of length (length, buffer...)
					{
						switch (data[2]) {
							case 1:
								isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
    3464:	af 90       	pop	r10
    3466:	8f 90       	pop	r8
							break;

							case 2:
								isr_smartlcd_cmd_data3(cmd, data[2], data[3], data[4]);
    3468:	c7 cc       	rjmp	.-1650   	; 0x2df8 <isr_smartlcd_cmd_data2>
    346a:	20 91 1b 04 	lds	r18, 0x041B	; 0x80041b <s_rx_d+0x4>
    346e:	40 91 1a 04 	lds	r20, 0x041A	; 0x80041a <s_rx_d+0x3>
    3472:	62 e0       	ldi	r22, 0x02	; 2
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3474:	80 e3       	ldi	r24, 0x30	; 48
    3476:	0f 91       	pop	r16
    3478:	ef 90       	pop	r14
    347a:	cf 90       	pop	r12
							case 1:
								isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
							break;

							case 2:
								isr_smartlcd_cmd_data3(cmd, data[2], data[3], data[4]);
    347c:	af 90       	pop	r10
    347e:	8f 90       	pop	r8
							break;

							case 3:
								isr_smartlcd_cmd_data4(cmd, data[2], data[3], data[4], data[5]);
    3480:	c1 cc       	rjmp	.-1662   	; 0x2e04 <isr_smartlcd_cmd_data3>
    3482:	00 91 1c 04 	lds	r16, 0x041C	; 0x80041c <s_rx_d+0x5>
    3486:	20 91 1b 04 	lds	r18, 0x041B	; 0x80041b <s_rx_d+0x4>
    348a:	40 91 1a 04 	lds	r20, 0x041A	; 0x80041a <s_rx_d+0x3>
    348e:	63 e0       	ldi	r22, 0x03	; 3
    3490:	80 e3       	ldi	r24, 0x30	; 48
    3492:	bf dc       	rcall	.-1666   	; 0x2e12 <isr_smartlcd_cmd_data4>
							break;

							case 4:
								isr_smartlcd_cmd_data5(cmd, data[2], data[3], data[4], data[5], data[6]);
    3494:	ba c1       	rjmp	.+884    	; 0x380a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    3496:	e0 90 1d 04 	lds	r14, 0x041D	; 0x80041d <s_rx_d+0x6>
    349a:	00 91 1c 04 	lds	r16, 0x041C	; 0x80041c <s_rx_d+0x5>
    349e:	20 91 1b 04 	lds	r18, 0x041B	; 0x80041b <s_rx_d+0x4>
    34a2:	40 91 1a 04 	lds	r20, 0x041A	; 0x80041a <s_rx_d+0x3>
    34a6:	64 e0       	ldi	r22, 0x04	; 4
    34a8:	80 e3       	ldi	r24, 0x30	; 48
    34aa:	bd dc       	rcall	.-1670   	; 0x2e26 <isr_smartlcd_cmd_data5>
							break;

							case 5:
								isr_smartlcd_cmd_data6(cmd, data[2], data[3], data[4], data[5], data[6], data[7]);
    34ac:	ae c1       	rjmp	.+860    	; 0x380a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    34ae:	c0 90 1e 04 	lds	r12, 0x041E	; 0x80041e <s_rx_d+0x7>
    34b2:	e0 90 1d 04 	lds	r14, 0x041D	; 0x80041d <s_rx_d+0x6>
    34b6:	00 91 1c 04 	lds	r16, 0x041C	; 0x80041c <s_rx_d+0x5>
    34ba:	20 91 1b 04 	lds	r18, 0x041B	; 0x80041b <s_rx_d+0x4>
    34be:	40 91 1a 04 	lds	r20, 0x041A	; 0x80041a <s_rx_d+0x3>
    34c2:	65 e0       	ldi	r22, 0x05	; 5
    34c4:	80 e3       	ldi	r24, 0x30	; 48
    34c6:	bc dc       	rcall	.-1672   	; 0x2e40 <isr_smartlcd_cmd_data6>
							break;

							case 6:
								isr_smartlcd_cmd_data7(cmd, data[2], data[3], data[4], data[5], data[6], data[7], data[8]);
    34c8:	a0 c1       	rjmp	.+832    	; 0x380a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    34ca:	a0 90 1f 04 	lds	r10, 0x041F	; 0x80041f <s_rx_d+0x8>
    34ce:	c0 90 1e 04 	lds	r12, 0x041E	; 0x80041e <s_rx_d+0x7>
    34d2:	e0 90 1d 04 	lds	r14, 0x041D	; 0x80041d <s_rx_d+0x6>
    34d6:	00 91 1c 04 	lds	r16, 0x041C	; 0x80041c <s_rx_d+0x5>
    34da:	20 91 1b 04 	lds	r18, 0x041B	; 0x80041b <s_rx_d+0x4>
    34de:	40 91 1a 04 	lds	r20, 0x041A	; 0x80041a <s_rx_d+0x3>
    34e2:	66 e0       	ldi	r22, 0x06	; 6
    34e4:	80 e3       	ldi	r24, 0x30	; 48
    34e6:	bc dc       	rcall	.-1672   	; 0x2e60 <isr_smartlcd_cmd_data7>
							break;

							case 7:
								isr_smartlcd_cmd_data8(cmd, data[2], data[3], data[4], data[5], data[6], data[7], data[8], data[9]);
    34e8:	90 c1       	rjmp	.+800    	; 0x380a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    34ea:	80 90 20 04 	lds	r8, 0x0420	; 0x800420 <s_rx_d+0x9>
    34ee:	a0 90 1f 04 	lds	r10, 0x041F	; 0x80041f <s_rx_d+0x8>
    34f2:	c0 90 1e 04 	lds	r12, 0x041E	; 0x80041e <s_rx_d+0x7>
    34f6:	e0 90 1d 04 	lds	r14, 0x041D	; 0x80041d <s_rx_d+0x6>
    34fa:	00 91 1c 04 	lds	r16, 0x041C	; 0x80041c <s_rx_d+0x5>
    34fe:	20 91 1b 04 	lds	r18, 0x041B	; 0x80041b <s_rx_d+0x4>
    3502:	40 91 1a 04 	lds	r20, 0x041A	; 0x80041a <s_rx_d+0x3>
    3506:	67 e0       	ldi	r22, 0x07	; 7
    3508:	80 e3       	ldi	r24, 0x30	; 48
    350a:	bd dc       	rcall	.-1670   	; 0x2e86 <isr_smartlcd_cmd_data8>
							break;

							case 8:
								isr_smartlcd_cmd_data9(cmd, data[2], data[3], data[4], data[5], data[6], data[7], data[8], data[9], data[10]);
    350c:	7e c1       	rjmp	.+764    	; 0x380a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    350e:	80 91 21 04 	lds	r24, 0x0421	; 0x800421 <s_rx_d+0xa>
    3512:	8f 93       	push	r24
    3514:	80 90 20 04 	lds	r8, 0x0420	; 0x800420 <s_rx_d+0x9>
    3518:	a0 90 1f 04 	lds	r10, 0x041F	; 0x80041f <s_rx_d+0x8>
    351c:	c0 90 1e 04 	lds	r12, 0x041E	; 0x80041e <s_rx_d+0x7>
    3520:	e0 90 1d 04 	lds	r14, 0x041D	; 0x80041d <s_rx_d+0x6>
    3524:	00 91 1c 04 	lds	r16, 0x041C	; 0x80041c <s_rx_d+0x5>
    3528:	20 91 1b 04 	lds	r18, 0x041B	; 0x80041b <s_rx_d+0x4>
    352c:	40 91 1a 04 	lds	r20, 0x041A	; 0x80041a <s_rx_d+0x3>
    3530:	68 e0       	ldi	r22, 0x08	; 8
    3532:	80 e3       	ldi	r24, 0x30	; 48
    3534:	c4 dc       	rcall	.-1656   	; 0x2ebe <isr_smartlcd_cmd_data9>
    3536:	0f 90       	pop	r0
							break;

							case 9:
								isr_smartlcd_cmd_data10(cmd, data[2], data[3], data[4], data[5], data[6], data[7], data[8], data[9], data[10], data[11]);
    3538:	68 c1       	rjmp	.+720    	; 0x380a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    353a:	80 91 22 04 	lds	r24, 0x0422	; 0x800422 <s_rx_d+0xb>
    353e:	8f 93       	push	r24
    3540:	80 91 21 04 	lds	r24, 0x0421	; 0x800421 <s_rx_d+0xa>
    3544:	8f 93       	push	r24
    3546:	80 90 20 04 	lds	r8, 0x0420	; 0x800420 <s_rx_d+0x9>
    354a:	a0 90 1f 04 	lds	r10, 0x041F	; 0x80041f <s_rx_d+0x8>
    354e:	c0 90 1e 04 	lds	r12, 0x041E	; 0x80041e <s_rx_d+0x7>
    3552:	e0 90 1d 04 	lds	r14, 0x041D	; 0x80041d <s_rx_d+0x6>
    3556:	00 91 1c 04 	lds	r16, 0x041C	; 0x80041c <s_rx_d+0x5>
    355a:	20 91 1b 04 	lds	r18, 0x041B	; 0x80041b <s_rx_d+0x4>
    355e:	40 91 1a 04 	lds	r20, 0x041A	; 0x80041a <s_rx_d+0x3>
    3562:	69 e0       	ldi	r22, 0x09	; 9
    3564:	80 e3       	ldi	r24, 0x30	; 48
    3566:	c9 dc       	rcall	.-1646   	; 0x2efa <isr_smartlcd_cmd_data10>
    3568:	0f 90       	pop	r0
    356a:	0f 90       	pop	r0
							break;

							case 10:
								isr_smartlcd_cmd_data11(cmd, data[2], data[3], data[4], data[5], data[6], data[7], data[8], data[9], data[10], data[11], data[12]);
    356c:	4e c1       	rjmp	.+668    	; 0x380a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    356e:	80 91 23 04 	lds	r24, 0x0423	; 0x800423 <s_rx_d+0xc>
    3572:	8f 93       	push	r24
    3574:	80 91 22 04 	lds	r24, 0x0422	; 0x800422 <s_rx_d+0xb>
    3578:	8f 93       	push	r24
    357a:	80 91 21 04 	lds	r24, 0x0421	; 0x800421 <s_rx_d+0xa>
    357e:	8f 93       	push	r24
    3580:	80 90 20 04 	lds	r8, 0x0420	; 0x800420 <s_rx_d+0x9>
    3584:	a0 90 1f 04 	lds	r10, 0x041F	; 0x80041f <s_rx_d+0x8>
    3588:	c0 90 1e 04 	lds	r12, 0x041E	; 0x80041e <s_rx_d+0x7>
    358c:	e0 90 1d 04 	lds	r14, 0x041D	; 0x80041d <s_rx_d+0x6>
    3590:	00 91 1c 04 	lds	r16, 0x041C	; 0x80041c <s_rx_d+0x5>
    3594:	20 91 1b 04 	lds	r18, 0x041B	; 0x80041b <s_rx_d+0x4>
    3598:	40 91 1a 04 	lds	r20, 0x041A	; 0x80041a <s_rx_d+0x3>
    359c:	6a e0       	ldi	r22, 0x0A	; 10
    359e:	80 e3       	ldi	r24, 0x30	; 48
    35a0:	cc dc       	rcall	.-1640   	; 0x2f3a <isr_smartlcd_cmd_data11>
    35a2:	0f 90       	pop	r0
    35a4:	0f 90       	pop	r0
    35a6:	0f 90       	pop	r0
							break;

							case 11:
								isr_smartlcd_cmd_data12(cmd, data[2], data[3], data[4], data[5], data[6], data[7], data[8], data[9], data[10], data[11], data[12], data[13]);
    35a8:	30 c1       	rjmp	.+608    	; 0x380a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    35aa:	80 91 24 04 	lds	r24, 0x0424	; 0x800424 <s_rx_d+0xd>
    35ae:	8f 93       	push	r24
    35b0:	80 91 23 04 	lds	r24, 0x0423	; 0x800423 <s_rx_d+0xc>
    35b4:	8f 93       	push	r24
    35b6:	80 91 22 04 	lds	r24, 0x0422	; 0x800422 <s_rx_d+0xb>
    35ba:	8f 93       	push	r24
    35bc:	80 91 21 04 	lds	r24, 0x0421	; 0x800421 <s_rx_d+0xa>
    35c0:	8f 93       	push	r24
    35c2:	80 90 20 04 	lds	r8, 0x0420	; 0x800420 <s_rx_d+0x9>
    35c6:	a0 90 1f 04 	lds	r10, 0x041F	; 0x80041f <s_rx_d+0x8>
    35ca:	c0 90 1e 04 	lds	r12, 0x041E	; 0x80041e <s_rx_d+0x7>
    35ce:	e0 90 1d 04 	lds	r14, 0x041D	; 0x80041d <s_rx_d+0x6>
    35d2:	00 91 1c 04 	lds	r16, 0x041C	; 0x80041c <s_rx_d+0x5>
    35d6:	20 91 1b 04 	lds	r18, 0x041B	; 0x80041b <s_rx_d+0x4>
    35da:	40 91 1a 04 	lds	r20, 0x041A	; 0x80041a <s_rx_d+0x3>
    35de:	6b e0       	ldi	r22, 0x0B	; 11
    35e0:	80 e3       	ldi	r24, 0x30	; 48
    35e2:	cd dc       	rcall	.-1638   	; 0x2f7e <isr_smartlcd_cmd_data12>
    35e4:	0f 90       	pop	r0
    35e6:	0f 90       	pop	r0
    35e8:	0f 90       	pop	r0
    35ea:	0f 90       	pop	r0
							break;

							case 12:
								isr_smartlcd_cmd_data13(cmd, data[2], data[3], data[4], data[5], data[6], data[7], data[8], data[9], data[10], data[11], data[12], data[13], data[14]);
    35ec:	0e c1       	rjmp	.+540    	; 0x380a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    35ee:	80 91 25 04 	lds	r24, 0x0425	; 0x800425 <s_rx_d+0xe>
    35f2:	8f 93       	push	r24
    35f4:	80 91 24 04 	lds	r24, 0x0424	; 0x800424 <s_rx_d+0xd>
    35f8:	8f 93       	push	r24
    35fa:	80 91 23 04 	lds	r24, 0x0423	; 0x800423 <s_rx_d+0xc>
    35fe:	8f 93       	push	r24
    3600:	80 91 22 04 	lds	r24, 0x0422	; 0x800422 <s_rx_d+0xb>
    3604:	8f 93       	push	r24
    3606:	80 91 21 04 	lds	r24, 0x0421	; 0x800421 <s_rx_d+0xa>
    360a:	8f 93       	push	r24
    360c:	80 90 20 04 	lds	r8, 0x0420	; 0x800420 <s_rx_d+0x9>
    3610:	a0 90 1f 04 	lds	r10, 0x041F	; 0x80041f <s_rx_d+0x8>
    3614:	c0 90 1e 04 	lds	r12, 0x041E	; 0x80041e <s_rx_d+0x7>
    3618:	e0 90 1d 04 	lds	r14, 0x041D	; 0x80041d <s_rx_d+0x6>
    361c:	00 91 1c 04 	lds	r16, 0x041C	; 0x80041c <s_rx_d+0x5>
    3620:	20 91 1b 04 	lds	r18, 0x041B	; 0x80041b <s_rx_d+0x4>
    3624:	40 91 1a 04 	lds	r20, 0x041A	; 0x80041a <s_rx_d+0x3>
    3628:	6c e0       	ldi	r22, 0x0C	; 12
    362a:	80 e3       	ldi	r24, 0x30	; 48
    362c:	cc dc       	rcall	.-1640   	; 0x2fc6 <isr_smartlcd_cmd_data13>
    362e:	0f 90       	pop	r0
    3630:	0f 90       	pop	r0
    3632:	0f 90       	pop	r0
    3634:	0f 90       	pop	r0
    3636:	0f 90       	pop	r0
							break;

							case 13:
								isr_smartlcd_cmd_data14(cmd, data[2], data[3], data[4], data[5], data[6], data[7], data[8], data[9], data[10], data[11], data[12], data[13], data[14], data[15]);
    3638:	e8 c0       	rjmp	.+464    	; 0x380a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    363a:	80 91 26 04 	lds	r24, 0x0426	; 0x800426 <s_rx_d+0xf>
    363e:	8f 93       	push	r24
    3640:	80 91 25 04 	lds	r24, 0x0425	; 0x800425 <s_rx_d+0xe>
    3644:	8f 93       	push	r24
    3646:	80 91 24 04 	lds	r24, 0x0424	; 0x800424 <s_rx_d+0xd>
    364a:	8f 93       	push	r24
    364c:	80 91 23 04 	lds	r24, 0x0423	; 0x800423 <s_rx_d+0xc>
    3650:	8f 93       	push	r24
    3652:	80 91 22 04 	lds	r24, 0x0422	; 0x800422 <s_rx_d+0xb>
    3656:	8f 93       	push	r24
    3658:	80 91 21 04 	lds	r24, 0x0421	; 0x800421 <s_rx_d+0xa>
    365c:	8f 93       	push	r24
    365e:	80 90 20 04 	lds	r8, 0x0420	; 0x800420 <s_rx_d+0x9>
    3662:	a0 90 1f 04 	lds	r10, 0x041F	; 0x80041f <s_rx_d+0x8>
    3666:	c0 90 1e 04 	lds	r12, 0x041E	; 0x80041e <s_rx_d+0x7>
    366a:	e0 90 1d 04 	lds	r14, 0x041D	; 0x80041d <s_rx_d+0x6>
    366e:	00 91 1c 04 	lds	r16, 0x041C	; 0x80041c <s_rx_d+0x5>
    3672:	20 91 1b 04 	lds	r18, 0x041B	; 0x80041b <s_rx_d+0x4>
    3676:	40 91 1a 04 	lds	r20, 0x041A	; 0x80041a <s_rx_d+0x3>
    367a:	6d e0       	ldi	r22, 0x0D	; 13
    367c:	80 e3       	ldi	r24, 0x30	; 48
    367e:	c9 dc       	rcall	.-1646   	; 0x3012 <isr_smartlcd_cmd_data14>
    3680:	0f 90       	pop	r0
    3682:	0f 90       	pop	r0
    3684:	0f 90       	pop	r0
    3686:	0f 90       	pop	r0
    3688:	0f 90       	pop	r0
    368a:	0f 90       	pop	r0
						}  // switch (data[2])
					}
					break;

					case TWI_SMART_LCD_CMD_DRAW_LINE:			// Draw line from current pencil position to next position (x, y)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
    368c:	be c0       	rjmp	.+380    	; 0x380a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    368e:	40 91 1a 04 	lds	r20, 0x041A	; 0x80041a <s_rx_d+0x3>
    3692:	60 91 19 04 	lds	r22, 0x0419	; 0x800419 <s_rx_d+0x2>
					case TWI_SMART_LCD_CMD_DRAW_RECT:			// Draw rectangular frame with pencil's start position with dimension (width, height)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
					break;

					case TWI_SMART_LCD_CMD_DRAW_FILLED_RECT:	// Draw filled rectangular frame with pencil's start position with dimension (width, height)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
    3696:	82 e3       	ldi	r24, 0x32	; 50
    3698:	e2 ce       	rjmp	.-572    	; 0x345e <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x102>
    369a:	40 91 1a 04 	lds	r20, 0x041A	; 0x80041a <s_rx_d+0x3>
    369e:	60 91 19 04 	lds	r22, 0x0419	; 0x800419 <s_rx_d+0x2>
					break;

					case TWI_SMART_LCD_CMD_DRAW_CIRC:			// Draw circle or ellipse from the pencil's center point with (radius)
						isr_smartlcd_cmd_data1(cmd, data[2]);
    36a2:	86 e3       	ldi	r24, 0x36	; 54
    36a4:	dc ce       	rjmp	.-584    	; 0x345e <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x102>
    36a6:	60 91 19 04 	lds	r22, 0x0419	; 0x800419 <s_rx_d+0x2>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    36aa:	88 e3       	ldi	r24, 0x38	; 56
    36ac:	0f 91       	pop	r16
    36ae:	ef 90       	pop	r14
					case TWI_SMART_LCD_CMD_DRAW_FILLED_RECT:	// Draw filled rectangular frame with pencil's start position with dimension (width, height)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
					break;

					case TWI_SMART_LCD_CMD_DRAW_CIRC:			// Draw circle or ellipse from the pencil's center point with (radius)
						isr_smartlcd_cmd_data1(cmd, data[2]);
    36b0:	cf 90       	pop	r12
					}
				}  // switch (cmd)
			}  // if (!(g_showData.cmd))
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_SMARTLCD)

		else if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC) {
    36b2:	af 90       	pop	r10
    36b4:	8f 90       	pop	r8
    36b6:	9b cb       	rjmp	.-2250   	; 0x2dee <isr_smartlcd_cmd_data1>
			switch (cmd) {
    36b8:	80 32       	cpi	r24, 0x20	; 32
    36ba:	09 f0       	breq	.+2      	; 0x36be <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x362>
    36bc:	a6 c0       	rjmp	.+332    	; 0x380a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
    36be:	8e 2f       	mov	r24, r30
    36c0:	90 e0       	ldi	r25, 0x00	; 0
    36c2:	fc 01       	movw	r30, r24
    36c4:	e0 58       	subi	r30, 0x80	; 128
    36c6:	f1 09       	sbc	r31, r1
    36c8:	ee 30       	cpi	r30, 0x0E	; 14
    36ca:	f1 05       	cpc	r31, r1
    36cc:	08 f0       	brcs	.+2      	; 0x36d0 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x374>
    36ce:	9d c0       	rjmp	.+314    	; 0x380a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x4ae>
				case TWI_SMART_LCD_CMD_SHOW_CLK_STATE:
					isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100(data[2], (uint16_t) (data[3] | (data[4] << 8)), (int16_t) (data[5] | (data[6] << 8)));
    36d0:	ef 5b       	subi	r30, 0xBF	; 191
    36d2:	ff 4f       	sbci	r31, 0xFF	; 255
    36d4:	37 c7       	rjmp	.+3694   	; 0x4544 <__tablejump2__>
    36d6:	40 91 1c 04 	lds	r20, 0x041C	; 0x80041c <s_rx_d+0x5>
    36da:	50 91 1d 04 	lds	r21, 0x041D	; 0x80041d <s_rx_d+0x6>
    36de:	60 91 1a 04 	lds	r22, 0x041A	; 0x80041a <s_rx_d+0x3>
    36e2:	70 91 1b 04 	lds	r23, 0x041B	; 0x80041b <s_rx_d+0x4>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    36e6:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <s_rx_d+0x2>
    36ea:	0f 91       	pop	r16
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_SMARTLCD)

		else if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC) {
			switch (cmd) {
				case TWI_SMART_LCD_CMD_SHOW_CLK_STATE:
					isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100(data[2], (uint16_t) (data[3] | (data[4] << 8)), (int16_t) (data[5] | (data[6] << 8)));
    36ec:	ef 90       	pop	r14
    36ee:	cf 90       	pop	r12
				break;

				case TWI_SMART_LCD_CMD_SHOW_YEAR_MON_DAY:
					isr_lcd_10mhz_ref_osc_show_date(data[2] | (data[3] << 8), data[4], data[5]);
    36f0:	af 90       	pop	r10
    36f2:	8f 90       	pop	r8
    36f4:	b6 cc       	rjmp	.-1684   	; 0x3062 <isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100>
    36f6:	40 91 1c 04 	lds	r20, 0x041C	; 0x80041c <s_rx_d+0x5>
    36fa:	60 91 1b 04 	lds	r22, 0x041B	; 0x80041b <s_rx_d+0x4>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    36fe:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <s_rx_d+0x2>
    3702:	90 91 1a 04 	lds	r25, 0x041A	; 0x80041a <s_rx_d+0x3>
    3706:	0f 91       	pop	r16
				case TWI_SMART_LCD_CMD_SHOW_CLK_STATE:
					isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100(data[2], (uint16_t) (data[3] | (data[4] << 8)), (int16_t) (data[5] | (data[6] << 8)));
				break;

				case TWI_SMART_LCD_CMD_SHOW_YEAR_MON_DAY:
					isr_lcd_10mhz_ref_osc_show_date(data[2] | (data[3] << 8), data[4], data[5]);
    3708:	ef 90       	pop	r14
    370a:	cf 90       	pop	r12
				break;

				case TWI_SMART_LCD_CMD_SHOW_HR_MIN_SEC:
					isr_lcd_10mhz_ref_osc_show_time(data[2], data[3], data[4]);
    370c:	af 90       	pop	r10
    370e:	8f 90       	pop	r8
    3710:	ca cc       	rjmp	.-1644   	; 0x30a6 <isr_lcd_10mhz_ref_osc_show_date>
    3712:	40 91 1b 04 	lds	r20, 0x041B	; 0x80041b <s_rx_d+0x4>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3716:	60 91 1a 04 	lds	r22, 0x041A	; 0x80041a <s_rx_d+0x3>
    371a:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <s_rx_d+0x2>
				case TWI_SMART_LCD_CMD_SHOW_YEAR_MON_DAY:
					isr_lcd_10mhz_ref_osc_show_date(data[2] | (data[3] << 8), data[4], data[5]);
				break;

				case TWI_SMART_LCD_CMD_SHOW_HR_MIN_SEC:
					isr_lcd_10mhz_ref_osc_show_time(data[2], data[3], data[4]);
    371e:	0f 91       	pop	r16
    3720:	ef 90       	pop	r14
				break;

				case TWI_SMART_LCD_CMD_SHOW_PPB:
					isr_lcd_10mhz_ref_osc_show_ppm((int16_t) (data[2] | (data[3] << 8)), data[4] | (data[5] << 8));
    3722:	cf 90       	pop	r12
    3724:	af 90       	pop	r10
    3726:	8f 90       	pop	r8
    3728:	e1 cc       	rjmp	.-1598   	; 0x30ec <isr_lcd_10mhz_ref_osc_show_time>
    372a:	60 91 1b 04 	lds	r22, 0x041B	; 0x80041b <s_rx_d+0x4>
    372e:	70 91 1c 04 	lds	r23, 0x041C	; 0x80041c <s_rx_d+0x5>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3732:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <s_rx_d+0x2>
    3736:	90 91 1a 04 	lds	r25, 0x041A	; 0x80041a <s_rx_d+0x3>
				case TWI_SMART_LCD_CMD_SHOW_HR_MIN_SEC:
					isr_lcd_10mhz_ref_osc_show_time(data[2], data[3], data[4]);
				break;

				case TWI_SMART_LCD_CMD_SHOW_PPB:
					isr_lcd_10mhz_ref_osc_show_ppm((int16_t) (data[2] | (data[3] << 8)), data[4] | (data[5] << 8));
    373a:	0f 91       	pop	r16
				break;

				case TWI_SMART_LCD_CMD_SHOW_TCXO_PWM:
					isr_lcd_10mhz_ref_osc_show_pwm(data[2], data[3]);
    373c:	ef 90       	pop	r14
    373e:	cf 90       	pop	r12
    3740:	af 90       	pop	r10
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3742:	8f 90       	pop	r8
    3744:	f1 cc       	rjmp	.-1566   	; 0x3128 <isr_lcd_10mhz_ref_osc_show_ppm>
    3746:	60 91 1a 04 	lds	r22, 0x041A	; 0x80041a <s_rx_d+0x3>
    374a:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <s_rx_d+0x2>
				case TWI_SMART_LCD_CMD_SHOW_PPB:
					isr_lcd_10mhz_ref_osc_show_ppm((int16_t) (data[2] | (data[3] << 8)), data[4] | (data[5] << 8));
				break;

				case TWI_SMART_LCD_CMD_SHOW_TCXO_PWM:
					isr_lcd_10mhz_ref_osc_show_pwm(data[2], data[3]);
    374e:	0f 91       	pop	r16
				break;

				case TWI_SMART_LCD_CMD_SHOW_TCXO_VC:
					isr_lcd_10mhz_ref_osc_show_pv(data[2], data[3] | (data[4] << 8));
    3750:	ef 90       	pop	r14
    3752:	cf 90       	pop	r12
    3754:	af 90       	pop	r10
    3756:	8f 90       	pop	r8
    3758:	03 cd       	rjmp	.-1530   	; 0x3160 <isr_lcd_10mhz_ref_osc_show_pwm>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    375a:	60 91 1a 04 	lds	r22, 0x041A	; 0x80041a <s_rx_d+0x3>
    375e:	70 91 1b 04 	lds	r23, 0x041B	; 0x80041b <s_rx_d+0x4>
				case TWI_SMART_LCD_CMD_SHOW_TCXO_PWM:
					isr_lcd_10mhz_ref_osc_show_pwm(data[2], data[3]);
				break;

				case TWI_SMART_LCD_CMD_SHOW_TCXO_VC:
					isr_lcd_10mhz_ref_osc_show_pv(data[2], data[3] | (data[4] << 8));
    3762:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <s_rx_d+0x2>
				break;

				case TWI_SMART_LCD_CMD_SHOW_SATS:
					isr_lcd_10mhz_ref_osc_show_sat_use(data[2], data[3], data[4]);
    3766:	0f 91       	pop	r16
    3768:	ef 90       	pop	r14
    376a:	cf 90       	pop	r12
    376c:	af 90       	pop	r10
    376e:	8f 90       	pop	r8
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3770:	09 cd       	rjmp	.-1518   	; 0x3184 <isr_lcd_10mhz_ref_osc_show_pv>
    3772:	40 91 1b 04 	lds	r20, 0x041B	; 0x80041b <s_rx_d+0x4>
    3776:	60 91 1a 04 	lds	r22, 0x041A	; 0x80041a <s_rx_d+0x3>
				case TWI_SMART_LCD_CMD_SHOW_TCXO_VC:
					isr_lcd_10mhz_ref_osc_show_pv(data[2], data[3] | (data[4] << 8));
				break;

				case TWI_SMART_LCD_CMD_SHOW_SATS:
					isr_lcd_10mhz_ref_osc_show_sat_use(data[2], data[3], data[4]);
    377a:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <s_rx_d+0x2>
				break;

				case TWI_SMART_LCD_CMD_SHOW_DOP:
					isr_lcd_10mhz_ref_osc_show_sat_dop(data[2] | (data[3] << 8));
    377e:	0f 91       	pop	r16
    3780:	ef 90       	pop	r14
    3782:	cf 90       	pop	r12
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3784:	af 90       	pop	r10
    3786:	8f 90       	pop	r8
    3788:	14 cd       	rjmp	.-1496   	; 0x31b2 <isr_lcd_10mhz_ref_osc_show_sat_use>
    378a:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <s_rx_d+0x2>
				case TWI_SMART_LCD_CMD_SHOW_SATS:
					isr_lcd_10mhz_ref_osc_show_sat_use(data[2], data[3], data[4]);
				break;

				case TWI_SMART_LCD_CMD_SHOW_DOP:
					isr_lcd_10mhz_ref_osc_show_sat_dop(data[2] | (data[3] << 8));
    378e:	90 91 1a 04 	lds	r25, 0x041A	; 0x80041a <s_rx_d+0x3>
				break;

				case TWI_SMART_LCD_CMD_SHOW_POS_STATE:
					isr_lcd_10mhz_ref_osc_show_pos_state(data[2], data[3]);
    3792:	0f 91       	pop	r16
    3794:	ef 90       	pop	r14
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3796:	cf 90       	pop	r12
    3798:	af 90       	pop	r10
    379a:	8f 90       	pop	r8
    379c:	22 cd       	rjmp	.-1468   	; 0x31e2 <isr_lcd_10mhz_ref_osc_show_sat_dop>
    379e:	60 91 1a 04 	lds	r22, 0x041A	; 0x80041a <s_rx_d+0x3>
				case TWI_SMART_LCD_CMD_SHOW_DOP:
					isr_lcd_10mhz_ref_osc_show_sat_dop(data[2] | (data[3] << 8));
				break;

				case TWI_SMART_LCD_CMD_SHOW_POS_STATE:
					isr_lcd_10mhz_ref_osc_show_pos_state(data[2], data[3]);
    37a2:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <s_rx_d+0x2>
				break;

				case TWI_SMART_LCD_CMD_SHOW_POS_LAT:
					isr_lcd_10mhz_ref_osc_show_pos_lat(data[2], data[3], data[4], data[5] | (data[6] << 8));
    37a6:	0f 91       	pop	r16
    37a8:	ef 90       	pop	r14
    37aa:	cf 90       	pop	r12
    37ac:	af 90       	pop	r10
    37ae:	8f 90       	pop	r8
    37b0:	29 cd       	rjmp	.-1454   	; 0x3204 <isr_lcd_10mhz_ref_osc_show_pos_state>
    37b2:	20 91 1c 04 	lds	r18, 0x041C	; 0x80041c <s_rx_d+0x5>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    37b6:	30 91 1d 04 	lds	r19, 0x041D	; 0x80041d <s_rx_d+0x6>
    37ba:	40 91 1b 04 	lds	r20, 0x041B	; 0x80041b <s_rx_d+0x4>
    37be:	60 91 1a 04 	lds	r22, 0x041A	; 0x80041a <s_rx_d+0x3>
				case TWI_SMART_LCD_CMD_SHOW_POS_LAT:
					isr_lcd_10mhz_ref_osc_show_pos_lat(data[2], data[3], data[4], data[5] | (data[6] << 8));
				break;

				case TWI_SMART_LCD_CMD_SHOW_POS_LON:
					isr_lcd_10mhz_ref_osc_show_pos_lon(data[2], data[3], data[4], data[5] | (data[6] << 8));
    37c2:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <s_rx_d+0x2>
    37c6:	0f 91       	pop	r16
    37c8:	ef 90       	pop	r14
    37ca:	cf 90       	pop	r12
    37cc:	af 90       	pop	r10
    37ce:	8f 90       	pop	r8
    37d0:	2b cd       	rjmp	.-1450   	; 0x3228 <isr_lcd_10mhz_ref_osc_show_pos_lat>
    37d2:	20 91 1c 04 	lds	r18, 0x041C	; 0x80041c <s_rx_d+0x5>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    37d6:	30 91 1d 04 	lds	r19, 0x041D	; 0x80041d <s_rx_d+0x6>
    37da:	40 91 1b 04 	lds	r20, 0x041B	; 0x80041b <s_rx_d+0x4>
				case TWI_SMART_LCD_CMD_SHOW_POS_LAT:
					isr_lcd_10mhz_ref_osc_show_pos_lat(data[2], data[3], data[4], data[5] | (data[6] << 8));
				break;

				case TWI_SMART_LCD_CMD_SHOW_POS_LON:
					isr_lcd_10mhz_ref_osc_show_pos_lon(data[2], data[3], data[4], data[5] | (data[6] << 8));
    37de:	60 91 1a 04 	lds	r22, 0x041A	; 0x80041a <s_rx_d+0x3>
				break;

				case TWI_SMART_LCD_CMD_SHOW_POS_HEIGHT:
					isr_lcd_10mhz_ref_osc_show_pos_height((data[2] | (data[3] << 8)), data[4]);
    37e2:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <s_rx_d+0x2>
    37e6:	0f 91       	pop	r16
    37e8:	ef 90       	pop	r14
    37ea:	cf 90       	pop	r12
    37ec:	af 90       	pop	r10
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    37ee:	8f 90       	pop	r8
    37f0:	3e cd       	rjmp	.-1412   	; 0x326e <isr_lcd_10mhz_ref_osc_show_pos_lon>
    37f2:	60 91 1b 04 	lds	r22, 0x041B	; 0x80041b <s_rx_d+0x4>
    37f6:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <s_rx_d+0x2>
				case TWI_SMART_LCD_CMD_SHOW_POS_LON:
					isr_lcd_10mhz_ref_osc_show_pos_lon(data[2], data[3], data[4], data[5] | (data[6] << 8));
				break;

				case TWI_SMART_LCD_CMD_SHOW_POS_HEIGHT:
					isr_lcd_10mhz_ref_osc_show_pos_height((data[2] | (data[3] << 8)), data[4]);
    37fa:	90 91 1a 04 	lds	r25, 0x041A	; 0x80041a <s_rx_d+0x3>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    37fe:	0f 91       	pop	r16
    3800:	ef 90       	pop	r14
    3802:	cf 90       	pop	r12
    3804:	af 90       	pop	r10
    3806:	8f 90       	pop	r8
    3808:	55 cd       	rjmp	.-1366   	; 0x32b4 <isr_lcd_10mhz_ref_osc_show_pos_height>
    380a:	0f 91       	pop	r16
    380c:	ef 90       	pop	r14
    380e:	cf 90       	pop	r12
    3810:	af 90       	pop	r10
    3812:	8f 90       	pop	r8
    3814:	08 95       	ret

00003816 <__vector_24__bottom>:


uint8_t __vector_24__bottom(uint8_t tws, uint8_t twd, uint8_t twcr_cur)
{
    3816:	cf 93       	push	r28
    3818:	df 93       	push	r29
    381a:	d6 2f       	mov	r29, r22
	static uint8_t pos_i	= 0;
	static uint8_t pos_o	= 0;
	static uint8_t cnt_i	= 0;
	static uint8_t cnt_o	= 0;
	uint8_t twcr_new = twcr_cur & 0b01000101;
    381c:	c4 2f       	mov	r28, r20
    381e:	c5 74       	andi	r28, 0x45	; 69

	switch(tws) {
    3820:	88 36       	cpi	r24, 0x68	; 104
    3822:	09 f4       	brne	.+2      	; 0x3826 <__vector_24__bottom+0x10>
    3824:	8b c0       	rjmp	.+278    	; 0x393c <__vector_24__bottom+0x126>
    3826:	08 f0       	brcs	.+2      	; 0x382a <__vector_24__bottom+0x14>
    3828:	42 c0       	rjmp	.+132    	; 0x38ae <__vector_24__bottom+0x98>
    382a:	80 33       	cpi	r24, 0x30	; 48
    382c:	09 f4       	brne	.+2      	; 0x3830 <__vector_24__bottom+0x1a>
    382e:	7f c0       	rjmp	.+254    	; 0x392e <__vector_24__bottom+0x118>
    3830:	48 f5       	brcc	.+82     	; 0x3884 <__vector_24__bottom+0x6e>
    3832:	80 31       	cpi	r24, 0x10	; 16
    3834:	09 f4       	brne	.+2      	; 0x3838 <__vector_24__bottom+0x22>
    3836:	66 c0       	rjmp	.+204    	; 0x3904 <__vector_24__bottom+0xee>
    3838:	d8 f4       	brcc	.+54     	; 0x3870 <__vector_24__bottom+0x5a>
    383a:	88 23       	and	r24, r24
    383c:	09 f4       	brne	.+2      	; 0x3840 <__vector_24__bottom+0x2a>
    383e:	61 c1       	rjmp	.+706    	; 0x3b02 <__vector_24__bottom+0x2ec>
    3840:	88 30       	cpi	r24, 0x08	; 8
    3842:	09 f0       	breq	.+2      	; 0x3846 <__vector_24__bottom+0x30>
    3844:	5e c1       	rjmp	.+700    	; 0x3b02 <__vector_24__bottom+0x2ec>

	/* Master Transmitter Mode */

	case TWI_TWSR_START:						// Start condition transmitted
		s_tx_lock = 1;
		pos_o = 0;
    3846:	10 92 13 04 	sts	0x0413, r1	; 0x800413 <pos_o.3088>

		cnt_o = 2;								// TEST
    384a:	82 e0       	ldi	r24, 0x02	; 2
    384c:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <cnt_o.3090>
		s_tx_d[0] = (0x12 << TWD1) | (0b0 << TWD0);	// TEST
    3850:	84 e2       	ldi	r24, 0x24	; 36
    3852:	80 93 27 04 	sts	0x0427, r24	; 0x800427 <s_tx_d>
		s_tx_d[1] = 0x34;						// TEST
    3856:	84 e3       	ldi	r24, 0x34	; 52
    3858:	80 93 28 04 	sts	0x0428, r24	; 0x800428 <s_tx_d+0x1>
		s_tx_d[2] = 0x56;						// TEST
    385c:	86 e5       	ldi	r24, 0x56	; 86
    385e:	80 93 29 04 	sts	0x0429, r24	; 0x800429 <s_tx_d+0x2>
		s_tx_d[3] = 0x78;						// TEST
    3862:	88 e7       	ldi	r24, 0x78	; 120
    3864:	80 93 2a 04 	sts	0x042A, r24	; 0x80042a <s_tx_d+0x3>
		s_tx_d[4] = 0x9a;						// TEST
    3868:	8a e9       	ldi	r24, 0x9A	; 154
    386a:	80 93 2b 04 	sts	0x042B, r24	; 0x80042b <s_tx_d+0x4>
    386e:	4a c0       	rjmp	.+148    	; 0x3904 <__vector_24__bottom+0xee>
	static uint8_t pos_o	= 0;
	static uint8_t cnt_i	= 0;
	static uint8_t cnt_o	= 0;
	uint8_t twcr_new = twcr_cur & 0b01000101;

	switch(tws) {
    3870:	80 32       	cpi	r24, 0x20	; 32
    3872:	09 f4       	brne	.+2      	; 0x3876 <__vector_24__bottom+0x60>
    3874:	5d c0       	rjmp	.+186    	; 0x3930 <__vector_24__bottom+0x11a>
    3876:	88 32       	cpi	r24, 0x28	; 40
    3878:	09 f4       	brne	.+2      	; 0x387c <__vector_24__bottom+0x66>
    387a:	48 c0       	rjmp	.+144    	; 0x390c <__vector_24__bottom+0xf6>
    387c:	88 31       	cpi	r24, 0x18	; 24
    387e:	09 f0       	breq	.+2      	; 0x3882 <__vector_24__bottom+0x6c>
    3880:	40 c1       	rjmp	.+640    	; 0x3b02 <__vector_24__bottom+0x2ec>
    3882:	41 c0       	rjmp	.+130    	; 0x3906 <__vector_24__bottom+0xf0>
    3884:	88 34       	cpi	r24, 0x48	; 72
    3886:	09 f4       	brne	.+2      	; 0x388a <__vector_24__bottom+0x74>
    3888:	57 c0       	rjmp	.+174    	; 0x3938 <__vector_24__bottom+0x122>
    388a:	38 f4       	brcc	.+14     	; 0x389a <__vector_24__bottom+0x84>
    388c:	88 33       	cpi	r24, 0x38	; 56
    388e:	09 f4       	brne	.+2      	; 0x3892 <__vector_24__bottom+0x7c>
    3890:	51 c0       	rjmp	.+162    	; 0x3934 <__vector_24__bottom+0x11e>
    3892:	80 34       	cpi	r24, 0x40	; 64
    3894:	09 f4       	brne	.+2      	; 0x3898 <__vector_24__bottom+0x82>
    3896:	50 c0       	rjmp	.+160    	; 0x3938 <__vector_24__bottom+0x122>
    3898:	34 c1       	rjmp	.+616    	; 0x3b02 <__vector_24__bottom+0x2ec>
    389a:	88 35       	cpi	r24, 0x58	; 88
    389c:	09 f4       	brne	.+2      	; 0x38a0 <__vector_24__bottom+0x8a>
    389e:	4c c0       	rjmp	.+152    	; 0x3938 <__vector_24__bottom+0x122>
    38a0:	80 36       	cpi	r24, 0x60	; 96
    38a2:	09 f4       	brne	.+2      	; 0x38a6 <__vector_24__bottom+0x90>
    38a4:	4b c0       	rjmp	.+150    	; 0x393c <__vector_24__bottom+0x126>
    38a6:	80 35       	cpi	r24, 0x50	; 80
    38a8:	09 f4       	brne	.+2      	; 0x38ac <__vector_24__bottom+0x96>
    38aa:	46 c0       	rjmp	.+140    	; 0x3938 <__vector_24__bottom+0x122>
    38ac:	2a c1       	rjmp	.+596    	; 0x3b02 <__vector_24__bottom+0x2ec>
    38ae:	80 3a       	cpi	r24, 0xA0	; 160
    38b0:	09 f4       	brne	.+2      	; 0x38b4 <__vector_24__bottom+0x9e>
    38b2:	03 c1       	rjmp	.+518    	; 0x3aba <__vector_24__bottom+0x2a4>
    38b4:	a8 f4       	brcc	.+42     	; 0x38e0 <__vector_24__bottom+0xca>
    38b6:	80 38       	cpi	r24, 0x80	; 128
    38b8:	09 f4       	brne	.+2      	; 0x38bc <__vector_24__bottom+0xa6>
    38ba:	4d c0       	rjmp	.+154    	; 0x3956 <__vector_24__bottom+0x140>
    38bc:	38 f4       	brcc	.+14     	; 0x38cc <__vector_24__bottom+0xb6>
    38be:	80 37       	cpi	r24, 0x70	; 112
    38c0:	09 f4       	brne	.+2      	; 0x38c4 <__vector_24__bottom+0xae>
    38c2:	41 c0       	rjmp	.+130    	; 0x3946 <__vector_24__bottom+0x130>
    38c4:	88 37       	cpi	r24, 0x78	; 120
    38c6:	09 f4       	brne	.+2      	; 0x38ca <__vector_24__bottom+0xb4>
    38c8:	3e c0       	rjmp	.+124    	; 0x3946 <__vector_24__bottom+0x130>
    38ca:	1b c1       	rjmp	.+566    	; 0x3b02 <__vector_24__bottom+0x2ec>
    38cc:	80 39       	cpi	r24, 0x90	; 144
    38ce:	09 f4       	brne	.+2      	; 0x38d2 <__vector_24__bottom+0xbc>
    38d0:	42 c0       	rjmp	.+132    	; 0x3956 <__vector_24__bottom+0x140>
    38d2:	88 39       	cpi	r24, 0x98	; 152
    38d4:	09 f4       	brne	.+2      	; 0x38d8 <__vector_24__bottom+0xc2>
    38d6:	e1 c0       	rjmp	.+450    	; 0x3a9a <__vector_24__bottom+0x284>
    38d8:	88 38       	cpi	r24, 0x88	; 136
    38da:	09 f0       	breq	.+2      	; 0x38de <__vector_24__bottom+0xc8>
    38dc:	12 c1       	rjmp	.+548    	; 0x3b02 <__vector_24__bottom+0x2ec>
    38de:	dd c0       	rjmp	.+442    	; 0x3a9a <__vector_24__bottom+0x284>
    38e0:	88 3b       	cpi	r24, 0xB8	; 184
    38e2:	09 f4       	brne	.+2      	; 0x38e6 <__vector_24__bottom+0xd0>
    38e4:	f3 c0       	rjmp	.+486    	; 0x3acc <__vector_24__bottom+0x2b6>
    38e6:	20 f4       	brcc	.+8      	; 0x38f0 <__vector_24__bottom+0xda>
    38e8:	88 3a       	cpi	r24, 0xA8	; 168
    38ea:	09 f4       	brne	.+2      	; 0x38ee <__vector_24__bottom+0xd8>
    38ec:	ef c0       	rjmp	.+478    	; 0x3acc <__vector_24__bottom+0x2b6>
    38ee:	09 c1       	rjmp	.+530    	; 0x3b02 <__vector_24__bottom+0x2ec>
    38f0:	88 3c       	cpi	r24, 0xC8	; 200
    38f2:	09 f4       	brne	.+2      	; 0x38f6 <__vector_24__bottom+0xe0>
    38f4:	04 c1       	rjmp	.+520    	; 0x3afe <__vector_24__bottom+0x2e8>
    38f6:	88 3f       	cpi	r24, 0xF8	; 248
    38f8:	09 f4       	brne	.+2      	; 0x38fc <__vector_24__bottom+0xe6>
    38fa:	03 c1       	rjmp	.+518    	; 0x3b02 <__vector_24__bottom+0x2ec>
    38fc:	80 3c       	cpi	r24, 0xC0	; 192
    38fe:	09 f4       	brne	.+2      	; 0x3902 <__vector_24__bottom+0xec>
    3900:	fe c0       	rjmp	.+508    	; 0x3afe <__vector_24__bottom+0x2e8>
    3902:	ff c0       	rjmp	.+510    	; 0x3b02 <__vector_24__bottom+0x2ec>
		s_tx_d[2] = 0x56;						// TEST
		s_tx_d[3] = 0x78;						// TEST
		s_tx_d[4] = 0x9a;						// TEST
		// fall-through.
	case TWI_TWSR_REPEATEDSTART:				// Repeated start condition transmitted
		nop();
    3904:	00 00       	nop
		// fall-through.
	case TWI_TWSR_M_SLAW_ADDR_ACK:				// SLA+W transmitted and ACK received
		TWDR = s_tx_d[pos_o++];
    3906:	e0 91 13 04 	lds	r30, 0x0413	; 0x800413 <pos_o.3088>
    390a:	06 c0       	rjmp	.+12     	; 0x3918 <__vector_24__bottom+0x102>
	case TWI_TWSR_M_SLAW_ADDR_NACK:				// SLA+W transmitted and NACK received
		twcr_new |= _BV(TWSTO);					// Send STOP
	break;

	case TWI_TWSR_M_SLAW_DATA_ACK:				// Data byte sent and ACK received
		if (pos_o < cnt_o) {
    390c:	e0 91 13 04 	lds	r30, 0x0413	; 0x800413 <pos_o.3088>
    3910:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <cnt_o.3090>
    3914:	e8 17       	cp	r30, r24
    3916:	58 f4       	brcc	.+22     	; 0x392e <__vector_24__bottom+0x118>
			TWDR = s_tx_d[pos_o++];				// Send new data byte
    3918:	81 e0       	ldi	r24, 0x01	; 1
    391a:	8e 0f       	add	r24, r30
    391c:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <pos_o.3088>
    3920:	f0 e0       	ldi	r31, 0x00	; 0
    3922:	e9 5d       	subi	r30, 0xD9	; 217
    3924:	fb 4f       	sbci	r31, 0xFB	; 251
    3926:	80 81       	ld	r24, Z
    3928:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
		} else {
			s_tx_lock = 0;
			s_twi_tx_done();					// Message sent
    392c:	eb c0       	rjmp	.+470    	; 0x3b04 <__vector_24__bottom+0x2ee>
			twcr_new |= _BV(TWSTO);				// Send STOP - no more data available
    392e:	07 dd       	rcall	.-1522   	; 0x333e <s_twi_tx_done>
    3930:	c0 61       	ori	r28, 0x10	; 16
		s_twi_tx_done();						// Message failure
		twcr_new |= _BV(TWSTO);					// Send STOP - due to an error or slave not ready situation
	break;

	case TWI_TWSR_M_SLAW_ARBIT_LOST:			// Arbitration lost
		twcr_new |= _BV(TWSTA);					// Send START (again)
    3932:	e8 c0       	rjmp	.+464    	; 0x3b04 <__vector_24__bottom+0x2ee>
	break;
    3934:	c0 62       	ori	r28, 0x20	; 32
	case TWI_TWSR_M_SLAR_DATA_ACK:
		nop();
	break;

	case TWI_TWSR_M_SLAR_DATA_NACK:
		nop();
    3936:	e6 c0       	rjmp	.+460    	; 0x3b04 <__vector_24__bottom+0x2ee>
	break;
    3938:	00 00       	nop

	/* Slave Receiver Mode */

	case TWI_TWSR_S_SLAW_MYADDR_RECEIVED:		// SLA+W received and ACK returned
	case TWI_TWSR_S_SLAW_MYADDR_ARBIT_LOST:
		mem_set(s_rx_d, TWI_SMART_LCD_SLAVE_BUF_LEN, 0x00);
    393a:	e4 c0       	rjmp	.+456    	; 0x3b04 <__vector_24__bottom+0x2ee>
    393c:	40 e0       	ldi	r20, 0x00	; 0
    393e:	60 e1       	ldi	r22, 0x10	; 16
    3940:	87 e1       	ldi	r24, 0x17	; 23
    3942:	94 e0       	ldi	r25, 0x04	; 4
		twcr_new |= _BV(TWEA);					// Send ACK
	break;

	case TWI_TWSR_S_SLAW_OMNIADDR_RECEIVED:		// GCA received and ACK sent
	case TWI_TWSR_S_SLAW_OMNIADDR_ARBIT_LOST:
		s_rx_d[0] = twd >> 1;					// GCA
    3944:	2d d1       	rcall	.+602    	; 0x3ba0 <mem_set>
    3946:	d6 95       	lsr	r29
    3948:	d0 93 17 04 	sts	0x0417, r29	; 0x800417 <s_rx_d>
		pos_i = 1;								// Starting of reception
    394c:	81 e0       	ldi	r24, 0x01	; 1
    394e:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <pos_i.3087>
		twcr_new |= _BV(TWEA);					// Send after next coming data byte ACK
	break;
    3952:	c0 64       	ori	r28, 0x40	; 64

	case TWI_TWSR_S_SLAW_MYADDR_DATA_ACK:		// Data after SLA+W received
	case TWI_TWSR_S_SLAW_OMNIADDR_DATA_ACK:
		if (cnt_i != 0b1111) {					// Closed parameter form
    3954:	d7 c0       	rjmp	.+430    	; 0x3b04 <__vector_24__bottom+0x2ee>
    3956:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <cnt_i.3089>
    395a:	8f 30       	cpi	r24, 0x0F	; 15
    395c:	09 f4       	brne	.+2      	; 0x3960 <__vector_24__bottom+0x14a>
			if (pos_i < 0b1111) {
    395e:	96 c0       	rjmp	.+300    	; 0x3a8c <__vector_24__bottom+0x276>
    3960:	90 91 11 04 	lds	r25, 0x0411	; 0x800411 <pos_i.3087>
    3964:	9f 30       	cpi	r25, 0x0F	; 15
    3966:	08 f0       	brcs	.+2      	; 0x396a <__vector_24__bottom+0x154>
				s_rx_d[pos_i] = twd;			// [1]=cmd, [2..]=parameters
    3968:	87 c0       	rjmp	.+270    	; 0x3a78 <__vector_24__bottom+0x262>
    396a:	e9 2f       	mov	r30, r25
    396c:	f0 e0       	ldi	r31, 0x00	; 0
    396e:	e9 5e       	subi	r30, 0xE9	; 233
    3970:	fb 4f       	sbci	r31, 0xFB	; 251
			}

			if (pos_i == 1) {
    3972:	d0 83       	st	Z, r29
    3974:	91 30       	cpi	r25, 0x01	; 1
    3976:	09 f0       	breq	.+2      	; 0x397a <__vector_24__bottom+0x164>
				/* Load receive counter */
				if (s_rx_d[0] == TWI_SLAVE_ADDR_SMARTLCD) {
    3978:	6b c0       	rjmp	.+214    	; 0x3a50 <__vector_24__bottom+0x23a>
    397a:	80 91 17 04 	lds	r24, 0x0417	; 0x800417 <s_rx_d>
    397e:	82 32       	cpi	r24, 0x22	; 34
    3980:	09 f0       	breq	.+2      	; 0x3984 <__vector_24__bottom+0x16e>
					cnt_i = 0;
    3982:	7c c0       	rjmp	.+248    	; 0x3a7c <__vector_24__bottom+0x266>
    3984:	10 92 10 04 	sts	0x0410, r1	; 0x800410 <cnt_i.3089>
					cnt_o = 0;
    3988:	10 92 12 04 	sts	0x0412, r1	; 0x800412 <cnt_o.3090>

					switch (s_rx_d[1]) {
    398c:	80 91 18 04 	lds	r24, 0x0418	; 0x800418 <s_rx_d+0x1>
    3990:	8a 33       	cpi	r24, 0x3A	; 58
    3992:	09 f4       	brne	.+2      	; 0x3996 <__vector_24__bottom+0x180>
    3994:	6d c0       	rjmp	.+218    	; 0x3a70 <__vector_24__bottom+0x25a>
    3996:	10 f5       	brcc	.+68     	; 0x39dc <__vector_24__bottom+0x1c6>
    3998:	80 32       	cpi	r24, 0x20	; 32
    399a:	09 f4       	brne	.+2      	; 0x399e <__vector_24__bottom+0x188>
    399c:	45 c0       	rjmp	.+138    	; 0x3a28 <__vector_24__bottom+0x212>
    399e:	78 f4       	brcc	.+30     	; 0x39be <__vector_24__bottom+0x1a8>
    39a0:	82 30       	cpi	r24, 0x02	; 2
    39a2:	09 f4       	brne	.+2      	; 0x39a6 <__vector_24__bottom+0x190>
    39a4:	65 c0       	rjmp	.+202    	; 0x3a70 <__vector_24__bottom+0x25a>
    39a6:	28 f4       	brcc	.+10     	; 0x39b2 <__vector_24__bottom+0x19c>
    39a8:	88 23       	and	r24, r24
    39aa:	a1 f1       	breq	.+104    	; 0x3a14 <__vector_24__bottom+0x1fe>
    39ac:	81 30       	cpi	r24, 0x01	; 1
    39ae:	b1 f1       	breq	.+108    	; 0x3a1c <__vector_24__bottom+0x206>
    39b0:	65 c0       	rjmp	.+202    	; 0x3a7c <__vector_24__bottom+0x266>
    39b2:	83 30       	cpi	r24, 0x03	; 3
    39b4:	99 f1       	breq	.+102    	; 0x3a1c <__vector_24__bottom+0x206>
    39b6:	84 31       	cpi	r24, 0x14	; 20
    39b8:	09 f4       	brne	.+2      	; 0x39bc <__vector_24__bottom+0x1a6>
    39ba:	5a c0       	rjmp	.+180    	; 0x3a70 <__vector_24__bottom+0x25a>
    39bc:	5f c0       	rjmp	.+190    	; 0x3a7c <__vector_24__bottom+0x266>
    39be:	84 33       	cpi	r24, 0x34	; 52
    39c0:	99 f1       	breq	.+102    	; 0x3a28 <__vector_24__bottom+0x212>
    39c2:	30 f4       	brcc	.+12     	; 0x39d0 <__vector_24__bottom+0x1ba>
    39c4:	80 33       	cpi	r24, 0x30	; 48
    39c6:	09 f4       	brne	.+2      	; 0x39ca <__vector_24__bottom+0x1b4>
    39c8:	3f c0       	rjmp	.+126    	; 0x3a48 <__vector_24__bottom+0x232>
    39ca:	82 33       	cpi	r24, 0x32	; 50
    39cc:	69 f1       	breq	.+90     	; 0x3a28 <__vector_24__bottom+0x212>
    39ce:	56 c0       	rjmp	.+172    	; 0x3a7c <__vector_24__bottom+0x266>
    39d0:	86 33       	cpi	r24, 0x36	; 54
    39d2:	51 f1       	breq	.+84     	; 0x3a28 <__vector_24__bottom+0x212>
    39d4:	88 33       	cpi	r24, 0x38	; 56
    39d6:	09 f4       	brne	.+2      	; 0x39da <__vector_24__bottom+0x1c4>
    39d8:	4b c0       	rjmp	.+150    	; 0x3a70 <__vector_24__bottom+0x25a>
    39da:	50 c0       	rjmp	.+160    	; 0x3a7c <__vector_24__bottom+0x266>
    39dc:	85 38       	cpi	r24, 0x85	; 133
    39de:	41 f1       	breq	.+80     	; 0x3a30 <__vector_24__bottom+0x21a>
    39e0:	68 f4       	brcc	.+26     	; 0x39fc <__vector_24__bottom+0x1e6>
    39e2:	82 38       	cpi	r24, 0x82	; 130
    39e4:	29 f1       	breq	.+74     	; 0x3a30 <__vector_24__bottom+0x21a>
    39e6:	28 f4       	brcc	.+10     	; 0x39f2 <__vector_24__bottom+0x1dc>
    39e8:	80 38       	cpi	r24, 0x80	; 128
    39ea:	51 f1       	breq	.+84     	; 0x3a40 <__vector_24__bottom+0x22a>
    39ec:	81 38       	cpi	r24, 0x81	; 129
    39ee:	21 f1       	breq	.+72     	; 0x3a38 <__vector_24__bottom+0x222>
    39f0:	45 c0       	rjmp	.+138    	; 0x3a7c <__vector_24__bottom+0x266>
    39f2:	83 38       	cpi	r24, 0x83	; 131
    39f4:	09 f1       	breq	.+66     	; 0x3a38 <__vector_24__bottom+0x222>
    39f6:	84 38       	cpi	r24, 0x84	; 132
    39f8:	b9 f0       	breq	.+46     	; 0x3a28 <__vector_24__bottom+0x212>
    39fa:	40 c0       	rjmp	.+128    	; 0x3a7c <__vector_24__bottom+0x266>
    39fc:	8b 38       	cpi	r24, 0x8B	; 139
    39fe:	28 f4       	brcc	.+10     	; 0x3a0a <__vector_24__bottom+0x1f4>
    3a00:	89 38       	cpi	r24, 0x89	; 137
    3a02:	90 f4       	brcc	.+36     	; 0x3a28 <__vector_24__bottom+0x212>
    3a04:	88 38       	cpi	r24, 0x88	; 136
    3a06:	a1 f0       	breq	.+40     	; 0x3a30 <__vector_24__bottom+0x21a>
    3a08:	39 c0       	rjmp	.+114    	; 0x3a7c <__vector_24__bottom+0x266>
    3a0a:	8d 38       	cpi	r24, 0x8D	; 141
    3a0c:	c8 f0       	brcs	.+50     	; 0x3a40 <__vector_24__bottom+0x22a>
    3a0e:	8d 38       	cpi	r24, 0x8D	; 141
    3a10:	79 f0       	breq	.+30     	; 0x3a30 <__vector_24__bottom+0x21a>
						case TWI_SMART_LCD_CMD_NOOP:
							cnt_i = 1;
    3a12:	34 c0       	rjmp	.+104    	; 0x3a7c <__vector_24__bottom+0x266>
    3a14:	81 e0       	ldi	r24, 0x01	; 1
    3a16:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <cnt_i.3089>
						break;


						case TWI_SMART_LCD_CMD_GET_VER:
						case TWI_SMART_LCD_CMD_GET_STATE:
							cnt_i = 1;
    3a1a:	30 c0       	rjmp	.+96     	; 0x3a7c <__vector_24__bottom+0x266>
    3a1c:	81 e0       	ldi	r24, 0x01	; 1
    3a1e:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <cnt_i.3089>
							cnt_o = 1;
    3a22:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <cnt_o.3090>
						case TWI_SMART_LCD_CMD_DRAW_RECT:
						case TWI_SMART_LCD_CMD_DRAW_FILLED_RECT:
						case TWI_SMART_LCD_CMD_SHOW_DOP:
						case TWI_SMART_LCD_CMD_SHOW_POS_STATE:
						case TWI_SMART_LCD_CMD_SHOW_TCXO_PWM:
							cnt_i = 3;
    3a26:	2a c0       	rjmp	.+84     	; 0x3a7c <__vector_24__bottom+0x266>
    3a28:	83 e0       	ldi	r24, 0x03	; 3
    3a2a:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <cnt_i.3089>

						case TWI_SMART_LCD_CMD_SHOW_HR_MIN_SEC:
						case TWI_SMART_LCD_CMD_SHOW_POS_HEIGHT:
						case TWI_SMART_LCD_CMD_SHOW_SATS:
						case TWI_SMART_LCD_CMD_SHOW_TCXO_VC:
							cnt_i = 4;
    3a2e:	26 c0       	rjmp	.+76     	; 0x3a7c <__vector_24__bottom+0x266>
    3a30:	84 e0       	ldi	r24, 0x04	; 4
    3a32:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <cnt_i.3089>
						break;

						case TWI_SMART_LCD_CMD_SHOW_PPB:
						case TWI_SMART_LCD_CMD_SHOW_YEAR_MON_DAY:
							cnt_i = 5;
    3a36:	22 c0       	rjmp	.+68     	; 0x3a7c <__vector_24__bottom+0x266>
    3a38:	85 e0       	ldi	r24, 0x05	; 5
    3a3a:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <cnt_i.3089>
						break;

						case TWI_SMART_LCD_CMD_SHOW_CLK_STATE:
						case TWI_SMART_LCD_CMD_SHOW_POS_LAT:
						case TWI_SMART_LCD_CMD_SHOW_POS_LON:
							cnt_i = 6;
    3a3e:	1e c0       	rjmp	.+60     	; 0x3a7c <__vector_24__bottom+0x266>
    3a40:	86 e0       	ldi	r24, 0x06	; 6
    3a42:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <cnt_i.3089>
						break;
						
						case TWI_SMART_LCD_CMD_WRITE:
							cnt_i = TWI_SMART_LCD_SLAVE_BUF_LEN;	// Max length of incoming data
    3a46:	1a c0       	rjmp	.+52     	; 0x3a7c <__vector_24__bottom+0x266>
    3a48:	80 e1       	ldi	r24, 0x10	; 16
    3a4a:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <cnt_i.3089>
						break;
					}
				}
			}
			else if (pos_i == 2) {
    3a4e:	16 c0       	rjmp	.+44     	; 0x3a7c <__vector_24__bottom+0x266>
    3a50:	92 30       	cpi	r25, 0x02	; 2
				if (s_rx_d[0] == TWI_SLAVE_ADDR_SMARTLCD) {
    3a52:	91 f4       	brne	.+36     	; 0x3a78 <__vector_24__bottom+0x262>
    3a54:	80 91 17 04 	lds	r24, 0x0417	; 0x800417 <s_rx_d>
    3a58:	82 32       	cpi	r24, 0x22	; 34
					if (s_rx_d[1] == TWI_SMART_LCD_CMD_WRITE) {
    3a5a:	81 f4       	brne	.+32     	; 0x3a7c <__vector_24__bottom+0x266>
    3a5c:	80 91 18 04 	lds	r24, 0x0418	; 0x800418 <s_rx_d+0x1>
    3a60:	80 33       	cpi	r24, 0x30	; 48
						/* Correct length of string to actual size */
						uint8_t str_len = s_rx_d[2];
    3a62:	61 f4       	brne	.+24     	; 0x3a7c <__vector_24__bottom+0x266>
    3a64:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <s_rx_d+0x2>
						cnt_i = ((str_len <= (TWI_SMART_LCD_SLAVE_BUF_LEN - 2)) && (str_len < 0b1111)) ?  (str_len + 2) : 2;
    3a68:	8f 30       	cpi	r24, 0x0F	; 15
    3a6a:	10 f4       	brcc	.+4      	; 0x3a70 <__vector_24__bottom+0x25a>
    3a6c:	8e 5f       	subi	r24, 0xFE	; 254
    3a6e:	01 c0       	rjmp	.+2      	; 0x3a72 <__vector_24__bottom+0x25c>
    3a70:	82 e0       	ldi	r24, 0x02	; 2
    3a72:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <cnt_i.3089>
					}
				}
			}

			if (pos_i < 0b1110) {
    3a76:	02 c0       	rjmp	.+4      	; 0x3a7c <__vector_24__bottom+0x266>
    3a78:	9e 30       	cpi	r25, 0x0E	; 14
				if (++pos_i <= cnt_i) {
    3a7a:	60 f4       	brcc	.+24     	; 0x3a94 <__vector_24__bottom+0x27e>
    3a7c:	9f 5f       	subi	r25, 0xFF	; 255
    3a7e:	90 93 11 04 	sts	0x0411, r25	; 0x800411 <pos_i.3087>
    3a82:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <cnt_i.3089>
    3a86:	89 17       	cp	r24, r25
    3a88:	28 f0       	brcs	.+10     	; 0x3a94 <__vector_24__bottom+0x27e>
			} else {
				twcr_new &= ~_BV(TWEA);			// Send NACK
			}

		} else {								// Open parameter form
			s_rx_d[2] = twd;
    3a8a:	39 c0       	rjmp	.+114    	; 0x3afe <__vector_24__bottom+0x2e8>
    3a8c:	d0 93 19 04 	sts	0x0419, r29	; 0x800419 <s_rx_d+0x2>
			if (!s_isr_twi_rcvd_command_open_form(s_rx_d, ++pos_i)) {
				twcr_new |= _BV(TWEA);			// Send ACK
			} else {
				pos_i = 0;
    3a90:	10 92 11 04 	sts	0x0411, r1	; 0x800411 <pos_i.3087>
				twcr_new &= ~_BV(TWEA);			// Send NACK
    3a94:	c4 2f       	mov	r28, r20
    3a96:	c5 70       	andi	r28, 0x05	; 5
		}
	break;

	case TWI_TWSR_S_SLAW_MYADDR_DATA_NACK:		// NACK after last data byte sent
	case TWI_TWSR_S_SLAW_OMNIADDR_DATA_NACK:
		if (cnt_i != 0b1111) {
    3a98:	35 c0       	rjmp	.+106    	; 0x3b04 <__vector_24__bottom+0x2ee>
    3a9a:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <cnt_i.3089>
			s_isr_twi_rcvd_command_closed_form(s_rx_d, pos_i);	// Call interpreter for closed form of parameters
    3a9e:	8f 30       	cpi	r24, 0x0F	; 15
    3aa0:	09 f0       	breq	.+2      	; 0x3aa4 <__vector_24__bottom+0x28e>
		} else {
			s_isr_twi_rcvd_command_open_form(s_rx_d, ++pos_i);	// Call interpreter for open form of parameters
		}
		pos_i = 0;
    3aa2:	5c dc       	rcall	.-1864   	; 0x335c <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2>
    3aa4:	10 92 11 04 	sts	0x0411, r1	; 0x800411 <pos_i.3087>
		cnt_i = 0;
    3aa8:	10 92 10 04 	sts	0x0410, r1	; 0x800410 <cnt_i.3089>
		mem_set(s_rx_d, 8, 0x00);
    3aac:	40 e0       	ldi	r20, 0x00	; 0
    3aae:	68 e0       	ldi	r22, 0x08	; 8
    3ab0:	87 e1       	ldi	r24, 0x17	; 23
    3ab2:	94 e0       	ldi	r25, 0x04	; 4
		twcr_new |= _BV(TWEA);					// TWI goes to unaddressed, be active again
    3ab4:	75 d0       	rcall	.+234    	; 0x3ba0 <mem_set>
	break;

	case TWI_TWSR_S_SLAW_STOP_REPEATEDSTART_RECEIVED:	// STOP or RESTART received while still addressed as slave
		if (cnt_i != 0b1111) {
    3ab6:	c0 64       	ori	r28, 0x40	; 64
    3ab8:	25 c0       	rjmp	.+74     	; 0x3b04 <__vector_24__bottom+0x2ee>
    3aba:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <cnt_i.3089>
			s_isr_twi_rcvd_command_closed_form(s_rx_d, pos_i);	// Call interpreter for closed form of parameters
    3abe:	8f 30       	cpi	r24, 0x0F	; 15
		} else {
			s_isr_twi_rcvd_command_open_form(s_rx_d, ++pos_i);	// Call interpreter for open form of parameters
		}
		pos_i = 0;
    3ac0:	09 f0       	breq	.+2      	; 0x3ac4 <__vector_24__bottom+0x2ae>
    3ac2:	4c dc       	rcall	.-1896   	; 0x335c <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2>
		twcr_new |= _BV(TWEA);					// TWI goes to unaddressed, be active again
    3ac4:	10 92 11 04 	sts	0x0411, r1	; 0x800411 <pos_i.3087>

	/* Slave Transmitter Mode */

	case TWI_TWSR_S_SLAR_MYADDR_DATA_ACK:		// SLA+R received and ACK has been returned
	case TWI_TWSR_S_SLAR_OMNIADDR_DATA_ACK:		// Data sent and ACK has been returned
		pos_o = 0;
    3ac8:	c0 64       	ori	r28, 0x40	; 64
    3aca:	1c c0       	rjmp	.+56     	; 0x3b04 <__vector_24__bottom+0x2ee>
		cnt_o = s_rx_ret_len;
    3acc:	10 92 13 04 	sts	0x0413, r1	; 0x800413 <pos_o.3088>
    3ad0:	80 91 14 04 	lds	r24, 0x0414	; 0x800414 <s_rx_ret_len>
		s_rx_ret_len = 0;
    3ad4:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <cnt_o.3090>
		TWDR = cnt_o > pos_o ?  s_rx_ret_d[pos_o++] : 0x00;
    3ad8:	10 92 14 04 	sts	0x0414, r1	; 0x800414 <s_rx_ret_len>
    3adc:	88 23       	and	r24, r24
    3ade:	31 f0       	breq	.+12     	; 0x3aec <__vector_24__bottom+0x2d6>
    3ae0:	81 e0       	ldi	r24, 0x01	; 1
    3ae2:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <pos_o.3088>
    3ae6:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <s_rx_ret_d>
    3aea:	01 c0       	rjmp	.+2      	; 0x3aee <__vector_24__bottom+0x2d8>
    3aec:	80 e0       	ldi	r24, 0x00	; 0
		if (cnt_o > pos_o) {
    3aee:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    3af2:	90 91 12 04 	lds	r25, 0x0412	; 0x800412 <cnt_o.3090>
    3af6:	80 91 13 04 	lds	r24, 0x0413	; 0x800413 <pos_o.3088>
		twcr_new |= _BV(TWEA);					// TWI goes to unaddressed, be active again
	break;

	case TWI_TWSR_S_SLAR_MYADDR_LASTDATA_ACK:	// Last data sent and ACK has been returned
		/* message transmitted successfully in slave mode */
		twcr_new |= _BV(TWEA);					// TWI goes to unaddressed, be active again
    3afa:	89 17       	cp	r24, r25
	break;
    3afc:	58 f6       	brcc	.-106    	; 0x3a94 <__vector_24__bottom+0x27e>
	case TWI_TWSR_BUS_ERROR_UNKNOWN:
		twcr_new |= _BV(TWSTO) | _BV(TWEA);		// TWI goes to unaddressed, be active again
	break;

	default:
		twcr_new |= _BV(TWSTO) | _BV(TWEA);		// TWI goes to unaddressed, be active again
    3afe:	c0 64       	ori	r28, 0x40	; 64
	}

	return twcr_new;
}
    3b00:	01 c0       	rjmp	.+2      	; 0x3b04 <__vector_24__bottom+0x2ee>
    3b02:	c0 65       	ori	r28, 0x50	; 80
    3b04:	8c 2f       	mov	r24, r28
    3b06:	df 91       	pop	r29
    3b08:	cf 91       	pop	r28
    3b0a:	08 95       	ret

00003b0c <cpu_irq_save>:
    3b0c:	cf 93       	push	r28
    3b0e:	df 93       	push	r29
    3b10:	1f 92       	push	r1
    3b12:	cd b7       	in	r28, 0x3d	; 61
    3b14:	de b7       	in	r29, 0x3e	; 62
    3b16:	8f b7       	in	r24, 0x3f	; 63
    3b18:	89 83       	std	Y+1, r24	; 0x01
    3b1a:	f8 94       	cli
    3b1c:	89 81       	ldd	r24, Y+1	; 0x01
    3b1e:	0f 90       	pop	r0
    3b20:	df 91       	pop	r29
    3b22:	cf 91       	pop	r28
    3b24:	08 95       	ret

00003b26 <get_abs_time>:
    3b26:	8f 92       	push	r8
    3b28:	9f 92       	push	r9
    3b2a:	af 92       	push	r10
    3b2c:	bf 92       	push	r11
    3b2e:	cf 92       	push	r12
    3b30:	df 92       	push	r13
    3b32:	ef 92       	push	r14
    3b34:	ff 92       	push	r15
    3b36:	ea df       	rcall	.-44     	; 0x3b0c <cpu_irq_save>
    3b38:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    3b3c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    3b40:	c0 90 89 04 	lds	r12, 0x0489	; 0x800489 <g_timer_abs_msb>
    3b44:	d0 90 8a 04 	lds	r13, 0x048A	; 0x80048a <g_timer_abs_msb+0x1>
    3b48:	e0 90 8b 04 	lds	r14, 0x048B	; 0x80048b <g_timer_abs_msb+0x2>
    3b4c:	f0 90 8c 04 	lds	r15, 0x048C	; 0x80048c <g_timer_abs_msb+0x3>
    3b50:	8f bf       	out	0x3f, r24	; 63
    3b52:	70 e0       	ldi	r23, 0x00	; 0
    3b54:	79 2b       	or	r23, r25
    3b56:	07 2e       	mov	r0, r23
    3b58:	00 0c       	add	r0, r0
    3b5a:	88 0b       	sbc	r24, r24
    3b5c:	99 0b       	sbc	r25, r25
    3b5e:	55 d3       	rcall	.+1706   	; 0x420a <__floatsisf>
    3b60:	20 e0       	ldi	r18, 0x00	; 0
    3b62:	34 e2       	ldi	r19, 0x24	; 36
    3b64:	44 ef       	ldi	r20, 0xF4	; 244
    3b66:	5a e4       	ldi	r21, 0x4A	; 74
    3b68:	b5 d2       	rcall	.+1386   	; 0x40d4 <__divsf3>
    3b6a:	4b 01       	movw	r8, r22
    3b6c:	5c 01       	movw	r10, r24
    3b6e:	c7 01       	movw	r24, r14
    3b70:	b6 01       	movw	r22, r12
    3b72:	49 d3       	rcall	.+1682   	; 0x4206 <__floatunsisf>
    3b74:	20 e0       	ldi	r18, 0x00	; 0
    3b76:	30 e0       	ldi	r19, 0x00	; 0
    3b78:	40 e0       	ldi	r20, 0x00	; 0
    3b7a:	54 e4       	ldi	r21, 0x44	; 68
    3b7c:	4d d4       	rcall	.+2202   	; 0x4418 <__mulsf3>
    3b7e:	20 e0       	ldi	r18, 0x00	; 0
    3b80:	34 e2       	ldi	r19, 0x24	; 36
    3b82:	44 ef       	ldi	r20, 0xF4	; 244
    3b84:	5a e4       	ldi	r21, 0x4A	; 74
    3b86:	a6 d2       	rcall	.+1356   	; 0x40d4 <__divsf3>
    3b88:	a5 01       	movw	r20, r10
    3b8a:	94 01       	movw	r18, r8
    3b8c:	3b d2       	rcall	.+1142   	; 0x4004 <__addsf3>
    3b8e:	ff 90       	pop	r15
    3b90:	ef 90       	pop	r14
    3b92:	df 90       	pop	r13
    3b94:	cf 90       	pop	r12
    3b96:	bf 90       	pop	r11
    3b98:	af 90       	pop	r10
    3b9a:	9f 90       	pop	r9
    3b9c:	8f 90       	pop	r8
    3b9e:	08 95       	ret

00003ba0 <mem_set>:
    3ba0:	70 e0       	ldi	r23, 0x00	; 0
    3ba2:	61 15       	cp	r22, r1
    3ba4:	71 05       	cpc	r23, r1
    3ba6:	31 f0       	breq	.+12     	; 0x3bb4 <mem_set+0x14>
    3ba8:	fc 01       	movw	r30, r24
    3baa:	41 93       	st	Z+, r20
    3bac:	cf 01       	movw	r24, r30
    3bae:	61 50       	subi	r22, 0x01	; 1
    3bb0:	71 09       	sbc	r23, r1
    3bb2:	f7 cf       	rjmp	.-18     	; 0x3ba2 <mem_set+0x2>
    3bb4:	08 95       	ret

00003bb6 <eeprom_nvm_settings_write>:
    3bb6:	cf 93       	push	r28
    3bb8:	c8 2f       	mov	r28, r24
    3bba:	87 ff       	sbrs	r24, 7
    3bbc:	04 c0       	rjmp	.+8      	; 0x3bc6 <eeprom_nvm_settings_write+0x10>
    3bbe:	61 e1       	ldi	r22, 0x11	; 17
    3bc0:	80 e0       	ldi	r24, 0x00	; 0
    3bc2:	90 e0       	ldi	r25, 0x00	; 0
    3bc4:	83 d7       	rcall	.+3846   	; 0x4acc <eeprom_write_byte>
    3bc6:	c0 ff       	sbrs	r28, 0
    3bc8:	07 c0       	rjmp	.+14     	; 0x3bd8 <eeprom_nvm_settings_write+0x22>
    3bca:	60 91 7a 04 	lds	r22, 0x047A	; 0x80047a <g_lcd_contrast_pm>
    3bce:	6f 73       	andi	r22, 0x3F	; 63
    3bd0:	80 e1       	ldi	r24, 0x10	; 16
    3bd2:	90 e0       	ldi	r25, 0x00	; 0
    3bd4:	cf 91       	pop	r28
    3bd6:	7a c7       	rjmp	.+3828   	; 0x4acc <eeprom_write_byte>
    3bd8:	cf 91       	pop	r28
    3bda:	08 95       	ret

00003bdc <eeprom_nvm_settings_read>:
    3bdc:	87 ff       	sbrs	r24, 7
    3bde:	07 c0       	rjmp	.+14     	; 0x3bee <eeprom_nvm_settings_read+0x12>
    3be0:	80 e0       	ldi	r24, 0x00	; 0
    3be2:	90 e0       	ldi	r25, 0x00	; 0
    3be4:	6b d7       	rcall	.+3798   	; 0x4abc <eeprom_read_byte>
    3be6:	81 31       	cpi	r24, 0x11	; 17
    3be8:	11 f0       	breq	.+4      	; 0x3bee <eeprom_nvm_settings_read+0x12>
    3bea:	80 e8       	ldi	r24, 0x80	; 128
    3bec:	e4 df       	rcall	.-56     	; 0x3bb6 <eeprom_nvm_settings_write>
    3bee:	86 e1       	ldi	r24, 0x16	; 22
    3bf0:	80 93 7a 04 	sts	0x047A, r24	; 0x80047a <g_lcd_contrast_pm>
    3bf4:	08 95       	ret

00003bf6 <task>:
    3bf6:	8f 92       	push	r8
    3bf8:	9f 92       	push	r9
    3bfa:	af 92       	push	r10
    3bfc:	bf 92       	push	r11
    3bfe:	cf 92       	push	r12
    3c00:	df 92       	push	r13
    3c02:	ef 92       	push	r14
    3c04:	ff 92       	push	r15
    3c06:	0f 93       	push	r16
    3c08:	1f 93       	push	r17
    3c0a:	cf 93       	push	r28
    3c0c:	df 93       	push	r29
    3c0e:	cd b7       	in	r28, 0x3d	; 61
    3c10:	de b7       	in	r29, 0x3e	; 62
    3c12:	a8 97       	sbiw	r28, 0x28	; 40
    3c14:	0f b6       	in	r0, 0x3f	; 63
    3c16:	f8 94       	cli
    3c18:	de bf       	out	0x3e, r29	; 62
    3c1a:	0f be       	out	0x3f, r0	; 63
    3c1c:	cd bf       	out	0x3d, r28	; 61
    3c1e:	76 df       	rcall	.-276    	; 0x3b0c <cpu_irq_save>
    3c20:	80 90 80 04 	lds	r8, 0x0480	; 0x800480 <g_adc_temp>
    3c24:	90 90 81 04 	lds	r9, 0x0481	; 0x800481 <g_adc_temp+0x1>
    3c28:	a0 90 82 04 	lds	r10, 0x0482	; 0x800482 <g_adc_temp+0x2>
    3c2c:	b0 90 83 04 	lds	r11, 0x0483	; 0x800483 <g_adc_temp+0x3>
    3c30:	c0 90 84 04 	lds	r12, 0x0484	; 0x800484 <g_adc_light>
    3c34:	d0 90 85 04 	lds	r13, 0x0485	; 0x800485 <g_adc_light+0x1>
    3c38:	e0 90 86 04 	lds	r14, 0x0486	; 0x800486 <g_adc_light+0x2>
    3c3c:	f0 90 87 04 	lds	r15, 0x0487	; 0x800487 <g_adc_light+0x3>
    3c40:	8f bf       	out	0x3f, r24	; 63
    3c42:	64 df       	rcall	.-312    	; 0x3b0c <cpu_irq_save>
    3c44:	18 2f       	mov	r17, r24
    3c46:	29 e1       	ldi	r18, 0x19	; 25
    3c48:	37 ec       	ldi	r19, 0xC7	; 199
    3c4a:	4f ea       	ldi	r20, 0xAF	; 175
    3c4c:	53 e4       	ldi	r21, 0x43	; 67
    3c4e:	c5 01       	movw	r24, r10
    3c50:	b4 01       	movw	r22, r8
    3c52:	d7 d1       	rcall	.+942    	; 0x4002 <__subsf3>
    3c54:	20 e0       	ldi	r18, 0x00	; 0
    3c56:	30 ea       	ldi	r19, 0xA0	; 160
    3c58:	47 e8       	ldi	r20, 0x87	; 135
    3c5a:	5f e3       	ldi	r21, 0x3F	; 63
    3c5c:	dd d3       	rcall	.+1978   	; 0x4418 <__mulsf3>
    3c5e:	20 e0       	ldi	r18, 0x00	; 0
    3c60:	30 e0       	ldi	r19, 0x00	; 0
    3c62:	48 ec       	ldi	r20, 0xC8	; 200
    3c64:	51 e4       	ldi	r21, 0x41	; 65
    3c66:	ce d1       	rcall	.+924    	; 0x4004 <__addsf3>
    3c68:	60 93 7c 04 	sts	0x047C, r22	; 0x80047c <g_temp>
    3c6c:	70 93 7d 04 	sts	0x047D, r23	; 0x80047d <g_temp+0x1>
    3c70:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <g_temp+0x2>
    3c74:	90 93 7f 04 	sts	0x047F, r25	; 0x80047f <g_temp+0x3>
    3c78:	1f bf       	out	0x3f, r17	; 63
    3c7a:	c7 01       	movw	r24, r14
    3c7c:	b6 01       	movw	r22, r12
    3c7e:	97 d2       	rcall	.+1326   	; 0x41ae <__fixunssfsi>
    3c80:	66 3b       	cpi	r22, 0xB6	; 182
    3c82:	23 e0       	ldi	r18, 0x03	; 3
    3c84:	72 07       	cpc	r23, r18
    3c86:	00 f5       	brcc	.+64     	; 0x3cc8 <task+0xd2>
    3c88:	80 e0       	ldi	r24, 0x00	; 0
    3c8a:	90 e0       	ldi	r25, 0x00	; 0
    3c8c:	bc d2       	rcall	.+1400   	; 0x4206 <__floatunsisf>
    3c8e:	20 e0       	ldi	r18, 0x00	; 0
    3c90:	30 e0       	ldi	r19, 0x00	; 0
    3c92:	40 e2       	ldi	r20, 0x20	; 32
    3c94:	51 e4       	ldi	r21, 0x41	; 65
    3c96:	b5 d1       	rcall	.+874    	; 0x4002 <__subsf3>
    3c98:	20 e0       	ldi	r18, 0x00	; 0
    3c9a:	30 e8       	ldi	r19, 0x80	; 128
    3c9c:	4d e6       	ldi	r20, 0x6D	; 109
    3c9e:	54 e4       	ldi	r21, 0x44	; 68
    3ca0:	19 d2       	rcall	.+1074   	; 0x40d4 <__divsf3>
    3ca2:	20 e0       	ldi	r18, 0x00	; 0
    3ca4:	30 e0       	ldi	r19, 0x00	; 0
    3ca6:	45 e7       	ldi	r20, 0x75	; 117
    3ca8:	53 e4       	ldi	r21, 0x43	; 67
    3caa:	b6 d3       	rcall	.+1900   	; 0x4418 <__mulsf3>
    3cac:	20 e0       	ldi	r18, 0x00	; 0
    3cae:	30 e0       	ldi	r19, 0x00	; 0
    3cb0:	40 e2       	ldi	r20, 0x20	; 32
    3cb2:	51 e4       	ldi	r21, 0x41	; 65
    3cb4:	a7 d1       	rcall	.+846    	; 0x4004 <__addsf3>
    3cb6:	7b d2       	rcall	.+1270   	; 0x41ae <__fixunssfsi>
    3cb8:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    3cbc:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3cc0:	80 68       	ori	r24, 0x80	; 128
    3cc2:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3cc6:	07 c0       	rjmp	.+14     	; 0x3cd6 <task+0xe0>
    3cc8:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    3ccc:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3cd0:	8f 73       	andi	r24, 0x3F	; 63
    3cd2:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3cd6:	1a df       	rcall	.-460    	; 0x3b0c <cpu_irq_save>
    3cd8:	00 91 35 04 	lds	r16, 0x0435	; 0x800435 <g_SmartLCD_mode>
    3cdc:	90 91 75 04 	lds	r25, 0x0475	; 0x800475 <g_status>
    3ce0:	90 fb       	bst	r25, 0
    3ce2:	ff 24       	eor	r15, r15
    3ce4:	f0 f8       	bld	r15, 0
    3ce6:	96 95       	lsr	r25
    3ce8:	91 70       	andi	r25, 0x01	; 1
    3cea:	8f bf       	out	0x3f, r24	; 63
    3cec:	99 23       	and	r25, r25
    3cee:	d9 f1       	breq	.+118    	; 0x3d66 <task+0x170>
    3cf0:	00 31       	cpi	r16, 0x10	; 16
    3cf2:	21 f4       	brne	.+8      	; 0x3cfc <task+0x106>
    3cf4:	0e 94 19 16 	call	0x2c32	; 0x2c32 <lcd_show_new_smartlcd_data>
    3cf8:	18 2f       	mov	r17, r24
    3cfa:	05 c0       	rjmp	.+10     	; 0x3d06 <task+0x110>
    3cfc:	00 32       	cpi	r16, 0x20	; 32
    3cfe:	99 f5       	brne	.+102    	; 0x3d66 <task+0x170>
    3d00:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <lcd_show_new_refosc_data>
    3d04:	18 2f       	mov	r17, r24
    3d06:	f1 10       	cpse	r15, r1
    3d08:	2b c0       	rjmp	.+86     	; 0x3d60 <task+0x16a>
    3d0a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <s_last_animation.3404>
    3d0e:	88 23       	and	r24, r24
    3d10:	39 f1       	breq	.+78     	; 0x3d60 <task+0x16a>
    3d12:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <s_last_animation.3404>
    3d16:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <lcd_cls>
    3d1a:	00 32       	cpi	r16, 0x20	; 32
    3d1c:	d1 f4       	brne	.+52     	; 0x3d52 <task+0x15c>
    3d1e:	01 e0       	ldi	r16, 0x01	; 1
    3d20:	20 e8       	ldi	r18, 0x80	; 128
    3d22:	40 ef       	ldi	r20, 0xF0	; 240
    3d24:	60 e0       	ldi	r22, 0x00	; 0
    3d26:	80 e0       	ldi	r24, 0x00	; 0
    3d28:	0e 94 6f 04 	call	0x8de	; 0x8de <gfx_mono_generic_draw_rect>
    3d2c:	88 e2       	ldi	r24, 0x28	; 40
    3d2e:	e0 e2       	ldi	r30, 0x20	; 32
    3d30:	f3 e0       	ldi	r31, 0x03	; 3
    3d32:	de 01       	movw	r26, r28
    3d34:	11 96       	adiw	r26, 0x01	; 1
    3d36:	01 90       	ld	r0, Z+
    3d38:	0d 92       	st	X+, r0
    3d3a:	8a 95       	dec	r24
    3d3c:	e1 f7       	brne	.-8      	; 0x3d36 <task+0x140>
    3d3e:	d1 da       	rcall	.-2654   	; 0x32e2 <lcd_get_sysfont>
    3d40:	9c 01       	movw	r18, r24
    3d42:	42 e0       	ldi	r20, 0x02	; 2
    3d44:	63 e0       	ldi	r22, 0x03	; 3
    3d46:	ce 01       	movw	r24, r28
    3d48:	01 96       	adiw	r24, 0x01	; 1
    3d4a:	0e 94 14 07 	call	0xe28	; 0xe28 <gfx_mono_draw_string>
    3d4e:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <lcd_show_template>
    3d52:	dc de       	rcall	.-584    	; 0x3b0c <cpu_irq_save>
    3d54:	90 91 75 04 	lds	r25, 0x0475	; 0x800475 <g_status>
    3d58:	92 60       	ori	r25, 0x02	; 2
    3d5a:	90 93 75 04 	sts	0x0475, r25	; 0x800475 <g_status>
    3d5e:	8f bf       	out	0x3f, r24	; 63
    3d60:	11 11       	cpse	r17, r1
    3d62:	b9 cf       	rjmp	.-142    	; 0x3cd6 <task+0xe0>
    3d64:	04 c0       	rjmp	.+8      	; 0x3d6e <task+0x178>
    3d66:	f1 10       	cpse	r15, r1
    3d68:	02 c0       	rjmp	.+4      	; 0x3d6e <task+0x178>
    3d6a:	10 e0       	ldi	r17, 0x00	; 0
    3d6c:	ce cf       	rjmp	.-100    	; 0x3d0a <task+0x114>
    3d6e:	a8 96       	adiw	r28, 0x28	; 40
    3d70:	0f b6       	in	r0, 0x3f	; 63
    3d72:	f8 94       	cli
    3d74:	de bf       	out	0x3e, r29	; 62
    3d76:	0f be       	out	0x3f, r0	; 63
    3d78:	cd bf       	out	0x3d, r28	; 61
    3d7a:	df 91       	pop	r29
    3d7c:	cf 91       	pop	r28
    3d7e:	1f 91       	pop	r17
    3d80:	0f 91       	pop	r16
    3d82:	ff 90       	pop	r15
    3d84:	ef 90       	pop	r14
    3d86:	df 90       	pop	r13
    3d88:	cf 90       	pop	r12
    3d8a:	bf 90       	pop	r11
    3d8c:	af 90       	pop	r10
    3d8e:	9f 90       	pop	r9
    3d90:	8f 90       	pop	r8
    3d92:	08 95       	ret

00003d94 <main>:
    3d94:	cf 93       	push	r28
    3d96:	df 93       	push	r29
    3d98:	8e e7       	ldi	r24, 0x7E	; 126
    3d9a:	88 b9       	out	0x08, r24	; 8
    3d9c:	88 e0       	ldi	r24, 0x08	; 8
    3d9e:	87 b9       	out	0x07, r24	; 7
    3da0:	84 e1       	ldi	r24, 0x14	; 20
    3da2:	85 b9       	out	0x05, r24	; 5
    3da4:	8b ef       	ldi	r24, 0xFB	; 251
    3da6:	84 b9       	out	0x04, r24	; 4
    3da8:	8f ef       	ldi	r24, 0xFF	; 255
    3daa:	8b b9       	out	0x0b, r24	; 11
    3dac:	1a b8       	out	0x0a, r1	; 10
    3dae:	c1 e0       	ldi	r28, 0x01	; 1
    3db0:	c0 93 7e 00 	sts	0x007E, r28	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
    3db4:	0e 94 06 03 	call	0x60c	; 0x60c <sysclk_init>
    3db8:	8b ee       	ldi	r24, 0xEB	; 235
    3dba:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    3dbe:	d3 e8       	ldi	r29, 0x83	; 131
    3dc0:	d3 bd       	out	0x23, r29	; 35
    3dc2:	68 e0       	ldi	r22, 0x08	; 8
    3dc4:	80 e0       	ldi	r24, 0x00	; 0
    3dc6:	0e 94 1f 03 	call	0x63e	; 0x63e <sysclk_enable_module>
    3dca:	82 e8       	ldi	r24, 0x82	; 130
    3dcc:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    3dd0:	89 e0       	ldi	r24, 0x09	; 9
    3dd2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    3dd6:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    3dda:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    3dde:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    3de2:	80 e8       	ldi	r24, 0x80	; 128
    3de4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    3de8:	c0 93 6f 00 	sts	0x006F, r28	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    3dec:	87 e2       	ldi	r24, 0x27	; 39
    3dee:	86 bb       	out	0x16, r24	; 22
    3df0:	60 e4       	ldi	r22, 0x40	; 64
    3df2:	80 e0       	ldi	r24, 0x00	; 0
    3df4:	0e 94 1f 03 	call	0x63e	; 0x63e <sysclk_enable_module>
    3df8:	d0 93 b0 00 	sts	0x00B0, r29	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3dfc:	85 e0       	ldi	r24, 0x05	; 5
    3dfe:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    3e02:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
    3e06:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    3e0a:	c0 93 70 00 	sts	0x0070, r28	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
    3e0e:	87 e0       	ldi	r24, 0x07	; 7
    3e10:	87 bb       	out	0x17, r24	; 23
    3e12:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
    3e16:	61 e0       	ldi	r22, 0x01	; 1
    3e18:	80 e0       	ldi	r24, 0x00	; 0
    3e1a:	0e 94 1f 03 	call	0x63e	; 0x63e <sysclk_enable_module>
    3e1e:	c0 93 7e 00 	sts	0x007E, r28	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
    3e22:	87 e8       	ldi	r24, 0x87	; 135
    3e24:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3e28:	80 ec       	ldi	r24, 0xC0	; 192
    3e2a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    3e2e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3e32:	80 61       	ori	r24, 0x10	; 16
    3e34:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3e38:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3e3c:	88 60       	ori	r24, 0x08	; 8
    3e3e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3e42:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
    3e46:	88 7f       	andi	r24, 0xF8	; 248
    3e48:	86 60       	ori	r24, 0x06	; 6
    3e4a:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
    3e4e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3e52:	80 62       	ori	r24, 0x20	; 32
    3e54:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3e58:	0e 94 05 03 	call	0x60a	; 0x60a <board_init>
    3e5c:	84 b7       	in	r24, 0x34	; 52
    3e5e:	98 2f       	mov	r25, r24
    3e60:	97 70       	andi	r25, 0x07	; 7
    3e62:	11 f4       	brne	.+4      	; 0x3e68 <main+0xd4>
    3e64:	81 11       	cpse	r24, r1
    3e66:	2b c0       	rjmp	.+86     	; 0x3ebe <main+0x12a>
    3e68:	51 de       	rcall	.-862    	; 0x3b0c <cpu_irq_save>
    3e6a:	f8 94       	cli
    3e6c:	10 92 88 04 	sts	0x0488, r1	; 0x800488 <g_adc_state>
    3e70:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <g_adc_light>
    3e74:	10 92 85 04 	sts	0x0485, r1	; 0x800485 <g_adc_light+0x1>
    3e78:	10 92 86 04 	sts	0x0486, r1	; 0x800486 <g_adc_light+0x2>
    3e7c:	10 92 87 04 	sts	0x0487, r1	; 0x800487 <g_adc_light+0x3>
    3e80:	10 92 80 04 	sts	0x0480, r1	; 0x800480 <g_adc_temp>
    3e84:	10 92 81 04 	sts	0x0481, r1	; 0x800481 <g_adc_temp+0x1>
    3e88:	10 92 82 04 	sts	0x0482, r1	; 0x800482 <g_adc_temp+0x2>
    3e8c:	10 92 83 04 	sts	0x0483, r1	; 0x800483 <g_adc_temp+0x3>
    3e90:	40 e0       	ldi	r20, 0x00	; 0
    3e92:	50 e0       	ldi	r21, 0x00	; 0
    3e94:	68 ec       	ldi	r22, 0xC8	; 200
    3e96:	71 e4       	ldi	r23, 0x41	; 65
    3e98:	40 93 7c 04 	sts	0x047C, r20	; 0x80047c <g_temp>
    3e9c:	50 93 7d 04 	sts	0x047D, r21	; 0x80047d <g_temp+0x1>
    3ea0:	60 93 7e 04 	sts	0x047E, r22	; 0x80047e <g_temp+0x2>
    3ea4:	70 93 7f 04 	sts	0x047F, r23	; 0x80047f <g_temp+0x3>
    3ea8:	90 e4       	ldi	r25, 0x40	; 64
    3eaa:	90 93 7b 04 	sts	0x047B, r25	; 0x80047b <g_lcdbl_dimmer>
    3eae:	90 91 75 04 	lds	r25, 0x0475	; 0x800475 <g_status>
    3eb2:	9e 7f       	andi	r25, 0xFE	; 254
    3eb4:	9d 7f       	andi	r25, 0xFD	; 253
    3eb6:	90 93 75 04 	sts	0x0475, r25	; 0x800475 <g_status>
    3eba:	8f bf       	out	0x3f, r24	; 63
    3ebc:	0d c0       	rjmp	.+26     	; 0x3ed8 <main+0x144>
    3ebe:	90 e0       	ldi	r25, 0x00	; 0
    3ec0:	a0 e0       	ldi	r26, 0x00	; 0
    3ec2:	b0 e0       	ldi	r27, 0x00	; 0
    3ec4:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <g_u32_DEBUG21>
    3ec8:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <g_u32_DEBUG21+0x1>
    3ecc:	a0 93 33 04 	sts	0x0433, r26	; 0x800433 <g_u32_DEBUG21+0x2>
    3ed0:	b0 93 34 04 	sts	0x0434, r27	; 0x800434 <g_u32_DEBUG21+0x3>
    3ed4:	0e 94 40 07 	call	0xe80	; 0xe80 <asm_break>
    3ed8:	8f ef       	ldi	r24, 0xFF	; 255
    3eda:	80 de       	rcall	.-768    	; 0x3bdc <eeprom_nvm_settings_read>
    3edc:	60 e8       	ldi	r22, 0x80	; 128
    3ede:	80 e0       	ldi	r24, 0x00	; 0
    3ee0:	0e 94 1f 03 	call	0x63e	; 0x63e <sysclk_enable_module>
    3ee4:	13 de       	rcall	.-986    	; 0x3b0c <cpu_irq_save>
    3ee6:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    3eea:	92 e0       	ldi	r25, 0x02	; 2
    3eec:	90 93 b8 00 	sts	0x00B8, r25	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    3ef0:	94 e4       	ldi	r25, 0x44	; 68
    3ef2:	90 93 ba 00 	sts	0x00BA, r25	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7e00ba>
    3ef6:	10 92 bd 00 	sts	0x00BD, r1	; 0x8000bd <__TEXT_REGION_LENGTH__+0x7e00bd>
    3efa:	95 e4       	ldi	r25, 0x45	; 69
    3efc:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    3f00:	8f bf       	out	0x3f, r24	; 63
    3f02:	78 94       	sei
    3f04:	13 bc       	out	0x23, r1	; 35
    3f06:	f0 d9       	rcall	.-3104   	; 0x32e8 <lcd_init>
    3f08:	81 ef       	ldi	r24, 0xF1	; 241
    3f0a:	0e 94 45 15 	call	0x2a8a	; 0x2a8a <lcd_test>
    3f0e:	81 e0       	ldi	r24, 0x01	; 1
    3f10:	80 93 30 04 	sts	0x0430, r24	; 0x800430 <runmode>
    3f14:	c1 e0       	ldi	r28, 0x01	; 1
    3f16:	80 91 30 04 	lds	r24, 0x0430	; 0x800430 <runmode>
    3f1a:	88 23       	and	r24, r24
    3f1c:	39 f0       	breq	.+14     	; 0x3f2c <main+0x198>
    3f1e:	6b de       	rcall	.-810    	; 0x3bf6 <task>
    3f20:	c3 bf       	out	0x33, r28	; 51
    3f22:	88 95       	sleep
    3f24:	83 b7       	in	r24, 0x33	; 51
    3f26:	8e 7f       	andi	r24, 0xFE	; 254
    3f28:	83 bf       	out	0x33, r24	; 51
    3f2a:	f5 cf       	rjmp	.-22     	; 0x3f16 <main+0x182>
    3f2c:	ff d9       	rcall	.-3074   	; 0x332c <lcd_shutdown>
    3f2e:	f8 94       	cli
    3f30:	80 b7       	in	r24, 0x30	; 48
    3f32:	80 68       	ori	r24, 0x80	; 128
    3f34:	80 bf       	out	0x30, r24	; 48
    3f36:	64 e0       	ldi	r22, 0x04	; 4
    3f38:	80 e0       	ldi	r24, 0x00	; 0
    3f3a:	0e 94 35 03 	call	0x66a	; 0x66a <sysclk_disable_module>
    3f3e:	62 e0       	ldi	r22, 0x02	; 2
    3f40:	80 e0       	ldi	r24, 0x00	; 0
    3f42:	0e 94 35 03 	call	0x66a	; 0x66a <sysclk_disable_module>
    3f46:	e2 dd       	rcall	.-1084   	; 0x3b0c <cpu_irq_save>
    3f48:	94 e0       	ldi	r25, 0x04	; 4
    3f4a:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    3f4e:	3c 98       	cbi	0x07, 4	; 7
    3f50:	44 9a       	sbi	0x08, 4	; 8
    3f52:	3d 98       	cbi	0x07, 5	; 7
    3f54:	45 9a       	sbi	0x08, 5	; 8
    3f56:	10 92 bc 00 	sts	0x00BC, r1	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    3f5a:	8f bf       	out	0x3f, r24	; 63
    3f5c:	60 e8       	ldi	r22, 0x80	; 128
    3f5e:	80 e0       	ldi	r24, 0x00	; 0
    3f60:	0e 94 35 03 	call	0x66a	; 0x66a <sysclk_disable_module>
    3f64:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3f68:	87 7f       	andi	r24, 0xF7	; 247
    3f6a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3f6e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3f72:	8f 7d       	andi	r24, 0xDF	; 223
    3f74:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3f78:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
    3f7c:	88 7f       	andi	r24, 0xF8	; 248
    3f7e:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
    3f82:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    3f86:	10 92 7e 00 	sts	0x007E, r1	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
    3f8a:	61 e0       	ldi	r22, 0x01	; 1
    3f8c:	80 e0       	ldi	r24, 0x00	; 0
    3f8e:	0e 94 35 03 	call	0x66a	; 0x66a <sysclk_disable_module>
    3f92:	bc dd       	rcall	.-1160   	; 0x3b0c <cpu_irq_save>
    3f94:	c8 2f       	mov	r28, r24
    3f96:	60 e2       	ldi	r22, 0x20	; 32
    3f98:	80 e0       	ldi	r24, 0x00	; 0
    3f9a:	0e 94 35 03 	call	0x66a	; 0x66a <sysclk_disable_module>
    3f9e:	21 98       	cbi	0x04, 1	; 4
    3fa0:	29 98       	cbi	0x05, 1	; 5
    3fa2:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    3fa6:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    3faa:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
    3fae:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    3fb2:	68 e0       	ldi	r22, 0x08	; 8
    3fb4:	80 e0       	ldi	r24, 0x00	; 0
    3fb6:	0e 94 35 03 	call	0x66a	; 0x66a <sysclk_disable_module>
    3fba:	23 9a       	sbi	0x04, 3	; 4
    3fbc:	2b 98       	cbi	0x05, 3	; 5
    3fbe:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3fc2:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    3fc6:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
    3fca:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
    3fce:	60 e4       	ldi	r22, 0x40	; 64
    3fd0:	80 e0       	ldi	r24, 0x00	; 0
    3fd2:	0e 94 35 03 	call	0x66a	; 0x66a <sysclk_disable_module>
    3fd6:	9a dd       	rcall	.-1228   	; 0x3b0c <cpu_irq_save>
    3fd8:	5f 93       	push	r21
    3fda:	50 e8       	ldi	r21, 0x80	; 128
    3fdc:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    3fe0:	50 e0       	ldi	r21, 0x00	; 0
    3fe2:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    3fe6:	5f 91       	pop	r21
    3fe8:	8f bf       	out	0x3f, r24	; 63
    3fea:	cf bf       	out	0x3f, r28	; 63
    3fec:	89 e0       	ldi	r24, 0x09	; 9
    3fee:	83 bf       	out	0x33, r24	; 51
    3ff0:	88 95       	sleep
    3ff2:	83 b7       	in	r24, 0x33	; 51
    3ff4:	8e 7f       	andi	r24, 0xFE	; 254
    3ff6:	83 bf       	out	0x33, r24	; 51
    3ff8:	80 e0       	ldi	r24, 0x00	; 0
    3ffa:	90 e0       	ldi	r25, 0x00	; 0
    3ffc:	df 91       	pop	r29
    3ffe:	cf 91       	pop	r28
    4000:	08 95       	ret

00004002 <__subsf3>:
    4002:	50 58       	subi	r21, 0x80	; 128

00004004 <__addsf3>:
    4004:	bb 27       	eor	r27, r27
    4006:	aa 27       	eor	r26, r26
    4008:	0e d0       	rcall	.+28     	; 0x4026 <__addsf3x>
    400a:	b1 c1       	rjmp	.+866    	; 0x436e <__fp_round>
    400c:	a2 d1       	rcall	.+836    	; 0x4352 <__fp_pscA>
    400e:	30 f0       	brcs	.+12     	; 0x401c <__addsf3+0x18>
    4010:	a7 d1       	rcall	.+846    	; 0x4360 <__fp_pscB>
    4012:	20 f0       	brcs	.+8      	; 0x401c <__addsf3+0x18>
    4014:	31 f4       	brne	.+12     	; 0x4022 <__addsf3+0x1e>
    4016:	9f 3f       	cpi	r25, 0xFF	; 255
    4018:	11 f4       	brne	.+4      	; 0x401e <__addsf3+0x1a>
    401a:	1e f4       	brtc	.+6      	; 0x4022 <__addsf3+0x1e>
    401c:	97 c1       	rjmp	.+814    	; 0x434c <__fp_nan>
    401e:	0e f4       	brtc	.+2      	; 0x4022 <__addsf3+0x1e>
    4020:	e0 95       	com	r30
    4022:	e7 fb       	bst	r30, 7
    4024:	64 c1       	rjmp	.+712    	; 0x42ee <__fp_inf>

00004026 <__addsf3x>:
    4026:	e9 2f       	mov	r30, r25
    4028:	b3 d1       	rcall	.+870    	; 0x4390 <__fp_split3>
    402a:	80 f3       	brcs	.-32     	; 0x400c <__addsf3+0x8>
    402c:	ba 17       	cp	r27, r26
    402e:	62 07       	cpc	r22, r18
    4030:	73 07       	cpc	r23, r19
    4032:	84 07       	cpc	r24, r20
    4034:	95 07       	cpc	r25, r21
    4036:	18 f0       	brcs	.+6      	; 0x403e <__addsf3x+0x18>
    4038:	71 f4       	brne	.+28     	; 0x4056 <__addsf3x+0x30>
    403a:	9e f5       	brtc	.+102    	; 0x40a2 <__addsf3x+0x7c>
    403c:	e2 c1       	rjmp	.+964    	; 0x4402 <__fp_zero>
    403e:	0e f4       	brtc	.+2      	; 0x4042 <__addsf3x+0x1c>
    4040:	e0 95       	com	r30
    4042:	0b 2e       	mov	r0, r27
    4044:	ba 2f       	mov	r27, r26
    4046:	a0 2d       	mov	r26, r0
    4048:	0b 01       	movw	r0, r22
    404a:	b9 01       	movw	r22, r18
    404c:	90 01       	movw	r18, r0
    404e:	0c 01       	movw	r0, r24
    4050:	ca 01       	movw	r24, r20
    4052:	a0 01       	movw	r20, r0
    4054:	11 24       	eor	r1, r1
    4056:	ff 27       	eor	r31, r31
    4058:	59 1b       	sub	r21, r25
    405a:	99 f0       	breq	.+38     	; 0x4082 <__addsf3x+0x5c>
    405c:	59 3f       	cpi	r21, 0xF9	; 249
    405e:	50 f4       	brcc	.+20     	; 0x4074 <__addsf3x+0x4e>
    4060:	50 3e       	cpi	r21, 0xE0	; 224
    4062:	68 f1       	brcs	.+90     	; 0x40be <__addsf3x+0x98>
    4064:	1a 16       	cp	r1, r26
    4066:	f0 40       	sbci	r31, 0x00	; 0
    4068:	a2 2f       	mov	r26, r18
    406a:	23 2f       	mov	r18, r19
    406c:	34 2f       	mov	r19, r20
    406e:	44 27       	eor	r20, r20
    4070:	58 5f       	subi	r21, 0xF8	; 248
    4072:	f3 cf       	rjmp	.-26     	; 0x405a <__addsf3x+0x34>
    4074:	46 95       	lsr	r20
    4076:	37 95       	ror	r19
    4078:	27 95       	ror	r18
    407a:	a7 95       	ror	r26
    407c:	f0 40       	sbci	r31, 0x00	; 0
    407e:	53 95       	inc	r21
    4080:	c9 f7       	brne	.-14     	; 0x4074 <__addsf3x+0x4e>
    4082:	7e f4       	brtc	.+30     	; 0x40a2 <__addsf3x+0x7c>
    4084:	1f 16       	cp	r1, r31
    4086:	ba 0b       	sbc	r27, r26
    4088:	62 0b       	sbc	r22, r18
    408a:	73 0b       	sbc	r23, r19
    408c:	84 0b       	sbc	r24, r20
    408e:	ba f0       	brmi	.+46     	; 0x40be <__addsf3x+0x98>
    4090:	91 50       	subi	r25, 0x01	; 1
    4092:	a1 f0       	breq	.+40     	; 0x40bc <__addsf3x+0x96>
    4094:	ff 0f       	add	r31, r31
    4096:	bb 1f       	adc	r27, r27
    4098:	66 1f       	adc	r22, r22
    409a:	77 1f       	adc	r23, r23
    409c:	88 1f       	adc	r24, r24
    409e:	c2 f7       	brpl	.-16     	; 0x4090 <__addsf3x+0x6a>
    40a0:	0e c0       	rjmp	.+28     	; 0x40be <__addsf3x+0x98>
    40a2:	ba 0f       	add	r27, r26
    40a4:	62 1f       	adc	r22, r18
    40a6:	73 1f       	adc	r23, r19
    40a8:	84 1f       	adc	r24, r20
    40aa:	48 f4       	brcc	.+18     	; 0x40be <__addsf3x+0x98>
    40ac:	87 95       	ror	r24
    40ae:	77 95       	ror	r23
    40b0:	67 95       	ror	r22
    40b2:	b7 95       	ror	r27
    40b4:	f7 95       	ror	r31
    40b6:	9e 3f       	cpi	r25, 0xFE	; 254
    40b8:	08 f0       	brcs	.+2      	; 0x40bc <__addsf3x+0x96>
    40ba:	b3 cf       	rjmp	.-154    	; 0x4022 <__addsf3+0x1e>
    40bc:	93 95       	inc	r25
    40be:	88 0f       	add	r24, r24
    40c0:	08 f0       	brcs	.+2      	; 0x40c4 <__addsf3x+0x9e>
    40c2:	99 27       	eor	r25, r25
    40c4:	ee 0f       	add	r30, r30
    40c6:	97 95       	ror	r25
    40c8:	87 95       	ror	r24
    40ca:	08 95       	ret

000040cc <__cmpsf2>:
    40cc:	ec d0       	rcall	.+472    	; 0x42a6 <__fp_cmp>
    40ce:	08 f4       	brcc	.+2      	; 0x40d2 <__cmpsf2+0x6>
    40d0:	81 e0       	ldi	r24, 0x01	; 1
    40d2:	08 95       	ret

000040d4 <__divsf3>:
    40d4:	0c d0       	rcall	.+24     	; 0x40ee <__divsf3x>
    40d6:	4b c1       	rjmp	.+662    	; 0x436e <__fp_round>
    40d8:	43 d1       	rcall	.+646    	; 0x4360 <__fp_pscB>
    40da:	40 f0       	brcs	.+16     	; 0x40ec <__divsf3+0x18>
    40dc:	3a d1       	rcall	.+628    	; 0x4352 <__fp_pscA>
    40de:	30 f0       	brcs	.+12     	; 0x40ec <__divsf3+0x18>
    40e0:	21 f4       	brne	.+8      	; 0x40ea <__divsf3+0x16>
    40e2:	5f 3f       	cpi	r21, 0xFF	; 255
    40e4:	19 f0       	breq	.+6      	; 0x40ec <__divsf3+0x18>
    40e6:	03 c1       	rjmp	.+518    	; 0x42ee <__fp_inf>
    40e8:	51 11       	cpse	r21, r1
    40ea:	8c c1       	rjmp	.+792    	; 0x4404 <__fp_szero>
    40ec:	2f c1       	rjmp	.+606    	; 0x434c <__fp_nan>

000040ee <__divsf3x>:
    40ee:	50 d1       	rcall	.+672    	; 0x4390 <__fp_split3>
    40f0:	98 f3       	brcs	.-26     	; 0x40d8 <__divsf3+0x4>

000040f2 <__divsf3_pse>:
    40f2:	99 23       	and	r25, r25
    40f4:	c9 f3       	breq	.-14     	; 0x40e8 <__divsf3+0x14>
    40f6:	55 23       	and	r21, r21
    40f8:	b1 f3       	breq	.-20     	; 0x40e6 <__divsf3+0x12>
    40fa:	95 1b       	sub	r25, r21
    40fc:	55 0b       	sbc	r21, r21
    40fe:	bb 27       	eor	r27, r27
    4100:	aa 27       	eor	r26, r26
    4102:	62 17       	cp	r22, r18
    4104:	73 07       	cpc	r23, r19
    4106:	84 07       	cpc	r24, r20
    4108:	38 f0       	brcs	.+14     	; 0x4118 <__divsf3_pse+0x26>
    410a:	9f 5f       	subi	r25, 0xFF	; 255
    410c:	5f 4f       	sbci	r21, 0xFF	; 255
    410e:	22 0f       	add	r18, r18
    4110:	33 1f       	adc	r19, r19
    4112:	44 1f       	adc	r20, r20
    4114:	aa 1f       	adc	r26, r26
    4116:	a9 f3       	breq	.-22     	; 0x4102 <__divsf3_pse+0x10>
    4118:	33 d0       	rcall	.+102    	; 0x4180 <__divsf3_pse+0x8e>
    411a:	0e 2e       	mov	r0, r30
    411c:	3a f0       	brmi	.+14     	; 0x412c <__divsf3_pse+0x3a>
    411e:	e0 e8       	ldi	r30, 0x80	; 128
    4120:	30 d0       	rcall	.+96     	; 0x4182 <__divsf3_pse+0x90>
    4122:	91 50       	subi	r25, 0x01	; 1
    4124:	50 40       	sbci	r21, 0x00	; 0
    4126:	e6 95       	lsr	r30
    4128:	00 1c       	adc	r0, r0
    412a:	ca f7       	brpl	.-14     	; 0x411e <__divsf3_pse+0x2c>
    412c:	29 d0       	rcall	.+82     	; 0x4180 <__divsf3_pse+0x8e>
    412e:	fe 2f       	mov	r31, r30
    4130:	27 d0       	rcall	.+78     	; 0x4180 <__divsf3_pse+0x8e>
    4132:	66 0f       	add	r22, r22
    4134:	77 1f       	adc	r23, r23
    4136:	88 1f       	adc	r24, r24
    4138:	bb 1f       	adc	r27, r27
    413a:	26 17       	cp	r18, r22
    413c:	37 07       	cpc	r19, r23
    413e:	48 07       	cpc	r20, r24
    4140:	ab 07       	cpc	r26, r27
    4142:	b0 e8       	ldi	r27, 0x80	; 128
    4144:	09 f0       	breq	.+2      	; 0x4148 <__divsf3_pse+0x56>
    4146:	bb 0b       	sbc	r27, r27
    4148:	80 2d       	mov	r24, r0
    414a:	bf 01       	movw	r22, r30
    414c:	ff 27       	eor	r31, r31
    414e:	93 58       	subi	r25, 0x83	; 131
    4150:	5f 4f       	sbci	r21, 0xFF	; 255
    4152:	2a f0       	brmi	.+10     	; 0x415e <__divsf3_pse+0x6c>
    4154:	9e 3f       	cpi	r25, 0xFE	; 254
    4156:	51 05       	cpc	r21, r1
    4158:	68 f0       	brcs	.+26     	; 0x4174 <__divsf3_pse+0x82>
    415a:	c9 c0       	rjmp	.+402    	; 0x42ee <__fp_inf>
    415c:	53 c1       	rjmp	.+678    	; 0x4404 <__fp_szero>
    415e:	5f 3f       	cpi	r21, 0xFF	; 255
    4160:	ec f3       	brlt	.-6      	; 0x415c <__divsf3_pse+0x6a>
    4162:	98 3e       	cpi	r25, 0xE8	; 232
    4164:	dc f3       	brlt	.-10     	; 0x415c <__divsf3_pse+0x6a>
    4166:	86 95       	lsr	r24
    4168:	77 95       	ror	r23
    416a:	67 95       	ror	r22
    416c:	b7 95       	ror	r27
    416e:	f7 95       	ror	r31
    4170:	9f 5f       	subi	r25, 0xFF	; 255
    4172:	c9 f7       	brne	.-14     	; 0x4166 <__divsf3_pse+0x74>
    4174:	88 0f       	add	r24, r24
    4176:	91 1d       	adc	r25, r1
    4178:	96 95       	lsr	r25
    417a:	87 95       	ror	r24
    417c:	97 f9       	bld	r25, 7
    417e:	08 95       	ret
    4180:	e1 e0       	ldi	r30, 0x01	; 1
    4182:	66 0f       	add	r22, r22
    4184:	77 1f       	adc	r23, r23
    4186:	88 1f       	adc	r24, r24
    4188:	bb 1f       	adc	r27, r27
    418a:	62 17       	cp	r22, r18
    418c:	73 07       	cpc	r23, r19
    418e:	84 07       	cpc	r24, r20
    4190:	ba 07       	cpc	r27, r26
    4192:	20 f0       	brcs	.+8      	; 0x419c <__divsf3_pse+0xaa>
    4194:	62 1b       	sub	r22, r18
    4196:	73 0b       	sbc	r23, r19
    4198:	84 0b       	sbc	r24, r20
    419a:	ba 0b       	sbc	r27, r26
    419c:	ee 1f       	adc	r30, r30
    419e:	88 f7       	brcc	.-30     	; 0x4182 <__divsf3_pse+0x90>
    41a0:	e0 95       	com	r30
    41a2:	08 95       	ret

000041a4 <__fixsfsi>:
    41a4:	04 d0       	rcall	.+8      	; 0x41ae <__fixunssfsi>
    41a6:	68 94       	set
    41a8:	b1 11       	cpse	r27, r1
    41aa:	2c c1       	rjmp	.+600    	; 0x4404 <__fp_szero>
    41ac:	08 95       	ret

000041ae <__fixunssfsi>:
    41ae:	f8 d0       	rcall	.+496    	; 0x43a0 <__fp_splitA>
    41b0:	88 f0       	brcs	.+34     	; 0x41d4 <__fixunssfsi+0x26>
    41b2:	9f 57       	subi	r25, 0x7F	; 127
    41b4:	90 f0       	brcs	.+36     	; 0x41da <__fixunssfsi+0x2c>
    41b6:	b9 2f       	mov	r27, r25
    41b8:	99 27       	eor	r25, r25
    41ba:	b7 51       	subi	r27, 0x17	; 23
    41bc:	a0 f0       	brcs	.+40     	; 0x41e6 <__fixunssfsi+0x38>
    41be:	d1 f0       	breq	.+52     	; 0x41f4 <__fixunssfsi+0x46>
    41c0:	66 0f       	add	r22, r22
    41c2:	77 1f       	adc	r23, r23
    41c4:	88 1f       	adc	r24, r24
    41c6:	99 1f       	adc	r25, r25
    41c8:	1a f0       	brmi	.+6      	; 0x41d0 <__fixunssfsi+0x22>
    41ca:	ba 95       	dec	r27
    41cc:	c9 f7       	brne	.-14     	; 0x41c0 <__fixunssfsi+0x12>
    41ce:	12 c0       	rjmp	.+36     	; 0x41f4 <__fixunssfsi+0x46>
    41d0:	b1 30       	cpi	r27, 0x01	; 1
    41d2:	81 f0       	breq	.+32     	; 0x41f4 <__fixunssfsi+0x46>
    41d4:	16 d1       	rcall	.+556    	; 0x4402 <__fp_zero>
    41d6:	b1 e0       	ldi	r27, 0x01	; 1
    41d8:	08 95       	ret
    41da:	13 c1       	rjmp	.+550    	; 0x4402 <__fp_zero>
    41dc:	67 2f       	mov	r22, r23
    41de:	78 2f       	mov	r23, r24
    41e0:	88 27       	eor	r24, r24
    41e2:	b8 5f       	subi	r27, 0xF8	; 248
    41e4:	39 f0       	breq	.+14     	; 0x41f4 <__fixunssfsi+0x46>
    41e6:	b9 3f       	cpi	r27, 0xF9	; 249
    41e8:	cc f3       	brlt	.-14     	; 0x41dc <__fixunssfsi+0x2e>
    41ea:	86 95       	lsr	r24
    41ec:	77 95       	ror	r23
    41ee:	67 95       	ror	r22
    41f0:	b3 95       	inc	r27
    41f2:	d9 f7       	brne	.-10     	; 0x41ea <__fixunssfsi+0x3c>
    41f4:	3e f4       	brtc	.+14     	; 0x4204 <__fixunssfsi+0x56>
    41f6:	90 95       	com	r25
    41f8:	80 95       	com	r24
    41fa:	70 95       	com	r23
    41fc:	61 95       	neg	r22
    41fe:	7f 4f       	sbci	r23, 0xFF	; 255
    4200:	8f 4f       	sbci	r24, 0xFF	; 255
    4202:	9f 4f       	sbci	r25, 0xFF	; 255
    4204:	08 95       	ret

00004206 <__floatunsisf>:
    4206:	e8 94       	clt
    4208:	09 c0       	rjmp	.+18     	; 0x421c <__floatsisf+0x12>

0000420a <__floatsisf>:
    420a:	97 fb       	bst	r25, 7
    420c:	3e f4       	brtc	.+14     	; 0x421c <__floatsisf+0x12>
    420e:	90 95       	com	r25
    4210:	80 95       	com	r24
    4212:	70 95       	com	r23
    4214:	61 95       	neg	r22
    4216:	7f 4f       	sbci	r23, 0xFF	; 255
    4218:	8f 4f       	sbci	r24, 0xFF	; 255
    421a:	9f 4f       	sbci	r25, 0xFF	; 255
    421c:	99 23       	and	r25, r25
    421e:	a9 f0       	breq	.+42     	; 0x424a <__floatsisf+0x40>
    4220:	f9 2f       	mov	r31, r25
    4222:	96 e9       	ldi	r25, 0x96	; 150
    4224:	bb 27       	eor	r27, r27
    4226:	93 95       	inc	r25
    4228:	f6 95       	lsr	r31
    422a:	87 95       	ror	r24
    422c:	77 95       	ror	r23
    422e:	67 95       	ror	r22
    4230:	b7 95       	ror	r27
    4232:	f1 11       	cpse	r31, r1
    4234:	f8 cf       	rjmp	.-16     	; 0x4226 <__floatsisf+0x1c>
    4236:	fa f4       	brpl	.+62     	; 0x4276 <__floatsisf+0x6c>
    4238:	bb 0f       	add	r27, r27
    423a:	11 f4       	brne	.+4      	; 0x4240 <__floatsisf+0x36>
    423c:	60 ff       	sbrs	r22, 0
    423e:	1b c0       	rjmp	.+54     	; 0x4276 <__floatsisf+0x6c>
    4240:	6f 5f       	subi	r22, 0xFF	; 255
    4242:	7f 4f       	sbci	r23, 0xFF	; 255
    4244:	8f 4f       	sbci	r24, 0xFF	; 255
    4246:	9f 4f       	sbci	r25, 0xFF	; 255
    4248:	16 c0       	rjmp	.+44     	; 0x4276 <__floatsisf+0x6c>
    424a:	88 23       	and	r24, r24
    424c:	11 f0       	breq	.+4      	; 0x4252 <__floatsisf+0x48>
    424e:	96 e9       	ldi	r25, 0x96	; 150
    4250:	11 c0       	rjmp	.+34     	; 0x4274 <__floatsisf+0x6a>
    4252:	77 23       	and	r23, r23
    4254:	21 f0       	breq	.+8      	; 0x425e <__floatsisf+0x54>
    4256:	9e e8       	ldi	r25, 0x8E	; 142
    4258:	87 2f       	mov	r24, r23
    425a:	76 2f       	mov	r23, r22
    425c:	05 c0       	rjmp	.+10     	; 0x4268 <__floatsisf+0x5e>
    425e:	66 23       	and	r22, r22
    4260:	71 f0       	breq	.+28     	; 0x427e <__floatsisf+0x74>
    4262:	96 e8       	ldi	r25, 0x86	; 134
    4264:	86 2f       	mov	r24, r22
    4266:	70 e0       	ldi	r23, 0x00	; 0
    4268:	60 e0       	ldi	r22, 0x00	; 0
    426a:	2a f0       	brmi	.+10     	; 0x4276 <__floatsisf+0x6c>
    426c:	9a 95       	dec	r25
    426e:	66 0f       	add	r22, r22
    4270:	77 1f       	adc	r23, r23
    4272:	88 1f       	adc	r24, r24
    4274:	da f7       	brpl	.-10     	; 0x426c <__floatsisf+0x62>
    4276:	88 0f       	add	r24, r24
    4278:	96 95       	lsr	r25
    427a:	87 95       	ror	r24
    427c:	97 f9       	bld	r25, 7
    427e:	08 95       	ret

00004280 <floor>:
    4280:	a9 d0       	rcall	.+338    	; 0x43d4 <__fp_trunc>
    4282:	80 f0       	brcs	.+32     	; 0x42a4 <floor+0x24>
    4284:	9f 37       	cpi	r25, 0x7F	; 127
    4286:	40 f4       	brcc	.+16     	; 0x4298 <floor+0x18>
    4288:	91 11       	cpse	r25, r1
    428a:	0e f0       	brts	.+2      	; 0x428e <floor+0xe>
    428c:	bb c0       	rjmp	.+374    	; 0x4404 <__fp_szero>
    428e:	60 e0       	ldi	r22, 0x00	; 0
    4290:	70 e0       	ldi	r23, 0x00	; 0
    4292:	80 e8       	ldi	r24, 0x80	; 128
    4294:	9f eb       	ldi	r25, 0xBF	; 191
    4296:	08 95       	ret
    4298:	26 f4       	brtc	.+8      	; 0x42a2 <floor+0x22>
    429a:	1b 16       	cp	r1, r27
    429c:	61 1d       	adc	r22, r1
    429e:	71 1d       	adc	r23, r1
    42a0:	81 1d       	adc	r24, r1
    42a2:	2b c0       	rjmp	.+86     	; 0x42fa <__fp_mintl>
    42a4:	45 c0       	rjmp	.+138    	; 0x4330 <__fp_mpack>

000042a6 <__fp_cmp>:
    42a6:	99 0f       	add	r25, r25
    42a8:	00 08       	sbc	r0, r0
    42aa:	55 0f       	add	r21, r21
    42ac:	aa 0b       	sbc	r26, r26
    42ae:	e0 e8       	ldi	r30, 0x80	; 128
    42b0:	fe ef       	ldi	r31, 0xFE	; 254
    42b2:	16 16       	cp	r1, r22
    42b4:	17 06       	cpc	r1, r23
    42b6:	e8 07       	cpc	r30, r24
    42b8:	f9 07       	cpc	r31, r25
    42ba:	c0 f0       	brcs	.+48     	; 0x42ec <__fp_cmp+0x46>
    42bc:	12 16       	cp	r1, r18
    42be:	13 06       	cpc	r1, r19
    42c0:	e4 07       	cpc	r30, r20
    42c2:	f5 07       	cpc	r31, r21
    42c4:	98 f0       	brcs	.+38     	; 0x42ec <__fp_cmp+0x46>
    42c6:	62 1b       	sub	r22, r18
    42c8:	73 0b       	sbc	r23, r19
    42ca:	84 0b       	sbc	r24, r20
    42cc:	95 0b       	sbc	r25, r21
    42ce:	39 f4       	brne	.+14     	; 0x42de <__fp_cmp+0x38>
    42d0:	0a 26       	eor	r0, r26
    42d2:	61 f0       	breq	.+24     	; 0x42ec <__fp_cmp+0x46>
    42d4:	23 2b       	or	r18, r19
    42d6:	24 2b       	or	r18, r20
    42d8:	25 2b       	or	r18, r21
    42da:	21 f4       	brne	.+8      	; 0x42e4 <__fp_cmp+0x3e>
    42dc:	08 95       	ret
    42de:	0a 26       	eor	r0, r26
    42e0:	09 f4       	brne	.+2      	; 0x42e4 <__fp_cmp+0x3e>
    42e2:	a1 40       	sbci	r26, 0x01	; 1
    42e4:	a6 95       	lsr	r26
    42e6:	8f ef       	ldi	r24, 0xFF	; 255
    42e8:	81 1d       	adc	r24, r1
    42ea:	81 1d       	adc	r24, r1
    42ec:	08 95       	ret

000042ee <__fp_inf>:
    42ee:	97 f9       	bld	r25, 7
    42f0:	9f 67       	ori	r25, 0x7F	; 127
    42f2:	80 e8       	ldi	r24, 0x80	; 128
    42f4:	70 e0       	ldi	r23, 0x00	; 0
    42f6:	60 e0       	ldi	r22, 0x00	; 0
    42f8:	08 95       	ret

000042fa <__fp_mintl>:
    42fa:	88 23       	and	r24, r24
    42fc:	71 f4       	brne	.+28     	; 0x431a <__fp_mintl+0x20>
    42fe:	77 23       	and	r23, r23
    4300:	21 f0       	breq	.+8      	; 0x430a <__fp_mintl+0x10>
    4302:	98 50       	subi	r25, 0x08	; 8
    4304:	87 2b       	or	r24, r23
    4306:	76 2f       	mov	r23, r22
    4308:	07 c0       	rjmp	.+14     	; 0x4318 <__fp_mintl+0x1e>
    430a:	66 23       	and	r22, r22
    430c:	11 f4       	brne	.+4      	; 0x4312 <__fp_mintl+0x18>
    430e:	99 27       	eor	r25, r25
    4310:	0d c0       	rjmp	.+26     	; 0x432c <__fp_mintl+0x32>
    4312:	90 51       	subi	r25, 0x10	; 16
    4314:	86 2b       	or	r24, r22
    4316:	70 e0       	ldi	r23, 0x00	; 0
    4318:	60 e0       	ldi	r22, 0x00	; 0
    431a:	2a f0       	brmi	.+10     	; 0x4326 <__fp_mintl+0x2c>
    431c:	9a 95       	dec	r25
    431e:	66 0f       	add	r22, r22
    4320:	77 1f       	adc	r23, r23
    4322:	88 1f       	adc	r24, r24
    4324:	da f7       	brpl	.-10     	; 0x431c <__fp_mintl+0x22>
    4326:	88 0f       	add	r24, r24
    4328:	96 95       	lsr	r25
    432a:	87 95       	ror	r24
    432c:	97 f9       	bld	r25, 7
    432e:	08 95       	ret

00004330 <__fp_mpack>:
    4330:	9f 3f       	cpi	r25, 0xFF	; 255
    4332:	31 f0       	breq	.+12     	; 0x4340 <__fp_mpack_finite+0xc>

00004334 <__fp_mpack_finite>:
    4334:	91 50       	subi	r25, 0x01	; 1
    4336:	20 f4       	brcc	.+8      	; 0x4340 <__fp_mpack_finite+0xc>
    4338:	87 95       	ror	r24
    433a:	77 95       	ror	r23
    433c:	67 95       	ror	r22
    433e:	b7 95       	ror	r27
    4340:	88 0f       	add	r24, r24
    4342:	91 1d       	adc	r25, r1
    4344:	96 95       	lsr	r25
    4346:	87 95       	ror	r24
    4348:	97 f9       	bld	r25, 7
    434a:	08 95       	ret

0000434c <__fp_nan>:
    434c:	9f ef       	ldi	r25, 0xFF	; 255
    434e:	80 ec       	ldi	r24, 0xC0	; 192
    4350:	08 95       	ret

00004352 <__fp_pscA>:
    4352:	00 24       	eor	r0, r0
    4354:	0a 94       	dec	r0
    4356:	16 16       	cp	r1, r22
    4358:	17 06       	cpc	r1, r23
    435a:	18 06       	cpc	r1, r24
    435c:	09 06       	cpc	r0, r25
    435e:	08 95       	ret

00004360 <__fp_pscB>:
    4360:	00 24       	eor	r0, r0
    4362:	0a 94       	dec	r0
    4364:	12 16       	cp	r1, r18
    4366:	13 06       	cpc	r1, r19
    4368:	14 06       	cpc	r1, r20
    436a:	05 06       	cpc	r0, r21
    436c:	08 95       	ret

0000436e <__fp_round>:
    436e:	09 2e       	mov	r0, r25
    4370:	03 94       	inc	r0
    4372:	00 0c       	add	r0, r0
    4374:	11 f4       	brne	.+4      	; 0x437a <__fp_round+0xc>
    4376:	88 23       	and	r24, r24
    4378:	52 f0       	brmi	.+20     	; 0x438e <__fp_round+0x20>
    437a:	bb 0f       	add	r27, r27
    437c:	40 f4       	brcc	.+16     	; 0x438e <__fp_round+0x20>
    437e:	bf 2b       	or	r27, r31
    4380:	11 f4       	brne	.+4      	; 0x4386 <__fp_round+0x18>
    4382:	60 ff       	sbrs	r22, 0
    4384:	04 c0       	rjmp	.+8      	; 0x438e <__fp_round+0x20>
    4386:	6f 5f       	subi	r22, 0xFF	; 255
    4388:	7f 4f       	sbci	r23, 0xFF	; 255
    438a:	8f 4f       	sbci	r24, 0xFF	; 255
    438c:	9f 4f       	sbci	r25, 0xFF	; 255
    438e:	08 95       	ret

00004390 <__fp_split3>:
    4390:	57 fd       	sbrc	r21, 7
    4392:	90 58       	subi	r25, 0x80	; 128
    4394:	44 0f       	add	r20, r20
    4396:	55 1f       	adc	r21, r21
    4398:	59 f0       	breq	.+22     	; 0x43b0 <__fp_splitA+0x10>
    439a:	5f 3f       	cpi	r21, 0xFF	; 255
    439c:	71 f0       	breq	.+28     	; 0x43ba <__fp_splitA+0x1a>
    439e:	47 95       	ror	r20

000043a0 <__fp_splitA>:
    43a0:	88 0f       	add	r24, r24
    43a2:	97 fb       	bst	r25, 7
    43a4:	99 1f       	adc	r25, r25
    43a6:	61 f0       	breq	.+24     	; 0x43c0 <__fp_splitA+0x20>
    43a8:	9f 3f       	cpi	r25, 0xFF	; 255
    43aa:	79 f0       	breq	.+30     	; 0x43ca <__fp_splitA+0x2a>
    43ac:	87 95       	ror	r24
    43ae:	08 95       	ret
    43b0:	12 16       	cp	r1, r18
    43b2:	13 06       	cpc	r1, r19
    43b4:	14 06       	cpc	r1, r20
    43b6:	55 1f       	adc	r21, r21
    43b8:	f2 cf       	rjmp	.-28     	; 0x439e <__fp_split3+0xe>
    43ba:	46 95       	lsr	r20
    43bc:	f1 df       	rcall	.-30     	; 0x43a0 <__fp_splitA>
    43be:	08 c0       	rjmp	.+16     	; 0x43d0 <__fp_splitA+0x30>
    43c0:	16 16       	cp	r1, r22
    43c2:	17 06       	cpc	r1, r23
    43c4:	18 06       	cpc	r1, r24
    43c6:	99 1f       	adc	r25, r25
    43c8:	f1 cf       	rjmp	.-30     	; 0x43ac <__fp_splitA+0xc>
    43ca:	86 95       	lsr	r24
    43cc:	71 05       	cpc	r23, r1
    43ce:	61 05       	cpc	r22, r1
    43d0:	08 94       	sec
    43d2:	08 95       	ret

000043d4 <__fp_trunc>:
    43d4:	e5 df       	rcall	.-54     	; 0x43a0 <__fp_splitA>
    43d6:	a0 f0       	brcs	.+40     	; 0x4400 <__fp_trunc+0x2c>
    43d8:	be e7       	ldi	r27, 0x7E	; 126
    43da:	b9 17       	cp	r27, r25
    43dc:	88 f4       	brcc	.+34     	; 0x4400 <__fp_trunc+0x2c>
    43de:	bb 27       	eor	r27, r27
    43e0:	9f 38       	cpi	r25, 0x8F	; 143
    43e2:	60 f4       	brcc	.+24     	; 0x43fc <__fp_trunc+0x28>
    43e4:	16 16       	cp	r1, r22
    43e6:	b1 1d       	adc	r27, r1
    43e8:	67 2f       	mov	r22, r23
    43ea:	78 2f       	mov	r23, r24
    43ec:	88 27       	eor	r24, r24
    43ee:	98 5f       	subi	r25, 0xF8	; 248
    43f0:	f7 cf       	rjmp	.-18     	; 0x43e0 <__fp_trunc+0xc>
    43f2:	86 95       	lsr	r24
    43f4:	77 95       	ror	r23
    43f6:	67 95       	ror	r22
    43f8:	b1 1d       	adc	r27, r1
    43fa:	93 95       	inc	r25
    43fc:	96 39       	cpi	r25, 0x96	; 150
    43fe:	c8 f3       	brcs	.-14     	; 0x43f2 <__fp_trunc+0x1e>
    4400:	08 95       	ret

00004402 <__fp_zero>:
    4402:	e8 94       	clt

00004404 <__fp_szero>:
    4404:	bb 27       	eor	r27, r27
    4406:	66 27       	eor	r22, r22
    4408:	77 27       	eor	r23, r23
    440a:	cb 01       	movw	r24, r22
    440c:	97 f9       	bld	r25, 7
    440e:	08 95       	ret

00004410 <__gesf2>:
    4410:	4a df       	rcall	.-364    	; 0x42a6 <__fp_cmp>
    4412:	08 f4       	brcc	.+2      	; 0x4416 <__gesf2+0x6>
    4414:	8f ef       	ldi	r24, 0xFF	; 255
    4416:	08 95       	ret

00004418 <__mulsf3>:
    4418:	0b d0       	rcall	.+22     	; 0x4430 <__mulsf3x>
    441a:	a9 cf       	rjmp	.-174    	; 0x436e <__fp_round>
    441c:	9a df       	rcall	.-204    	; 0x4352 <__fp_pscA>
    441e:	28 f0       	brcs	.+10     	; 0x442a <__mulsf3+0x12>
    4420:	9f df       	rcall	.-194    	; 0x4360 <__fp_pscB>
    4422:	18 f0       	brcs	.+6      	; 0x442a <__mulsf3+0x12>
    4424:	95 23       	and	r25, r21
    4426:	09 f0       	breq	.+2      	; 0x442a <__mulsf3+0x12>
    4428:	62 cf       	rjmp	.-316    	; 0x42ee <__fp_inf>
    442a:	90 cf       	rjmp	.-224    	; 0x434c <__fp_nan>
    442c:	11 24       	eor	r1, r1
    442e:	ea cf       	rjmp	.-44     	; 0x4404 <__fp_szero>

00004430 <__mulsf3x>:
    4430:	af df       	rcall	.-162    	; 0x4390 <__fp_split3>
    4432:	a0 f3       	brcs	.-24     	; 0x441c <__mulsf3+0x4>

00004434 <__mulsf3_pse>:
    4434:	95 9f       	mul	r25, r21
    4436:	d1 f3       	breq	.-12     	; 0x442c <__mulsf3+0x14>
    4438:	95 0f       	add	r25, r21
    443a:	50 e0       	ldi	r21, 0x00	; 0
    443c:	55 1f       	adc	r21, r21
    443e:	62 9f       	mul	r22, r18
    4440:	f0 01       	movw	r30, r0
    4442:	72 9f       	mul	r23, r18
    4444:	bb 27       	eor	r27, r27
    4446:	f0 0d       	add	r31, r0
    4448:	b1 1d       	adc	r27, r1
    444a:	63 9f       	mul	r22, r19
    444c:	aa 27       	eor	r26, r26
    444e:	f0 0d       	add	r31, r0
    4450:	b1 1d       	adc	r27, r1
    4452:	aa 1f       	adc	r26, r26
    4454:	64 9f       	mul	r22, r20
    4456:	66 27       	eor	r22, r22
    4458:	b0 0d       	add	r27, r0
    445a:	a1 1d       	adc	r26, r1
    445c:	66 1f       	adc	r22, r22
    445e:	82 9f       	mul	r24, r18
    4460:	22 27       	eor	r18, r18
    4462:	b0 0d       	add	r27, r0
    4464:	a1 1d       	adc	r26, r1
    4466:	62 1f       	adc	r22, r18
    4468:	73 9f       	mul	r23, r19
    446a:	b0 0d       	add	r27, r0
    446c:	a1 1d       	adc	r26, r1
    446e:	62 1f       	adc	r22, r18
    4470:	83 9f       	mul	r24, r19
    4472:	a0 0d       	add	r26, r0
    4474:	61 1d       	adc	r22, r1
    4476:	22 1f       	adc	r18, r18
    4478:	74 9f       	mul	r23, r20
    447a:	33 27       	eor	r19, r19
    447c:	a0 0d       	add	r26, r0
    447e:	61 1d       	adc	r22, r1
    4480:	23 1f       	adc	r18, r19
    4482:	84 9f       	mul	r24, r20
    4484:	60 0d       	add	r22, r0
    4486:	21 1d       	adc	r18, r1
    4488:	82 2f       	mov	r24, r18
    448a:	76 2f       	mov	r23, r22
    448c:	6a 2f       	mov	r22, r26
    448e:	11 24       	eor	r1, r1
    4490:	9f 57       	subi	r25, 0x7F	; 127
    4492:	50 40       	sbci	r21, 0x00	; 0
    4494:	8a f0       	brmi	.+34     	; 0x44b8 <__mulsf3_pse+0x84>
    4496:	e1 f0       	breq	.+56     	; 0x44d0 <__mulsf3_pse+0x9c>
    4498:	88 23       	and	r24, r24
    449a:	4a f0       	brmi	.+18     	; 0x44ae <__mulsf3_pse+0x7a>
    449c:	ee 0f       	add	r30, r30
    449e:	ff 1f       	adc	r31, r31
    44a0:	bb 1f       	adc	r27, r27
    44a2:	66 1f       	adc	r22, r22
    44a4:	77 1f       	adc	r23, r23
    44a6:	88 1f       	adc	r24, r24
    44a8:	91 50       	subi	r25, 0x01	; 1
    44aa:	50 40       	sbci	r21, 0x00	; 0
    44ac:	a9 f7       	brne	.-22     	; 0x4498 <__mulsf3_pse+0x64>
    44ae:	9e 3f       	cpi	r25, 0xFE	; 254
    44b0:	51 05       	cpc	r21, r1
    44b2:	70 f0       	brcs	.+28     	; 0x44d0 <__mulsf3_pse+0x9c>
    44b4:	1c cf       	rjmp	.-456    	; 0x42ee <__fp_inf>
    44b6:	a6 cf       	rjmp	.-180    	; 0x4404 <__fp_szero>
    44b8:	5f 3f       	cpi	r21, 0xFF	; 255
    44ba:	ec f3       	brlt	.-6      	; 0x44b6 <__mulsf3_pse+0x82>
    44bc:	98 3e       	cpi	r25, 0xE8	; 232
    44be:	dc f3       	brlt	.-10     	; 0x44b6 <__mulsf3_pse+0x82>
    44c0:	86 95       	lsr	r24
    44c2:	77 95       	ror	r23
    44c4:	67 95       	ror	r22
    44c6:	b7 95       	ror	r27
    44c8:	f7 95       	ror	r31
    44ca:	e7 95       	ror	r30
    44cc:	9f 5f       	subi	r25, 0xFF	; 255
    44ce:	c1 f7       	brne	.-16     	; 0x44c0 <__mulsf3_pse+0x8c>
    44d0:	fe 2b       	or	r31, r30
    44d2:	88 0f       	add	r24, r24
    44d4:	91 1d       	adc	r25, r1
    44d6:	96 95       	lsr	r25
    44d8:	87 95       	ror	r24
    44da:	97 f9       	bld	r25, 7
    44dc:	08 95       	ret

000044de <__udivmodqi4>:
    44de:	99 1b       	sub	r25, r25
    44e0:	79 e0       	ldi	r23, 0x09	; 9
    44e2:	04 c0       	rjmp	.+8      	; 0x44ec <__udivmodqi4_ep>

000044e4 <__udivmodqi4_loop>:
    44e4:	99 1f       	adc	r25, r25
    44e6:	96 17       	cp	r25, r22
    44e8:	08 f0       	brcs	.+2      	; 0x44ec <__udivmodqi4_ep>
    44ea:	96 1b       	sub	r25, r22

000044ec <__udivmodqi4_ep>:
    44ec:	88 1f       	adc	r24, r24
    44ee:	7a 95       	dec	r23
    44f0:	c9 f7       	brne	.-14     	; 0x44e4 <__udivmodqi4_loop>
    44f2:	80 95       	com	r24
    44f4:	08 95       	ret

000044f6 <__udivmodhi4>:
    44f6:	aa 1b       	sub	r26, r26
    44f8:	bb 1b       	sub	r27, r27
    44fa:	51 e1       	ldi	r21, 0x11	; 17
    44fc:	07 c0       	rjmp	.+14     	; 0x450c <__udivmodhi4_ep>

000044fe <__udivmodhi4_loop>:
    44fe:	aa 1f       	adc	r26, r26
    4500:	bb 1f       	adc	r27, r27
    4502:	a6 17       	cp	r26, r22
    4504:	b7 07       	cpc	r27, r23
    4506:	10 f0       	brcs	.+4      	; 0x450c <__udivmodhi4_ep>
    4508:	a6 1b       	sub	r26, r22
    450a:	b7 0b       	sbc	r27, r23

0000450c <__udivmodhi4_ep>:
    450c:	88 1f       	adc	r24, r24
    450e:	99 1f       	adc	r25, r25
    4510:	5a 95       	dec	r21
    4512:	a9 f7       	brne	.-22     	; 0x44fe <__udivmodhi4_loop>
    4514:	80 95       	com	r24
    4516:	90 95       	com	r25
    4518:	bc 01       	movw	r22, r24
    451a:	cd 01       	movw	r24, r26
    451c:	08 95       	ret

0000451e <__divmodhi4>:
    451e:	97 fb       	bst	r25, 7
    4520:	07 2e       	mov	r0, r23
    4522:	16 f4       	brtc	.+4      	; 0x4528 <__divmodhi4+0xa>
    4524:	00 94       	com	r0
    4526:	06 d0       	rcall	.+12     	; 0x4534 <__divmodhi4_neg1>
    4528:	77 fd       	sbrc	r23, 7
    452a:	08 d0       	rcall	.+16     	; 0x453c <__divmodhi4_neg2>
    452c:	e4 df       	rcall	.-56     	; 0x44f6 <__udivmodhi4>
    452e:	07 fc       	sbrc	r0, 7
    4530:	05 d0       	rcall	.+10     	; 0x453c <__divmodhi4_neg2>
    4532:	3e f4       	brtc	.+14     	; 0x4542 <__divmodhi4_exit>

00004534 <__divmodhi4_neg1>:
    4534:	90 95       	com	r25
    4536:	81 95       	neg	r24
    4538:	9f 4f       	sbci	r25, 0xFF	; 255
    453a:	08 95       	ret

0000453c <__divmodhi4_neg2>:
    453c:	70 95       	com	r23
    453e:	61 95       	neg	r22
    4540:	7f 4f       	sbci	r23, 0xFF	; 255

00004542 <__divmodhi4_exit>:
    4542:	08 95       	ret

00004544 <__tablejump2__>:
    4544:	ee 0f       	add	r30, r30
    4546:	ff 1f       	adc	r31, r31
    4548:	05 90       	lpm	r0, Z+
    454a:	f4 91       	lpm	r31, Z
    454c:	e0 2d       	mov	r30, r0
    454e:	09 94       	ijmp

00004550 <strcpy>:
    4550:	fb 01       	movw	r30, r22
    4552:	dc 01       	movw	r26, r24
    4554:	01 90       	ld	r0, Z+
    4556:	0d 92       	st	X+, r0
    4558:	00 20       	and	r0, r0
    455a:	e1 f7       	brne	.-8      	; 0x4554 <strcpy+0x4>
    455c:	08 95       	ret

0000455e <strnlen>:
    455e:	fc 01       	movw	r30, r24
    4560:	61 50       	subi	r22, 0x01	; 1
    4562:	70 40       	sbci	r23, 0x00	; 0
    4564:	01 90       	ld	r0, Z+
    4566:	01 10       	cpse	r0, r1
    4568:	d8 f7       	brcc	.-10     	; 0x4560 <strnlen+0x2>
    456a:	80 95       	com	r24
    456c:	90 95       	com	r25
    456e:	8e 0f       	add	r24, r30
    4570:	9f 1f       	adc	r25, r31
    4572:	08 95       	ret

00004574 <snprintf>:
    4574:	ae e0       	ldi	r26, 0x0E	; 14
    4576:	b0 e0       	ldi	r27, 0x00	; 0
    4578:	ef eb       	ldi	r30, 0xBF	; 191
    457a:	f2 e2       	ldi	r31, 0x22	; 34
    457c:	c3 c2       	rjmp	.+1414   	; 0x4b04 <__prologue_saves__+0x1c>
    457e:	0d 89       	ldd	r16, Y+21	; 0x15
    4580:	1e 89       	ldd	r17, Y+22	; 0x16
    4582:	8f 89       	ldd	r24, Y+23	; 0x17
    4584:	98 8d       	ldd	r25, Y+24	; 0x18
    4586:	26 e0       	ldi	r18, 0x06	; 6
    4588:	2c 83       	std	Y+4, r18	; 0x04
    458a:	1a 83       	std	Y+2, r17	; 0x02
    458c:	09 83       	std	Y+1, r16	; 0x01
    458e:	97 ff       	sbrs	r25, 7
    4590:	02 c0       	rjmp	.+4      	; 0x4596 <snprintf+0x22>
    4592:	80 e0       	ldi	r24, 0x00	; 0
    4594:	90 e8       	ldi	r25, 0x80	; 128
    4596:	01 97       	sbiw	r24, 0x01	; 1
    4598:	9e 83       	std	Y+6, r25	; 0x06
    459a:	8d 83       	std	Y+5, r24	; 0x05
    459c:	ae 01       	movw	r20, r28
    459e:	45 5e       	subi	r20, 0xE5	; 229
    45a0:	5f 4f       	sbci	r21, 0xFF	; 255
    45a2:	69 8d       	ldd	r22, Y+25	; 0x19
    45a4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    45a6:	ce 01       	movw	r24, r28
    45a8:	01 96       	adiw	r24, 0x01	; 1
    45aa:	11 d0       	rcall	.+34     	; 0x45ce <vfprintf>
    45ac:	4d 81       	ldd	r20, Y+5	; 0x05
    45ae:	5e 81       	ldd	r21, Y+6	; 0x06
    45b0:	57 fd       	sbrc	r21, 7
    45b2:	0a c0       	rjmp	.+20     	; 0x45c8 <snprintf+0x54>
    45b4:	2f 81       	ldd	r18, Y+7	; 0x07
    45b6:	38 85       	ldd	r19, Y+8	; 0x08
    45b8:	42 17       	cp	r20, r18
    45ba:	53 07       	cpc	r21, r19
    45bc:	0c f4       	brge	.+2      	; 0x45c0 <snprintf+0x4c>
    45be:	9a 01       	movw	r18, r20
    45c0:	f8 01       	movw	r30, r16
    45c2:	e2 0f       	add	r30, r18
    45c4:	f3 1f       	adc	r31, r19
    45c6:	10 82       	st	Z, r1
    45c8:	2e 96       	adiw	r28, 0x0e	; 14
    45ca:	e4 e0       	ldi	r30, 0x04	; 4
    45cc:	b7 c2       	rjmp	.+1390   	; 0x4b3c <__epilogue_restores__+0x1c>

000045ce <vfprintf>:
    45ce:	ab e0       	ldi	r26, 0x0B	; 11
    45d0:	b0 e0       	ldi	r27, 0x00	; 0
    45d2:	ec ee       	ldi	r30, 0xEC	; 236
    45d4:	f2 e2       	ldi	r31, 0x22	; 34
    45d6:	88 c2       	rjmp	.+1296   	; 0x4ae8 <__prologue_saves__>
    45d8:	6c 01       	movw	r12, r24
    45da:	7b 01       	movw	r14, r22
    45dc:	8a 01       	movw	r16, r20
    45de:	fc 01       	movw	r30, r24
    45e0:	17 82       	std	Z+7, r1	; 0x07
    45e2:	16 82       	std	Z+6, r1	; 0x06
    45e4:	83 81       	ldd	r24, Z+3	; 0x03
    45e6:	81 ff       	sbrs	r24, 1
    45e8:	bf c1       	rjmp	.+894    	; 0x4968 <vfprintf+0x39a>
    45ea:	ce 01       	movw	r24, r28
    45ec:	01 96       	adiw	r24, 0x01	; 1
    45ee:	3c 01       	movw	r6, r24
    45f0:	f6 01       	movw	r30, r12
    45f2:	93 81       	ldd	r25, Z+3	; 0x03
    45f4:	f7 01       	movw	r30, r14
    45f6:	93 fd       	sbrc	r25, 3
    45f8:	85 91       	lpm	r24, Z+
    45fa:	93 ff       	sbrs	r25, 3
    45fc:	81 91       	ld	r24, Z+
    45fe:	7f 01       	movw	r14, r30
    4600:	88 23       	and	r24, r24
    4602:	09 f4       	brne	.+2      	; 0x4606 <vfprintf+0x38>
    4604:	ad c1       	rjmp	.+858    	; 0x4960 <vfprintf+0x392>
    4606:	85 32       	cpi	r24, 0x25	; 37
    4608:	39 f4       	brne	.+14     	; 0x4618 <vfprintf+0x4a>
    460a:	93 fd       	sbrc	r25, 3
    460c:	85 91       	lpm	r24, Z+
    460e:	93 ff       	sbrs	r25, 3
    4610:	81 91       	ld	r24, Z+
    4612:	7f 01       	movw	r14, r30
    4614:	85 32       	cpi	r24, 0x25	; 37
    4616:	21 f4       	brne	.+8      	; 0x4620 <vfprintf+0x52>
    4618:	b6 01       	movw	r22, r12
    461a:	90 e0       	ldi	r25, 0x00	; 0
    461c:	b5 d1       	rcall	.+874    	; 0x4988 <fputc>
    461e:	e8 cf       	rjmp	.-48     	; 0x45f0 <vfprintf+0x22>
    4620:	91 2c       	mov	r9, r1
    4622:	21 2c       	mov	r2, r1
    4624:	31 2c       	mov	r3, r1
    4626:	ff e1       	ldi	r31, 0x1F	; 31
    4628:	f3 15       	cp	r31, r3
    462a:	d8 f0       	brcs	.+54     	; 0x4662 <vfprintf+0x94>
    462c:	8b 32       	cpi	r24, 0x2B	; 43
    462e:	79 f0       	breq	.+30     	; 0x464e <vfprintf+0x80>
    4630:	38 f4       	brcc	.+14     	; 0x4640 <vfprintf+0x72>
    4632:	80 32       	cpi	r24, 0x20	; 32
    4634:	79 f0       	breq	.+30     	; 0x4654 <vfprintf+0x86>
    4636:	83 32       	cpi	r24, 0x23	; 35
    4638:	a1 f4       	brne	.+40     	; 0x4662 <vfprintf+0x94>
    463a:	23 2d       	mov	r18, r3
    463c:	20 61       	ori	r18, 0x10	; 16
    463e:	1d c0       	rjmp	.+58     	; 0x467a <vfprintf+0xac>
    4640:	8d 32       	cpi	r24, 0x2D	; 45
    4642:	61 f0       	breq	.+24     	; 0x465c <vfprintf+0x8e>
    4644:	80 33       	cpi	r24, 0x30	; 48
    4646:	69 f4       	brne	.+26     	; 0x4662 <vfprintf+0x94>
    4648:	23 2d       	mov	r18, r3
    464a:	21 60       	ori	r18, 0x01	; 1
    464c:	16 c0       	rjmp	.+44     	; 0x467a <vfprintf+0xac>
    464e:	83 2d       	mov	r24, r3
    4650:	82 60       	ori	r24, 0x02	; 2
    4652:	38 2e       	mov	r3, r24
    4654:	e3 2d       	mov	r30, r3
    4656:	e4 60       	ori	r30, 0x04	; 4
    4658:	3e 2e       	mov	r3, r30
    465a:	2a c0       	rjmp	.+84     	; 0x46b0 <vfprintf+0xe2>
    465c:	f3 2d       	mov	r31, r3
    465e:	f8 60       	ori	r31, 0x08	; 8
    4660:	1d c0       	rjmp	.+58     	; 0x469c <vfprintf+0xce>
    4662:	37 fc       	sbrc	r3, 7
    4664:	2d c0       	rjmp	.+90     	; 0x46c0 <vfprintf+0xf2>
    4666:	20 ed       	ldi	r18, 0xD0	; 208
    4668:	28 0f       	add	r18, r24
    466a:	2a 30       	cpi	r18, 0x0A	; 10
    466c:	40 f0       	brcs	.+16     	; 0x467e <vfprintf+0xb0>
    466e:	8e 32       	cpi	r24, 0x2E	; 46
    4670:	b9 f4       	brne	.+46     	; 0x46a0 <vfprintf+0xd2>
    4672:	36 fc       	sbrc	r3, 6
    4674:	75 c1       	rjmp	.+746    	; 0x4960 <vfprintf+0x392>
    4676:	23 2d       	mov	r18, r3
    4678:	20 64       	ori	r18, 0x40	; 64
    467a:	32 2e       	mov	r3, r18
    467c:	19 c0       	rjmp	.+50     	; 0x46b0 <vfprintf+0xe2>
    467e:	36 fe       	sbrs	r3, 6
    4680:	06 c0       	rjmp	.+12     	; 0x468e <vfprintf+0xc0>
    4682:	8a e0       	ldi	r24, 0x0A	; 10
    4684:	98 9e       	mul	r9, r24
    4686:	20 0d       	add	r18, r0
    4688:	11 24       	eor	r1, r1
    468a:	92 2e       	mov	r9, r18
    468c:	11 c0       	rjmp	.+34     	; 0x46b0 <vfprintf+0xe2>
    468e:	ea e0       	ldi	r30, 0x0A	; 10
    4690:	2e 9e       	mul	r2, r30
    4692:	20 0d       	add	r18, r0
    4694:	11 24       	eor	r1, r1
    4696:	22 2e       	mov	r2, r18
    4698:	f3 2d       	mov	r31, r3
    469a:	f0 62       	ori	r31, 0x20	; 32
    469c:	3f 2e       	mov	r3, r31
    469e:	08 c0       	rjmp	.+16     	; 0x46b0 <vfprintf+0xe2>
    46a0:	8c 36       	cpi	r24, 0x6C	; 108
    46a2:	21 f4       	brne	.+8      	; 0x46ac <vfprintf+0xde>
    46a4:	83 2d       	mov	r24, r3
    46a6:	80 68       	ori	r24, 0x80	; 128
    46a8:	38 2e       	mov	r3, r24
    46aa:	02 c0       	rjmp	.+4      	; 0x46b0 <vfprintf+0xe2>
    46ac:	88 36       	cpi	r24, 0x68	; 104
    46ae:	41 f4       	brne	.+16     	; 0x46c0 <vfprintf+0xf2>
    46b0:	f7 01       	movw	r30, r14
    46b2:	93 fd       	sbrc	r25, 3
    46b4:	85 91       	lpm	r24, Z+
    46b6:	93 ff       	sbrs	r25, 3
    46b8:	81 91       	ld	r24, Z+
    46ba:	7f 01       	movw	r14, r30
    46bc:	81 11       	cpse	r24, r1
    46be:	b3 cf       	rjmp	.-154    	; 0x4626 <vfprintf+0x58>
    46c0:	98 2f       	mov	r25, r24
    46c2:	9f 7d       	andi	r25, 0xDF	; 223
    46c4:	95 54       	subi	r25, 0x45	; 69
    46c6:	93 30       	cpi	r25, 0x03	; 3
    46c8:	28 f4       	brcc	.+10     	; 0x46d4 <vfprintf+0x106>
    46ca:	0c 5f       	subi	r16, 0xFC	; 252
    46cc:	1f 4f       	sbci	r17, 0xFF	; 255
    46ce:	9f e3       	ldi	r25, 0x3F	; 63
    46d0:	99 83       	std	Y+1, r25	; 0x01
    46d2:	0d c0       	rjmp	.+26     	; 0x46ee <vfprintf+0x120>
    46d4:	83 36       	cpi	r24, 0x63	; 99
    46d6:	31 f0       	breq	.+12     	; 0x46e4 <vfprintf+0x116>
    46d8:	83 37       	cpi	r24, 0x73	; 115
    46da:	71 f0       	breq	.+28     	; 0x46f8 <vfprintf+0x12a>
    46dc:	83 35       	cpi	r24, 0x53	; 83
    46de:	09 f0       	breq	.+2      	; 0x46e2 <vfprintf+0x114>
    46e0:	55 c0       	rjmp	.+170    	; 0x478c <vfprintf+0x1be>
    46e2:	20 c0       	rjmp	.+64     	; 0x4724 <vfprintf+0x156>
    46e4:	f8 01       	movw	r30, r16
    46e6:	80 81       	ld	r24, Z
    46e8:	89 83       	std	Y+1, r24	; 0x01
    46ea:	0e 5f       	subi	r16, 0xFE	; 254
    46ec:	1f 4f       	sbci	r17, 0xFF	; 255
    46ee:	88 24       	eor	r8, r8
    46f0:	83 94       	inc	r8
    46f2:	91 2c       	mov	r9, r1
    46f4:	53 01       	movw	r10, r6
    46f6:	12 c0       	rjmp	.+36     	; 0x471c <vfprintf+0x14e>
    46f8:	28 01       	movw	r4, r16
    46fa:	f2 e0       	ldi	r31, 0x02	; 2
    46fc:	4f 0e       	add	r4, r31
    46fe:	51 1c       	adc	r5, r1
    4700:	f8 01       	movw	r30, r16
    4702:	a0 80       	ld	r10, Z
    4704:	b1 80       	ldd	r11, Z+1	; 0x01
    4706:	36 fe       	sbrs	r3, 6
    4708:	03 c0       	rjmp	.+6      	; 0x4710 <vfprintf+0x142>
    470a:	69 2d       	mov	r22, r9
    470c:	70 e0       	ldi	r23, 0x00	; 0
    470e:	02 c0       	rjmp	.+4      	; 0x4714 <vfprintf+0x146>
    4710:	6f ef       	ldi	r22, 0xFF	; 255
    4712:	7f ef       	ldi	r23, 0xFF	; 255
    4714:	c5 01       	movw	r24, r10
    4716:	23 df       	rcall	.-442    	; 0x455e <strnlen>
    4718:	4c 01       	movw	r8, r24
    471a:	82 01       	movw	r16, r4
    471c:	f3 2d       	mov	r31, r3
    471e:	ff 77       	andi	r31, 0x7F	; 127
    4720:	3f 2e       	mov	r3, r31
    4722:	15 c0       	rjmp	.+42     	; 0x474e <vfprintf+0x180>
    4724:	28 01       	movw	r4, r16
    4726:	22 e0       	ldi	r18, 0x02	; 2
    4728:	42 0e       	add	r4, r18
    472a:	51 1c       	adc	r5, r1
    472c:	f8 01       	movw	r30, r16
    472e:	a0 80       	ld	r10, Z
    4730:	b1 80       	ldd	r11, Z+1	; 0x01
    4732:	36 fe       	sbrs	r3, 6
    4734:	03 c0       	rjmp	.+6      	; 0x473c <vfprintf+0x16e>
    4736:	69 2d       	mov	r22, r9
    4738:	70 e0       	ldi	r23, 0x00	; 0
    473a:	02 c0       	rjmp	.+4      	; 0x4740 <vfprintf+0x172>
    473c:	6f ef       	ldi	r22, 0xFF	; 255
    473e:	7f ef       	ldi	r23, 0xFF	; 255
    4740:	c5 01       	movw	r24, r10
    4742:	17 d1       	rcall	.+558    	; 0x4972 <strnlen_P>
    4744:	4c 01       	movw	r8, r24
    4746:	f3 2d       	mov	r31, r3
    4748:	f0 68       	ori	r31, 0x80	; 128
    474a:	3f 2e       	mov	r3, r31
    474c:	82 01       	movw	r16, r4
    474e:	33 fc       	sbrc	r3, 3
    4750:	19 c0       	rjmp	.+50     	; 0x4784 <vfprintf+0x1b6>
    4752:	82 2d       	mov	r24, r2
    4754:	90 e0       	ldi	r25, 0x00	; 0
    4756:	88 16       	cp	r8, r24
    4758:	99 06       	cpc	r9, r25
    475a:	a0 f4       	brcc	.+40     	; 0x4784 <vfprintf+0x1b6>
    475c:	b6 01       	movw	r22, r12
    475e:	80 e2       	ldi	r24, 0x20	; 32
    4760:	90 e0       	ldi	r25, 0x00	; 0
    4762:	12 d1       	rcall	.+548    	; 0x4988 <fputc>
    4764:	2a 94       	dec	r2
    4766:	f5 cf       	rjmp	.-22     	; 0x4752 <vfprintf+0x184>
    4768:	f5 01       	movw	r30, r10
    476a:	37 fc       	sbrc	r3, 7
    476c:	85 91       	lpm	r24, Z+
    476e:	37 fe       	sbrs	r3, 7
    4770:	81 91       	ld	r24, Z+
    4772:	5f 01       	movw	r10, r30
    4774:	b6 01       	movw	r22, r12
    4776:	90 e0       	ldi	r25, 0x00	; 0
    4778:	07 d1       	rcall	.+526    	; 0x4988 <fputc>
    477a:	21 10       	cpse	r2, r1
    477c:	2a 94       	dec	r2
    477e:	21 e0       	ldi	r18, 0x01	; 1
    4780:	82 1a       	sub	r8, r18
    4782:	91 08       	sbc	r9, r1
    4784:	81 14       	cp	r8, r1
    4786:	91 04       	cpc	r9, r1
    4788:	79 f7       	brne	.-34     	; 0x4768 <vfprintf+0x19a>
    478a:	e1 c0       	rjmp	.+450    	; 0x494e <vfprintf+0x380>
    478c:	84 36       	cpi	r24, 0x64	; 100
    478e:	11 f0       	breq	.+4      	; 0x4794 <vfprintf+0x1c6>
    4790:	89 36       	cpi	r24, 0x69	; 105
    4792:	39 f5       	brne	.+78     	; 0x47e2 <vfprintf+0x214>
    4794:	f8 01       	movw	r30, r16
    4796:	37 fe       	sbrs	r3, 7
    4798:	07 c0       	rjmp	.+14     	; 0x47a8 <vfprintf+0x1da>
    479a:	60 81       	ld	r22, Z
    479c:	71 81       	ldd	r23, Z+1	; 0x01
    479e:	82 81       	ldd	r24, Z+2	; 0x02
    47a0:	93 81       	ldd	r25, Z+3	; 0x03
    47a2:	0c 5f       	subi	r16, 0xFC	; 252
    47a4:	1f 4f       	sbci	r17, 0xFF	; 255
    47a6:	08 c0       	rjmp	.+16     	; 0x47b8 <vfprintf+0x1ea>
    47a8:	60 81       	ld	r22, Z
    47aa:	71 81       	ldd	r23, Z+1	; 0x01
    47ac:	07 2e       	mov	r0, r23
    47ae:	00 0c       	add	r0, r0
    47b0:	88 0b       	sbc	r24, r24
    47b2:	99 0b       	sbc	r25, r25
    47b4:	0e 5f       	subi	r16, 0xFE	; 254
    47b6:	1f 4f       	sbci	r17, 0xFF	; 255
    47b8:	f3 2d       	mov	r31, r3
    47ba:	ff 76       	andi	r31, 0x6F	; 111
    47bc:	3f 2e       	mov	r3, r31
    47be:	97 ff       	sbrs	r25, 7
    47c0:	09 c0       	rjmp	.+18     	; 0x47d4 <vfprintf+0x206>
    47c2:	90 95       	com	r25
    47c4:	80 95       	com	r24
    47c6:	70 95       	com	r23
    47c8:	61 95       	neg	r22
    47ca:	7f 4f       	sbci	r23, 0xFF	; 255
    47cc:	8f 4f       	sbci	r24, 0xFF	; 255
    47ce:	9f 4f       	sbci	r25, 0xFF	; 255
    47d0:	f0 68       	ori	r31, 0x80	; 128
    47d2:	3f 2e       	mov	r3, r31
    47d4:	2a e0       	ldi	r18, 0x0A	; 10
    47d6:	30 e0       	ldi	r19, 0x00	; 0
    47d8:	a3 01       	movw	r20, r6
    47da:	12 d1       	rcall	.+548    	; 0x4a00 <__ultoa_invert>
    47dc:	88 2e       	mov	r8, r24
    47de:	86 18       	sub	r8, r6
    47e0:	44 c0       	rjmp	.+136    	; 0x486a <vfprintf+0x29c>
    47e2:	85 37       	cpi	r24, 0x75	; 117
    47e4:	31 f4       	brne	.+12     	; 0x47f2 <vfprintf+0x224>
    47e6:	23 2d       	mov	r18, r3
    47e8:	2f 7e       	andi	r18, 0xEF	; 239
    47ea:	b2 2e       	mov	r11, r18
    47ec:	2a e0       	ldi	r18, 0x0A	; 10
    47ee:	30 e0       	ldi	r19, 0x00	; 0
    47f0:	25 c0       	rjmp	.+74     	; 0x483c <vfprintf+0x26e>
    47f2:	93 2d       	mov	r25, r3
    47f4:	99 7f       	andi	r25, 0xF9	; 249
    47f6:	b9 2e       	mov	r11, r25
    47f8:	8f 36       	cpi	r24, 0x6F	; 111
    47fa:	c1 f0       	breq	.+48     	; 0x482c <vfprintf+0x25e>
    47fc:	18 f4       	brcc	.+6      	; 0x4804 <vfprintf+0x236>
    47fe:	88 35       	cpi	r24, 0x58	; 88
    4800:	79 f0       	breq	.+30     	; 0x4820 <vfprintf+0x252>
    4802:	ae c0       	rjmp	.+348    	; 0x4960 <vfprintf+0x392>
    4804:	80 37       	cpi	r24, 0x70	; 112
    4806:	19 f0       	breq	.+6      	; 0x480e <vfprintf+0x240>
    4808:	88 37       	cpi	r24, 0x78	; 120
    480a:	21 f0       	breq	.+8      	; 0x4814 <vfprintf+0x246>
    480c:	a9 c0       	rjmp	.+338    	; 0x4960 <vfprintf+0x392>
    480e:	e9 2f       	mov	r30, r25
    4810:	e0 61       	ori	r30, 0x10	; 16
    4812:	be 2e       	mov	r11, r30
    4814:	b4 fe       	sbrs	r11, 4
    4816:	0d c0       	rjmp	.+26     	; 0x4832 <vfprintf+0x264>
    4818:	fb 2d       	mov	r31, r11
    481a:	f4 60       	ori	r31, 0x04	; 4
    481c:	bf 2e       	mov	r11, r31
    481e:	09 c0       	rjmp	.+18     	; 0x4832 <vfprintf+0x264>
    4820:	34 fe       	sbrs	r3, 4
    4822:	0a c0       	rjmp	.+20     	; 0x4838 <vfprintf+0x26a>
    4824:	29 2f       	mov	r18, r25
    4826:	26 60       	ori	r18, 0x06	; 6
    4828:	b2 2e       	mov	r11, r18
    482a:	06 c0       	rjmp	.+12     	; 0x4838 <vfprintf+0x26a>
    482c:	28 e0       	ldi	r18, 0x08	; 8
    482e:	30 e0       	ldi	r19, 0x00	; 0
    4830:	05 c0       	rjmp	.+10     	; 0x483c <vfprintf+0x26e>
    4832:	20 e1       	ldi	r18, 0x10	; 16
    4834:	30 e0       	ldi	r19, 0x00	; 0
    4836:	02 c0       	rjmp	.+4      	; 0x483c <vfprintf+0x26e>
    4838:	20 e1       	ldi	r18, 0x10	; 16
    483a:	32 e0       	ldi	r19, 0x02	; 2
    483c:	f8 01       	movw	r30, r16
    483e:	b7 fe       	sbrs	r11, 7
    4840:	07 c0       	rjmp	.+14     	; 0x4850 <vfprintf+0x282>
    4842:	60 81       	ld	r22, Z
    4844:	71 81       	ldd	r23, Z+1	; 0x01
    4846:	82 81       	ldd	r24, Z+2	; 0x02
    4848:	93 81       	ldd	r25, Z+3	; 0x03
    484a:	0c 5f       	subi	r16, 0xFC	; 252
    484c:	1f 4f       	sbci	r17, 0xFF	; 255
    484e:	06 c0       	rjmp	.+12     	; 0x485c <vfprintf+0x28e>
    4850:	60 81       	ld	r22, Z
    4852:	71 81       	ldd	r23, Z+1	; 0x01
    4854:	80 e0       	ldi	r24, 0x00	; 0
    4856:	90 e0       	ldi	r25, 0x00	; 0
    4858:	0e 5f       	subi	r16, 0xFE	; 254
    485a:	1f 4f       	sbci	r17, 0xFF	; 255
    485c:	a3 01       	movw	r20, r6
    485e:	d0 d0       	rcall	.+416    	; 0x4a00 <__ultoa_invert>
    4860:	88 2e       	mov	r8, r24
    4862:	86 18       	sub	r8, r6
    4864:	fb 2d       	mov	r31, r11
    4866:	ff 77       	andi	r31, 0x7F	; 127
    4868:	3f 2e       	mov	r3, r31
    486a:	36 fe       	sbrs	r3, 6
    486c:	0d c0       	rjmp	.+26     	; 0x4888 <vfprintf+0x2ba>
    486e:	23 2d       	mov	r18, r3
    4870:	2e 7f       	andi	r18, 0xFE	; 254
    4872:	a2 2e       	mov	r10, r18
    4874:	89 14       	cp	r8, r9
    4876:	58 f4       	brcc	.+22     	; 0x488e <vfprintf+0x2c0>
    4878:	34 fe       	sbrs	r3, 4
    487a:	0b c0       	rjmp	.+22     	; 0x4892 <vfprintf+0x2c4>
    487c:	32 fc       	sbrc	r3, 2
    487e:	09 c0       	rjmp	.+18     	; 0x4892 <vfprintf+0x2c4>
    4880:	83 2d       	mov	r24, r3
    4882:	8e 7e       	andi	r24, 0xEE	; 238
    4884:	a8 2e       	mov	r10, r24
    4886:	05 c0       	rjmp	.+10     	; 0x4892 <vfprintf+0x2c4>
    4888:	b8 2c       	mov	r11, r8
    488a:	a3 2c       	mov	r10, r3
    488c:	03 c0       	rjmp	.+6      	; 0x4894 <vfprintf+0x2c6>
    488e:	b8 2c       	mov	r11, r8
    4890:	01 c0       	rjmp	.+2      	; 0x4894 <vfprintf+0x2c6>
    4892:	b9 2c       	mov	r11, r9
    4894:	a4 fe       	sbrs	r10, 4
    4896:	0f c0       	rjmp	.+30     	; 0x48b6 <vfprintf+0x2e8>
    4898:	fe 01       	movw	r30, r28
    489a:	e8 0d       	add	r30, r8
    489c:	f1 1d       	adc	r31, r1
    489e:	80 81       	ld	r24, Z
    48a0:	80 33       	cpi	r24, 0x30	; 48
    48a2:	21 f4       	brne	.+8      	; 0x48ac <vfprintf+0x2de>
    48a4:	9a 2d       	mov	r25, r10
    48a6:	99 7e       	andi	r25, 0xE9	; 233
    48a8:	a9 2e       	mov	r10, r25
    48aa:	09 c0       	rjmp	.+18     	; 0x48be <vfprintf+0x2f0>
    48ac:	a2 fe       	sbrs	r10, 2
    48ae:	06 c0       	rjmp	.+12     	; 0x48bc <vfprintf+0x2ee>
    48b0:	b3 94       	inc	r11
    48b2:	b3 94       	inc	r11
    48b4:	04 c0       	rjmp	.+8      	; 0x48be <vfprintf+0x2f0>
    48b6:	8a 2d       	mov	r24, r10
    48b8:	86 78       	andi	r24, 0x86	; 134
    48ba:	09 f0       	breq	.+2      	; 0x48be <vfprintf+0x2f0>
    48bc:	b3 94       	inc	r11
    48be:	a3 fc       	sbrc	r10, 3
    48c0:	10 c0       	rjmp	.+32     	; 0x48e2 <vfprintf+0x314>
    48c2:	a0 fe       	sbrs	r10, 0
    48c4:	06 c0       	rjmp	.+12     	; 0x48d2 <vfprintf+0x304>
    48c6:	b2 14       	cp	r11, r2
    48c8:	80 f4       	brcc	.+32     	; 0x48ea <vfprintf+0x31c>
    48ca:	28 0c       	add	r2, r8
    48cc:	92 2c       	mov	r9, r2
    48ce:	9b 18       	sub	r9, r11
    48d0:	0d c0       	rjmp	.+26     	; 0x48ec <vfprintf+0x31e>
    48d2:	b2 14       	cp	r11, r2
    48d4:	58 f4       	brcc	.+22     	; 0x48ec <vfprintf+0x31e>
    48d6:	b6 01       	movw	r22, r12
    48d8:	80 e2       	ldi	r24, 0x20	; 32
    48da:	90 e0       	ldi	r25, 0x00	; 0
    48dc:	55 d0       	rcall	.+170    	; 0x4988 <fputc>
    48de:	b3 94       	inc	r11
    48e0:	f8 cf       	rjmp	.-16     	; 0x48d2 <vfprintf+0x304>
    48e2:	b2 14       	cp	r11, r2
    48e4:	18 f4       	brcc	.+6      	; 0x48ec <vfprintf+0x31e>
    48e6:	2b 18       	sub	r2, r11
    48e8:	02 c0       	rjmp	.+4      	; 0x48ee <vfprintf+0x320>
    48ea:	98 2c       	mov	r9, r8
    48ec:	21 2c       	mov	r2, r1
    48ee:	a4 fe       	sbrs	r10, 4
    48f0:	0f c0       	rjmp	.+30     	; 0x4910 <vfprintf+0x342>
    48f2:	b6 01       	movw	r22, r12
    48f4:	80 e3       	ldi	r24, 0x30	; 48
    48f6:	90 e0       	ldi	r25, 0x00	; 0
    48f8:	47 d0       	rcall	.+142    	; 0x4988 <fputc>
    48fa:	a2 fe       	sbrs	r10, 2
    48fc:	16 c0       	rjmp	.+44     	; 0x492a <vfprintf+0x35c>
    48fe:	a1 fc       	sbrc	r10, 1
    4900:	03 c0       	rjmp	.+6      	; 0x4908 <vfprintf+0x33a>
    4902:	88 e7       	ldi	r24, 0x78	; 120
    4904:	90 e0       	ldi	r25, 0x00	; 0
    4906:	02 c0       	rjmp	.+4      	; 0x490c <vfprintf+0x33e>
    4908:	88 e5       	ldi	r24, 0x58	; 88
    490a:	90 e0       	ldi	r25, 0x00	; 0
    490c:	b6 01       	movw	r22, r12
    490e:	0c c0       	rjmp	.+24     	; 0x4928 <vfprintf+0x35a>
    4910:	8a 2d       	mov	r24, r10
    4912:	86 78       	andi	r24, 0x86	; 134
    4914:	51 f0       	breq	.+20     	; 0x492a <vfprintf+0x35c>
    4916:	a1 fe       	sbrs	r10, 1
    4918:	02 c0       	rjmp	.+4      	; 0x491e <vfprintf+0x350>
    491a:	8b e2       	ldi	r24, 0x2B	; 43
    491c:	01 c0       	rjmp	.+2      	; 0x4920 <vfprintf+0x352>
    491e:	80 e2       	ldi	r24, 0x20	; 32
    4920:	a7 fc       	sbrc	r10, 7
    4922:	8d e2       	ldi	r24, 0x2D	; 45
    4924:	b6 01       	movw	r22, r12
    4926:	90 e0       	ldi	r25, 0x00	; 0
    4928:	2f d0       	rcall	.+94     	; 0x4988 <fputc>
    492a:	89 14       	cp	r8, r9
    492c:	30 f4       	brcc	.+12     	; 0x493a <vfprintf+0x36c>
    492e:	b6 01       	movw	r22, r12
    4930:	80 e3       	ldi	r24, 0x30	; 48
    4932:	90 e0       	ldi	r25, 0x00	; 0
    4934:	29 d0       	rcall	.+82     	; 0x4988 <fputc>
    4936:	9a 94       	dec	r9
    4938:	f8 cf       	rjmp	.-16     	; 0x492a <vfprintf+0x35c>
    493a:	8a 94       	dec	r8
    493c:	f3 01       	movw	r30, r6
    493e:	e8 0d       	add	r30, r8
    4940:	f1 1d       	adc	r31, r1
    4942:	80 81       	ld	r24, Z
    4944:	b6 01       	movw	r22, r12
    4946:	90 e0       	ldi	r25, 0x00	; 0
    4948:	1f d0       	rcall	.+62     	; 0x4988 <fputc>
    494a:	81 10       	cpse	r8, r1
    494c:	f6 cf       	rjmp	.-20     	; 0x493a <vfprintf+0x36c>
    494e:	22 20       	and	r2, r2
    4950:	09 f4       	brne	.+2      	; 0x4954 <vfprintf+0x386>
    4952:	4e ce       	rjmp	.-868    	; 0x45f0 <vfprintf+0x22>
    4954:	b6 01       	movw	r22, r12
    4956:	80 e2       	ldi	r24, 0x20	; 32
    4958:	90 e0       	ldi	r25, 0x00	; 0
    495a:	16 d0       	rcall	.+44     	; 0x4988 <fputc>
    495c:	2a 94       	dec	r2
    495e:	f7 cf       	rjmp	.-18     	; 0x494e <vfprintf+0x380>
    4960:	f6 01       	movw	r30, r12
    4962:	86 81       	ldd	r24, Z+6	; 0x06
    4964:	97 81       	ldd	r25, Z+7	; 0x07
    4966:	02 c0       	rjmp	.+4      	; 0x496c <vfprintf+0x39e>
    4968:	8f ef       	ldi	r24, 0xFF	; 255
    496a:	9f ef       	ldi	r25, 0xFF	; 255
    496c:	2b 96       	adiw	r28, 0x0b	; 11
    496e:	e2 e1       	ldi	r30, 0x12	; 18
    4970:	d7 c0       	rjmp	.+430    	; 0x4b20 <__epilogue_restores__>

00004972 <strnlen_P>:
    4972:	fc 01       	movw	r30, r24
    4974:	05 90       	lpm	r0, Z+
    4976:	61 50       	subi	r22, 0x01	; 1
    4978:	70 40       	sbci	r23, 0x00	; 0
    497a:	01 10       	cpse	r0, r1
    497c:	d8 f7       	brcc	.-10     	; 0x4974 <strnlen_P+0x2>
    497e:	80 95       	com	r24
    4980:	90 95       	com	r25
    4982:	8e 0f       	add	r24, r30
    4984:	9f 1f       	adc	r25, r31
    4986:	08 95       	ret

00004988 <fputc>:
    4988:	0f 93       	push	r16
    498a:	1f 93       	push	r17
    498c:	cf 93       	push	r28
    498e:	df 93       	push	r29
    4990:	fb 01       	movw	r30, r22
    4992:	23 81       	ldd	r18, Z+3	; 0x03
    4994:	21 fd       	sbrc	r18, 1
    4996:	03 c0       	rjmp	.+6      	; 0x499e <fputc+0x16>
    4998:	8f ef       	ldi	r24, 0xFF	; 255
    499a:	9f ef       	ldi	r25, 0xFF	; 255
    499c:	2c c0       	rjmp	.+88     	; 0x49f6 <fputc+0x6e>
    499e:	22 ff       	sbrs	r18, 2
    49a0:	16 c0       	rjmp	.+44     	; 0x49ce <fputc+0x46>
    49a2:	46 81       	ldd	r20, Z+6	; 0x06
    49a4:	57 81       	ldd	r21, Z+7	; 0x07
    49a6:	24 81       	ldd	r18, Z+4	; 0x04
    49a8:	35 81       	ldd	r19, Z+5	; 0x05
    49aa:	42 17       	cp	r20, r18
    49ac:	53 07       	cpc	r21, r19
    49ae:	44 f4       	brge	.+16     	; 0x49c0 <fputc+0x38>
    49b0:	a0 81       	ld	r26, Z
    49b2:	b1 81       	ldd	r27, Z+1	; 0x01
    49b4:	9d 01       	movw	r18, r26
    49b6:	2f 5f       	subi	r18, 0xFF	; 255
    49b8:	3f 4f       	sbci	r19, 0xFF	; 255
    49ba:	31 83       	std	Z+1, r19	; 0x01
    49bc:	20 83       	st	Z, r18
    49be:	8c 93       	st	X, r24
    49c0:	26 81       	ldd	r18, Z+6	; 0x06
    49c2:	37 81       	ldd	r19, Z+7	; 0x07
    49c4:	2f 5f       	subi	r18, 0xFF	; 255
    49c6:	3f 4f       	sbci	r19, 0xFF	; 255
    49c8:	37 83       	std	Z+7, r19	; 0x07
    49ca:	26 83       	std	Z+6, r18	; 0x06
    49cc:	14 c0       	rjmp	.+40     	; 0x49f6 <fputc+0x6e>
    49ce:	8b 01       	movw	r16, r22
    49d0:	ec 01       	movw	r28, r24
    49d2:	fb 01       	movw	r30, r22
    49d4:	00 84       	ldd	r0, Z+8	; 0x08
    49d6:	f1 85       	ldd	r31, Z+9	; 0x09
    49d8:	e0 2d       	mov	r30, r0
    49da:	09 95       	icall
    49dc:	89 2b       	or	r24, r25
    49de:	e1 f6       	brne	.-72     	; 0x4998 <fputc+0x10>
    49e0:	d8 01       	movw	r26, r16
    49e2:	16 96       	adiw	r26, 0x06	; 6
    49e4:	8d 91       	ld	r24, X+
    49e6:	9c 91       	ld	r25, X
    49e8:	17 97       	sbiw	r26, 0x07	; 7
    49ea:	01 96       	adiw	r24, 0x01	; 1
    49ec:	17 96       	adiw	r26, 0x07	; 7
    49ee:	9c 93       	st	X, r25
    49f0:	8e 93       	st	-X, r24
    49f2:	16 97       	sbiw	r26, 0x06	; 6
    49f4:	ce 01       	movw	r24, r28
    49f6:	df 91       	pop	r29
    49f8:	cf 91       	pop	r28
    49fa:	1f 91       	pop	r17
    49fc:	0f 91       	pop	r16
    49fe:	08 95       	ret

00004a00 <__ultoa_invert>:
    4a00:	fa 01       	movw	r30, r20
    4a02:	aa 27       	eor	r26, r26
    4a04:	28 30       	cpi	r18, 0x08	; 8
    4a06:	51 f1       	breq	.+84     	; 0x4a5c <__ultoa_invert+0x5c>
    4a08:	20 31       	cpi	r18, 0x10	; 16
    4a0a:	81 f1       	breq	.+96     	; 0x4a6c <__ultoa_invert+0x6c>
    4a0c:	e8 94       	clt
    4a0e:	6f 93       	push	r22
    4a10:	6e 7f       	andi	r22, 0xFE	; 254
    4a12:	6e 5f       	subi	r22, 0xFE	; 254
    4a14:	7f 4f       	sbci	r23, 0xFF	; 255
    4a16:	8f 4f       	sbci	r24, 0xFF	; 255
    4a18:	9f 4f       	sbci	r25, 0xFF	; 255
    4a1a:	af 4f       	sbci	r26, 0xFF	; 255
    4a1c:	b1 e0       	ldi	r27, 0x01	; 1
    4a1e:	3e d0       	rcall	.+124    	; 0x4a9c <__ultoa_invert+0x9c>
    4a20:	b4 e0       	ldi	r27, 0x04	; 4
    4a22:	3c d0       	rcall	.+120    	; 0x4a9c <__ultoa_invert+0x9c>
    4a24:	67 0f       	add	r22, r23
    4a26:	78 1f       	adc	r23, r24
    4a28:	89 1f       	adc	r24, r25
    4a2a:	9a 1f       	adc	r25, r26
    4a2c:	a1 1d       	adc	r26, r1
    4a2e:	68 0f       	add	r22, r24
    4a30:	79 1f       	adc	r23, r25
    4a32:	8a 1f       	adc	r24, r26
    4a34:	91 1d       	adc	r25, r1
    4a36:	a1 1d       	adc	r26, r1
    4a38:	6a 0f       	add	r22, r26
    4a3a:	71 1d       	adc	r23, r1
    4a3c:	81 1d       	adc	r24, r1
    4a3e:	91 1d       	adc	r25, r1
    4a40:	a1 1d       	adc	r26, r1
    4a42:	20 d0       	rcall	.+64     	; 0x4a84 <__ultoa_invert+0x84>
    4a44:	09 f4       	brne	.+2      	; 0x4a48 <__ultoa_invert+0x48>
    4a46:	68 94       	set
    4a48:	3f 91       	pop	r19
    4a4a:	2a e0       	ldi	r18, 0x0A	; 10
    4a4c:	26 9f       	mul	r18, r22
    4a4e:	11 24       	eor	r1, r1
    4a50:	30 19       	sub	r19, r0
    4a52:	30 5d       	subi	r19, 0xD0	; 208
    4a54:	31 93       	st	Z+, r19
    4a56:	de f6       	brtc	.-74     	; 0x4a0e <__ultoa_invert+0xe>
    4a58:	cf 01       	movw	r24, r30
    4a5a:	08 95       	ret
    4a5c:	46 2f       	mov	r20, r22
    4a5e:	47 70       	andi	r20, 0x07	; 7
    4a60:	40 5d       	subi	r20, 0xD0	; 208
    4a62:	41 93       	st	Z+, r20
    4a64:	b3 e0       	ldi	r27, 0x03	; 3
    4a66:	0f d0       	rcall	.+30     	; 0x4a86 <__ultoa_invert+0x86>
    4a68:	c9 f7       	brne	.-14     	; 0x4a5c <__ultoa_invert+0x5c>
    4a6a:	f6 cf       	rjmp	.-20     	; 0x4a58 <__ultoa_invert+0x58>
    4a6c:	46 2f       	mov	r20, r22
    4a6e:	4f 70       	andi	r20, 0x0F	; 15
    4a70:	40 5d       	subi	r20, 0xD0	; 208
    4a72:	4a 33       	cpi	r20, 0x3A	; 58
    4a74:	18 f0       	brcs	.+6      	; 0x4a7c <__ultoa_invert+0x7c>
    4a76:	49 5d       	subi	r20, 0xD9	; 217
    4a78:	31 fd       	sbrc	r19, 1
    4a7a:	40 52       	subi	r20, 0x20	; 32
    4a7c:	41 93       	st	Z+, r20
    4a7e:	02 d0       	rcall	.+4      	; 0x4a84 <__ultoa_invert+0x84>
    4a80:	a9 f7       	brne	.-22     	; 0x4a6c <__ultoa_invert+0x6c>
    4a82:	ea cf       	rjmp	.-44     	; 0x4a58 <__ultoa_invert+0x58>
    4a84:	b4 e0       	ldi	r27, 0x04	; 4
    4a86:	a6 95       	lsr	r26
    4a88:	97 95       	ror	r25
    4a8a:	87 95       	ror	r24
    4a8c:	77 95       	ror	r23
    4a8e:	67 95       	ror	r22
    4a90:	ba 95       	dec	r27
    4a92:	c9 f7       	brne	.-14     	; 0x4a86 <__ultoa_invert+0x86>
    4a94:	00 97       	sbiw	r24, 0x00	; 0
    4a96:	61 05       	cpc	r22, r1
    4a98:	71 05       	cpc	r23, r1
    4a9a:	08 95       	ret
    4a9c:	9b 01       	movw	r18, r22
    4a9e:	ac 01       	movw	r20, r24
    4aa0:	0a 2e       	mov	r0, r26
    4aa2:	06 94       	lsr	r0
    4aa4:	57 95       	ror	r21
    4aa6:	47 95       	ror	r20
    4aa8:	37 95       	ror	r19
    4aaa:	27 95       	ror	r18
    4aac:	ba 95       	dec	r27
    4aae:	c9 f7       	brne	.-14     	; 0x4aa2 <__ultoa_invert+0xa2>
    4ab0:	62 0f       	add	r22, r18
    4ab2:	73 1f       	adc	r23, r19
    4ab4:	84 1f       	adc	r24, r20
    4ab6:	95 1f       	adc	r25, r21
    4ab8:	a0 1d       	adc	r26, r0
    4aba:	08 95       	ret

00004abc <eeprom_read_byte>:
    4abc:	f9 99       	sbic	0x1f, 1	; 31
    4abe:	fe cf       	rjmp	.-4      	; 0x4abc <eeprom_read_byte>
    4ac0:	92 bd       	out	0x22, r25	; 34
    4ac2:	81 bd       	out	0x21, r24	; 33
    4ac4:	f8 9a       	sbi	0x1f, 0	; 31
    4ac6:	99 27       	eor	r25, r25
    4ac8:	80 b5       	in	r24, 0x20	; 32
    4aca:	08 95       	ret

00004acc <eeprom_write_byte>:
    4acc:	26 2f       	mov	r18, r22

00004ace <eeprom_write_r18>:
    4ace:	f9 99       	sbic	0x1f, 1	; 31
    4ad0:	fe cf       	rjmp	.-4      	; 0x4ace <eeprom_write_r18>
    4ad2:	1f ba       	out	0x1f, r1	; 31
    4ad4:	92 bd       	out	0x22, r25	; 34
    4ad6:	81 bd       	out	0x21, r24	; 33
    4ad8:	20 bd       	out	0x20, r18	; 32
    4ada:	0f b6       	in	r0, 0x3f	; 63
    4adc:	f8 94       	cli
    4ade:	fa 9a       	sbi	0x1f, 2	; 31
    4ae0:	f9 9a       	sbi	0x1f, 1	; 31
    4ae2:	0f be       	out	0x3f, r0	; 63
    4ae4:	01 96       	adiw	r24, 0x01	; 1
    4ae6:	08 95       	ret

00004ae8 <__prologue_saves__>:
    4ae8:	2f 92       	push	r2
    4aea:	3f 92       	push	r3
    4aec:	4f 92       	push	r4
    4aee:	5f 92       	push	r5
    4af0:	6f 92       	push	r6
    4af2:	7f 92       	push	r7
    4af4:	8f 92       	push	r8
    4af6:	9f 92       	push	r9
    4af8:	af 92       	push	r10
    4afa:	bf 92       	push	r11
    4afc:	cf 92       	push	r12
    4afe:	df 92       	push	r13
    4b00:	ef 92       	push	r14
    4b02:	ff 92       	push	r15
    4b04:	0f 93       	push	r16
    4b06:	1f 93       	push	r17
    4b08:	cf 93       	push	r28
    4b0a:	df 93       	push	r29
    4b0c:	cd b7       	in	r28, 0x3d	; 61
    4b0e:	de b7       	in	r29, 0x3e	; 62
    4b10:	ca 1b       	sub	r28, r26
    4b12:	db 0b       	sbc	r29, r27
    4b14:	0f b6       	in	r0, 0x3f	; 63
    4b16:	f8 94       	cli
    4b18:	de bf       	out	0x3e, r29	; 62
    4b1a:	0f be       	out	0x3f, r0	; 63
    4b1c:	cd bf       	out	0x3d, r28	; 61
    4b1e:	09 94       	ijmp

00004b20 <__epilogue_restores__>:
    4b20:	2a 88       	ldd	r2, Y+18	; 0x12
    4b22:	39 88       	ldd	r3, Y+17	; 0x11
    4b24:	48 88       	ldd	r4, Y+16	; 0x10
    4b26:	5f 84       	ldd	r5, Y+15	; 0x0f
    4b28:	6e 84       	ldd	r6, Y+14	; 0x0e
    4b2a:	7d 84       	ldd	r7, Y+13	; 0x0d
    4b2c:	8c 84       	ldd	r8, Y+12	; 0x0c
    4b2e:	9b 84       	ldd	r9, Y+11	; 0x0b
    4b30:	aa 84       	ldd	r10, Y+10	; 0x0a
    4b32:	b9 84       	ldd	r11, Y+9	; 0x09
    4b34:	c8 84       	ldd	r12, Y+8	; 0x08
    4b36:	df 80       	ldd	r13, Y+7	; 0x07
    4b38:	ee 80       	ldd	r14, Y+6	; 0x06
    4b3a:	fd 80       	ldd	r15, Y+5	; 0x05
    4b3c:	0c 81       	ldd	r16, Y+4	; 0x04
    4b3e:	1b 81       	ldd	r17, Y+3	; 0x03
    4b40:	aa 81       	ldd	r26, Y+2	; 0x02
    4b42:	b9 81       	ldd	r27, Y+1	; 0x01
    4b44:	ce 0f       	add	r28, r30
    4b46:	d1 1d       	adc	r29, r1
    4b48:	0f b6       	in	r0, 0x3f	; 63
    4b4a:	f8 94       	cli
    4b4c:	de bf       	out	0x3e, r29	; 62
    4b4e:	0f be       	out	0x3f, r0	; 63
    4b50:	cd bf       	out	0x3d, r28	; 61
    4b52:	ed 01       	movw	r28, r26
    4b54:	08 95       	ret

00004b56 <_exit>:
    4b56:	f8 94       	cli

00004b58 <__stop_program>:
    4b58:	ff cf       	rjmp	.-2      	; 0x4b58 <__stop_program>
