
Smart-LCD_SW.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000248  00800100  00004642  000046d6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004642  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000136  00800348  00800348  0000491e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000491e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000497c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003f0  00000000  00000000  000049c0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00008199  00000000  00000000  00004db0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001cbe  00000000  00000000  0000cf49  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000038f5  00000000  00000000  0000ec07  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001770  00000000  00000000  000124fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001f03  00000000  00000000  00013c6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000062ff  00000000  00000000  00015b6f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000400  00000000  00000000  0001be6e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	da c2       	rjmp	.+1460   	; 0x5b6 <__ctors_end>
       2:	00 00       	nop
       4:	0c 94 0e 0c 	jmp	0x181c	; 0x181c <__vector_1>
       8:	0c 94 eb 0b 	jmp	0x17d6	; 0x17d6 <__vector_2>
       c:	0c 94 c8 0b 	jmp	0x1790	; 0x1790 <__vector_3>
      10:	0c 94 a5 0b 	jmp	0x174a	; 0x174a <__vector_4>
      14:	0c 94 82 0b 	jmp	0x1704	; 0x1704 <__vector_5>
      18:	0c 94 5f 0b 	jmp	0x16be	; 0x16be <__vector_6>
      1c:	0c 94 3c 0b 	jmp	0x1678	; 0x1678 <__vector_7>
      20:	0c 94 19 0b 	jmp	0x1632	; 0x1632 <__vector_8>
      24:	e8 c6       	rjmp	.+3536   	; 0xdf6 <__vector_9>
      26:	00 00       	nop
      28:	0c 94 f6 0a 	jmp	0x15ec	; 0x15ec <__vector_10>
      2c:	0c 94 d3 0a 	jmp	0x15a6	; 0x15a6 <__vector_11>
      30:	0c 94 b0 0a 	jmp	0x1560	; 0x1560 <__vector_12>
      34:	7a c7       	rjmp	.+3828   	; 0xf2a <__vector_13>
      36:	00 00       	nop
      38:	0c 94 8d 0a 	jmp	0x151a	; 0x151a <__vector_14>
      3c:	0c 94 6a 0a 	jmp	0x14d4	; 0x14d4 <__vector_15>
      40:	0c 94 47 0a 	jmp	0x148e	; 0x148e <__vector_16>
      44:	0c 94 24 0a 	jmp	0x1448	; 0x1448 <__vector_17>
      48:	0c 94 01 0a 	jmp	0x1402	; 0x1402 <__vector_18>
      4c:	0c 94 de 09 	jmp	0x13bc	; 0x13bc <__vector_19>
      50:	0c 94 bb 09 	jmp	0x1376	; 0x1376 <__vector_20>
      54:	0c 94 b3 08 	jmp	0x1166	; 0x1166 <__vector_21>
      58:	0c 94 98 09 	jmp	0x1330	; 0x1330 <__vector_22>
      5c:	0c 94 75 09 	jmp	0x12ea	; 0x12ea <__vector_23>
      60:	0c 94 20 09 	jmp	0x1240	; 0x1240 <__vector_24>
      64:	0c 94 52 09 	jmp	0x12a4	; 0x12a4 <__vector_25>
      68:	07 19       	sub	r16, r7
      6a:	15 19       	sub	r17, r5
      6c:	21 19       	sub	r18, r1
      6e:	2b 19       	sub	r18, r11
      70:	37 19       	sub	r19, r7
      72:	3f 19       	sub	r19, r15
      74:	89 19       	sub	r24, r9
      76:	89 19       	sub	r24, r9
      78:	49 19       	sub	r20, r9
      7a:	53 19       	sub	r21, r3
      7c:	5b 19       	sub	r21, r11
      7e:	63 19       	sub	r22, r3
      80:	71 19       	sub	r23, r1
      82:	7f 19       	sub	r23, r15

00000084 <__trampolines_end>:
      84:	00 00       	nop
      86:	00 00       	nop
      88:	00 00       	nop
      8a:	00 20       	and	r0, r0
      8c:	20 20       	and	r2, r0
      8e:	20 20       	and	r2, r0
      90:	00 20       	and	r0, r0
      92:	50 50       	subi	r21, 0x00	; 0
      94:	50 00       	.word	0x0050	; ????
      96:	00 00       	nop
      98:	00 50       	subi	r16, 0x00	; 0
      9a:	50 f8       	bld	r5, 0
      9c:	50 f8       	bld	r5, 0
      9e:	50 50       	subi	r21, 0x00	; 0
      a0:	20 78       	andi	r18, 0x80	; 128
      a2:	a0 70       	andi	r26, 0x00	; 0
      a4:	28 f0       	brcs	.+10     	; 0xb0 <__trampolines_end+0x2c>
      a6:	20 c0       	rjmp	.+64     	; 0xe8 <__trampolines_end+0x64>
      a8:	c8 10       	cpse	r12, r8
      aa:	20 40       	sbci	r18, 0x00	; 0
      ac:	98 18       	sub	r9, r8
      ae:	60 90 a0 40 	lds	r6, 0x40A0	; 0x8040a0 <__bss_end+0x3c22>
      b2:	a8 90       	.word	0x90a8	; ????
      b4:	68 60       	ori	r22, 0x08	; 8
      b6:	20 40       	sbci	r18, 0x00	; 0
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	10 20       	and	r1, r0
      be:	40 40       	sbci	r20, 0x00	; 0
      c0:	40 20       	and	r4, r0
      c2:	10 40       	sbci	r17, 0x00	; 0
      c4:	20 10       	cpse	r2, r0
      c6:	10 10       	cpse	r1, r0
      c8:	20 40       	sbci	r18, 0x00	; 0
      ca:	00 50       	subi	r16, 0x00	; 0
      cc:	20 f8       	bld	r2, 0
      ce:	20 50       	subi	r18, 0x00	; 0
      d0:	00 00       	nop
      d2:	20 20       	and	r2, r0
      d4:	f8 20       	and	r15, r8
      d6:	20 00       	.word	0x0020	; ????
      d8:	00 00       	nop
      da:	00 00       	nop
      dc:	60 20       	and	r6, r0
      de:	40 00       	.word	0x0040	; ????
      e0:	00 00       	nop
      e2:	f8 00       	.word	0x00f8	; ????
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	00 00       	nop
      ea:	00 60       	ori	r16, 0x00	; 0
      ec:	60 00       	.word	0x0060	; ????
      ee:	08 10       	cpse	r0, r8
      f0:	20 40       	sbci	r18, 0x00	; 0
      f2:	80 00       	.word	0x0080	; ????
      f4:	70 88       	ldd	r7, Z+16	; 0x10
      f6:	98 a8       	ldd	r9, Y+48	; 0x30
      f8:	c8 88       	ldd	r12, Y+16	; 0x10
      fa:	70 20       	and	r7, r0
      fc:	60 20       	and	r6, r0
      fe:	20 20       	and	r2, r0
     100:	20 70       	andi	r18, 0x00	; 0
     102:	70 88       	ldd	r7, Z+16	; 0x10
     104:	08 10       	cpse	r0, r8
     106:	20 40       	sbci	r18, 0x00	; 0
     108:	f8 f8       	.word	0xf8f8	; ????
     10a:	10 20       	and	r1, r0
     10c:	10 08       	sbc	r1, r0
     10e:	88 70       	andi	r24, 0x08	; 8
     110:	10 30       	cpi	r17, 0x00	; 0
     112:	50 90 f8 10 	lds	r5, 0x10F8	; 0x8010f8 <__bss_end+0xc7a>
     116:	10 f8       	bld	r1, 0
     118:	80 f0       	brcs	.+32     	; 0x13a <__trampolines_end+0xb6>
     11a:	08 08       	sbc	r0, r8
     11c:	88 70       	andi	r24, 0x08	; 8
     11e:	30 40       	sbci	r19, 0x00	; 0
     120:	80 f0       	brcs	.+32     	; 0x142 <__trampolines_end+0xbe>
     122:	88 88       	ldd	r8, Y+16	; 0x10
     124:	70 f8       	bld	r7, 0
     126:	08 10       	cpse	r0, r8
     128:	20 40       	sbci	r18, 0x00	; 0
     12a:	40 40       	sbci	r20, 0x00	; 0
     12c:	70 88       	ldd	r7, Z+16	; 0x10
     12e:	88 70       	andi	r24, 0x08	; 8
     130:	88 88       	ldd	r8, Y+16	; 0x10
     132:	70 70       	andi	r23, 0x00	; 0
     134:	88 88       	ldd	r8, Y+16	; 0x10
     136:	78 08       	sbc	r7, r8
     138:	10 60       	ori	r17, 0x00	; 0
     13a:	00 60       	ori	r16, 0x00	; 0
     13c:	60 00       	.word	0x0060	; ????
     13e:	60 60       	ori	r22, 0x00	; 0
     140:	00 00       	nop
     142:	60 60       	ori	r22, 0x00	; 0
     144:	00 60       	ori	r16, 0x00	; 0
     146:	20 40       	sbci	r18, 0x00	; 0
     148:	08 10       	cpse	r0, r8
     14a:	20 40       	sbci	r18, 0x00	; 0
     14c:	20 10       	cpse	r2, r0
     14e:	08 00       	.word	0x0008	; ????
     150:	00 f8       	bld	r0, 0
     152:	00 f8       	bld	r0, 0
     154:	00 00       	nop
     156:	80 40       	sbci	r24, 0x00	; 0
     158:	20 10       	cpse	r2, r0
     15a:	20 40       	sbci	r18, 0x00	; 0
     15c:	80 70       	andi	r24, 0x00	; 0
     15e:	88 08       	sbc	r8, r8
     160:	10 20       	and	r1, r0
     162:	00 20       	and	r0, r0
     164:	70 88       	ldd	r7, Z+16	; 0x10
     166:	08 68       	ori	r16, 0x88	; 136
     168:	a8 a8       	ldd	r10, Y+48	; 0x30
     16a:	70 70       	andi	r23, 0x00	; 0
     16c:	88 88       	ldd	r8, Y+16	; 0x10
     16e:	88 f8       	.word	0xf888	; ????
     170:	88 88       	ldd	r8, Y+16	; 0x10
     172:	f0 88       	ldd	r15, Z+16	; 0x10
     174:	88 f0       	brcs	.+34     	; 0x198 <__trampolines_end+0x114>
     176:	88 88       	ldd	r8, Y+16	; 0x10
     178:	f0 70       	andi	r31, 0x00	; 0
     17a:	88 80       	ld	r8, Y
     17c:	80 80       	ld	r8, Z
     17e:	88 70       	andi	r24, 0x08	; 8
     180:	e0 90 88 88 	lds	r14, 0x8888	; 0x808888 <__bss_end+0x840a>
     184:	88 90       	.word	0x9088	; ????
     186:	e0 f8       	bld	r14, 0
     188:	80 80       	ld	r8, Z
     18a:	f0 80       	ld	r15, Z
     18c:	80 f8       	bld	r8, 0
     18e:	f8 80       	ld	r15, Y
     190:	80 e0       	ldi	r24, 0x00	; 0
     192:	80 80       	ld	r8, Z
     194:	80 70       	andi	r24, 0x00	; 0
     196:	88 80       	ld	r8, Y
     198:	80 98       	cbi	0x10, 0	; 16
     19a:	88 70       	andi	r24, 0x08	; 8
     19c:	88 88       	ldd	r8, Y+16	; 0x10
     19e:	88 f8       	.word	0xf888	; ????
     1a0:	88 88       	ldd	r8, Y+16	; 0x10
     1a2:	88 70       	andi	r24, 0x08	; 8
     1a4:	20 20       	and	r2, r0
     1a6:	20 20       	and	r2, r0
     1a8:	20 70       	andi	r18, 0x00	; 0
     1aa:	38 10       	cpse	r3, r8
     1ac:	10 10       	cpse	r1, r0
     1ae:	10 90 60 88 	lds	r1, 0x8860	; 0x808860 <__bss_end+0x83e2>
     1b2:	90 a0       	ldd	r9, Z+32	; 0x20
     1b4:	c0 a0       	ldd	r12, Z+32	; 0x20
     1b6:	90 88       	ldd	r9, Z+16	; 0x10
     1b8:	80 80       	ld	r8, Z
     1ba:	80 80       	ld	r8, Z
     1bc:	80 80       	ld	r8, Z
     1be:	f8 88       	ldd	r15, Y+16	; 0x10
     1c0:	d8 a8       	ldd	r13, Y+48	; 0x30
     1c2:	88 88       	ldd	r8, Y+16	; 0x10
     1c4:	88 88       	ldd	r8, Y+16	; 0x10
     1c6:	88 88       	ldd	r8, Y+16	; 0x10
     1c8:	c8 a8       	ldd	r12, Y+48	; 0x30
     1ca:	98 88       	ldd	r9, Y+16	; 0x10
     1cc:	88 70       	andi	r24, 0x08	; 8
     1ce:	88 88       	ldd	r8, Y+16	; 0x10
     1d0:	88 88       	ldd	r8, Y+16	; 0x10
     1d2:	88 70       	andi	r24, 0x08	; 8
     1d4:	f0 88       	ldd	r15, Z+16	; 0x10
     1d6:	88 f0       	brcs	.+34     	; 0x1fa <__trampolines_end+0x176>
     1d8:	80 80       	ld	r8, Z
     1da:	80 70       	andi	r24, 0x00	; 0
     1dc:	88 88       	ldd	r8, Y+16	; 0x10
     1de:	88 a8       	ldd	r8, Y+48	; 0x30
     1e0:	90 68       	ori	r25, 0x80	; 128
     1e2:	f0 88       	ldd	r15, Z+16	; 0x10
     1e4:	88 f0       	brcs	.+34     	; 0x208 <__trampolines_end+0x184>
     1e6:	a0 90 88 78 	lds	r10, 0x7888	; 0x807888 <__bss_end+0x740a>
     1ea:	80 80       	ld	r8, Z
     1ec:	70 08       	sbc	r7, r0
     1ee:	08 f0       	brcs	.+2      	; 0x1f2 <__trampolines_end+0x16e>
     1f0:	f8 20       	and	r15, r8
     1f2:	20 20       	and	r2, r0
     1f4:	20 20       	and	r2, r0
     1f6:	20 88       	ldd	r2, Z+16	; 0x10
     1f8:	88 88       	ldd	r8, Y+16	; 0x10
     1fa:	88 88       	ldd	r8, Y+16	; 0x10
     1fc:	88 70       	andi	r24, 0x08	; 8
     1fe:	88 88       	ldd	r8, Y+16	; 0x10
     200:	88 88       	ldd	r8, Y+16	; 0x10
     202:	88 50       	subi	r24, 0x08	; 8
     204:	20 88       	ldd	r2, Z+16	; 0x10
     206:	88 88       	ldd	r8, Y+16	; 0x10
     208:	a8 a8       	ldd	r10, Y+48	; 0x30
     20a:	d8 88       	ldd	r13, Y+16	; 0x10
     20c:	88 88       	ldd	r8, Y+16	; 0x10
     20e:	50 20       	and	r5, r0
     210:	50 88       	ldd	r5, Z+16	; 0x10
     212:	88 88       	ldd	r8, Y+16	; 0x10
     214:	88 50       	subi	r24, 0x08	; 8
     216:	20 20       	and	r2, r0
     218:	20 20       	and	r2, r0
     21a:	f8 08       	sbc	r15, r8
     21c:	10 20       	and	r1, r0
     21e:	40 80       	ld	r4, Z
     220:	f8 38       	cpi	r31, 0x88	; 136
     222:	20 20       	and	r2, r0
     224:	20 20       	and	r2, r0
     226:	20 38       	cpi	r18, 0x80	; 128
     228:	00 80       	ld	r0, Z
     22a:	40 20       	and	r4, r0
     22c:	10 08       	sbc	r1, r0
     22e:	00 e0       	ldi	r16, 0x00	; 0
     230:	20 20       	and	r2, r0
     232:	20 20       	and	r2, r0
     234:	20 e0       	ldi	r18, 0x00	; 0
     236:	20 50       	subi	r18, 0x00	; 0
     238:	88 00       	.word	0x0088	; ????
	...
     242:	00 f8       	bld	r0, 0
     244:	40 20       	and	r4, r0
     246:	10 00       	.word	0x0010	; ????
     248:	00 00       	nop
     24a:	00 00       	nop
     24c:	00 70       	andi	r16, 0x00	; 0
     24e:	08 78       	andi	r16, 0x88	; 136
     250:	88 78       	andi	r24, 0x88	; 136
     252:	80 80       	ld	r8, Z
     254:	b0 c8       	rjmp	.-3744   	; 0xfffff3b6 <__eeprom_end+0xff7ef3b6>
     256:	88 88       	ldd	r8, Y+16	; 0x10
     258:	f0 00       	.word	0x00f0	; ????
     25a:	00 70       	andi	r16, 0x00	; 0
     25c:	80 80       	ld	r8, Z
     25e:	88 70       	andi	r24, 0x08	; 8
     260:	08 08       	sbc	r0, r8
     262:	68 98       	cbi	0x0d, 0	; 13
     264:	88 88       	ldd	r8, Y+16	; 0x10
     266:	78 00       	.word	0x0078	; ????
     268:	00 70       	andi	r16, 0x00	; 0
     26a:	88 f8       	.word	0xf888	; ????
     26c:	80 70       	andi	r24, 0x00	; 0
     26e:	30 48       	sbci	r19, 0x80	; 128
     270:	40 e0       	ldi	r20, 0x00	; 0
     272:	40 40       	sbci	r20, 0x00	; 0
     274:	40 00       	.word	0x0040	; ????
     276:	00 78       	andi	r16, 0x80	; 128
     278:	88 78       	andi	r24, 0x88	; 136
     27a:	08 30       	cpi	r16, 0x08	; 8
     27c:	80 80       	ld	r8, Z
     27e:	b0 c8       	rjmp	.-3744   	; 0xfffff3e0 <__eeprom_end+0xff7ef3e0>
     280:	88 88       	ldd	r8, Y+16	; 0x10
     282:	88 20       	and	r8, r8
     284:	00 60       	ori	r16, 0x00	; 0
     286:	20 20       	and	r2, r0
     288:	20 70       	andi	r18, 0x00	; 0
     28a:	10 00       	.word	0x0010	; ????
     28c:	30 10       	cpse	r3, r0
     28e:	10 90 60 40 	lds	r1, 0x4060	; 0x804060 <__bss_end+0x3be2>
     292:	40 48       	sbci	r20, 0x80	; 128
     294:	50 60       	ori	r21, 0x00	; 0
     296:	50 48       	sbci	r21, 0x80	; 128
     298:	60 20       	and	r6, r0
     29a:	20 20       	and	r2, r0
     29c:	20 20       	and	r2, r0
     29e:	70 00       	.word	0x0070	; ????
     2a0:	00 d0       	rcall	.+0      	; 0x2a2 <__trampolines_end+0x21e>
     2a2:	a8 a8       	ldd	r10, Y+48	; 0x30
     2a4:	88 88       	ldd	r8, Y+16	; 0x10
     2a6:	00 00       	nop
     2a8:	b0 c8       	rjmp	.-3744   	; 0xfffff40a <__eeprom_end+0xff7ef40a>
     2aa:	88 88       	ldd	r8, Y+16	; 0x10
     2ac:	88 00       	.word	0x0088	; ????
     2ae:	00 70       	andi	r16, 0x00	; 0
     2b0:	88 88       	ldd	r8, Y+16	; 0x10
     2b2:	88 70       	andi	r24, 0x08	; 8
     2b4:	00 00       	nop
     2b6:	f0 88       	ldd	r15, Z+16	; 0x10
     2b8:	f0 80       	ld	r15, Z
     2ba:	80 00       	.word	0x0080	; ????
     2bc:	00 68       	ori	r16, 0x80	; 128
     2be:	98 78       	andi	r25, 0x88	; 136
     2c0:	08 08       	sbc	r0, r8
     2c2:	00 00       	nop
     2c4:	b0 c8       	rjmp	.-3744   	; 0xfffff426 <__eeprom_end+0xff7ef426>
     2c6:	80 80       	ld	r8, Z
     2c8:	80 00       	.word	0x0080	; ????
     2ca:	00 70       	andi	r16, 0x00	; 0
     2cc:	80 70       	andi	r24, 0x00	; 0
     2ce:	08 f0       	brcs	.+2      	; 0x2d2 <__trampolines_end+0x24e>
     2d0:	40 40       	sbci	r20, 0x00	; 0
     2d2:	e0 40       	sbci	r30, 0x00	; 0
     2d4:	40 48       	sbci	r20, 0x80	; 128
     2d6:	30 00       	.word	0x0030	; ????
     2d8:	00 88       	ldd	r0, Z+16	; 0x10
     2da:	88 88       	ldd	r8, Y+16	; 0x10
     2dc:	98 68       	ori	r25, 0x88	; 136
     2de:	00 00       	nop
     2e0:	88 88       	ldd	r8, Y+16	; 0x10
     2e2:	88 50       	subi	r24, 0x08	; 8
     2e4:	20 00       	.word	0x0020	; ????
     2e6:	00 88       	ldd	r0, Z+16	; 0x10
     2e8:	88 a8       	ldd	r8, Y+48	; 0x30
     2ea:	a8 50       	subi	r26, 0x08	; 8
     2ec:	00 00       	nop
     2ee:	88 50       	subi	r24, 0x08	; 8
     2f0:	20 50       	subi	r18, 0x00	; 0
     2f2:	88 00       	.word	0x0088	; ????
     2f4:	00 88       	ldd	r0, Z+16	; 0x10
     2f6:	88 78       	andi	r24, 0x88	; 136
     2f8:	08 70       	andi	r16, 0x08	; 8
     2fa:	00 00       	nop
     2fc:	f8 10       	cpse	r15, r8
     2fe:	20 40       	sbci	r18, 0x00	; 0
     300:	f8 10       	cpse	r15, r8
     302:	20 20       	and	r2, r0
     304:	40 20       	and	r4, r0
     306:	20 10       	cpse	r2, r0
     308:	20 20       	and	r2, r0
     30a:	20 20       	and	r2, r0
     30c:	20 20       	and	r2, r0
     30e:	20 40       	sbci	r18, 0x00	; 0
     310:	20 20       	and	r2, r0
     312:	10 20       	and	r1, r0
     314:	20 40       	sbci	r18, 0x00	; 0
     316:	20 50       	subi	r18, 0x00	; 0
     318:	20 00       	.word	0x0020	; ????
     31a:	00 00       	nop
	...

0000031d <sysfont_glyphs>:
     31d:	00 00 00 00 00 00 00 20 20 20 20 20 00 20 50 50     .......     . PP
     32d:	50 00 00 00 00 50 50 f8 50 f8 50 50 20 78 a0 70     P....PP.P.PP x.p
     33d:	28 f0 20 c0 c8 10 20 40 98 18 60 90 a0 40 a8 90     (. ... @..`..@..
     34d:	68 60 20 40 00 00 00 00 10 20 40 40 40 20 10 40     h` @..... @@@ .@
     35d:	20 10 10 10 20 40 00 50 20 f8 20 50 00 00 20 20      ... @.P . P..  
     36d:	f8 20 20 00 00 00 00 00 60 20 40 00 00 00 f8 00     .  .....` @.....
     37d:	00 00 00 00 00 00 00 60 60 00 08 10 20 40 80 00     .......``... @..
     38d:	70 88 98 a8 c8 88 70 20 60 20 20 20 20 70 70 88     p.....p `    pp.
     39d:	08 10 20 40 f8 f8 10 20 10 08 88 70 10 30 50 90     .. @... ...p.0P.
     3ad:	f8 10 10 f8 80 f0 08 08 88 70 30 40 80 f0 88 88     .........p0@....
     3bd:	70 f8 08 10 20 40 40 40 70 88 88 70 88 88 70 70     p... @@@p..p..pp
     3cd:	88 88 78 08 10 60 00 60 60 00 60 60 00 00 60 60     ..x..`.``.``..``
     3dd:	00 60 20 40 08 10 20 40 20 10 08 00 00 f8 00 f8     .` @.. @ .......
     3ed:	00 00 80 40 20 10 20 40 80 70 88 08 10 20 00 20     ...@ . @.p... . 
     3fd:	70 88 08 68 a8 a8 70 70 88 88 88 f8 88 88 f0 88     p..h..pp........
     40d:	88 f0 88 88 f0 70 88 80 80 80 88 70 e0 90 88 88     .....p.....p....
     41d:	88 90 e0 f8 80 80 f0 80 80 f8 f8 80 80 e0 80 80     ................
     42d:	80 70 88 80 80 98 88 70 88 88 88 f8 88 88 88 70     .p.....p.......p
     43d:	20 20 20 20 20 70 38 10 10 10 10 90 60 88 90 a0          p8.....`...
     44d:	c0 a0 90 88 80 80 80 80 80 80 f8 88 d8 a8 88 88     ................
     45d:	88 88 88 88 c8 a8 98 88 88 70 88 88 88 88 88 70     .........p.....p
     46d:	f0 88 88 f0 80 80 80 70 88 88 88 a8 90 68 f0 88     .......p.....h..
     47d:	88 f0 a0 90 88 78 80 80 70 08 08 f0 f8 20 20 20     .....x..p....   
     48d:	20 20 20 88 88 88 88 88 88 70 88 88 88 88 88 50        ......p.....P
     49d:	20 88 88 88 a8 a8 d8 88 88 88 50 20 50 88 88 88      .........P P...
     4ad:	88 50 20 20 20 20 f8 08 10 20 40 80 f8 38 20 20     .P    ... @..8  
     4bd:	20 20 20 38 00 80 40 20 10 08 00 e0 20 20 20 20        8..@ ....    
     4cd:	20 e0 20 50 88 00 00 00 00 00 00 00 00 00 00 f8      . P............
     4dd:	40 20 10 00 00 00 00 00 00 70 08 78 88 78 80 80     @ .......p.x.x..
     4ed:	b0 c8 88 88 f0 00 00 70 80 80 88 70 08 08 68 98     .......p...p..h.
     4fd:	88 88 78 00 00 70 88 f8 80 70 30 48 40 e0 40 40     ..x..p...p0H@.@@
     50d:	40 00 00 78 88 78 08 30 80 80 b0 c8 88 88 88 20     @..x.x.0....... 
     51d:	00 60 20 20 20 70 10 00 30 10 10 90 60 40 40 48     .`   p..0...`@@H
     52d:	50 60 50 48 60 20 20 20 20 20 70 00 00 d0 a8 a8     P`PH`     p.....
     53d:	88 88 00 00 b0 c8 88 88 88 00 00 70 88 88 88 70     ...........p...p
     54d:	00 00 f0 88 f0 80 80 00 00 68 98 78 08 08 00 00     .........h.x....
     55d:	b0 c8 80 80 80 00 00 70 80 70 08 f0 40 40 e0 40     .......p.p..@@.@
     56d:	40 48 30 00 00 88 88 88 98 68 00 00 88 88 88 50     @H0......h.....P
     57d:	20 00 00 88 88 a8 a8 50 00 00 88 50 20 50 88 00      ......P...P P..
     58d:	00 88 88 78 08 70 00 00 f8 10 20 40 f8 10 20 20     ...x.p.... @..  
     59d:	40 20 20 10 20 20 20 20 20 20 20 40 20 20 10 20     @  .       @  . 
     5ad:	20 40 20 50 20 00 00 00 00                           @ P ....

000005b6 <__ctors_end>:
     5b6:	11 24       	eor	r1, r1
     5b8:	1f be       	out	0x3f, r1	; 63
     5ba:	cf ef       	ldi	r28, 0xFF	; 255
     5bc:	d8 e0       	ldi	r29, 0x08	; 8
     5be:	de bf       	out	0x3e, r29	; 62
     5c0:	cd bf       	out	0x3d, r28	; 61

000005c2 <__do_copy_data>:
     5c2:	13 e0       	ldi	r17, 0x03	; 3
     5c4:	a0 e0       	ldi	r26, 0x00	; 0
     5c6:	b1 e0       	ldi	r27, 0x01	; 1
     5c8:	e2 e4       	ldi	r30, 0x42	; 66
     5ca:	f6 e4       	ldi	r31, 0x46	; 70
     5cc:	02 c0       	rjmp	.+4      	; 0x5d2 <__do_copy_data+0x10>
     5ce:	05 90       	lpm	r0, Z+
     5d0:	0d 92       	st	X+, r0
     5d2:	a8 34       	cpi	r26, 0x48	; 72
     5d4:	b1 07       	cpc	r27, r17
     5d6:	d9 f7       	brne	.-10     	; 0x5ce <__do_copy_data+0xc>

000005d8 <__do_clear_bss>:
     5d8:	24 e0       	ldi	r18, 0x04	; 4
     5da:	a8 e4       	ldi	r26, 0x48	; 72
     5dc:	b3 e0       	ldi	r27, 0x03	; 3
     5de:	01 c0       	rjmp	.+2      	; 0x5e2 <.do_clear_bss_start>

000005e0 <.do_clear_bss_loop>:
     5e0:	1d 92       	st	X+, r1

000005e2 <.do_clear_bss_start>:
     5e2:	ae 37       	cpi	r26, 0x7E	; 126
     5e4:	b2 07       	cpc	r27, r18
     5e6:	e1 f7       	brne	.-8      	; 0x5e0 <.do_clear_bss_loop>
     5e8:	0e 94 3f 1c 	call	0x387e	; 0x387e <main>
     5ec:	0c 94 1f 23 	jmp	0x463e	; 0x463e <_exit>

000005f0 <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
     5f0:	08 95       	ret

000005f2 <sysclk_init>:

/**
 *  Function to initialize the clock and disable clock for not required modules.
 */
void sysclk_init(void)
{
     5f2:	cf 93       	push	r28
     5f4:	df 93       	push	r29
     5f6:	1f 92       	push	r1
     5f8:	cd b7       	in	r28, 0x3d	; 61
     5fa:	de b7       	in	r29, 0x3e	; 62
	/* Turn off all peripheral clocks that can be turned off.
	 * The debugWIRE system of some devices that shares system clock with the SPI module.
	 * Thus the PRSPI bit in the PRR register must not be set when debugging.
	 */
	for (i = 0; i < NUMBER_OF_POWER_REG; i++) {
		*(reg++) = 0xFF;
     5fc:	8f ef       	ldi	r24, 0xFF	; 255
     5fe:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
     602:	8f b7       	in	r24, 0x3f	; 63
     604:	89 83       	std	Y+1, r24	; 0x01
	cpu_irq_disable();
     606:	f8 94       	cli
	return flags;
     608:	89 81       	ldd	r24, Y+1	; 0x01
static inline void sysclk_set_prescalers(uint8_t psdiv)
{
#if !MEGA_UNSPECIFIED
	irqflags_t flags = cpu_irq_save();

	ASM(
     60a:	5f 93       	push	r21
     60c:	50 e8       	ldi	r21, 0x80	; 128
     60e:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     612:	50 e0       	ldi	r21, 0x00	; 0
     614:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     618:	5f 91       	pop	r21
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     61a:	8f bf       	out	0x3f, r24	; 63
	if ((CONFIG_SYSCLK_PSDIV != SYSCLK_PSDIV_8) ||
			(SYSCLK_PSDIV_8 != CLKPR)) {
		sysclk_set_prescalers(CONFIG_SYSCLK_PSDIV);
	}
#endif
}
     61c:	0f 90       	pop	r0
     61e:	df 91       	pop	r29
     620:	cf 91       	pop	r28
     622:	08 95       	ret

00000624 <sysclk_enable_module>:
 * \param port ID of the port to which the module is connected (one of
 * the \c power_red_id *definitions).
 * \param id The ID (bitmask) of the peripheral module to be enabled.
 */
void sysclk_enable_module(enum power_red_id port, uint8_t id)
{
     624:	cf 93       	push	r28
     626:	df 93       	push	r29
     628:	1f 92       	push	r1
     62a:	cd b7       	in	r28, 0x3d	; 61
     62c:	de b7       	in	r29, 0x3e	; 62

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
     62e:	9f b7       	in	r25, 0x3f	; 63
     630:	99 83       	std	Y+1, r25	; 0x01
	cpu_irq_disable();
     632:	f8 94       	cli
	return flags;
     634:	99 81       	ldd	r25, Y+1	; 0x01
#if !MEGA_UNSPECIFIED && !MEGA_XX
	uint8_t *reg = (uint8_t *)&(POWER_REG_ADD);
	irqflags_t flags = cpu_irq_save();

	if (port < NUMBER_OF_POWER_REG) {
     636:	81 11       	cpse	r24, r1
     638:	06 c0       	rjmp	.+12     	; 0x646 <sysclk_enable_module+0x22>
		*(reg + port)  &= ~id;
     63a:	60 95       	com	r22
     63c:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
     640:	68 23       	and	r22, r24
     642:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     646:	9f bf       	out	0x3f, r25	; 63
	}
	cpu_irq_restore(flags);
#endif
}
     648:	0f 90       	pop	r0
     64a:	df 91       	pop	r29
     64c:	cf 91       	pop	r28
     64e:	08 95       	ret

00000650 <sysclk_disable_module>:
 * \param port ID of the port to which the module is connected (one of
 * the \c power_red_id *definitions).
 * \param id The ID (bit mask) of the peripheral module to be disabled.
 */
void sysclk_disable_module( enum power_red_id port, uint8_t id)
{
     650:	cf 93       	push	r28
     652:	df 93       	push	r29
     654:	1f 92       	push	r1
     656:	cd b7       	in	r28, 0x3d	; 61
     658:	de b7       	in	r29, 0x3e	; 62

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = SREG;
     65a:	9f b7       	in	r25, 0x3f	; 63
     65c:	99 83       	std	Y+1, r25	; 0x01
	cpu_irq_disable();
     65e:	f8 94       	cli
	return flags;
     660:	99 81       	ldd	r25, Y+1	; 0x01
#if !MEGA_UNSPECIFIED && !MEGA_XX
	uint8_t *reg = (uint8_t *)&(POWER_REG_ADD);
	irqflags_t flags = cpu_irq_save();
	if (port < NUMBER_OF_POWER_REG) {
     662:	81 11       	cpse	r24, r1
     664:	05 c0       	rjmp	.+10     	; 0x670 <sysclk_disable_module+0x20>
		*(reg + port) |= id;
     666:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
     66a:	68 2b       	or	r22, r24
     66c:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     670:	9f bf       	out	0x3f, r25	; 63
	}
	cpu_irq_restore(flags);
#endif
}
     672:	0f 90       	pop	r0
     674:	df 91       	pop	r29
     676:	cf 91       	pop	r28
     678:	08 95       	ret

0000067a <gfx_mono_generic_draw_horizontal_line>:
 * \param  length     Length of the line in pixels.
 * \param  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
     67a:	ff 92       	push	r15
     67c:	0f 93       	push	r16
     67e:	1f 93       	push	r17
     680:	cf 93       	push	r28
     682:	df 93       	push	r29
     684:	08 2f       	mov	r16, r24
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
     686:	84 2f       	mov	r24, r20
     688:	90 e0       	ldi	r25, 0x00	; 0
     68a:	80 0f       	add	r24, r16
     68c:	91 1d       	adc	r25, r1
     68e:	81 3f       	cpi	r24, 0xF1	; 241
     690:	91 05       	cpc	r25, r1
     692:	14 f0       	brlt	.+4      	; 0x698 <gfx_mono_generic_draw_horizontal_line+0x1e>
		length = GFX_MONO_LCD_WIDTH - x;
     694:	40 ef       	ldi	r20, 0xF0	; 240
     696:	40 1b       	sub	r20, r16
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
     698:	44 23       	and	r20, r20
     69a:	09 f4       	brne	.+2      	; 0x69e <gfx_mono_generic_draw_horizontal_line+0x24>
     69c:	47 c0       	rjmp	.+142    	; 0x72c <gfx_mono_generic_draw_horizontal_line+0xb2>
	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
		length = GFX_MONO_LCD_WIDTH - x;
	}

	page = y / 8;
     69e:	d6 2f       	mov	r29, r22
     6a0:	d6 95       	lsr	r29
     6a2:	d6 95       	lsr	r29
     6a4:	d6 95       	lsr	r29
	pixelmask = (1 << (y - (page * 8)));
     6a6:	70 e0       	ldi	r23, 0x00	; 0
     6a8:	88 e0       	ldi	r24, 0x08	; 8
     6aa:	d8 9f       	mul	r29, r24
     6ac:	60 19       	sub	r22, r0
     6ae:	71 09       	sbc	r23, r1
     6b0:	11 24       	eor	r1, r1
     6b2:	81 e0       	ldi	r24, 0x01	; 1
     6b4:	90 e0       	ldi	r25, 0x00	; 0
     6b6:	01 c0       	rjmp	.+2      	; 0x6ba <gfx_mono_generic_draw_horizontal_line+0x40>
     6b8:	88 0f       	add	r24, r24
     6ba:	6a 95       	dec	r22
     6bc:	ea f7       	brpl	.-6      	; 0x6b8 <gfx_mono_generic_draw_horizontal_line+0x3e>
     6be:	f8 2e       	mov	r15, r24
	if (length == 0) {
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
     6c0:	21 30       	cpi	r18, 0x01	; 1
     6c2:	31 f0       	breq	.+12     	; 0x6d0 <gfx_mono_generic_draw_horizontal_line+0x56>
     6c4:	40 f0       	brcs	.+16     	; 0x6d6 <gfx_mono_generic_draw_horizontal_line+0x5c>
     6c6:	22 30       	cpi	r18, 0x02	; 2
     6c8:	89 f5       	brne	.+98     	; 0x72c <gfx_mono_generic_draw_horizontal_line+0xb2>
     6ca:	cf ef       	ldi	r28, 0xFF	; 255
     6cc:	c4 0f       	add	r28, r20
     6ce:	22 c0       	rjmp	.+68     	; 0x714 <gfx_mono_generic_draw_horizontal_line+0x9a>
     6d0:	cf ef       	ldi	r28, 0xFF	; 255
     6d2:	c4 0f       	add	r28, r20
     6d4:	05 c0       	rjmp	.+10     	; 0x6e0 <gfx_mono_generic_draw_horizontal_line+0x66>
     6d6:	cf ef       	ldi	r28, 0xFF	; 255
     6d8:	c4 0f       	add	r28, r20
		break;

	case GFX_PIXEL_CLR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
			temp &= ~pixelmask;
     6da:	18 2f       	mov	r17, r24
     6dc:	10 95       	com	r17
     6de:	0d c0       	rjmp	.+26     	; 0x6fa <gfx_mono_generic_draw_horizontal_line+0x80>
     6e0:	10 2f       	mov	r17, r16
     6e2:	1c 0f       	add	r17, r28
	}

	switch (color) {
	case GFX_PIXEL_SET:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
     6e4:	61 2f       	mov	r22, r17
     6e6:	8d 2f       	mov	r24, r29
     6e8:	af d2       	rcall	.+1374   	; 0xc48 <gfx_mono_lcd_uc1608_get_byte>
			temp |= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
     6ea:	4f 2d       	mov	r20, r15
     6ec:	48 2b       	or	r20, r24
     6ee:	61 2f       	mov	r22, r17
     6f0:	8d 2f       	mov	r24, r29
     6f2:	98 d2       	rcall	.+1328   	; 0xc24 <gfx_mono_lcd_uc1608_put_byte>
     6f4:	c1 50       	subi	r28, 0x01	; 1
     6f6:	a0 f7       	brcc	.-24     	; 0x6e0 <gfx_mono_generic_draw_horizontal_line+0x66>
     6f8:	19 c0       	rjmp	.+50     	; 0x72c <gfx_mono_generic_draw_horizontal_line+0xb2>
     6fa:	f0 2e       	mov	r15, r16
		}
		break;

	case GFX_PIXEL_CLR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
     6fc:	fc 0e       	add	r15, r28
     6fe:	6f 2d       	mov	r22, r15
     700:	8d 2f       	mov	r24, r29
			temp &= ~pixelmask;
     702:	a2 d2       	rcall	.+1348   	; 0xc48 <gfx_mono_lcd_uc1608_get_byte>
			gfx_mono_put_byte(page, x + length, temp);
     704:	41 2f       	mov	r20, r17
     706:	48 23       	and	r20, r24
     708:	6f 2d       	mov	r22, r15
     70a:	8d 2f       	mov	r24, r29
     70c:	8b d2       	rcall	.+1302   	; 0xc24 <gfx_mono_lcd_uc1608_put_byte>
     70e:	c1 50       	subi	r28, 0x01	; 1
     710:	a0 f7       	brcc	.-24     	; 0x6fa <gfx_mono_generic_draw_horizontal_line+0x80>
     712:	0c c0       	rjmp	.+24     	; 0x72c <gfx_mono_generic_draw_horizontal_line+0xb2>
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
     714:	10 2f       	mov	r17, r16
     716:	1c 0f       	add	r17, r28
     718:	61 2f       	mov	r22, r17
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
     71a:	8d 2f       	mov	r24, r29
     71c:	95 d2       	rcall	.+1322   	; 0xc48 <gfx_mono_lcd_uc1608_get_byte>
     71e:	4f 2d       	mov	r20, r15
     720:	48 27       	eor	r20, r24
     722:	61 2f       	mov	r22, r17
     724:	8d 2f       	mov	r24, r29
     726:	7e d2       	rcall	.+1276   	; 0xc24 <gfx_mono_lcd_uc1608_put_byte>
     728:	c1 50       	subi	r28, 0x01	; 1
		break;

	default:
		break;
	}
}
     72a:	a0 f7       	brcc	.-24     	; 0x714 <gfx_mono_generic_draw_horizontal_line+0x9a>
     72c:	df 91       	pop	r29
     72e:	cf 91       	pop	r28
     730:	1f 91       	pop	r17
     732:	0f 91       	pop	r16
     734:	ff 90       	pop	r15
     736:	08 95       	ret

00000738 <gfx_mono_generic_draw_vertical_line>:
 * \param  length     Length of the line in pixels.
 * \param  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_vertical_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
     738:	ef 92       	push	r14
     73a:	ff 92       	push	r15
     73c:	0f 93       	push	r16
     73e:	1f 93       	push	r17
     740:	cf 93       	push	r28
     742:	df 93       	push	r29
     744:	94 2f       	mov	r25, r20
	if (length == 0) {
     746:	44 23       	and	r20, r20
     748:	09 f4       	brne	.+2      	; 0x74c <gfx_mono_generic_draw_vertical_line+0x14>
     74a:	46 c0       	rjmp	.+140    	; 0x7d8 <gfx_mono_generic_draw_vertical_line+0xa0>
		return;
	}

	gfx_coord_t y2 = y + length - 1;
     74c:	4f ef       	ldi	r20, 0xFF	; 255
     74e:	46 0f       	add	r20, r22
     750:	94 0f       	add	r25, r20

	if (y == y2) {
     752:	69 13       	cpse	r22, r25
     754:	08 c0       	rjmp	.+16     	; 0x766 <gfx_mono_generic_draw_vertical_line+0x2e>
		gfx_mono_draw_pixel(x, y, color);
     756:	42 2f       	mov	r20, r18
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
		}

		gfx_mono_mask_byte(y2page, x, y2pixelmask, color);
	}
}
     758:	df 91       	pop	r29
     75a:	cf 91       	pop	r28
     75c:	1f 91       	pop	r17
     75e:	0f 91       	pop	r16
     760:	ff 90       	pop	r15
	}

	gfx_coord_t y2 = y + length - 1;

	if (y == y2) {
		gfx_mono_draw_pixel(x, y, color);
     762:	ef 90       	pop	r14
		return;
	}

	if (y2 >= GFX_MONO_LCD_HEIGHT - 1) {
     764:	a4 c2       	rjmp	.+1352   	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
     766:	9f 37       	cpi	r25, 0x7F	; 127
		y2 = GFX_MONO_LCD_HEIGHT - 1;
     768:	08 f0       	brcs	.+2      	; 0x76c <gfx_mono_generic_draw_vertical_line+0x34>
	}

	gfx_coord_t y1page = y / 8;
     76a:	9f e7       	ldi	r25, 0x7F	; 127
     76c:	16 2f       	mov	r17, r22
     76e:	16 95       	lsr	r17
     770:	16 95       	lsr	r17
	gfx_coord_t y2page = y2 / 8;
     772:	16 95       	lsr	r17
     774:	09 2f       	mov	r16, r25
     776:	06 95       	lsr	r16
     778:	06 95       	lsr	r16

	uint8_t y1bitpos = y & 0x07;
	uint8_t y2bitpos = y2 & 0x07;

	uint8_t y1pixelmask = 0xFF << y1bitpos;
     77a:	06 95       	lsr	r16
     77c:	67 70       	andi	r22, 0x07	; 7
     77e:	ef ef       	ldi	r30, 0xFF	; 255
     780:	f0 e0       	ldi	r31, 0x00	; 0
     782:	af 01       	movw	r20, r30
     784:	01 c0       	rjmp	.+2      	; 0x788 <gfx_mono_generic_draw_vertical_line+0x50>
     786:	44 0f       	add	r20, r20
     788:	6a 95       	dec	r22
	uint8_t y2pixelmask = 0xFF >> (7 - y2bitpos);
     78a:	ea f7       	brpl	.-6      	; 0x786 <gfx_mono_generic_draw_vertical_line+0x4e>
     78c:	97 70       	andi	r25, 0x07	; 7
     78e:	67 e0       	ldi	r22, 0x07	; 7
     790:	70 e0       	ldi	r23, 0x00	; 0
     792:	69 1b       	sub	r22, r25
     794:	71 09       	sbc	r23, r1
     796:	7f 01       	movw	r14, r30
     798:	02 c0       	rjmp	.+4      	; 0x79e <gfx_mono_generic_draw_vertical_line+0x66>
     79a:	f5 94       	asr	r15
     79c:	e7 94       	ror	r14
     79e:	6a 95       	dec	r22

	/* The pixels are on the same page; combine masks */
	if (y1page == y2page) {
     7a0:	e2 f7       	brpl	.-8      	; 0x79a <gfx_mono_generic_draw_vertical_line+0x62>
     7a2:	10 13       	cpse	r17, r16
		uint8_t pixelmask = y1pixelmask & y2pixelmask;
		gfx_mono_mask_byte(y1page, x, pixelmask, color);
     7a4:	04 c0       	rjmp	.+8      	; 0x7ae <gfx_mono_generic_draw_vertical_line+0x76>
     7a6:	4e 21       	and	r20, r14
     7a8:	68 2f       	mov	r22, r24
     7aa:	81 2f       	mov	r24, r17
     7ac:	0e c0       	rjmp	.+28     	; 0x7ca <gfx_mono_generic_draw_vertical_line+0x92>
     7ae:	d2 2f       	mov	r29, r18
	} else {
		gfx_mono_mask_byte(y1page, x, y1pixelmask, color);

		while (++y1page < y2page) {
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
     7b0:	c8 2f       	mov	r28, r24
     7b2:	6c 2f       	mov	r22, r28
     7b4:	81 2f       	mov	r24, r17
		uint8_t pixelmask = y1pixelmask & y2pixelmask;
		gfx_mono_mask_byte(y1page, x, pixelmask, color);
	} else {
		gfx_mono_mask_byte(y1page, x, y1pixelmask, color);

		while (++y1page < y2page) {
     7b6:	56 d2       	rcall	.+1196   	; 0xc64 <gfx_mono_lcd_uc1608_mask_byte>
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
     7b8:	1f 5f       	subi	r17, 0xFF	; 255
		uint8_t pixelmask = y1pixelmask & y2pixelmask;
		gfx_mono_mask_byte(y1page, x, pixelmask, color);
	} else {
		gfx_mono_mask_byte(y1page, x, y1pixelmask, color);

		while (++y1page < y2page) {
     7ba:	2d 2f       	mov	r18, r29
     7bc:	10 17       	cp	r17, r16
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
     7be:	10 f4       	brcc	.+4      	; 0x7c4 <gfx_mono_generic_draw_vertical_line+0x8c>
     7c0:	4f ef       	ldi	r20, 0xFF	; 255
		}

		gfx_mono_mask_byte(y2page, x, y2pixelmask, color);
     7c2:	f7 cf       	rjmp	.-18     	; 0x7b2 <gfx_mono_generic_draw_vertical_line+0x7a>
     7c4:	4e 2d       	mov	r20, r14
     7c6:	6c 2f       	mov	r22, r28
	}
}
     7c8:	80 2f       	mov	r24, r16
     7ca:	df 91       	pop	r29
     7cc:	cf 91       	pop	r28
     7ce:	1f 91       	pop	r17
     7d0:	0f 91       	pop	r16

		while (++y1page < y2page) {
			gfx_mono_mask_byte(y1page, x, 0xFF, color);
		}

		gfx_mono_mask_byte(y2page, x, y2pixelmask, color);
     7d2:	ff 90       	pop	r15
     7d4:	ef 90       	pop	r14
	}
}
     7d6:	46 c2       	rjmp	.+1164   	; 0xc64 <gfx_mono_lcd_uc1608_mask_byte>
     7d8:	df 91       	pop	r29
     7da:	cf 91       	pop	r28
     7dc:	1f 91       	pop	r17
     7de:	0f 91       	pop	r16
     7e0:	ff 90       	pop	r15
     7e2:	ef 90       	pop	r14
     7e4:	08 95       	ret

000007e6 <gfx_mono_generic_draw_line>:
 * \param  color       Pixel operation of the line.
 */
void gfx_mono_generic_draw_line(gfx_coord_t x1, gfx_coord_t y1,
		gfx_coord_t x2, gfx_coord_t y2,
		enum gfx_mono_color color)
{
     7e6:	8f 92       	push	r8
     7e8:	9f 92       	push	r9
     7ea:	af 92       	push	r10
     7ec:	bf 92       	push	r11
     7ee:	cf 92       	push	r12
     7f0:	df 92       	push	r13
     7f2:	ef 92       	push	r14
     7f4:	ff 92       	push	r15
     7f6:	0f 93       	push	r16
     7f8:	1f 93       	push	r17
     7fa:	cf 93       	push	r28
     7fc:	df 93       	push	r29
     7fe:	18 2f       	mov	r17, r24
     800:	b6 2e       	mov	r11, r22
	int16_t dx;
	int16_t dy;
	int16_t e;

	/* swap x1,y1  with x2,y2 */
	if (x1 > x2) {
     802:	48 17       	cp	r20, r24
     804:	28 f4       	brcc	.+10     	; 0x810 <gfx_mono_generic_draw_line+0x2a>
		dx = x1;
		x1 = x2;
		x2 = dx;
		dy = y1;
		y1 = y2;
     806:	b2 2e       	mov	r11, r18
		y2 = dy;
     808:	26 2f       	mov	r18, r22
	int16_t dx;
	int16_t dy;
	int16_t e;

	/* swap x1,y1  with x2,y2 */
	if (x1 > x2) {
     80a:	81 2f       	mov	r24, r17
     80c:	14 2f       	mov	r17, r20
     80e:	48 2f       	mov	r20, r24
		dy = y1;
		y1 = y2;
		y2 = dy;
	}

	dx = x2 - x1;
     810:	c4 2f       	mov	r28, r20
     812:	d0 e0       	ldi	r29, 0x00	; 0
     814:	c1 1b       	sub	r28, r17
     816:	d1 09       	sbc	r29, r1
	dy = y2 - y1;
     818:	e2 2e       	mov	r14, r18
     81a:	f1 2c       	mov	r15, r1
     81c:	eb 18       	sub	r14, r11
     81e:	f1 08       	sbc	r15, r1

	x = x1;
	y = y1;

	if (dx < 0) {
     820:	d7 ff       	sbrs	r29, 7
     822:	06 c0       	rjmp	.+12     	; 0x830 <gfx_mono_generic_draw_line+0x4a>
		xinc = -1;
		dx = -dx;
     824:	d1 95       	neg	r29
     826:	c1 95       	neg	r28
     828:	d1 09       	sbc	r29, r1

	x = x1;
	y = y1;

	if (dx < 0) {
		xinc = -1;
     82a:	99 24       	eor	r9, r9
     82c:	9a 94       	dec	r9
     82e:	02 c0       	rjmp	.+4      	; 0x834 <gfx_mono_generic_draw_line+0x4e>
		dx = -dx;
	} else {
		xinc = 1;
     830:	99 24       	eor	r9, r9
     832:	93 94       	inc	r9
	}

	if (dy < 0) {
     834:	f7 fe       	sbrs	r15, 7
     836:	06 c0       	rjmp	.+12     	; 0x844 <gfx_mono_generic_draw_line+0x5e>
		yinc = -1;
		dy = -dy;
     838:	f1 94       	neg	r15
     83a:	e1 94       	neg	r14
     83c:	f1 08       	sbc	r15, r1
	} else {
		xinc = 1;
	}

	if (dy < 0) {
		yinc = -1;
     83e:	88 24       	eor	r8, r8
     840:	8a 94       	dec	r8
     842:	02 c0       	rjmp	.+4      	; 0x848 <gfx_mono_generic_draw_line+0x62>
		dy = -dy;
	} else {
		yinc = 1;
     844:	88 24       	eor	r8, r8
     846:	83 94       	inc	r8
	}

	if (dx > dy) {
     848:	ec 16       	cp	r14, r28
     84a:	fd 06       	cpc	r15, r29
     84c:	bc f4       	brge	.+46     	; 0x87c <gfx_mono_generic_draw_line+0x96>
		e = dy - dx;
     84e:	67 01       	movw	r12, r14
     850:	cc 1a       	sub	r12, r28
     852:	dd 0a       	sbc	r13, r29
		for (i = 0; i <= dx; i++) {
     854:	a1 2c       	mov	r10, r1
     856:	8a 2d       	mov	r24, r10
     858:	90 e0       	ldi	r25, 0x00	; 0
     85a:	c8 17       	cp	r28, r24
     85c:	d9 07       	cpc	r29, r25
     85e:	2c f1       	brlt	.+74     	; 0x8aa <gfx_mono_generic_draw_line+0xc4>
			gfx_mono_draw_pixel(x, y, color);
     860:	40 2f       	mov	r20, r16
     862:	6b 2d       	mov	r22, r11
     864:	81 2f       	mov	r24, r17
     866:	23 d2       	rcall	.+1094   	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
			if (e >= 0) {
     868:	d7 fc       	sbrc	r13, 7
     86a:	03 c0       	rjmp	.+6      	; 0x872 <gfx_mono_generic_draw_line+0x8c>
				e -= dx;
     86c:	cc 1a       	sub	r12, r28
     86e:	dd 0a       	sbc	r13, r29
				y += yinc;
     870:	b8 0c       	add	r11, r8
			}

			e += dy;
     872:	ce 0c       	add	r12, r14
     874:	df 1c       	adc	r13, r15
     876:	19 0d       	add	r17, r9
		yinc = 1;
	}

	if (dx > dy) {
		e = dy - dx;
		for (i = 0; i <= dx; i++) {
     878:	a3 94       	inc	r10
     87a:	ed cf       	rjmp	.-38     	; 0x856 <gfx_mono_generic_draw_line+0x70>

			e += dy;
			x += xinc;
		}
	} else {
		e = dx - dy;
     87c:	6e 01       	movw	r12, r28
     87e:	ce 18       	sub	r12, r14
     880:	df 08       	sbc	r13, r15
		for (i = 0; i <= dy; i++) {
     882:	a1 2c       	mov	r10, r1
     884:	8a 2d       	mov	r24, r10
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	e8 16       	cp	r14, r24
     88a:	f9 06       	cpc	r15, r25
     88c:	74 f0       	brlt	.+28     	; 0x8aa <gfx_mono_generic_draw_line+0xc4>
			gfx_mono_draw_pixel(x, y, color);
     88e:	40 2f       	mov	r20, r16
     890:	6b 2d       	mov	r22, r11
     892:	81 2f       	mov	r24, r17
     894:	0c d2       	rcall	.+1048   	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
			if (e >= 0) {
     896:	d7 fc       	sbrc	r13, 7
     898:	03 c0       	rjmp	.+6      	; 0x8a0 <gfx_mono_generic_draw_line+0xba>
				e -= dy;
     89a:	ce 18       	sub	r12, r14
     89c:	df 08       	sbc	r13, r15
				x += xinc;
     89e:	19 0d       	add	r17, r9
			}

			e += dx;
     8a0:	cc 0e       	add	r12, r28
     8a2:	dd 1e       	adc	r13, r29
     8a4:	b8 0c       	add	r11, r8
			e += dy;
			x += xinc;
		}
	} else {
		e = dx - dy;
		for (i = 0; i <= dy; i++) {
     8a6:	a3 94       	inc	r10
     8a8:	ed cf       	rjmp	.-38     	; 0x884 <gfx_mono_generic_draw_line+0x9e>

			e += dx;
			y += yinc;
		}
	}
}
     8aa:	df 91       	pop	r29
     8ac:	cf 91       	pop	r28
     8ae:	1f 91       	pop	r17
     8b0:	0f 91       	pop	r16
     8b2:	ff 90       	pop	r15
     8b4:	ef 90       	pop	r14
     8b6:	df 90       	pop	r13
     8b8:	cf 90       	pop	r12
     8ba:	bf 90       	pop	r11
     8bc:	af 90       	pop	r10
     8be:	9f 90       	pop	r9
     8c0:	8f 90       	pop	r8
     8c2:	08 95       	ret

000008c4 <gfx_mono_generic_draw_rect>:
 * \param  color       Pixel operation of the line.
 */
void gfx_mono_generic_draw_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
     8c4:	ff 92       	push	r15
     8c6:	0f 93       	push	r16
     8c8:	1f 93       	push	r17
     8ca:	cf 93       	push	r28
     8cc:	df 93       	push	r29
     8ce:	d8 2f       	mov	r29, r24
     8d0:	16 2f       	mov	r17, r22
     8d2:	c4 2f       	mov	r28, r20
     8d4:	f2 2e       	mov	r15, r18
	gfx_mono_draw_horizontal_line(x, y, width, color);
     8d6:	20 2f       	mov	r18, r16
     8d8:	d0 de       	rcall	.-608    	; 0x67a <gfx_mono_generic_draw_horizontal_line>
	gfx_mono_draw_horizontal_line(x, y + height - 1, width, color);
     8da:	6f ef       	ldi	r22, 0xFF	; 255
     8dc:	6f 0d       	add	r22, r15
     8de:	61 0f       	add	r22, r17
     8e0:	20 2f       	mov	r18, r16
     8e2:	4c 2f       	mov	r20, r28
     8e4:	8d 2f       	mov	r24, r29
     8e6:	c9 de       	rcall	.-622    	; 0x67a <gfx_mono_generic_draw_horizontal_line>

	gfx_mono_draw_vertical_line(x, y, height, color);
     8e8:	20 2f       	mov	r18, r16
     8ea:	4f 2d       	mov	r20, r15
     8ec:	61 2f       	mov	r22, r17
     8ee:	8d 2f       	mov	r24, r29
     8f0:	23 df       	rcall	.-442    	; 0x738 <gfx_mono_generic_draw_vertical_line>
	gfx_mono_draw_vertical_line(x + width - 1, y, height, color);
     8f2:	8f ef       	ldi	r24, 0xFF	; 255
     8f4:	8c 0f       	add	r24, r28
     8f6:	20 2f       	mov	r18, r16
     8f8:	4f 2d       	mov	r20, r15
     8fa:	61 2f       	mov	r22, r17
     8fc:	8d 0f       	add	r24, r29
}
     8fe:	df 91       	pop	r29
     900:	cf 91       	pop	r28
     902:	1f 91       	pop	r17
     904:	0f 91       	pop	r16
{
	gfx_mono_draw_horizontal_line(x, y, width, color);
	gfx_mono_draw_horizontal_line(x, y + height - 1, width, color);

	gfx_mono_draw_vertical_line(x, y, height, color);
	gfx_mono_draw_vertical_line(x + width - 1, y, height, color);
     906:	ff 90       	pop	r15
     908:	17 cf       	rjmp	.-466    	; 0x738 <gfx_mono_generic_draw_vertical_line>

0000090a <gfx_mono_generic_draw_filled_rect>:
 * \param  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
     90a:	ff 92       	push	r15
     90c:	0f 93       	push	r16
     90e:	1f 93       	push	r17
     910:	cf 93       	push	r28
     912:	df 93       	push	r29
	if (height == 0) {
     914:	22 23       	and	r18, r18
     916:	69 f0       	breq	.+26     	; 0x932 <gfx_mono_generic_draw_filled_rect+0x28>
     918:	14 2f       	mov	r17, r20
     91a:	f6 2e       	mov	r15, r22
     91c:	d8 2f       	mov	r29, r24
     91e:	cf ef       	ldi	r28, 0xFF	; 255
     920:	c2 0f       	add	r28, r18
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
     922:	6f 2d       	mov	r22, r15
     924:	6c 0f       	add	r22, r28
     926:	20 2f       	mov	r18, r16
     928:	41 2f       	mov	r20, r17
     92a:	8d 2f       	mov	r24, r29
     92c:	a6 de       	rcall	.-692    	; 0x67a <gfx_mono_generic_draw_horizontal_line>
     92e:	c1 50       	subi	r28, 0x01	; 1
     930:	c0 f7       	brcc	.-16     	; 0x922 <gfx_mono_generic_draw_filled_rect+0x18>
	}
}
     932:	df 91       	pop	r29
     934:	cf 91       	pop	r28
     936:	1f 91       	pop	r17
     938:	0f 91       	pop	r16
     93a:	ff 90       	pop	r15
     93c:	08 95       	ret

0000093e <gfx_mono_generic_draw_circle>:
 * \param  octant_mask Bitmask indicating which octants to draw.
 */
void gfx_mono_generic_draw_circle(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t radius, enum gfx_mono_color color,
		uint8_t octant_mask)
{
     93e:	5f 92       	push	r5
     940:	6f 92       	push	r6
     942:	7f 92       	push	r7
     944:	8f 92       	push	r8
     946:	9f 92       	push	r9
     948:	af 92       	push	r10
     94a:	bf 92       	push	r11
     94c:	cf 92       	push	r12
     94e:	df 92       	push	r13
     950:	ef 92       	push	r14
     952:	ff 92       	push	r15
     954:	0f 93       	push	r16
     956:	1f 93       	push	r17
     958:	cf 93       	push	r28
     95a:	df 93       	push	r29
     95c:	18 2f       	mov	r17, r24
     95e:	f6 2e       	mov	r15, r22
     960:	c4 2f       	mov	r28, r20
     962:	e2 2e       	mov	r14, r18
	gfx_coord_t offset_x;
	gfx_coord_t offset_y;
	int16_t error;

	/* Draw only a pixel if radius is zero. */
	if (radius == 0) {
     964:	41 11       	cpse	r20, r1
     966:	11 c0       	rjmp	.+34     	; 0x98a <gfx_mono_generic_draw_circle+0x4c>
		gfx_mono_draw_pixel(x, y, color);
     968:	42 2f       	mov	r20, r18
		}

		/* Next X. */
		++offset_x;
	}
}
     96a:	df 91       	pop	r29
     96c:	cf 91       	pop	r28
     96e:	1f 91       	pop	r17
     970:	0f 91       	pop	r16
     972:	ff 90       	pop	r15
     974:	ef 90       	pop	r14
     976:	df 90       	pop	r13
     978:	cf 90       	pop	r12
     97a:	bf 90       	pop	r11
     97c:	af 90       	pop	r10
     97e:	9f 90       	pop	r9
     980:	8f 90       	pop	r8
     982:	7f 90       	pop	r7
     984:	6f 90       	pop	r6
	gfx_coord_t offset_y;
	int16_t error;

	/* Draw only a pixel if radius is zero. */
	if (radius == 0) {
		gfx_mono_draw_pixel(x, y, color);
     986:	5f 90       	pop	r5
	}

	/* Set up start iterators. */
	offset_x = 0;
	offset_y = radius;
	error = 3 - 2 * radius;
     988:	92 c1       	rjmp	.+804    	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
     98a:	83 e0       	ldi	r24, 0x03	; 3
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	6c 01       	movw	r12, r24
     990:	22 e0       	ldi	r18, 0x02	; 2
     992:	42 9f       	mul	r20, r18
     994:	c0 18       	sub	r12, r0
     996:	d1 08       	sbc	r13, r1
		gfx_mono_draw_pixel(x, y, color);
		return;
	}

	/* Set up start iterators. */
	offset_x = 0;
     998:	11 24       	eor	r1, r1
	error = 3 - 2 * radius;

	/* Iterate offsetX from 0 to radius. */
	while (offset_x <= offset_y) {
		/* Draw one pixel for each octant enabled in octant_mask. */
		if (octant_mask & GFX_OCTANT0) {
     99a:	d0 e0       	ldi	r29, 0x00	; 0
     99c:	80 2f       	mov	r24, r16
     99e:	81 70       	andi	r24, 0x01	; 1
			gfx_mono_draw_pixel(x + offset_y, y - offset_x, color);
		}

		if (octant_mask & GFX_OCTANT1) {
     9a0:	b8 2e       	mov	r11, r24
     9a2:	20 2f       	mov	r18, r16
     9a4:	22 70       	andi	r18, 0x02	; 2
			gfx_mono_draw_pixel(x + offset_x, y - offset_y, color);
		}

		if (octant_mask & GFX_OCTANT2) {
     9a6:	a2 2e       	mov	r10, r18
     9a8:	80 2f       	mov	r24, r16
     9aa:	84 70       	andi	r24, 0x04	; 4
			gfx_mono_draw_pixel(x - offset_x, y - offset_y, color);
		}

		if (octant_mask & GFX_OCTANT3) {
     9ac:	98 2e       	mov	r9, r24
     9ae:	20 2f       	mov	r18, r16
     9b0:	28 70       	andi	r18, 0x08	; 8
			gfx_mono_draw_pixel(x - offset_y, y - offset_x, color);
		}

		if (octant_mask & GFX_OCTANT4) {
     9b2:	82 2e       	mov	r8, r18
     9b4:	80 2f       	mov	r24, r16
     9b6:	80 71       	andi	r24, 0x10	; 16
			gfx_mono_draw_pixel(x - offset_y, y + offset_x, color);
		}

		if (octant_mask & GFX_OCTANT5) {
     9b8:	78 2e       	mov	r7, r24
     9ba:	20 2f       	mov	r18, r16
     9bc:	20 72       	andi	r18, 0x20	; 32
			gfx_mono_draw_pixel(x - offset_x, y + offset_y, color);
		}

		if (octant_mask & GFX_OCTANT6) {
     9be:	62 2e       	mov	r6, r18
     9c0:	80 2f       	mov	r24, r16
     9c2:	80 74       	andi	r24, 0x40	; 64
	error = 3 - 2 * radius;

	/* Iterate offsetX from 0 to radius. */
	while (offset_x <= offset_y) {
		/* Draw one pixel for each octant enabled in octant_mask. */
		if (octant_mask & GFX_OCTANT0) {
     9c4:	58 2e       	mov	r5, r24
     9c6:	bb 20       	and	r11, r11
			gfx_mono_draw_pixel(x + offset_y, y - offset_x, color);
     9c8:	31 f0       	breq	.+12     	; 0x9d6 <gfx_mono_generic_draw_circle+0x98>
     9ca:	4e 2d       	mov	r20, r14
     9cc:	6f 2d       	mov	r22, r15
     9ce:	6d 1b       	sub	r22, r29
     9d0:	81 2f       	mov	r24, r17
     9d2:	8c 0f       	add	r24, r28
		}

		if (octant_mask & GFX_OCTANT1) {
     9d4:	6c d1       	rcall	.+728    	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
     9d6:	aa 20       	and	r10, r10
			gfx_mono_draw_pixel(x + offset_x, y - offset_y, color);
     9d8:	31 f0       	breq	.+12     	; 0x9e6 <gfx_mono_generic_draw_circle+0xa8>
     9da:	4e 2d       	mov	r20, r14
     9dc:	6f 2d       	mov	r22, r15
     9de:	6c 1b       	sub	r22, r28
     9e0:	81 2f       	mov	r24, r17
     9e2:	8d 0f       	add	r24, r29
		}

		if (octant_mask & GFX_OCTANT2) {
     9e4:	64 d1       	rcall	.+712    	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
     9e6:	99 20       	and	r9, r9
			gfx_mono_draw_pixel(x - offset_x, y - offset_y, color);
     9e8:	31 f0       	breq	.+12     	; 0x9f6 <gfx_mono_generic_draw_circle+0xb8>
     9ea:	4e 2d       	mov	r20, r14
     9ec:	6f 2d       	mov	r22, r15
     9ee:	6c 1b       	sub	r22, r28
     9f0:	81 2f       	mov	r24, r17
     9f2:	8d 1b       	sub	r24, r29
		}

		if (octant_mask & GFX_OCTANT3) {
     9f4:	5c d1       	rcall	.+696    	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
     9f6:	88 20       	and	r8, r8
			gfx_mono_draw_pixel(x - offset_y, y - offset_x, color);
     9f8:	31 f0       	breq	.+12     	; 0xa06 <gfx_mono_generic_draw_circle+0xc8>
     9fa:	4e 2d       	mov	r20, r14
     9fc:	6f 2d       	mov	r22, r15
     9fe:	6d 1b       	sub	r22, r29
     a00:	81 2f       	mov	r24, r17
     a02:	8c 1b       	sub	r24, r28
		}

		if (octant_mask & GFX_OCTANT4) {
     a04:	54 d1       	rcall	.+680    	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
			gfx_mono_draw_pixel(x - offset_y, y + offset_x, color);
     a06:	77 20       	and	r7, r7
     a08:	31 f0       	breq	.+12     	; 0xa16 <gfx_mono_generic_draw_circle+0xd8>
     a0a:	4e 2d       	mov	r20, r14
     a0c:	6f 2d       	mov	r22, r15
     a0e:	6d 0f       	add	r22, r29
     a10:	81 2f       	mov	r24, r17
		}

		if (octant_mask & GFX_OCTANT5) {
     a12:	8c 1b       	sub	r24, r28
			gfx_mono_draw_pixel(x - offset_x, y + offset_y, color);
     a14:	4c d1       	rcall	.+664    	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
     a16:	66 20       	and	r6, r6
     a18:	31 f0       	breq	.+12     	; 0xa26 <gfx_mono_generic_draw_circle+0xe8>
     a1a:	4e 2d       	mov	r20, r14
     a1c:	6f 2d       	mov	r22, r15
     a1e:	6c 0f       	add	r22, r28
		}

		if (octant_mask & GFX_OCTANT6) {
     a20:	81 2f       	mov	r24, r17
			gfx_mono_draw_pixel(x + offset_x, y + offset_y, color);
     a22:	8d 1b       	sub	r24, r29
     a24:	44 d1       	rcall	.+648    	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
     a26:	55 20       	and	r5, r5
     a28:	31 f0       	breq	.+12     	; 0xa36 <gfx_mono_generic_draw_circle+0xf8>
     a2a:	4e 2d       	mov	r20, r14
     a2c:	6f 2d       	mov	r22, r15
		}

		if (octant_mask & GFX_OCTANT7) {
     a2e:	6c 0f       	add	r22, r28
     a30:	81 2f       	mov	r24, r17
			gfx_mono_draw_pixel(x + offset_y, y + offset_x, color);
     a32:	8d 0f       	add	r24, r29
     a34:	3c d1       	rcall	.+632    	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
     a36:	07 ff       	sbrs	r16, 7
     a38:	06 c0       	rjmp	.+12     	; 0xa46 <gfx_mono_generic_draw_circle+0x108>
     a3a:	4e 2d       	mov	r20, r14
     a3c:	6f 2d       	mov	r22, r15
     a3e:	6d 0f       	add	r22, r29
     a40:	81 2f       	mov	r24, r17
     a42:	8c 0f       	add	r24, r28
		}

		/* Update error value and step offset_y when required. */
		if (error < 0) {
     a44:	34 d1       	rcall	.+616    	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
     a46:	8d 2f       	mov	r24, r29
			error += ((offset_x << 2) + 6);
     a48:	90 e0       	ldi	r25, 0x00	; 0
     a4a:	d7 fe       	sbrs	r13, 7
     a4c:	08 c0       	rjmp	.+16     	; 0xa5e <gfx_mono_generic_draw_circle+0x120>
     a4e:	88 0f       	add	r24, r24
     a50:	99 1f       	adc	r25, r25
     a52:	88 0f       	add	r24, r24
     a54:	99 1f       	adc	r25, r25
     a56:	06 96       	adiw	r24, 0x06	; 6
		} else {
			error += (((offset_x - offset_y) << 2) + 10);
     a58:	c8 0e       	add	r12, r24
     a5a:	d9 1e       	adc	r13, r25
     a5c:	0a c0       	rjmp	.+20     	; 0xa72 <gfx_mono_generic_draw_circle+0x134>
     a5e:	8c 1b       	sub	r24, r28
     a60:	91 09       	sbc	r25, r1
     a62:	88 0f       	add	r24, r24
     a64:	99 1f       	adc	r25, r25
     a66:	88 0f       	add	r24, r24
     a68:	99 1f       	adc	r25, r25
			--offset_y;
     a6a:	0a 96       	adiw	r24, 0x0a	; 10
		}

		/* Next X. */
		++offset_x;
     a6c:	c8 0e       	add	r12, r24
	offset_x = 0;
	offset_y = radius;
	error = 3 - 2 * radius;

	/* Iterate offsetX from 0 to radius. */
	while (offset_x <= offset_y) {
     a6e:	d9 1e       	adc	r13, r25
     a70:	c1 50       	subi	r28, 0x01	; 1
     a72:	df 5f       	subi	r29, 0xFF	; 255
		}

		/* Next X. */
		++offset_x;
	}
}
     a74:	cd 17       	cp	r28, r29
     a76:	08 f0       	brcs	.+2      	; 0xa7a <gfx_mono_generic_draw_circle+0x13c>
     a78:	a6 cf       	rjmp	.-180    	; 0x9c6 <gfx_mono_generic_draw_circle+0x88>
     a7a:	df 91       	pop	r29
     a7c:	cf 91       	pop	r28
     a7e:	1f 91       	pop	r17
     a80:	0f 91       	pop	r16
     a82:	ff 90       	pop	r15
     a84:	ef 90       	pop	r14
     a86:	df 90       	pop	r13
     a88:	cf 90       	pop	r12
     a8a:	bf 90       	pop	r11
     a8c:	af 90       	pop	r10
     a8e:	9f 90       	pop	r9
     a90:	8f 90       	pop	r8
     a92:	7f 90       	pop	r7
     a94:	6f 90       	pop	r6
     a96:	5f 90       	pop	r5
     a98:	08 95       	ret

00000a9a <gfx_mono_generic_draw_filled_circle>:
 * \param  quadrant_mask Bitmask indicating which quadrants to draw.
 */
void gfx_mono_generic_draw_filled_circle(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t radius, enum gfx_mono_color color,
		uint8_t quadrant_mask)
{
     a9a:	8f 92       	push	r8
     a9c:	9f 92       	push	r9
     a9e:	af 92       	push	r10
     aa0:	bf 92       	push	r11
     aa2:	cf 92       	push	r12
     aa4:	df 92       	push	r13
     aa6:	ef 92       	push	r14
     aa8:	ff 92       	push	r15
     aaa:	0f 93       	push	r16
     aac:	1f 93       	push	r17
     aae:	cf 93       	push	r28
     ab0:	df 93       	push	r29
     ab2:	18 2f       	mov	r17, r24
     ab4:	d6 2e       	mov	r13, r22
     ab6:	c4 2f       	mov	r28, r20
     ab8:	c2 2e       	mov	r12, r18
	gfx_coord_t offset_x;
	gfx_coord_t offset_y;
	int16_t error;

	/* Draw only a pixel if radius is zero. */
	if (radius == 0) {
     aba:	41 11       	cpse	r20, r1
     abc:	0e c0       	rjmp	.+28     	; 0xada <gfx_mono_generic_draw_filled_circle+0x40>
		gfx_mono_draw_pixel(x, y, color);
     abe:	42 2f       	mov	r20, r18
		}

		/* Next X. */
		++offset_x;
	}
}
     ac0:	df 91       	pop	r29
     ac2:	cf 91       	pop	r28
     ac4:	1f 91       	pop	r17
     ac6:	0f 91       	pop	r16
     ac8:	ff 90       	pop	r15
     aca:	ef 90       	pop	r14
     acc:	df 90       	pop	r13
     ace:	cf 90       	pop	r12
     ad0:	bf 90       	pop	r11
     ad2:	af 90       	pop	r10
     ad4:	9f 90       	pop	r9
	gfx_coord_t offset_y;
	int16_t error;

	/* Draw only a pixel if radius is zero. */
	if (radius == 0) {
		gfx_mono_draw_pixel(x, y, color);
     ad6:	8f 90       	pop	r8
	}

	/* Set up start iterators. */
	offset_x = 0;
	offset_y = radius;
	error = 3 - 2 * radius;
     ad8:	ea c0       	rjmp	.+468    	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
     ada:	83 e0       	ldi	r24, 0x03	; 3
     adc:	90 e0       	ldi	r25, 0x00	; 0
     ade:	7c 01       	movw	r14, r24
     ae0:	22 e0       	ldi	r18, 0x02	; 2
     ae2:	42 9f       	mul	r20, r18
     ae4:	e0 18       	sub	r14, r0
     ae6:	f1 08       	sbc	r15, r1
     ae8:	11 24       	eor	r1, r1
     aea:	bb 24       	eor	r11, r11
		gfx_mono_draw_pixel(x, y, color);
		return;
	}

	/* Set up start iterators. */
	offset_x = 0;
     aec:	b3 94       	inc	r11
	error = 3 - 2 * radius;

	/* Iterate offset_x from 0 to radius. */
	while (offset_x <= offset_y) {
		/* Draw vertical lines tracking each quadrant. */
		if (quadrant_mask & GFX_QUADRANT0) {
     aee:	d0 e0       	ldi	r29, 0x00	; 0
     af0:	80 2f       	mov	r24, r16
     af2:	83 70       	andi	r24, 0x03	; 3
					y - offset_x, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x + offset_x,
					y - offset_y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT1) {
     af4:	a8 2e       	mov	r10, r24
     af6:	20 2f       	mov	r18, r16
     af8:	2c 70       	andi	r18, 0x0C	; 12
					y - offset_x, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x - offset_x,
					y - offset_y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT2) {
     afa:	92 2e       	mov	r9, r18
     afc:	80 2f       	mov	r24, r16
     afe:	80 73       	andi	r24, 0x30	; 48
					y, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x - offset_x,
					y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT3) {
     b00:	88 2e       	mov	r8, r24
	error = 3 - 2 * radius;

	/* Iterate offset_x from 0 to radius. */
	while (offset_x <= offset_y) {
		/* Draw vertical lines tracking each quadrant. */
		if (quadrant_mask & GFX_QUADRANT0) {
     b02:	00 7c       	andi	r16, 0xC0	; 192
     b04:	aa 20       	and	r10, r10
			gfx_mono_draw_vertical_line(x + offset_y,
     b06:	79 f0       	breq	.+30     	; 0xb26 <gfx_mono_generic_draw_filled_circle+0x8c>
     b08:	2c 2d       	mov	r18, r12
     b0a:	4b 2d       	mov	r20, r11
     b0c:	6d 2d       	mov	r22, r13
     b0e:	6d 1b       	sub	r22, r29
     b10:	81 2f       	mov	r24, r17
     b12:	8c 0f       	add	r24, r28
					y - offset_x, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x + offset_x,
     b14:	11 de       	rcall	.-990    	; 0x738 <gfx_mono_generic_draw_vertical_line>
     b16:	2c 2d       	mov	r18, r12
     b18:	41 e0       	ldi	r20, 0x01	; 1
     b1a:	4c 0f       	add	r20, r28
     b1c:	6d 2d       	mov	r22, r13
     b1e:	6c 1b       	sub	r22, r28
     b20:	81 2f       	mov	r24, r17
     b22:	8d 0f       	add	r24, r29
					y - offset_y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT1) {
     b24:	09 de       	rcall	.-1006   	; 0x738 <gfx_mono_generic_draw_vertical_line>
     b26:	99 20       	and	r9, r9
			gfx_mono_draw_vertical_line(x - offset_y,
     b28:	79 f0       	breq	.+30     	; 0xb48 <gfx_mono_generic_draw_filled_circle+0xae>
     b2a:	2c 2d       	mov	r18, r12
     b2c:	4b 2d       	mov	r20, r11
     b2e:	6d 2d       	mov	r22, r13
     b30:	6d 1b       	sub	r22, r29
     b32:	81 2f       	mov	r24, r17
     b34:	8c 1b       	sub	r24, r28
					y - offset_x, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x - offset_x,
     b36:	00 de       	rcall	.-1024   	; 0x738 <gfx_mono_generic_draw_vertical_line>
     b38:	2c 2d       	mov	r18, r12
     b3a:	41 e0       	ldi	r20, 0x01	; 1
     b3c:	4c 0f       	add	r20, r28
     b3e:	6d 2d       	mov	r22, r13
     b40:	6c 1b       	sub	r22, r28
     b42:	81 2f       	mov	r24, r17
     b44:	8d 1b       	sub	r24, r29
					y - offset_y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT2) {
     b46:	f8 dd       	rcall	.-1040   	; 0x738 <gfx_mono_generic_draw_vertical_line>
			gfx_mono_draw_vertical_line(x - offset_y,
     b48:	88 20       	and	r8, r8
     b4a:	69 f0       	breq	.+26     	; 0xb66 <gfx_mono_generic_draw_filled_circle+0xcc>
     b4c:	2c 2d       	mov	r18, r12
     b4e:	4b 2d       	mov	r20, r11
     b50:	6d 2d       	mov	r22, r13
					y, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x - offset_x,
     b52:	81 2f       	mov	r24, r17
     b54:	8c 1b       	sub	r24, r28
     b56:	f0 dd       	rcall	.-1056   	; 0x738 <gfx_mono_generic_draw_vertical_line>
     b58:	2c 2d       	mov	r18, r12
     b5a:	41 e0       	ldi	r20, 0x01	; 1
     b5c:	4c 0f       	add	r20, r28
					y, offset_y + 1, color);
		}

		if (quadrant_mask & GFX_QUADRANT3) {
     b5e:	6d 2d       	mov	r22, r13
			gfx_mono_draw_vertical_line(x + offset_y,
     b60:	81 2f       	mov	r24, r17
     b62:	8d 1b       	sub	r24, r29
     b64:	e9 dd       	rcall	.-1070   	; 0x738 <gfx_mono_generic_draw_vertical_line>
     b66:	00 23       	and	r16, r16
     b68:	69 f0       	breq	.+26     	; 0xb84 <gfx_mono_generic_draw_filled_circle+0xea>
     b6a:	2c 2d       	mov	r18, r12
					y, offset_x + 1, color);
			gfx_mono_draw_vertical_line(x + offset_x,
     b6c:	4b 2d       	mov	r20, r11
     b6e:	6d 2d       	mov	r22, r13
     b70:	81 2f       	mov	r24, r17
     b72:	8c 0f       	add	r24, r28
     b74:	e1 dd       	rcall	.-1086   	; 0x738 <gfx_mono_generic_draw_vertical_line>
     b76:	2c 2d       	mov	r18, r12
     b78:	41 e0       	ldi	r20, 0x01	; 1
     b7a:	4c 0f       	add	r20, r28
     b7c:	6d 2d       	mov	r22, r13
     b7e:	81 2f       	mov	r24, r17
					y, offset_y + 1, color);
		}

		/* Update error value and step offset_y when required. */
		if (error < 0) {
     b80:	8d 0f       	add	r24, r29
     b82:	da dd       	rcall	.-1100   	; 0x738 <gfx_mono_generic_draw_vertical_line>
			error += ((offset_x << 2) + 6);
     b84:	8d 2f       	mov	r24, r29
     b86:	90 e0       	ldi	r25, 0x00	; 0
     b88:	f7 fe       	sbrs	r15, 7
     b8a:	08 c0       	rjmp	.+16     	; 0xb9c <gfx_mono_generic_draw_filled_circle+0x102>
     b8c:	88 0f       	add	r24, r24
     b8e:	99 1f       	adc	r25, r25
     b90:	88 0f       	add	r24, r24
     b92:	99 1f       	adc	r25, r25
		} else {
			error += (((offset_x - offset_y) << 2) + 10);
     b94:	06 96       	adiw	r24, 0x06	; 6
     b96:	e8 0e       	add	r14, r24
     b98:	f9 1e       	adc	r15, r25
     b9a:	0a c0       	rjmp	.+20     	; 0xbb0 <gfx_mono_generic_draw_filled_circle+0x116>
     b9c:	8c 1b       	sub	r24, r28
     b9e:	91 09       	sbc	r25, r1
     ba0:	88 0f       	add	r24, r24
     ba2:	99 1f       	adc	r25, r25
     ba4:	88 0f       	add	r24, r24
			--offset_y;
     ba6:	99 1f       	adc	r25, r25
		}

		/* Next X. */
		++offset_x;
     ba8:	0a 96       	adiw	r24, 0x0a	; 10
     baa:	e8 0e       	add	r14, r24
	offset_x = 0;
	offset_y = radius;
	error = 3 - 2 * radius;

	/* Iterate offset_x from 0 to radius. */
	while (offset_x <= offset_y) {
     bac:	f9 1e       	adc	r15, r25
     bae:	c1 50       	subi	r28, 0x01	; 1
     bb0:	df 5f       	subi	r29, 0xFF	; 255
		}

		/* Next X. */
		++offset_x;
	}
}
     bb2:	b3 94       	inc	r11
     bb4:	cd 17       	cp	r28, r29
     bb6:	08 f0       	brcs	.+2      	; 0xbba <gfx_mono_generic_draw_filled_circle+0x120>
     bb8:	a5 cf       	rjmp	.-182    	; 0xb04 <gfx_mono_generic_draw_filled_circle+0x6a>
     bba:	df 91       	pop	r29
     bbc:	cf 91       	pop	r28
     bbe:	1f 91       	pop	r17
     bc0:	0f 91       	pop	r16
     bc2:	ff 90       	pop	r15
     bc4:	ef 90       	pop	r14
     bc6:	df 90       	pop	r13
     bc8:	cf 90       	pop	r12
     bca:	bf 90       	pop	r11
     bcc:	af 90       	pop	r10
     bce:	9f 90       	pop	r9
     bd0:	8f 90       	pop	r8
     bd2:	08 95       	ret

00000bd4 <gfx_mono_lcd_uc1608_put_page>:
		uint8_t				byte = gfx_mono_lcd_uc1608_get_byte(page, x);

		isSet = (byte & pixel_mask) ?  GFX_PIXEL_SET : GFX_PIXEL_CLR;
	}
	return isSet;
}
     bd4:	0f 93       	push	r16
     bd6:	1f 93       	push	r17
     bd8:	cf 93       	push	r28
     bda:	df 93       	push	r29
     bdc:	8c 01       	movw	r16, r24
     bde:	86 2f       	mov	r24, r22
     be0:	d4 2f       	mov	r29, r20
     be2:	c2 2f       	mov	r28, r18
     be4:	01 15       	cp	r16, r1
     be6:	11 05       	cpc	r17, r1
     be8:	c1 f0       	breq	.+48     	; 0xc1a <gfx_mono_lcd_uc1608_put_page+0x46>
     bea:	60 31       	cpi	r22, 0x10	; 16
     bec:	b0 f4       	brcc	.+44     	; 0xc1a <gfx_mono_lcd_uc1608_put_page+0x46>
     bee:	40 3f       	cpi	r20, 0xF0	; 240
     bf0:	a0 f4       	brcc	.+40     	; 0xc1a <gfx_mono_lcd_uc1608_put_page+0x46>
     bf2:	b3 d6       	rcall	.+3430   	; 0x195a <lcd_page_set>
     bf4:	8d 2f       	mov	r24, r29
     bf6:	b9 d6       	rcall	.+3442   	; 0x196a <lcd_col_set>
     bf8:	8c 2f       	mov	r24, r28
     bfa:	90 e0       	ldi	r25, 0x00	; 0
     bfc:	8d 0f       	add	r24, r29
     bfe:	91 1d       	adc	r25, r1
     c00:	81 3f       	cpi	r24, 0xF1	; 241
     c02:	91 05       	cpc	r25, r1
     c04:	14 f0       	brlt	.+4      	; 0xc0a <gfx_mono_lcd_uc1608_put_page+0x36>
     c06:	c0 ef       	ldi	r28, 0xF0	; 240
     c08:	cd 1b       	sub	r28, r29
     c0a:	cc 23       	and	r28, r28
     c0c:	31 f0       	breq	.+12     	; 0xc1a <gfx_mono_lcd_uc1608_put_page+0x46>
     c0e:	f8 01       	movw	r30, r16
     c10:	81 91       	ld	r24, Z+
     c12:	8f 01       	movw	r16, r30
     c14:	57 d6       	rcall	.+3246   	; 0x18c4 <lcd_bus_write_ram>
     c16:	c1 50       	subi	r28, 0x01	; 1
     c18:	f8 cf       	rjmp	.-16     	; 0xc0a <gfx_mono_lcd_uc1608_put_page+0x36>
     c1a:	df 91       	pop	r29
     c1c:	cf 91       	pop	r28
     c1e:	1f 91       	pop	r17
     c20:	0f 91       	pop	r16
     c22:	08 95       	ret

00000c24 <gfx_mono_lcd_uc1608_put_byte>:
     c24:	cf 93       	push	r28
     c26:	df 93       	push	r29
     c28:	80 31       	cpi	r24, 0x10	; 16
     c2a:	58 f4       	brcc	.+22     	; 0xc42 <gfx_mono_lcd_uc1608_put_byte+0x1e>
     c2c:	60 3f       	cpi	r22, 0xF0	; 240
     c2e:	48 f4       	brcc	.+18     	; 0xc42 <gfx_mono_lcd_uc1608_put_byte+0x1e>
     c30:	d4 2f       	mov	r29, r20
     c32:	c6 2f       	mov	r28, r22
     c34:	92 d6       	rcall	.+3364   	; 0x195a <lcd_page_set>
     c36:	8c 2f       	mov	r24, r28
     c38:	98 d6       	rcall	.+3376   	; 0x196a <lcd_col_set>
     c3a:	8d 2f       	mov	r24, r29
     c3c:	df 91       	pop	r29
     c3e:	cf 91       	pop	r28
     c40:	41 c6       	rjmp	.+3202   	; 0x18c4 <lcd_bus_write_ram>
     c42:	df 91       	pop	r29
     c44:	cf 91       	pop	r28
     c46:	08 95       	ret

00000c48 <gfx_mono_lcd_uc1608_get_byte>:
     c48:	cf 93       	push	r28
     c4a:	80 31       	cpi	r24, 0x10	; 16
     c4c:	40 f4       	brcc	.+16     	; 0xc5e <gfx_mono_lcd_uc1608_get_byte+0x16>
     c4e:	60 3f       	cpi	r22, 0xF0	; 240
     c50:	30 f4       	brcc	.+12     	; 0xc5e <gfx_mono_lcd_uc1608_get_byte+0x16>
     c52:	c6 2f       	mov	r28, r22
     c54:	82 d6       	rcall	.+3332   	; 0x195a <lcd_page_set>
     c56:	8c 2f       	mov	r24, r28
     c58:	88 d6       	rcall	.+3344   	; 0x196a <lcd_col_set>
     c5a:	cf 91       	pop	r28
     c5c:	40 c6       	rjmp	.+3200   	; 0x18de <lcd_bus_read_ram>
     c5e:	80 e0       	ldi	r24, 0x00	; 0
     c60:	cf 91       	pop	r28
     c62:	08 95       	ret

00000c64 <gfx_mono_lcd_uc1608_mask_byte>:
 * \param column     Page offset (x coordinate)
 * \param pixel_mask Mask for pixel operation
 * \param color      Pixel operation
 */
void gfx_mono_lcd_uc1608_mask_byte(gfx_coord_t page, gfx_coord_t column, gfx_mono_color_t pixel_mask, gfx_mono_color_t color)
{
     c64:	0f 93       	push	r16
     c66:	1f 93       	push	r17
     c68:	cf 93       	push	r28
     c6a:	df 93       	push	r29
	uint8_t data = 0;

	if ((page < GFX_MONO_LCD_PAGES) && (column < GFX_MONO_LCD_WIDTH)) {
     c6c:	80 31       	cpi	r24, 0x10	; 16
     c6e:	d0 f4       	brcc	.+52     	; 0xca4 <gfx_mono_lcd_uc1608_mask_byte+0x40>
     c70:	60 3f       	cpi	r22, 0xF0	; 240
     c72:	c0 f4       	brcc	.+48     	; 0xca4 <gfx_mono_lcd_uc1608_mask_byte+0x40>
     c74:	02 2f       	mov	r16, r18
     c76:	d4 2f       	mov	r29, r20
		data = gfx_mono_lcd_uc1608_get_byte(page, column);
     c78:	16 2f       	mov	r17, r22
     c7a:	e6 df       	rcall	.-52     	; 0xc48 <gfx_mono_lcd_uc1608_get_byte>

		switch (color) {
     c7c:	c8 2f       	mov	r28, r24
     c7e:	01 30       	cpi	r16, 0x01	; 1
     c80:	41 f0       	breq	.+16     	; 0xc92 <gfx_mono_lcd_uc1608_mask_byte+0x2e>
     c82:	20 f0       	brcs	.+8      	; 0xc8c <gfx_mono_lcd_uc1608_mask_byte+0x28>
     c84:	02 30       	cpi	r16, 0x02	; 2
			case GFX_PIXEL_SET:
				data |= pixel_mask;
				break;

			case GFX_PIXEL_XOR:
				data ^= pixel_mask;
     c86:	31 f4       	brne	.+12     	; 0xc94 <gfx_mono_lcd_uc1608_mask_byte+0x30>
     c88:	cd 27       	eor	r28, r29
	if ((page < GFX_MONO_LCD_PAGES) && (column < GFX_MONO_LCD_WIDTH)) {
		data = gfx_mono_lcd_uc1608_get_byte(page, column);

		switch (color) {
			case GFX_PIXEL_CLR:
				data &= ~pixel_mask;
     c8a:	04 c0       	rjmp	.+8      	; 0xc94 <gfx_mono_lcd_uc1608_mask_byte+0x30>
     c8c:	d0 95       	com	r29
     c8e:	cd 23       	and	r28, r29
			case GFX_PIXEL_XOR:
				data ^= pixel_mask;
				break;
		}

		lcd_col_set(column);
     c90:	01 c0       	rjmp	.+2      	; 0xc94 <gfx_mono_lcd_uc1608_mask_byte+0x30>
     c92:	cd 2b       	or	r28, r29
		lcd_bus_write_ram(data);										// Write byte slice to RAM
     c94:	81 2f       	mov	r24, r17
	}
}
     c96:	69 d6       	rcall	.+3282   	; 0x196a <lcd_col_set>
     c98:	8c 2f       	mov	r24, r28
     c9a:	df 91       	pop	r29
				data ^= pixel_mask;
				break;
		}

		lcd_col_set(column);
		lcd_bus_write_ram(data);										// Write byte slice to RAM
     c9c:	cf 91       	pop	r28
     c9e:	1f 91       	pop	r17
	}
}
     ca0:	0f 91       	pop	r16
     ca2:	10 c6       	rjmp	.+3104   	; 0x18c4 <lcd_bus_write_ram>
     ca4:	df 91       	pop	r29
     ca6:	cf 91       	pop	r28
     ca8:	1f 91       	pop	r17
     caa:	0f 91       	pop	r16
     cac:	08 95       	ret

00000cae <gfx_mono_lcd_uc1608_draw_pixel>:
 * \param x         X coordinate of the pixel
 * \param y         Y coordinate of the pixel
 * \param color     Pixel operation.
 */
void gfx_mono_lcd_uc1608_draw_pixel(gfx_coord_t x, gfx_coord_t y, gfx_mono_color_t color)
{
     cae:	96 2f       	mov	r25, r22
     cb0:	24 2f       	mov	r18, r20
	if ((x < GFX_MONO_LCD_WIDTH) && (y < GFX_MONO_LCD_HEIGHT)) {
     cb2:	80 3f       	cpi	r24, 0xF0	; 240
     cb4:	88 f4       	brcc	.+34     	; 0xcd8 <gfx_mono_lcd_uc1608_draw_pixel+0x2a>
     cb6:	67 fd       	sbrc	r22, 7
     cb8:	0f c0       	rjmp	.+30     	; 0xcd8 <gfx_mono_lcd_uc1608_draw_pixel+0x2a>
		gfx_coord_t			page		= y / GFX_MONO_LCD_PIXELS_PER_BYTE;
		gfx_mono_color_t	pixel_mask	= 1 << (y % GFX_MONO_LCD_PIXELS_PER_BYTE);

		gfx_mono_lcd_uc1608_mask_byte(page, x, pixel_mask, color);
     cba:	36 2f       	mov	r19, r22
     cbc:	37 70       	andi	r19, 0x07	; 7
     cbe:	61 e0       	ldi	r22, 0x01	; 1
     cc0:	70 e0       	ldi	r23, 0x00	; 0
     cc2:	ab 01       	movw	r20, r22
     cc4:	01 c0       	rjmp	.+2      	; 0xcc8 <gfx_mono_lcd_uc1608_draw_pixel+0x1a>
     cc6:	44 0f       	add	r20, r20
     cc8:	3a 95       	dec	r19
     cca:	ea f7       	brpl	.-6      	; 0xcc6 <gfx_mono_lcd_uc1608_draw_pixel+0x18>
     ccc:	68 2f       	mov	r22, r24
     cce:	89 2f       	mov	r24, r25
     cd0:	86 95       	lsr	r24
     cd2:	86 95       	lsr	r24
     cd4:	86 95       	lsr	r24
     cd6:	c6 cf       	rjmp	.-116    	; 0xc64 <gfx_mono_lcd_uc1608_mask_byte>
     cd8:	08 95       	ret

00000cda <gfx_mono_draw_char>:
 * \param y        Y coordinate on screen.
 * \param font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
     cda:	9f 92       	push	r9
     cdc:	af 92       	push	r10
     cde:	bf 92       	push	r11
     ce0:	cf 92       	push	r12
     ce2:	df 92       	push	r13
     ce4:	ef 92       	push	r14
     ce6:	ff 92       	push	r15
     ce8:	0f 93       	push	r16
     cea:	1f 93       	push	r17
     cec:	cf 93       	push	r28
     cee:	df 93       	push	r29
     cf0:	d8 2f       	mov	r29, r24
     cf2:	c6 2e       	mov	r12, r22
     cf4:	d4 2e       	mov	r13, r20
     cf6:	79 01       	movw	r14, r18
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
     cf8:	00 e0       	ldi	r16, 0x00	; 0
     cfa:	f9 01       	movw	r30, r18
     cfc:	24 81       	ldd	r18, Z+4	; 0x04
     cfe:	43 81       	ldd	r20, Z+3	; 0x03
     d00:	6d 2d       	mov	r22, r13
     d02:	8c 2d       	mov	r24, r12
     d04:	02 de       	rcall	.-1020   	; 0x90a <gfx_mono_generic_draw_filled_rect>
			GFX_PIXEL_CLR);

	switch (font->type) {
     d06:	f7 01       	movw	r30, r14
     d08:	80 81       	ld	r24, Z
     d0a:	81 11       	cpse	r24, r1
     d0c:	39 c0       	rjmp	.+114    	; 0xd80 <gfx_mono_draw_char+0xa6>
	Assert(font != NULL);

	gfx_coord_t inc_x = x;
	gfx_coord_t inc_y = y;

	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
     d0e:	83 81       	ldd	r24, Z+3	; 0x03
     d10:	28 2f       	mov	r18, r24
     d12:	26 95       	lsr	r18
     d14:	26 95       	lsr	r18
     d16:	26 95       	lsr	r18
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
     d18:	87 70       	andi	r24, 0x07	; 7
     d1a:	09 f0       	breq	.+2      	; 0xd1e <gfx_mono_draw_char+0x44>
		char_row_size++;
     d1c:	2f 5f       	subi	r18, 0xFF	; 255
	}

	glyph_data_offset = char_row_size * font->height *
     d1e:	f7 01       	movw	r30, r14
     d20:	c4 81       	ldd	r28, Z+4	; 0x04
			((uint8_t)ch - font->first_char);
	glyph_data = font->data.progmem + glyph_data_offset;
     d22:	8d 2f       	mov	r24, r29
     d24:	90 e0       	ldi	r25, 0x00	; 0
     d26:	35 81       	ldd	r19, Z+5	; 0x05
     d28:	83 1b       	sub	r24, r19
     d2a:	91 09       	sbc	r25, r1
     d2c:	2c 9f       	mul	r18, r28
     d2e:	90 01       	movw	r18, r0
     d30:	11 24       	eor	r1, r1
     d32:	82 9f       	mul	r24, r18
     d34:	a0 01       	movw	r20, r0
     d36:	83 9f       	mul	r24, r19
     d38:	50 0d       	add	r21, r0
     d3a:	92 9f       	mul	r25, r18
     d3c:	50 0d       	add	r21, r0
     d3e:	11 24       	eor	r1, r1
     d40:	01 81       	ldd	r16, Z+1	; 0x01
     d42:	12 81       	ldd	r17, Z+2	; 0x02
     d44:	04 0f       	add	r16, r20
     d46:	15 1f       	adc	r17, r21
     d48:	dc 0e       	add	r13, r28
     d4a:	9d 2c       	mov	r9, r13
     d4c:	9c 1a       	sub	r9, r28
	rows_left = font->height;

	do {
		uint8_t glyph_byte = 0;
		uint8_t pixelsToDraw = font->width;
     d4e:	f7 01       	movw	r30, r14
     d50:	a3 80       	ldd	r10, Z+3	; 0x03
			((uint8_t)ch - font->first_char);
	glyph_data = font->data.progmem + glyph_data_offset;
	rows_left = font->height;

	do {
		uint8_t glyph_byte = 0;
     d52:	b1 2c       	mov	r11, r1
		uint8_t pixelsToDraw = font->width;

		for (i = 0; i < pixelsToDraw; i++) {
     d54:	d0 e0       	ldi	r29, 0x00	; 0
     d56:	8c 2d       	mov	r24, r12
     d58:	8d 0f       	add	r24, r29
     d5a:	ad 16       	cp	r10, r29
     d5c:	79 f0       	breq	.+30     	; 0xd7c <gfx_mono_draw_char+0xa2>
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
     d5e:	9d 2f       	mov	r25, r29
     d60:	97 70       	andi	r25, 0x07	; 7
     d62:	21 f4       	brne	.+8      	; 0xd6c <gfx_mono_draw_char+0x92>
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
     d64:	f8 01       	movw	r30, r16
     d66:	b4 90       	lpm	r11, Z
				glyph_data++;
     d68:	0f 5f       	subi	r16, 0xFF	; 255
     d6a:	1f 4f       	sbci	r17, 0xFF	; 255
			}

			if ((glyph_byte & 0x80)) {
     d6c:	b7 fe       	sbrs	r11, 7
     d6e:	03 c0       	rjmp	.+6      	; 0xd76 <gfx_mono_draw_char+0x9c>
				gfx_mono_draw_pixel(inc_x, inc_y,
     d70:	41 e0       	ldi	r20, 0x01	; 1
     d72:	69 2d       	mov	r22, r9
     d74:	9c df       	rcall	.-200    	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
						GFX_PIXEL_SET);
			}

			inc_x += 1;
			glyph_byte <<= 1;
     d76:	bb 0c       	add	r11, r11

	do {
		uint8_t glyph_byte = 0;
		uint8_t pixelsToDraw = font->width;

		for (i = 0; i < pixelsToDraw; i++) {
     d78:	df 5f       	subi	r29, 0xFF	; 255
     d7a:	ed cf       	rjmp	.-38     	; 0xd56 <gfx_mono_draw_char+0x7c>
			glyph_byte <<= 1;
		}

		inc_y += 1;
		inc_x = x;
		rows_left--;
     d7c:	c1 50       	subi	r28, 0x01	; 1
	} while (rows_left > 0);
     d7e:	29 f7       	brne	.-54     	; 0xd4a <gfx_mono_draw_char+0x70>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
     d80:	df 91       	pop	r29
     d82:	cf 91       	pop	r28
     d84:	1f 91       	pop	r17
     d86:	0f 91       	pop	r16
     d88:	ff 90       	pop	r15
     d8a:	ef 90       	pop	r14
     d8c:	df 90       	pop	r13
     d8e:	cf 90       	pop	r12
     d90:	bf 90       	pop	r11
     d92:	af 90       	pop	r10
     d94:	9f 90       	pop	r9
     d96:	08 95       	ret

00000d98 <gfx_mono_draw_string>:
 * \param y         Y coordinate on screen.
 * \param font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
     d98:	df 92       	push	r13
     d9a:	ef 92       	push	r14
     d9c:	ff 92       	push	r15
     d9e:	0f 93       	push	r16
     da0:	1f 93       	push	r17
     da2:	cf 93       	push	r28
     da4:	df 93       	push	r29
     da6:	d6 2e       	mov	r13, r22
     da8:	d4 2f       	mov	r29, r20
     daa:	79 01       	movw	r14, r18
     dac:	8c 01       	movw	r16, r24
     dae:	c6 2f       	mov	r28, r22
	Assert(font != NULL);

	/* Draw characters until trailing null byte */
	do {
		/* Handle '\n' as newline, draw normal characters. */
		if (*str == '\n') {
     db0:	f8 01       	movw	r30, r16
     db2:	81 91       	ld	r24, Z+
     db4:	8f 01       	movw	r16, r30
     db6:	8a 30       	cpi	r24, 0x0A	; 10
     db8:	31 f4       	brne	.+12     	; 0xdc6 <gfx_mono_draw_string+0x2e>
			x = start_of_string_position_x;
			y += font->height + 1;
     dba:	f7 01       	movw	r30, r14
     dbc:	84 81       	ldd	r24, Z+4	; 0x04
     dbe:	8f 5f       	subi	r24, 0xFF	; 255
     dc0:	d8 0f       	add	r29, r24

	/* Draw characters until trailing null byte */
	do {
		/* Handle '\n' as newline, draw normal characters. */
		if (*str == '\n') {
			x = start_of_string_position_x;
     dc2:	cd 2d       	mov	r28, r13
     dc4:	09 c0       	rjmp	.+18     	; 0xdd8 <gfx_mono_draw_string+0x40>
			y += font->height + 1;
		} else if (*str == '\r') {
     dc6:	8d 30       	cpi	r24, 0x0D	; 13
     dc8:	39 f0       	breq	.+14     	; 0xdd8 <gfx_mono_draw_string+0x40>
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
     dca:	97 01       	movw	r18, r14
     dcc:	4d 2f       	mov	r20, r29
     dce:	6c 2f       	mov	r22, r28
     dd0:	84 df       	rcall	.-248    	; 0xcda <gfx_mono_draw_char>
			x += font->width;
     dd2:	f7 01       	movw	r30, r14
     dd4:	83 81       	ldd	r24, Z+3	; 0x03
     dd6:	c8 0f       	add	r28, r24
		}
	} while (*(++str));
     dd8:	f8 01       	movw	r30, r16
     dda:	80 81       	ld	r24, Z
     ddc:	81 11       	cpse	r24, r1
     dde:	e8 cf       	rjmp	.-48     	; 0xdb0 <gfx_mono_draw_string+0x18>
}
     de0:	df 91       	pop	r29
     de2:	cf 91       	pop	r28
     de4:	1f 91       	pop	r17
     de6:	0f 91       	pop	r16
     de8:	ff 90       	pop	r15
     dea:	ef 90       	pop	r14
     dec:	df 90       	pop	r13
     dee:	08 95       	ret

00000df0 <asm_break>:

/* Helper functions */

void asm_break(void)
{
	__asm__ __volatile__ ("break" ::: "memory");
     df0:	98 95       	break
	nop();
     df2:	00 00       	nop
     df4:	08 95       	ret

00000df6 <__vector_9>:
{	/* TIMER 2 COMP-B */
	s_bad_interrupt();
}

ISR(__vector_9, ISR_BLOCK)
{	/* TIMER 2 OVF - Overflow */
     df6:	1f 92       	push	r1
     df8:	0f 92       	push	r0
     dfa:	0f b6       	in	r0, 0x3f	; 63
     dfc:	0f 92       	push	r0
     dfe:	11 24       	eor	r1, r1
     e00:	2f 93       	push	r18
     e02:	3f 93       	push	r19
     e04:	4f 93       	push	r20
     e06:	5f 93       	push	r21
     e08:	6f 93       	push	r22
     e0a:	7f 93       	push	r23
     e0c:	8f 93       	push	r24
     e0e:	9f 93       	push	r25
     e10:	af 93       	push	r26
     e12:	bf 93       	push	r27
     e14:	ef 93       	push	r30
     e16:	ff 93       	push	r31
	if (g_status.isAnimationStopped && (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)) {
     e18:	80 91 66 04 	lds	r24, 0x0466	; 0x800466 <g_status>
     e1c:	81 ff       	sbrs	r24, 1
     e1e:	74 c0       	rjmp	.+232    	; 0xf08 <__vector_9+0x112>
     e20:	80 91 30 04 	lds	r24, 0x0430	; 0x800430 <g_SmartLCD_mode>
     e24:	80 32       	cpi	r24, 0x20	; 32
     e26:	09 f0       	breq	.+2      	; 0xe2a <__vector_9+0x34>
     e28:	6f c0       	rjmp	.+222    	; 0xf08 <__vector_9+0x112>
		static uint8_t state_old = 0;
		static uint8_t state_ctr = 0;
		static uint8_t second_old = 0;
		static uint8_t button_ctr = 0;
		uint8_t cur = PORTB & 0x3f;
     e2a:	85 b1       	in	r24, 0x05	; 5
     e2c:	8f 73       	andi	r24, 0x3F	; 63

		/* signaling the grade of deviation */
		g_audio_out_loudness = 0;
		if (g_showData.clkState_clk_state < 0xf) {
     e2e:	90 91 51 04 	lds	r25, 0x0451	; 0x800451 <g_showData+0x20>
     e32:	9f 30       	cpi	r25, 0x0F	; 15
     e34:	60 f4       	brcc	.+24     	; 0xe4e <__vector_9+0x58>
			cur |= _BV(PORTB6);  // LED = red
     e36:	80 64       	ori	r24, 0x40	; 64
			if (state_old != 0x02) {
     e38:	90 91 4b 03 	lds	r25, 0x034B	; 0x80034b <state_old.2972>
     e3c:	92 30       	cpi	r25, 0x02	; 2
     e3e:	19 f0       	breq	.+6      	; 0xe46 <__vector_9+0x50>
				state_ctr = 122;  // 1 sec
     e40:	9a e7       	ldi	r25, 0x7A	; 122
     e42:	90 93 4a 03 	sts	0x034A, r25	; 0x80034a <state_ctr.2973>
			}
			state_old = 0x02;
     e46:	92 e0       	ldi	r25, 0x02	; 2
     e48:	90 93 4b 03 	sts	0x034B, r25	; 0x80034b <state_old.2972>
     e4c:	24 c0       	rjmp	.+72     	; 0xe96 <__vector_9+0xa0>

		} else if ((g_showData.clkState_clk_state == 0xf) && (-4 < g_showData.ppb_int) && (g_showData.ppb_int < 4)) {
     e4e:	9f 30       	cpi	r25, 0x0F	; 15
     e50:	c1 f4       	brne	.+48     	; 0xe82 <__vector_9+0x8c>
     e52:	20 91 43 04 	lds	r18, 0x0443	; 0x800443 <g_showData+0x12>
     e56:	30 91 44 04 	lds	r19, 0x0444	; 0x800444 <g_showData+0x13>
     e5a:	2d 5f       	subi	r18, 0xFD	; 253
     e5c:	3f 4f       	sbci	r19, 0xFF	; 255
     e5e:	27 30       	cpi	r18, 0x07	; 7
     e60:	31 05       	cpc	r19, r1
     e62:	78 f4       	brcc	.+30     	; 0xe82 <__vector_9+0x8c>
			cur |= _BV(PORTB7);  // LED = green
     e64:	80 68       	ori	r24, 0x80	; 128
			state_old = 0x00;
     e66:	10 92 4b 03 	sts	0x034B, r1	; 0x80034b <state_old.2972>

			/* Acoustic phase tracker */
			if (g_showData.time_second != second_old) {
     e6a:	90 91 56 04 	lds	r25, 0x0456	; 0x800456 <g_showData+0x25>
     e6e:	20 91 49 03 	lds	r18, 0x0349	; 0x800349 <second_old.2974>
     e72:	92 17       	cp	r25, r18
     e74:	81 f0       	breq	.+32     	; 0xe96 <__vector_9+0xa0>
				second_old = g_showData.time_second;
     e76:	90 93 49 03 	sts	0x0349, r25	; 0x800349 <second_old.2974>
				state_ctr = 6;
     e7a:	96 e0       	ldi	r25, 0x06	; 6
     e7c:	90 93 4a 03 	sts	0x034A, r25	; 0x80034a <state_ctr.2973>
     e80:	0a c0       	rjmp	.+20     	; 0xe96 <__vector_9+0xa0>
			}

		} else {
			if (!state_old) {
     e82:	90 91 4b 03 	lds	r25, 0x034B	; 0x80034b <state_old.2972>
     e86:	91 11       	cpse	r25, r1
     e88:	03 c0       	rjmp	.+6      	; 0xe90 <__vector_9+0x9a>
				state_ctr = 30;  // 1/4 sec
     e8a:	9e e1       	ldi	r25, 0x1E	; 30
     e8c:	90 93 4a 03 	sts	0x034A, r25	; 0x80034a <state_ctr.2973>
			}
			state_old = 0x01;
     e90:	91 e0       	ldi	r25, 0x01	; 1
     e92:	90 93 4b 03 	sts	0x034B, r25	; 0x80034b <state_old.2972>
		}

		if (state_ctr) {
     e96:	90 91 4a 03 	lds	r25, 0x034A	; 0x80034a <state_ctr.2973>
     e9a:	99 23       	and	r25, r25
     e9c:	39 f0       	breq	.+14     	; 0xeac <__vector_9+0xb6>
			--state_ctr;
     e9e:	91 50       	subi	r25, 0x01	; 1
     ea0:	90 93 4a 03 	sts	0x034A, r25	; 0x80034a <state_ctr.2973>
			g_audio_out_loudness = 9;  // max 9
     ea4:	99 e0       	ldi	r25, 0x09	; 9
     ea6:	90 93 6a 04 	sts	0x046A, r25	; 0x80046a <g_audio_out_loudness>
     eaa:	02 c0       	rjmp	.+4      	; 0xeb0 <__vector_9+0xba>
		} else {
			g_audio_out_loudness = 0;
     eac:	10 92 6a 04 	sts	0x046A, r1	; 0x80046a <g_audio_out_loudness>
		}

		PORTB = cur;
     eb0:	85 b9       	out	0x05, r24	; 5

		/* sampling I/Q and push buttons */
		if (button_ctr) {
     eb2:	80 91 48 03 	lds	r24, 0x0348	; 0x800348 <__data_end>
     eb6:	88 23       	and	r24, r24
     eb8:	21 f0       	breq	.+8      	; 0xec2 <__vector_9+0xcc>
			--button_ctr;
     eba:	81 50       	subi	r24, 0x01	; 1
     ebc:	80 93 48 03 	sts	0x0348, r24	; 0x800348 <__data_end>
     ec0:	23 c0       	rjmp	.+70     	; 0xf08 <__vector_9+0x112>
		} else {
			button_ctr = 12;
     ec2:	8c e0       	ldi	r24, 0x0C	; 12
     ec4:	80 93 48 03 	sts	0x0348, r24	; 0x800348 <__data_end>
			uint8_t sw = (PINC & 0x06) >> 1;
     ec8:	86 b1       	in	r24, 0x06	; 6
     eca:	86 70       	andi	r24, 0x06	; 6
     ecc:	90 e0       	ldi	r25, 0x00	; 0
     ece:	95 95       	asr	r25
     ed0:	87 95       	ror	r24
			if (!(sw & 0x01)) {									// SW-I: decrement contrast voltage
     ed2:	80 fd       	sbrc	r24, 0
     ed4:	09 c0       	rjmp	.+18     	; 0xee8 <__vector_9+0xf2>
				if (g_lcd_contrast_pm) {
     ed6:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <g_lcd_contrast_pm>
     eda:	88 23       	and	r24, r24
     edc:	a9 f0       	breq	.+42     	; 0xf08 <__vector_9+0x112>
					--g_lcd_contrast_pm;
     ede:	81 50       	subi	r24, 0x01	; 1
     ee0:	80 93 6b 04 	sts	0x046B, r24	; 0x80046b <g_lcd_contrast_pm>
					lcd_contrast_update();
     ee4:	11 d5       	rcall	.+2594   	; 0x1908 <lcd_contrast_update>
				}
			} else if (!(sw & 0x02)) {							// SW-Q: increment contrast voltage
     ee6:	10 c0       	rjmp	.+32     	; 0xf08 <__vector_9+0x112>
     ee8:	81 fd       	sbrc	r24, 1
				if (g_lcd_contrast_pm < 0x3F) {
     eea:	09 c0       	rjmp	.+18     	; 0xefe <__vector_9+0x108>
     eec:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <g_lcd_contrast_pm>
     ef0:	8f 33       	cpi	r24, 0x3F	; 63
					++g_lcd_contrast_pm;
     ef2:	50 f4       	brcc	.+20     	; 0xf08 <__vector_9+0x112>
     ef4:	8f 5f       	subi	r24, 0xFF	; 255
					lcd_contrast_update();
     ef6:	80 93 6b 04 	sts	0x046B, r24	; 0x80046b <g_lcd_contrast_pm>
     efa:	06 d5       	rcall	.+2572   	; 0x1908 <lcd_contrast_update>
				}
			} else if (!(PINB & _BV(PINB2))) {					// Pushbutton: store value in EEPROM
     efc:	05 c0       	rjmp	.+10     	; 0xf08 <__vector_9+0x112>
     efe:	1a 99       	sbic	0x03, 2	; 3
				eeprom_nvm_settings_write(C_EEPROM_NVM_SETTING_LCD_CONTRAST);
     f00:	03 c0       	rjmp	.+6      	; 0xf08 <__vector_9+0x112>
     f02:	81 e0       	ldi	r24, 0x01	; 1
     f04:	0e 94 45 1b 	call	0x368a	; 0x368a <eeprom_nvm_settings_write>
			}
		}
	}
}
     f08:	ff 91       	pop	r31
     f0a:	ef 91       	pop	r30
     f0c:	bf 91       	pop	r27
     f0e:	af 91       	pop	r26
     f10:	9f 91       	pop	r25
     f12:	8f 91       	pop	r24
     f14:	7f 91       	pop	r23
     f16:	6f 91       	pop	r22
     f18:	5f 91       	pop	r21
     f1a:	4f 91       	pop	r20
     f1c:	3f 91       	pop	r19
     f1e:	2f 91       	pop	r18
     f20:	0f 90       	pop	r0
     f22:	0f be       	out	0x3f, r0	; 63
     f24:	0f 90       	pop	r0
     f26:	1f 90       	pop	r1
     f28:	18 95       	reti

00000f2a <__vector_13>:
{	/* TIMER 1 COMP-B */
	s_bad_interrupt();
}

ISR(__vector_13, ISR_BLOCK)
{	/* TIMER 1 OVF - Overflow */
     f2a:	1f 92       	push	r1
     f2c:	0f 92       	push	r0
     f2e:	0f b6       	in	r0, 0x3f	; 63
     f30:	0f 92       	push	r0
     f32:	11 24       	eor	r1, r1
     f34:	2f 93       	push	r18
     f36:	3f 93       	push	r19
     f38:	4f 93       	push	r20
     f3a:	5f 93       	push	r21
     f3c:	6f 93       	push	r22
     f3e:	7f 93       	push	r23
     f40:	8f 93       	push	r24
     f42:	9f 93       	push	r25
     f44:	af 93       	push	r26
     f46:	bf 93       	push	r27
	++g_timer_abs_msb;
     f48:	80 91 7a 04 	lds	r24, 0x047A	; 0x80047a <g_timer_abs_msb>
     f4c:	90 91 7b 04 	lds	r25, 0x047B	; 0x80047b <g_timer_abs_msb+0x1>
     f50:	a0 91 7c 04 	lds	r26, 0x047C	; 0x80047c <g_timer_abs_msb+0x2>
     f54:	b0 91 7d 04 	lds	r27, 0x047D	; 0x80047d <g_timer_abs_msb+0x3>
     f58:	01 96       	adiw	r24, 0x01	; 1
     f5a:	a1 1d       	adc	r26, r1
     f5c:	b1 1d       	adc	r27, r1
     f5e:	80 93 7a 04 	sts	0x047A, r24	; 0x80047a <g_timer_abs_msb>
     f62:	90 93 7b 04 	sts	0x047B, r25	; 0x80047b <g_timer_abs_msb+0x1>
     f66:	a0 93 7c 04 	sts	0x047C, r26	; 0x80047c <g_timer_abs_msb+0x2>
     f6a:	b0 93 7d 04 	sts	0x047D, r27	; 0x80047d <g_timer_abs_msb+0x3>

	if (g_status.isAnimationStopped && g_audio_out_loudness) {
     f6e:	80 91 66 04 	lds	r24, 0x0466	; 0x800466 <g_status>
     f72:	81 ff       	sbrs	r24, 1
     f74:	56 c0       	rjmp	.+172    	; 0x1022 <__vector_13+0xf8>
     f76:	40 91 6a 04 	lds	r20, 0x046A	; 0x80046a <g_audio_out_loudness>
     f7a:	44 23       	and	r20, r20
     f7c:	09 f4       	brne	.+2      	; 0xf80 <__vector_13+0x56>
     f7e:	51 c0       	rjmp	.+162    	; 0x1022 <__vector_13+0xf8>
		int16_t l_audio_pwm_inc = 3691 + (g_showData.clkState_phaseDeg100 >> 2);  // (880 Hz / 15625 Hz) * 16384 Steps * 8
     f80:	80 91 3f 04 	lds	r24, 0x043F	; 0x80043f <g_showData+0xe>
     f84:	90 91 40 04 	lds	r25, 0x0440	; 0x800440 <g_showData+0xf>
     f88:	95 95       	asr	r25
     f8a:	87 95       	ror	r24
     f8c:	95 95       	asr	r25
     f8e:	87 95       	ror	r24
     f90:	9c 01       	movw	r18, r24
     f92:	25 59       	subi	r18, 0x95	; 149
     f94:	31 4f       	sbci	r19, 0xF1	; 241

		/* Generate triangle signal */
		if (g_audio_pwm_ramp_dwn) {
     f96:	50 91 67 04 	lds	r21, 0x0467	; 0x800467 <g_audio_pwm_ramp_dwn>
     f9a:	80 91 68 04 	lds	r24, 0x0468	; 0x800468 <g_audio_pwm_accu>
     f9e:	90 91 69 04 	lds	r25, 0x0469	; 0x800469 <g_audio_pwm_accu+0x1>
     fa2:	55 23       	and	r21, r21
     fa4:	b1 f0       	breq	.+44     	; 0xfd2 <__vector_13+0xa8>
			g_audio_pwm_accu -= l_audio_pwm_inc;
     fa6:	82 1b       	sub	r24, r18
     fa8:	93 0b       	sbc	r25, r19
     faa:	90 93 69 04 	sts	0x0469, r25	; 0x800469 <g_audio_pwm_accu+0x1>
     fae:	80 93 68 04 	sts	0x0468, r24	; 0x800468 <g_audio_pwm_accu>
			if (g_audio_pwm_accu <= -16383) {
     fb2:	82 30       	cpi	r24, 0x02	; 2
     fb4:	20 ec       	ldi	r18, 0xC0	; 192
     fb6:	92 07       	cpc	r25, r18
     fb8:	14 f5       	brge	.+68     	; 0xffe <__vector_13+0xd4>
				g_audio_pwm_ramp_dwn = false;
     fba:	10 92 67 04 	sts	0x0467, r1	; 0x800467 <g_audio_pwm_ramp_dwn>
				int16_t residue = -g_audio_pwm_accu - 16383;
				g_audio_pwm_accu = -16383 + residue;
     fbe:	22 e0       	ldi	r18, 0x02	; 2
     fc0:	30 e8       	ldi	r19, 0x80	; 128
     fc2:	b9 01       	movw	r22, r18
     fc4:	68 1b       	sub	r22, r24
     fc6:	79 0b       	sbc	r23, r25
     fc8:	70 93 69 04 	sts	0x0469, r23	; 0x800469 <g_audio_pwm_accu+0x1>
     fcc:	60 93 68 04 	sts	0x0468, r22	; 0x800468 <g_audio_pwm_accu>
     fd0:	16 c0       	rjmp	.+44     	; 0xffe <__vector_13+0xd4>
			}
		} else {
			g_audio_pwm_accu += l_audio_pwm_inc;
     fd2:	82 0f       	add	r24, r18
     fd4:	93 1f       	adc	r25, r19
     fd6:	90 93 69 04 	sts	0x0469, r25	; 0x800469 <g_audio_pwm_accu+0x1>
     fda:	80 93 68 04 	sts	0x0468, r24	; 0x800468 <g_audio_pwm_accu>
			if (g_audio_pwm_accu >= +16383) {
     fde:	8f 3f       	cpi	r24, 0xFF	; 255
     fe0:	7f e3       	ldi	r23, 0x3F	; 63
     fe2:	97 07       	cpc	r25, r23
     fe4:	64 f0       	brlt	.+24     	; 0xffe <__vector_13+0xd4>
				g_audio_pwm_ramp_dwn = true;
     fe6:	21 e0       	ldi	r18, 0x01	; 1
     fe8:	20 93 67 04 	sts	0x0467, r18	; 0x800467 <g_audio_pwm_ramp_dwn>
				int16_t residue = g_audio_pwm_accu - 16383;
				g_audio_pwm_accu = 16383 - residue;
     fec:	2e ef       	ldi	r18, 0xFE	; 254
     fee:	3f e7       	ldi	r19, 0x7F	; 127
     ff0:	b9 01       	movw	r22, r18
     ff2:	68 1b       	sub	r22, r24
     ff4:	79 0b       	sbc	r23, r25
     ff6:	70 93 69 04 	sts	0x0469, r23	; 0x800469 <g_audio_pwm_accu+0x1>
     ffa:	60 93 68 04 	sts	0x0468, r22	; 0x800468 <g_audio_pwm_accu>
			}
		}

		int16_t audio_out = 256 + (g_audio_pwm_accu >> (15 - g_audio_out_loudness));  // 6 + 9
     ffe:	2f e0       	ldi	r18, 0x0F	; 15
    1000:	30 e0       	ldi	r19, 0x00	; 0
    1002:	24 1b       	sub	r18, r20
    1004:	31 09       	sbc	r19, r1
    1006:	80 91 68 04 	lds	r24, 0x0468	; 0x800468 <g_audio_pwm_accu>
    100a:	90 91 69 04 	lds	r25, 0x0469	; 0x800469 <g_audio_pwm_accu+0x1>
    100e:	02 c0       	rjmp	.+4      	; 0x1014 <__vector_13+0xea>
    1010:	95 95       	asr	r25
    1012:	87 95       	ror	r24
    1014:	2a 95       	dec	r18
    1016:	e2 f7       	brpl	.-8      	; 0x1010 <__vector_13+0xe6>
    1018:	93 95       	inc	r25
		OCR1AH = (uint8_t) (audio_out >> 8);					// 9 bit
    101a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
		OCR1AL = (uint8_t) (audio_out & 0xff);
    101e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	}
}
    1022:	bf 91       	pop	r27
    1024:	af 91       	pop	r26
    1026:	9f 91       	pop	r25
    1028:	8f 91       	pop	r24
    102a:	7f 91       	pop	r23
    102c:	6f 91       	pop	r22
    102e:	5f 91       	pop	r21
    1030:	4f 91       	pop	r20
    1032:	3f 91       	pop	r19
    1034:	2f 91       	pop	r18
    1036:	0f 90       	pop	r0
    1038:	0f be       	out	0x3f, r0	; 63
    103a:	0f 90       	pop	r0
    103c:	1f 90       	pop	r1
    103e:	18 95       	reti

00001040 <__vector_21__bottom>:
	__vector_21__bottom(reason, adc_val, adc_light_last, adc_temp_last);
}

/* do not static this function to avoid code inlining that would inherit many push operations in the critical section */
void __vector_21__bottom(uint8_t reason, uint16_t adc_val, uint16_t adc_light_last, uint16_t adc_temp_last)
{
    1040:	8f 92       	push	r8
    1042:	9f 92       	push	r9
    1044:	af 92       	push	r10
    1046:	bf 92       	push	r11
    1048:	cf 92       	push	r12
    104a:	df 92       	push	r13
    104c:	ef 92       	push	r14
    104e:	ff 92       	push	r15
    1050:	cf 93       	push	r28
    1052:	df 93       	push	r29
    1054:	eb 01       	movw	r28, r22
	/* Low pass filtering and enhancing the data depth */
	if (reason == ADC_STATE_VLD_LDR) {
    1056:	81 30       	cpi	r24, 0x01	; 1
    1058:	e9 f5       	brne	.+122    	; 0x10d4 <__vector_21__bottom+0x94>
		float calc = g_adc_light ?  0.998f * g_adc_light + 0.002f * adc_val : adc_val;			// load with initial value if none is set before
    105a:	c0 90 75 04 	lds	r12, 0x0475	; 0x800475 <g_adc_light>
    105e:	d0 90 76 04 	lds	r13, 0x0476	; 0x800476 <g_adc_light+0x1>
    1062:	e0 90 77 04 	lds	r14, 0x0477	; 0x800477 <g_adc_light+0x2>
    1066:	f0 90 78 04 	lds	r15, 0x0478	; 0x800478 <g_adc_light+0x3>
    106a:	20 e0       	ldi	r18, 0x00	; 0
    106c:	30 e0       	ldi	r19, 0x00	; 0
    106e:	a9 01       	movw	r20, r18
    1070:	c7 01       	movw	r24, r14
    1072:	b6 01       	movw	r22, r12
    1074:	0e 94 da 1d 	call	0x3bb4	; 0x3bb4 <__cmpsf2>
    1078:	ae 01       	movw	r20, r28
    107a:	60 e0       	ldi	r22, 0x00	; 0
    107c:	70 e0       	ldi	r23, 0x00	; 0
    107e:	88 23       	and	r24, r24
    1080:	d9 f0       	breq	.+54     	; 0x10b8 <__vector_21__bottom+0x78>
    1082:	cb 01       	movw	r24, r22
    1084:	ba 01       	movw	r22, r20
    1086:	0e 94 77 1e 	call	0x3cee	; 0x3cee <__floatunsisf>
    108a:	2f e6       	ldi	r18, 0x6F	; 111
    108c:	32 e1       	ldi	r19, 0x12	; 18
    108e:	43 e0       	ldi	r20, 0x03	; 3
    1090:	5b e3       	ldi	r21, 0x3B	; 59
    1092:	0e 94 80 1f 	call	0x3f00	; 0x3f00 <__mulsf3>
    1096:	4b 01       	movw	r8, r22
    1098:	5c 01       	movw	r10, r24
    109a:	2e ee       	ldi	r18, 0xEE	; 238
    109c:	3c e7       	ldi	r19, 0x7C	; 124
    109e:	4f e7       	ldi	r20, 0x7F	; 127
    10a0:	5f e3       	ldi	r21, 0x3F	; 63
    10a2:	c7 01       	movw	r24, r14
    10a4:	b6 01       	movw	r22, r12
    10a6:	0e 94 80 1f 	call	0x3f00	; 0x3f00 <__mulsf3>
    10aa:	9b 01       	movw	r18, r22
    10ac:	ac 01       	movw	r20, r24
    10ae:	c5 01       	movw	r24, r10
    10b0:	b4 01       	movw	r22, r8
    10b2:	0e 94 76 1d 	call	0x3aec	; 0x3aec <__addsf3>
    10b6:	04 c0       	rjmp	.+8      	; 0x10c0 <__vector_21__bottom+0x80>
    10b8:	cb 01       	movw	r24, r22
    10ba:	ba 01       	movw	r22, r20
    10bc:	0e 94 77 1e 	call	0x3cee	; 0x3cee <__floatunsisf>

		cpu_irq_disable();
    10c0:	f8 94       	cli
		g_adc_light = calc;
    10c2:	60 93 75 04 	sts	0x0475, r22	; 0x800475 <g_adc_light>
    10c6:	70 93 76 04 	sts	0x0476, r23	; 0x800476 <g_adc_light+0x1>
    10ca:	80 93 77 04 	sts	0x0477, r24	; 0x800477 <g_adc_light+0x2>
    10ce:	90 93 78 04 	sts	0x0478, r25	; 0x800478 <g_adc_light+0x3>
    10d2:	3e c0       	rjmp	.+124    	; 0x1150 <__vector_21__bottom+0x110>

	} else if (reason == ADC_STATE_VLD_TEMP) {
    10d4:	83 30       	cpi	r24, 0x03	; 3
    10d6:	e1 f5       	brne	.+120    	; 0x1150 <__vector_21__bottom+0x110>
		float calc = g_adc_temp ?  0.9995f * g_adc_temp + 0.0005f * adc_val : adc_val;		// load with initial value if none is set before
    10d8:	c0 90 71 04 	lds	r12, 0x0471	; 0x800471 <g_adc_temp>
    10dc:	d0 90 72 04 	lds	r13, 0x0472	; 0x800472 <g_adc_temp+0x1>
    10e0:	e0 90 73 04 	lds	r14, 0x0473	; 0x800473 <g_adc_temp+0x2>
    10e4:	f0 90 74 04 	lds	r15, 0x0474	; 0x800474 <g_adc_temp+0x3>
    10e8:	20 e0       	ldi	r18, 0x00	; 0
    10ea:	30 e0       	ldi	r19, 0x00	; 0
    10ec:	a9 01       	movw	r20, r18
    10ee:	c7 01       	movw	r24, r14
    10f0:	b6 01       	movw	r22, r12
    10f2:	0e 94 da 1d 	call	0x3bb4	; 0x3bb4 <__cmpsf2>
    10f6:	ae 01       	movw	r20, r28
    10f8:	60 e0       	ldi	r22, 0x00	; 0
    10fa:	70 e0       	ldi	r23, 0x00	; 0
    10fc:	88 23       	and	r24, r24
    10fe:	d9 f0       	breq	.+54     	; 0x1136 <__vector_21__bottom+0xf6>
    1100:	cb 01       	movw	r24, r22
    1102:	ba 01       	movw	r22, r20
    1104:	0e 94 77 1e 	call	0x3cee	; 0x3cee <__floatunsisf>
    1108:	2f e6       	ldi	r18, 0x6F	; 111
    110a:	32 e1       	ldi	r19, 0x12	; 18
    110c:	43 e0       	ldi	r20, 0x03	; 3
    110e:	5a e3       	ldi	r21, 0x3A	; 58
    1110:	0e 94 80 1f 	call	0x3f00	; 0x3f00 <__mulsf3>
    1114:	4b 01       	movw	r8, r22
    1116:	5c 01       	movw	r10, r24
    1118:	2b e3       	ldi	r18, 0x3B	; 59
    111a:	3f ed       	ldi	r19, 0xDF	; 223
    111c:	4f e7       	ldi	r20, 0x7F	; 127
    111e:	5f e3       	ldi	r21, 0x3F	; 63
    1120:	c7 01       	movw	r24, r14
    1122:	b6 01       	movw	r22, r12
    1124:	0e 94 80 1f 	call	0x3f00	; 0x3f00 <__mulsf3>
    1128:	9b 01       	movw	r18, r22
    112a:	ac 01       	movw	r20, r24
    112c:	c5 01       	movw	r24, r10
    112e:	b4 01       	movw	r22, r8
    1130:	0e 94 76 1d 	call	0x3aec	; 0x3aec <__addsf3>
    1134:	04 c0       	rjmp	.+8      	; 0x113e <__vector_21__bottom+0xfe>
    1136:	cb 01       	movw	r24, r22
    1138:	ba 01       	movw	r22, r20
    113a:	0e 94 77 1e 	call	0x3cee	; 0x3cee <__floatunsisf>

		cpu_irq_disable();
    113e:	f8 94       	cli
		g_adc_temp = calc;
    1140:	60 93 71 04 	sts	0x0471, r22	; 0x800471 <g_adc_temp>
    1144:	70 93 72 04 	sts	0x0472, r23	; 0x800472 <g_adc_temp+0x1>
    1148:	80 93 73 04 	sts	0x0473, r24	; 0x800473 <g_adc_temp+0x2>
    114c:	90 93 74 04 	sts	0x0474, r25	; 0x800474 <g_adc_temp+0x3>
	}
}
    1150:	df 91       	pop	r29
    1152:	cf 91       	pop	r28
    1154:	ff 90       	pop	r15
    1156:	ef 90       	pop	r14
    1158:	df 90       	pop	r13
    115a:	cf 90       	pop	r12
    115c:	bf 90       	pop	r11
    115e:	af 90       	pop	r10
    1160:	9f 90       	pop	r9
    1162:	8f 90       	pop	r8
    1164:	08 95       	ret

00001166 <__vector_21>:
{	/* USART, TX - Complete */
	s_bad_interrupt();
}

ISR(__vector_21, ISR_BLOCK)
{	/* ADC */
    1166:	1f 92       	push	r1
    1168:	0f 92       	push	r0
    116a:	0f b6       	in	r0, 0x3f	; 63
    116c:	0f 92       	push	r0
    116e:	11 24       	eor	r1, r1
    1170:	cf 92       	push	r12
    1172:	df 92       	push	r13
    1174:	ef 92       	push	r14
    1176:	ff 92       	push	r15
    1178:	1f 93       	push	r17
    117a:	2f 93       	push	r18
    117c:	3f 93       	push	r19
    117e:	4f 93       	push	r20
    1180:	5f 93       	push	r21
    1182:	6f 93       	push	r22
    1184:	7f 93       	push	r23
    1186:	8f 93       	push	r24
    1188:	9f 93       	push	r25
    118a:	af 93       	push	r26
    118c:	bf 93       	push	r27
    118e:	cf 93       	push	r28
    1190:	df 93       	push	r29
    1192:	ef 93       	push	r30
    1194:	ff 93       	push	r31
	uint16_t adc_val;
	uint8_t  reason = g_adc_state;
    1196:	10 91 79 04 	lds	r17, 0x0479	; 0x800479 <g_adc_state>

	/* CLI part */
	adc_val  = ADCL;
    119a:	c0 91 78 00 	lds	r28, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
	adc_val |= ADCH << 8;
    119e:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
    11a2:	d0 e0       	ldi	r29, 0x00	; 0
    11a4:	d8 2b       	or	r29, r24

	//TIFR1 |= _BV(TOV1);							// Reset Timer1 overflow status bit (no ISR for TOV1 activated!)

	switch (g_adc_state) {
    11a6:	11 30       	cpi	r17, 0x01	; 1
    11a8:	59 f0       	breq	.+22     	; 0x11c0 <__vector_21+0x5a>
    11aa:	30 f0       	brcs	.+12     	; 0x11b8 <__vector_21+0x52>
    11ac:	12 30       	cpi	r17, 0x02	; 2
    11ae:	79 f4       	brne	.+30     	; 0x11ce <__vector_21+0x68>
			g_adc_state = ADC_STATE_PRE_TEMP;
		break;

		case ADC_STATE_PRE_TEMP:
			// drop one ADC value after switching MUX
			g_adc_state = ADC_STATE_VLD_TEMP;
    11b0:	83 e0       	ldi	r24, 0x03	; 3
    11b2:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <g_adc_state>
		break;
    11b6:	10 c0       	rjmp	.+32     	; 0x11d8 <__vector_21+0x72>
	//TIFR1 |= _BV(TOV1);							// Reset Timer1 overflow status bit (no ISR for TOV1 activated!)

	switch (g_adc_state) {
		case ADC_STATE_PRE_LDR:
			// drop one ADC value after switching MUX
			g_adc_state = ADC_STATE_VLD_LDR;
    11b8:	81 e0       	ldi	r24, 0x01	; 1
    11ba:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <g_adc_state>
		break;
    11be:	0c c0       	rjmp	.+24     	; 0x11d8 <__vector_21+0x72>
 *
 * \param regval   ADC input mux selection and voltage reference
 */
static inline void adc_set_admux(uint8_t regval)
{
	ADMUX = regval;
    11c0:	88 ec       	ldi	r24, 0xC8	; 200
    11c2:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>

		case ADC_STATE_VLD_LDR:
			adc_set_admux(ADC_MUX_TEMPSENSE | ADC_VREF_1V1 | ADC_ADJUSTMENT_RIGHT);
			g_adc_state = ADC_STATE_PRE_TEMP;
    11c6:	82 e0       	ldi	r24, 0x02	; 2
    11c8:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <g_adc_state>
		break;
    11cc:	05 c0       	rjmp	.+10     	; 0x11d8 <__vector_21+0x72>
    11ce:	80 ec       	ldi	r24, 0xC0	; 192
    11d0:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>

		case ADC_STATE_VLD_TEMP:
			// fall-through.
		default:
			adc_set_admux(ADC_MUX_ADC0 | ADC_VREF_1V1 | ADC_ADJUSTMENT_RIGHT);
			g_adc_state = ADC_STATE_PRE_LDR;
    11d4:	10 92 79 04 	sts	0x0479, r1	; 0x800479 <g_adc_state>
	}

	uint16_t adc_light_last = g_adc_light;
    11d8:	60 91 75 04 	lds	r22, 0x0475	; 0x800475 <g_adc_light>
    11dc:	70 91 76 04 	lds	r23, 0x0476	; 0x800476 <g_adc_light+0x1>
    11e0:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <g_adc_light+0x2>
    11e4:	90 91 78 04 	lds	r25, 0x0478	; 0x800478 <g_adc_light+0x3>
    11e8:	0e 94 4b 1e 	call	0x3c96	; 0x3c96 <__fixunssfsi>
    11ec:	6b 01       	movw	r12, r22
    11ee:	7c 01       	movw	r14, r24
	uint16_t adc_temp_last  = g_adc_temp;
    11f0:	60 91 71 04 	lds	r22, 0x0471	; 0x800471 <g_adc_temp>
    11f4:	70 91 72 04 	lds	r23, 0x0472	; 0x800472 <g_adc_temp+0x1>
    11f8:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <g_adc_temp+0x2>
    11fc:	90 91 74 04 	lds	r25, 0x0474	; 0x800474 <g_adc_temp+0x3>
    1200:	0e 94 4b 1e 	call	0x3c96	; 0x3c96 <__fixunssfsi>

	/* SEI part */
	cpu_irq_enable();
    1204:	78 94       	sei

	__vector_21__bottom(reason, adc_val, adc_light_last, adc_temp_last);
    1206:	9b 01       	movw	r18, r22
    1208:	a6 01       	movw	r20, r12
    120a:	be 01       	movw	r22, r28
    120c:	81 2f       	mov	r24, r17
    120e:	18 df       	rcall	.-464    	; 0x1040 <__vector_21__bottom>
}
    1210:	ff 91       	pop	r31
    1212:	ef 91       	pop	r30
    1214:	df 91       	pop	r29
    1216:	cf 91       	pop	r28
    1218:	bf 91       	pop	r27
    121a:	af 91       	pop	r26
    121c:	9f 91       	pop	r25
    121e:	8f 91       	pop	r24
    1220:	7f 91       	pop	r23
    1222:	6f 91       	pop	r22
    1224:	5f 91       	pop	r21
    1226:	4f 91       	pop	r20
    1228:	3f 91       	pop	r19
    122a:	2f 91       	pop	r18
    122c:	1f 91       	pop	r17
    122e:	ff 90       	pop	r15
    1230:	ef 90       	pop	r14
    1232:	df 90       	pop	r13
    1234:	cf 90       	pop	r12
    1236:	0f 90       	pop	r0
    1238:	0f be       	out	0x3f, r0	; 63
    123a:	0f 90       	pop	r0
    123c:	1f 90       	pop	r1
    123e:	18 95       	reti

00001240 <__vector_24>:
{	/* ANALOG COMP */
	s_bad_interrupt();
}

ISR(__vector_24, ISR_BLOCK)
{	/* TWI */
    1240:	1f 92       	push	r1
    1242:	0f 92       	push	r0
    1244:	0f b6       	in	r0, 0x3f	; 63
    1246:	0f 92       	push	r0
    1248:	11 24       	eor	r1, r1
    124a:	2f 93       	push	r18
    124c:	3f 93       	push	r19
    124e:	4f 93       	push	r20
    1250:	5f 93       	push	r21
    1252:	6f 93       	push	r22
    1254:	7f 93       	push	r23
    1256:	8f 93       	push	r24
    1258:	9f 93       	push	r25
    125a:	af 93       	push	r26
    125c:	bf 93       	push	r27
    125e:	cf 93       	push	r28
    1260:	df 93       	push	r29
    1262:	ef 93       	push	r30
    1264:	ff 93       	push	r31
	uint8_t tws = TWSR & (0b11111 << TWS3);
    1266:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	uint8_t twd = TWDR;
    126a:	60 91 bb 00 	lds	r22, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	uint8_t twcr_cur = TWCR;
    126e:	cc eb       	ldi	r28, 0xBC	; 188
    1270:	d0 e0       	ldi	r29, 0x00	; 0
    1272:	48 81       	ld	r20, Y

	uint8_t twcr_new = __vector_24__bottom(tws, twd, twcr_cur);
    1274:	88 7f       	andi	r24, 0xF8	; 248
    1276:	0e 94 8d 19 	call	0x331a	; 0x331a <__vector_24__bottom>
	TWCR = twcr_new | _BV(TWINT) | _BV(TWEN) | _BV(TWIE);
    127a:	85 68       	ori	r24, 0x85	; 133
    127c:	88 83       	st	Y, r24
}
    127e:	ff 91       	pop	r31
    1280:	ef 91       	pop	r30
    1282:	df 91       	pop	r29
    1284:	cf 91       	pop	r28
    1286:	bf 91       	pop	r27
    1288:	af 91       	pop	r26
    128a:	9f 91       	pop	r25
    128c:	8f 91       	pop	r24
    128e:	7f 91       	pop	r23
    1290:	6f 91       	pop	r22
    1292:	5f 91       	pop	r21
    1294:	4f 91       	pop	r20
    1296:	3f 91       	pop	r19
    1298:	2f 91       	pop	r18
    129a:	0f 90       	pop	r0
    129c:	0f be       	out	0x3f, r0	; 63
    129e:	0f 90       	pop	r0
    12a0:	1f 90       	pop	r1
    12a2:	18 95       	reti

000012a4 <__vector_25>:

ISR(__vector_25, ISR_BLOCK)
{	/* SPM READY - Store Program Memory Ready */
    12a4:	1f 92       	push	r1
    12a6:	0f 92       	push	r0
    12a8:	0f b6       	in	r0, 0x3f	; 63
    12aa:	0f 92       	push	r0
    12ac:	11 24       	eor	r1, r1
    12ae:	2f 93       	push	r18
    12b0:	3f 93       	push	r19
    12b2:	4f 93       	push	r20
    12b4:	5f 93       	push	r21
    12b6:	6f 93       	push	r22
    12b8:	7f 93       	push	r23
    12ba:	8f 93       	push	r24
    12bc:	9f 93       	push	r25
    12be:	af 93       	push	r26
    12c0:	bf 93       	push	r27
    12c2:	ef 93       	push	r30

/* ISR routines */

static void s_bad_interrupt(void)
{
	asm_break();
    12c4:	ff 93       	push	r31
}

ISR(__vector_25, ISR_BLOCK)
{	/* SPM READY - Store Program Memory Ready */
	s_bad_interrupt();
}
    12c6:	94 dd       	rcall	.-1240   	; 0xdf0 <asm_break>
    12c8:	ff 91       	pop	r31
    12ca:	ef 91       	pop	r30
    12cc:	bf 91       	pop	r27
    12ce:	af 91       	pop	r26
    12d0:	9f 91       	pop	r25
    12d2:	8f 91       	pop	r24
    12d4:	7f 91       	pop	r23
    12d6:	6f 91       	pop	r22
    12d8:	5f 91       	pop	r21
    12da:	4f 91       	pop	r20
    12dc:	3f 91       	pop	r19
    12de:	2f 91       	pop	r18
    12e0:	0f 90       	pop	r0
    12e2:	0f be       	out	0x3f, r0	; 63
    12e4:	0f 90       	pop	r0
    12e6:	1f 90       	pop	r1
    12e8:	18 95       	reti

000012ea <__vector_23>:
    12ea:	1f 92       	push	r1
    12ec:	0f 92       	push	r0
    12ee:	0f b6       	in	r0, 0x3f	; 63
    12f0:	0f 92       	push	r0
    12f2:	11 24       	eor	r1, r1
    12f4:	2f 93       	push	r18
    12f6:	3f 93       	push	r19
    12f8:	4f 93       	push	r20
    12fa:	5f 93       	push	r21
    12fc:	6f 93       	push	r22
    12fe:	7f 93       	push	r23
    1300:	8f 93       	push	r24
    1302:	9f 93       	push	r25
    1304:	af 93       	push	r26
    1306:	bf 93       	push	r27
    1308:	ef 93       	push	r30
    130a:	ff 93       	push	r31
    130c:	cb df       	rcall	.-106    	; 0x12a4 <__vector_25>
    130e:	ff 91       	pop	r31
    1310:	ef 91       	pop	r30
    1312:	bf 91       	pop	r27
    1314:	af 91       	pop	r26
    1316:	9f 91       	pop	r25
    1318:	8f 91       	pop	r24
    131a:	7f 91       	pop	r23
    131c:	6f 91       	pop	r22
    131e:	5f 91       	pop	r21
    1320:	4f 91       	pop	r20
    1322:	3f 91       	pop	r19
    1324:	2f 91       	pop	r18
    1326:	0f 90       	pop	r0
    1328:	0f be       	out	0x3f, r0	; 63
    132a:	0f 90       	pop	r0
    132c:	1f 90       	pop	r1
    132e:	18 95       	reti

00001330 <__vector_22>:
    1330:	1f 92       	push	r1
    1332:	0f 92       	push	r0
    1334:	0f b6       	in	r0, 0x3f	; 63
    1336:	0f 92       	push	r0
    1338:	11 24       	eor	r1, r1
    133a:	2f 93       	push	r18
    133c:	3f 93       	push	r19
    133e:	4f 93       	push	r20
    1340:	5f 93       	push	r21
    1342:	6f 93       	push	r22
    1344:	7f 93       	push	r23
    1346:	8f 93       	push	r24
    1348:	9f 93       	push	r25
    134a:	af 93       	push	r26
    134c:	bf 93       	push	r27
    134e:	ef 93       	push	r30
    1350:	ff 93       	push	r31
    1352:	a8 df       	rcall	.-176    	; 0x12a4 <__vector_25>
    1354:	ff 91       	pop	r31
    1356:	ef 91       	pop	r30
    1358:	bf 91       	pop	r27
    135a:	af 91       	pop	r26
    135c:	9f 91       	pop	r25
    135e:	8f 91       	pop	r24
    1360:	7f 91       	pop	r23
    1362:	6f 91       	pop	r22
    1364:	5f 91       	pop	r21
    1366:	4f 91       	pop	r20
    1368:	3f 91       	pop	r19
    136a:	2f 91       	pop	r18
    136c:	0f 90       	pop	r0
    136e:	0f be       	out	0x3f, r0	; 63
    1370:	0f 90       	pop	r0
    1372:	1f 90       	pop	r1
    1374:	18 95       	reti

00001376 <__vector_20>:
    1376:	1f 92       	push	r1
    1378:	0f 92       	push	r0
    137a:	0f b6       	in	r0, 0x3f	; 63
    137c:	0f 92       	push	r0
    137e:	11 24       	eor	r1, r1
    1380:	2f 93       	push	r18
    1382:	3f 93       	push	r19
    1384:	4f 93       	push	r20
    1386:	5f 93       	push	r21
    1388:	6f 93       	push	r22
    138a:	7f 93       	push	r23
    138c:	8f 93       	push	r24
    138e:	9f 93       	push	r25
    1390:	af 93       	push	r26
    1392:	bf 93       	push	r27
    1394:	ef 93       	push	r30
    1396:	ff 93       	push	r31
    1398:	85 df       	rcall	.-246    	; 0x12a4 <__vector_25>
    139a:	ff 91       	pop	r31
    139c:	ef 91       	pop	r30
    139e:	bf 91       	pop	r27
    13a0:	af 91       	pop	r26
    13a2:	9f 91       	pop	r25
    13a4:	8f 91       	pop	r24
    13a6:	7f 91       	pop	r23
    13a8:	6f 91       	pop	r22
    13aa:	5f 91       	pop	r21
    13ac:	4f 91       	pop	r20
    13ae:	3f 91       	pop	r19
    13b0:	2f 91       	pop	r18
    13b2:	0f 90       	pop	r0
    13b4:	0f be       	out	0x3f, r0	; 63
    13b6:	0f 90       	pop	r0
    13b8:	1f 90       	pop	r1
    13ba:	18 95       	reti

000013bc <__vector_19>:
    13bc:	1f 92       	push	r1
    13be:	0f 92       	push	r0
    13c0:	0f b6       	in	r0, 0x3f	; 63
    13c2:	0f 92       	push	r0
    13c4:	11 24       	eor	r1, r1
    13c6:	2f 93       	push	r18
    13c8:	3f 93       	push	r19
    13ca:	4f 93       	push	r20
    13cc:	5f 93       	push	r21
    13ce:	6f 93       	push	r22
    13d0:	7f 93       	push	r23
    13d2:	8f 93       	push	r24
    13d4:	9f 93       	push	r25
    13d6:	af 93       	push	r26
    13d8:	bf 93       	push	r27
    13da:	ef 93       	push	r30
    13dc:	ff 93       	push	r31
    13de:	62 df       	rcall	.-316    	; 0x12a4 <__vector_25>
    13e0:	ff 91       	pop	r31
    13e2:	ef 91       	pop	r30
    13e4:	bf 91       	pop	r27
    13e6:	af 91       	pop	r26
    13e8:	9f 91       	pop	r25
    13ea:	8f 91       	pop	r24
    13ec:	7f 91       	pop	r23
    13ee:	6f 91       	pop	r22
    13f0:	5f 91       	pop	r21
    13f2:	4f 91       	pop	r20
    13f4:	3f 91       	pop	r19
    13f6:	2f 91       	pop	r18
    13f8:	0f 90       	pop	r0
    13fa:	0f be       	out	0x3f, r0	; 63
    13fc:	0f 90       	pop	r0
    13fe:	1f 90       	pop	r1
    1400:	18 95       	reti

00001402 <__vector_18>:
    1402:	1f 92       	push	r1
    1404:	0f 92       	push	r0
    1406:	0f b6       	in	r0, 0x3f	; 63
    1408:	0f 92       	push	r0
    140a:	11 24       	eor	r1, r1
    140c:	2f 93       	push	r18
    140e:	3f 93       	push	r19
    1410:	4f 93       	push	r20
    1412:	5f 93       	push	r21
    1414:	6f 93       	push	r22
    1416:	7f 93       	push	r23
    1418:	8f 93       	push	r24
    141a:	9f 93       	push	r25
    141c:	af 93       	push	r26
    141e:	bf 93       	push	r27
    1420:	ef 93       	push	r30
    1422:	ff 93       	push	r31
    1424:	3f df       	rcall	.-386    	; 0x12a4 <__vector_25>
    1426:	ff 91       	pop	r31
    1428:	ef 91       	pop	r30
    142a:	bf 91       	pop	r27
    142c:	af 91       	pop	r26
    142e:	9f 91       	pop	r25
    1430:	8f 91       	pop	r24
    1432:	7f 91       	pop	r23
    1434:	6f 91       	pop	r22
    1436:	5f 91       	pop	r21
    1438:	4f 91       	pop	r20
    143a:	3f 91       	pop	r19
    143c:	2f 91       	pop	r18
    143e:	0f 90       	pop	r0
    1440:	0f be       	out	0x3f, r0	; 63
    1442:	0f 90       	pop	r0
    1444:	1f 90       	pop	r1
    1446:	18 95       	reti

00001448 <__vector_17>:
    1448:	1f 92       	push	r1
    144a:	0f 92       	push	r0
    144c:	0f b6       	in	r0, 0x3f	; 63
    144e:	0f 92       	push	r0
    1450:	11 24       	eor	r1, r1
    1452:	2f 93       	push	r18
    1454:	3f 93       	push	r19
    1456:	4f 93       	push	r20
    1458:	5f 93       	push	r21
    145a:	6f 93       	push	r22
    145c:	7f 93       	push	r23
    145e:	8f 93       	push	r24
    1460:	9f 93       	push	r25
    1462:	af 93       	push	r26
    1464:	bf 93       	push	r27
    1466:	ef 93       	push	r30
    1468:	ff 93       	push	r31
    146a:	1c df       	rcall	.-456    	; 0x12a4 <__vector_25>
    146c:	ff 91       	pop	r31
    146e:	ef 91       	pop	r30
    1470:	bf 91       	pop	r27
    1472:	af 91       	pop	r26
    1474:	9f 91       	pop	r25
    1476:	8f 91       	pop	r24
    1478:	7f 91       	pop	r23
    147a:	6f 91       	pop	r22
    147c:	5f 91       	pop	r21
    147e:	4f 91       	pop	r20
    1480:	3f 91       	pop	r19
    1482:	2f 91       	pop	r18
    1484:	0f 90       	pop	r0
    1486:	0f be       	out	0x3f, r0	; 63
    1488:	0f 90       	pop	r0
    148a:	1f 90       	pop	r1
    148c:	18 95       	reti

0000148e <__vector_16>:
    148e:	1f 92       	push	r1
    1490:	0f 92       	push	r0
    1492:	0f b6       	in	r0, 0x3f	; 63
    1494:	0f 92       	push	r0
    1496:	11 24       	eor	r1, r1
    1498:	2f 93       	push	r18
    149a:	3f 93       	push	r19
    149c:	4f 93       	push	r20
    149e:	5f 93       	push	r21
    14a0:	6f 93       	push	r22
    14a2:	7f 93       	push	r23
    14a4:	8f 93       	push	r24
    14a6:	9f 93       	push	r25
    14a8:	af 93       	push	r26
    14aa:	bf 93       	push	r27
    14ac:	ef 93       	push	r30
    14ae:	ff 93       	push	r31
    14b0:	f9 de       	rcall	.-526    	; 0x12a4 <__vector_25>
    14b2:	ff 91       	pop	r31
    14b4:	ef 91       	pop	r30
    14b6:	bf 91       	pop	r27
    14b8:	af 91       	pop	r26
    14ba:	9f 91       	pop	r25
    14bc:	8f 91       	pop	r24
    14be:	7f 91       	pop	r23
    14c0:	6f 91       	pop	r22
    14c2:	5f 91       	pop	r21
    14c4:	4f 91       	pop	r20
    14c6:	3f 91       	pop	r19
    14c8:	2f 91       	pop	r18
    14ca:	0f 90       	pop	r0
    14cc:	0f be       	out	0x3f, r0	; 63
    14ce:	0f 90       	pop	r0
    14d0:	1f 90       	pop	r1
    14d2:	18 95       	reti

000014d4 <__vector_15>:
    14d4:	1f 92       	push	r1
    14d6:	0f 92       	push	r0
    14d8:	0f b6       	in	r0, 0x3f	; 63
    14da:	0f 92       	push	r0
    14dc:	11 24       	eor	r1, r1
    14de:	2f 93       	push	r18
    14e0:	3f 93       	push	r19
    14e2:	4f 93       	push	r20
    14e4:	5f 93       	push	r21
    14e6:	6f 93       	push	r22
    14e8:	7f 93       	push	r23
    14ea:	8f 93       	push	r24
    14ec:	9f 93       	push	r25
    14ee:	af 93       	push	r26
    14f0:	bf 93       	push	r27
    14f2:	ef 93       	push	r30
    14f4:	ff 93       	push	r31
    14f6:	d6 de       	rcall	.-596    	; 0x12a4 <__vector_25>
    14f8:	ff 91       	pop	r31
    14fa:	ef 91       	pop	r30
    14fc:	bf 91       	pop	r27
    14fe:	af 91       	pop	r26
    1500:	9f 91       	pop	r25
    1502:	8f 91       	pop	r24
    1504:	7f 91       	pop	r23
    1506:	6f 91       	pop	r22
    1508:	5f 91       	pop	r21
    150a:	4f 91       	pop	r20
    150c:	3f 91       	pop	r19
    150e:	2f 91       	pop	r18
    1510:	0f 90       	pop	r0
    1512:	0f be       	out	0x3f, r0	; 63
    1514:	0f 90       	pop	r0
    1516:	1f 90       	pop	r1
    1518:	18 95       	reti

0000151a <__vector_14>:
    151a:	1f 92       	push	r1
    151c:	0f 92       	push	r0
    151e:	0f b6       	in	r0, 0x3f	; 63
    1520:	0f 92       	push	r0
    1522:	11 24       	eor	r1, r1
    1524:	2f 93       	push	r18
    1526:	3f 93       	push	r19
    1528:	4f 93       	push	r20
    152a:	5f 93       	push	r21
    152c:	6f 93       	push	r22
    152e:	7f 93       	push	r23
    1530:	8f 93       	push	r24
    1532:	9f 93       	push	r25
    1534:	af 93       	push	r26
    1536:	bf 93       	push	r27
    1538:	ef 93       	push	r30
    153a:	ff 93       	push	r31
    153c:	b3 de       	rcall	.-666    	; 0x12a4 <__vector_25>
    153e:	ff 91       	pop	r31
    1540:	ef 91       	pop	r30
    1542:	bf 91       	pop	r27
    1544:	af 91       	pop	r26
    1546:	9f 91       	pop	r25
    1548:	8f 91       	pop	r24
    154a:	7f 91       	pop	r23
    154c:	6f 91       	pop	r22
    154e:	5f 91       	pop	r21
    1550:	4f 91       	pop	r20
    1552:	3f 91       	pop	r19
    1554:	2f 91       	pop	r18
    1556:	0f 90       	pop	r0
    1558:	0f be       	out	0x3f, r0	; 63
    155a:	0f 90       	pop	r0
    155c:	1f 90       	pop	r1
    155e:	18 95       	reti

00001560 <__vector_12>:
    1560:	1f 92       	push	r1
    1562:	0f 92       	push	r0
    1564:	0f b6       	in	r0, 0x3f	; 63
    1566:	0f 92       	push	r0
    1568:	11 24       	eor	r1, r1
    156a:	2f 93       	push	r18
    156c:	3f 93       	push	r19
    156e:	4f 93       	push	r20
    1570:	5f 93       	push	r21
    1572:	6f 93       	push	r22
    1574:	7f 93       	push	r23
    1576:	8f 93       	push	r24
    1578:	9f 93       	push	r25
    157a:	af 93       	push	r26
    157c:	bf 93       	push	r27
    157e:	ef 93       	push	r30
    1580:	ff 93       	push	r31
    1582:	90 de       	rcall	.-736    	; 0x12a4 <__vector_25>
    1584:	ff 91       	pop	r31
    1586:	ef 91       	pop	r30
    1588:	bf 91       	pop	r27
    158a:	af 91       	pop	r26
    158c:	9f 91       	pop	r25
    158e:	8f 91       	pop	r24
    1590:	7f 91       	pop	r23
    1592:	6f 91       	pop	r22
    1594:	5f 91       	pop	r21
    1596:	4f 91       	pop	r20
    1598:	3f 91       	pop	r19
    159a:	2f 91       	pop	r18
    159c:	0f 90       	pop	r0
    159e:	0f be       	out	0x3f, r0	; 63
    15a0:	0f 90       	pop	r0
    15a2:	1f 90       	pop	r1
    15a4:	18 95       	reti

000015a6 <__vector_11>:
    15a6:	1f 92       	push	r1
    15a8:	0f 92       	push	r0
    15aa:	0f b6       	in	r0, 0x3f	; 63
    15ac:	0f 92       	push	r0
    15ae:	11 24       	eor	r1, r1
    15b0:	2f 93       	push	r18
    15b2:	3f 93       	push	r19
    15b4:	4f 93       	push	r20
    15b6:	5f 93       	push	r21
    15b8:	6f 93       	push	r22
    15ba:	7f 93       	push	r23
    15bc:	8f 93       	push	r24
    15be:	9f 93       	push	r25
    15c0:	af 93       	push	r26
    15c2:	bf 93       	push	r27
    15c4:	ef 93       	push	r30
    15c6:	ff 93       	push	r31
    15c8:	6d de       	rcall	.-806    	; 0x12a4 <__vector_25>
    15ca:	ff 91       	pop	r31
    15cc:	ef 91       	pop	r30
    15ce:	bf 91       	pop	r27
    15d0:	af 91       	pop	r26
    15d2:	9f 91       	pop	r25
    15d4:	8f 91       	pop	r24
    15d6:	7f 91       	pop	r23
    15d8:	6f 91       	pop	r22
    15da:	5f 91       	pop	r21
    15dc:	4f 91       	pop	r20
    15de:	3f 91       	pop	r19
    15e0:	2f 91       	pop	r18
    15e2:	0f 90       	pop	r0
    15e4:	0f be       	out	0x3f, r0	; 63
    15e6:	0f 90       	pop	r0
    15e8:	1f 90       	pop	r1
    15ea:	18 95       	reti

000015ec <__vector_10>:
    15ec:	1f 92       	push	r1
    15ee:	0f 92       	push	r0
    15f0:	0f b6       	in	r0, 0x3f	; 63
    15f2:	0f 92       	push	r0
    15f4:	11 24       	eor	r1, r1
    15f6:	2f 93       	push	r18
    15f8:	3f 93       	push	r19
    15fa:	4f 93       	push	r20
    15fc:	5f 93       	push	r21
    15fe:	6f 93       	push	r22
    1600:	7f 93       	push	r23
    1602:	8f 93       	push	r24
    1604:	9f 93       	push	r25
    1606:	af 93       	push	r26
    1608:	bf 93       	push	r27
    160a:	ef 93       	push	r30
    160c:	ff 93       	push	r31
    160e:	4a de       	rcall	.-876    	; 0x12a4 <__vector_25>
    1610:	ff 91       	pop	r31
    1612:	ef 91       	pop	r30
    1614:	bf 91       	pop	r27
    1616:	af 91       	pop	r26
    1618:	9f 91       	pop	r25
    161a:	8f 91       	pop	r24
    161c:	7f 91       	pop	r23
    161e:	6f 91       	pop	r22
    1620:	5f 91       	pop	r21
    1622:	4f 91       	pop	r20
    1624:	3f 91       	pop	r19
    1626:	2f 91       	pop	r18
    1628:	0f 90       	pop	r0
    162a:	0f be       	out	0x3f, r0	; 63
    162c:	0f 90       	pop	r0
    162e:	1f 90       	pop	r1
    1630:	18 95       	reti

00001632 <__vector_8>:
    1632:	1f 92       	push	r1
    1634:	0f 92       	push	r0
    1636:	0f b6       	in	r0, 0x3f	; 63
    1638:	0f 92       	push	r0
    163a:	11 24       	eor	r1, r1
    163c:	2f 93       	push	r18
    163e:	3f 93       	push	r19
    1640:	4f 93       	push	r20
    1642:	5f 93       	push	r21
    1644:	6f 93       	push	r22
    1646:	7f 93       	push	r23
    1648:	8f 93       	push	r24
    164a:	9f 93       	push	r25
    164c:	af 93       	push	r26
    164e:	bf 93       	push	r27
    1650:	ef 93       	push	r30
    1652:	ff 93       	push	r31
    1654:	27 de       	rcall	.-946    	; 0x12a4 <__vector_25>
    1656:	ff 91       	pop	r31
    1658:	ef 91       	pop	r30
    165a:	bf 91       	pop	r27
    165c:	af 91       	pop	r26
    165e:	9f 91       	pop	r25
    1660:	8f 91       	pop	r24
    1662:	7f 91       	pop	r23
    1664:	6f 91       	pop	r22
    1666:	5f 91       	pop	r21
    1668:	4f 91       	pop	r20
    166a:	3f 91       	pop	r19
    166c:	2f 91       	pop	r18
    166e:	0f 90       	pop	r0
    1670:	0f be       	out	0x3f, r0	; 63
    1672:	0f 90       	pop	r0
    1674:	1f 90       	pop	r1
    1676:	18 95       	reti

00001678 <__vector_7>:
    1678:	1f 92       	push	r1
    167a:	0f 92       	push	r0
    167c:	0f b6       	in	r0, 0x3f	; 63
    167e:	0f 92       	push	r0
    1680:	11 24       	eor	r1, r1
    1682:	2f 93       	push	r18
    1684:	3f 93       	push	r19
    1686:	4f 93       	push	r20
    1688:	5f 93       	push	r21
    168a:	6f 93       	push	r22
    168c:	7f 93       	push	r23
    168e:	8f 93       	push	r24
    1690:	9f 93       	push	r25
    1692:	af 93       	push	r26
    1694:	bf 93       	push	r27
    1696:	ef 93       	push	r30
    1698:	ff 93       	push	r31
    169a:	04 de       	rcall	.-1016   	; 0x12a4 <__vector_25>
    169c:	ff 91       	pop	r31
    169e:	ef 91       	pop	r30
    16a0:	bf 91       	pop	r27
    16a2:	af 91       	pop	r26
    16a4:	9f 91       	pop	r25
    16a6:	8f 91       	pop	r24
    16a8:	7f 91       	pop	r23
    16aa:	6f 91       	pop	r22
    16ac:	5f 91       	pop	r21
    16ae:	4f 91       	pop	r20
    16b0:	3f 91       	pop	r19
    16b2:	2f 91       	pop	r18
    16b4:	0f 90       	pop	r0
    16b6:	0f be       	out	0x3f, r0	; 63
    16b8:	0f 90       	pop	r0
    16ba:	1f 90       	pop	r1
    16bc:	18 95       	reti

000016be <__vector_6>:
    16be:	1f 92       	push	r1
    16c0:	0f 92       	push	r0
    16c2:	0f b6       	in	r0, 0x3f	; 63
    16c4:	0f 92       	push	r0
    16c6:	11 24       	eor	r1, r1
    16c8:	2f 93       	push	r18
    16ca:	3f 93       	push	r19
    16cc:	4f 93       	push	r20
    16ce:	5f 93       	push	r21
    16d0:	6f 93       	push	r22
    16d2:	7f 93       	push	r23
    16d4:	8f 93       	push	r24
    16d6:	9f 93       	push	r25
    16d8:	af 93       	push	r26
    16da:	bf 93       	push	r27
    16dc:	ef 93       	push	r30
    16de:	ff 93       	push	r31
    16e0:	e1 dd       	rcall	.-1086   	; 0x12a4 <__vector_25>
    16e2:	ff 91       	pop	r31
    16e4:	ef 91       	pop	r30
    16e6:	bf 91       	pop	r27
    16e8:	af 91       	pop	r26
    16ea:	9f 91       	pop	r25
    16ec:	8f 91       	pop	r24
    16ee:	7f 91       	pop	r23
    16f0:	6f 91       	pop	r22
    16f2:	5f 91       	pop	r21
    16f4:	4f 91       	pop	r20
    16f6:	3f 91       	pop	r19
    16f8:	2f 91       	pop	r18
    16fa:	0f 90       	pop	r0
    16fc:	0f be       	out	0x3f, r0	; 63
    16fe:	0f 90       	pop	r0
    1700:	1f 90       	pop	r1
    1702:	18 95       	reti

00001704 <__vector_5>:
    1704:	1f 92       	push	r1
    1706:	0f 92       	push	r0
    1708:	0f b6       	in	r0, 0x3f	; 63
    170a:	0f 92       	push	r0
    170c:	11 24       	eor	r1, r1
    170e:	2f 93       	push	r18
    1710:	3f 93       	push	r19
    1712:	4f 93       	push	r20
    1714:	5f 93       	push	r21
    1716:	6f 93       	push	r22
    1718:	7f 93       	push	r23
    171a:	8f 93       	push	r24
    171c:	9f 93       	push	r25
    171e:	af 93       	push	r26
    1720:	bf 93       	push	r27
    1722:	ef 93       	push	r30
    1724:	ff 93       	push	r31
    1726:	be dd       	rcall	.-1156   	; 0x12a4 <__vector_25>
    1728:	ff 91       	pop	r31
    172a:	ef 91       	pop	r30
    172c:	bf 91       	pop	r27
    172e:	af 91       	pop	r26
    1730:	9f 91       	pop	r25
    1732:	8f 91       	pop	r24
    1734:	7f 91       	pop	r23
    1736:	6f 91       	pop	r22
    1738:	5f 91       	pop	r21
    173a:	4f 91       	pop	r20
    173c:	3f 91       	pop	r19
    173e:	2f 91       	pop	r18
    1740:	0f 90       	pop	r0
    1742:	0f be       	out	0x3f, r0	; 63
    1744:	0f 90       	pop	r0
    1746:	1f 90       	pop	r1
    1748:	18 95       	reti

0000174a <__vector_4>:
    174a:	1f 92       	push	r1
    174c:	0f 92       	push	r0
    174e:	0f b6       	in	r0, 0x3f	; 63
    1750:	0f 92       	push	r0
    1752:	11 24       	eor	r1, r1
    1754:	2f 93       	push	r18
    1756:	3f 93       	push	r19
    1758:	4f 93       	push	r20
    175a:	5f 93       	push	r21
    175c:	6f 93       	push	r22
    175e:	7f 93       	push	r23
    1760:	8f 93       	push	r24
    1762:	9f 93       	push	r25
    1764:	af 93       	push	r26
    1766:	bf 93       	push	r27
    1768:	ef 93       	push	r30
    176a:	ff 93       	push	r31
    176c:	9b dd       	rcall	.-1226   	; 0x12a4 <__vector_25>
    176e:	ff 91       	pop	r31
    1770:	ef 91       	pop	r30
    1772:	bf 91       	pop	r27
    1774:	af 91       	pop	r26
    1776:	9f 91       	pop	r25
    1778:	8f 91       	pop	r24
    177a:	7f 91       	pop	r23
    177c:	6f 91       	pop	r22
    177e:	5f 91       	pop	r21
    1780:	4f 91       	pop	r20
    1782:	3f 91       	pop	r19
    1784:	2f 91       	pop	r18
    1786:	0f 90       	pop	r0
    1788:	0f be       	out	0x3f, r0	; 63
    178a:	0f 90       	pop	r0
    178c:	1f 90       	pop	r1
    178e:	18 95       	reti

00001790 <__vector_3>:
    1790:	1f 92       	push	r1
    1792:	0f 92       	push	r0
    1794:	0f b6       	in	r0, 0x3f	; 63
    1796:	0f 92       	push	r0
    1798:	11 24       	eor	r1, r1
    179a:	2f 93       	push	r18
    179c:	3f 93       	push	r19
    179e:	4f 93       	push	r20
    17a0:	5f 93       	push	r21
    17a2:	6f 93       	push	r22
    17a4:	7f 93       	push	r23
    17a6:	8f 93       	push	r24
    17a8:	9f 93       	push	r25
    17aa:	af 93       	push	r26
    17ac:	bf 93       	push	r27
    17ae:	ef 93       	push	r30
    17b0:	ff 93       	push	r31
    17b2:	78 dd       	rcall	.-1296   	; 0x12a4 <__vector_25>
    17b4:	ff 91       	pop	r31
    17b6:	ef 91       	pop	r30
    17b8:	bf 91       	pop	r27
    17ba:	af 91       	pop	r26
    17bc:	9f 91       	pop	r25
    17be:	8f 91       	pop	r24
    17c0:	7f 91       	pop	r23
    17c2:	6f 91       	pop	r22
    17c4:	5f 91       	pop	r21
    17c6:	4f 91       	pop	r20
    17c8:	3f 91       	pop	r19
    17ca:	2f 91       	pop	r18
    17cc:	0f 90       	pop	r0
    17ce:	0f be       	out	0x3f, r0	; 63
    17d0:	0f 90       	pop	r0
    17d2:	1f 90       	pop	r1
    17d4:	18 95       	reti

000017d6 <__vector_2>:
    17d6:	1f 92       	push	r1
    17d8:	0f 92       	push	r0
    17da:	0f b6       	in	r0, 0x3f	; 63
    17dc:	0f 92       	push	r0
    17de:	11 24       	eor	r1, r1
    17e0:	2f 93       	push	r18
    17e2:	3f 93       	push	r19
    17e4:	4f 93       	push	r20
    17e6:	5f 93       	push	r21
    17e8:	6f 93       	push	r22
    17ea:	7f 93       	push	r23
    17ec:	8f 93       	push	r24
    17ee:	9f 93       	push	r25
    17f0:	af 93       	push	r26
    17f2:	bf 93       	push	r27
    17f4:	ef 93       	push	r30
    17f6:	ff 93       	push	r31
    17f8:	55 dd       	rcall	.-1366   	; 0x12a4 <__vector_25>
    17fa:	ff 91       	pop	r31
    17fc:	ef 91       	pop	r30
    17fe:	bf 91       	pop	r27
    1800:	af 91       	pop	r26
    1802:	9f 91       	pop	r25
    1804:	8f 91       	pop	r24
    1806:	7f 91       	pop	r23
    1808:	6f 91       	pop	r22
    180a:	5f 91       	pop	r21
    180c:	4f 91       	pop	r20
    180e:	3f 91       	pop	r19
    1810:	2f 91       	pop	r18
    1812:	0f 90       	pop	r0
    1814:	0f be       	out	0x3f, r0	; 63
    1816:	0f 90       	pop	r0
    1818:	1f 90       	pop	r1
    181a:	18 95       	reti

0000181c <__vector_1>:
    181c:	1f 92       	push	r1
    181e:	0f 92       	push	r0
    1820:	0f b6       	in	r0, 0x3f	; 63
    1822:	0f 92       	push	r0
    1824:	11 24       	eor	r1, r1
    1826:	2f 93       	push	r18
    1828:	3f 93       	push	r19
    182a:	4f 93       	push	r20
    182c:	5f 93       	push	r21
    182e:	6f 93       	push	r22
    1830:	7f 93       	push	r23
    1832:	8f 93       	push	r24
    1834:	9f 93       	push	r25
    1836:	af 93       	push	r26
    1838:	bf 93       	push	r27
    183a:	ef 93       	push	r30
    183c:	ff 93       	push	r31
    183e:	32 dd       	rcall	.-1436   	; 0x12a4 <__vector_25>
    1840:	ff 91       	pop	r31
    1842:	ef 91       	pop	r30
    1844:	bf 91       	pop	r27
    1846:	af 91       	pop	r26
    1848:	9f 91       	pop	r25
    184a:	8f 91       	pop	r24
    184c:	7f 91       	pop	r23
    184e:	6f 91       	pop	r22
    1850:	5f 91       	pop	r21
    1852:	4f 91       	pop	r20
    1854:	3f 91       	pop	r19
    1856:	2f 91       	pop	r18
    1858:	0f 90       	pop	r0
    185a:	0f be       	out	0x3f, r0	; 63
    185c:	0f 90       	pop	r0
    185e:	1f 90       	pop	r1
    1860:	18 95       	reti

00001862 <cpu_irq_save>:
}


void isr_lcd_write(const char *strbuf)
{
	gfx_mono_draw_string(strbuf, g_lcd_pencil_x, g_lcd_pencil_y, lcd_get_sysfont());
    1862:	cf 93       	push	r28
    1864:	df 93       	push	r29
    1866:	1f 92       	push	r1
    1868:	cd b7       	in	r28, 0x3d	; 61
    186a:	de b7       	in	r29, 0x3e	; 62
    186c:	8f b7       	in	r24, 0x3f	; 63
    186e:	89 83       	std	Y+1, r24	; 0x01
    1870:	f8 94       	cli
    1872:	89 81       	ldd	r24, Y+1	; 0x01
    1874:	0f 90       	pop	r0
    1876:	df 91       	pop	r29
    1878:	cf 91       	pop	r28
    187a:	08 95       	ret

0000187c <__portable_avr_delay_cycles>:
    187c:	04 c0       	rjmp	.+8      	; 0x1886 <__portable_avr_delay_cycles+0xa>
    187e:	61 50       	subi	r22, 0x01	; 1
    1880:	71 09       	sbc	r23, r1
    1882:	81 09       	sbc	r24, r1
    1884:	91 09       	sbc	r25, r1
    1886:	61 15       	cp	r22, r1
    1888:	71 05       	cpc	r23, r1
    188a:	81 05       	cpc	r24, r1
    188c:	91 05       	cpc	r25, r1
    188e:	b9 f7       	brne	.-18     	; 0x187e <__portable_avr_delay_cycles+0x2>
    1890:	08 95       	ret

00001892 <lcd_bus_read_status>:
    1892:	e7 df       	rcall	.-50     	; 0x1862 <cpu_irq_save>
    1894:	98 2f       	mov	r25, r24
    1896:	8f ef       	ldi	r24, 0xFF	; 255
    1898:	8b b9       	out	0x0b, r24	; 11
    189a:	1a b8       	out	0x0a, r1	; 10
    189c:	28 98       	cbi	0x05, 0	; 5
    189e:	2c 9a       	sbi	0x05, 4	; 5
    18a0:	2d 9a       	sbi	0x05, 5	; 5
    18a2:	2d 98       	cbi	0x05, 5	; 5
    18a4:	89 b1       	in	r24, 0x09	; 9
    18a6:	9f bf       	out	0x3f, r25	; 63
    18a8:	08 95       	ret

000018aa <lcd_bus_write_cmd>:
    18aa:	cf 93       	push	r28
    18ac:	c8 2f       	mov	r28, r24
    18ae:	d9 df       	rcall	.-78     	; 0x1862 <cpu_irq_save>
    18b0:	cb b9       	out	0x0b, r28	; 11
    18b2:	9f ef       	ldi	r25, 0xFF	; 255
    18b4:	9a b9       	out	0x0a, r25	; 10
    18b6:	28 98       	cbi	0x05, 0	; 5
    18b8:	2c 98       	cbi	0x05, 4	; 5
    18ba:	2d 9a       	sbi	0x05, 5	; 5
    18bc:	2d 98       	cbi	0x05, 5	; 5
    18be:	8f bf       	out	0x3f, r24	; 63
    18c0:	cf 91       	pop	r28
    18c2:	08 95       	ret

000018c4 <lcd_bus_write_ram>:
    18c4:	cf 93       	push	r28
    18c6:	c8 2f       	mov	r28, r24
    18c8:	cc df       	rcall	.-104    	; 0x1862 <cpu_irq_save>
    18ca:	cb b9       	out	0x0b, r28	; 11
    18cc:	9f ef       	ldi	r25, 0xFF	; 255
    18ce:	9a b9       	out	0x0a, r25	; 10
    18d0:	28 9a       	sbi	0x05, 0	; 5
    18d2:	2c 98       	cbi	0x05, 4	; 5
    18d4:	2d 9a       	sbi	0x05, 5	; 5
    18d6:	2d 98       	cbi	0x05, 5	; 5
    18d8:	8f bf       	out	0x3f, r24	; 63
    18da:	cf 91       	pop	r28
    18dc:	08 95       	ret

000018de <lcd_bus_read_ram>:
    18de:	c1 df       	rcall	.-126    	; 0x1862 <cpu_irq_save>
    18e0:	98 2f       	mov	r25, r24
    18e2:	8f ef       	ldi	r24, 0xFF	; 255
    18e4:	8b b9       	out	0x0b, r24	; 11
    18e6:	1a b8       	out	0x0a, r1	; 10
    18e8:	28 9a       	sbi	0x05, 0	; 5
    18ea:	2c 9a       	sbi	0x05, 4	; 5
    18ec:	2d 9a       	sbi	0x05, 5	; 5
    18ee:	2d 98       	cbi	0x05, 5	; 5
    18f0:	80 91 0c 04 	lds	r24, 0x040C	; 0x80040c <s_lcd_ram_read_nonvalid>
    18f4:	88 23       	and	r24, r24
    18f6:	19 f0       	breq	.+6      	; 0x18fe <lcd_bus_read_ram+0x20>
    18f8:	89 b1       	in	r24, 0x09	; 9
    18fa:	2d 9a       	sbi	0x05, 5	; 5
    18fc:	2d 98       	cbi	0x05, 5	; 5
    18fe:	89 b1       	in	r24, 0x09	; 9
    1900:	10 92 0c 04 	sts	0x040C, r1	; 0x80040c <s_lcd_ram_read_nonvalid>
    1904:	9f bf       	out	0x3f, r25	; 63
    1906:	08 95       	ret

00001908 <lcd_contrast_update>:
    1908:	81 e8       	ldi	r24, 0x81	; 129
    190a:	cf df       	rcall	.-98     	; 0x18aa <lcd_bus_write_cmd>
    190c:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <g_lcd_contrast_pm>
    1910:	8f 73       	andi	r24, 0x3F	; 63
    1912:	80 68       	ori	r24, 0x80	; 128
    1914:	ca cf       	rjmp	.-108    	; 0x18aa <lcd_bus_write_cmd>

00001916 <lcd_enable.part.0>:
    1916:	8d e2       	ldi	r24, 0x2D	; 45
    1918:	c8 df       	rcall	.-112    	; 0x18aa <lcd_bus_write_cmd>
    191a:	84 e2       	ldi	r24, 0x24	; 36
    191c:	c6 df       	rcall	.-116    	; 0x18aa <lcd_bus_write_cmd>
    191e:	8a ee       	ldi	r24, 0xEA	; 234
    1920:	c4 df       	rcall	.-120    	; 0x18aa <lcd_bus_write_cmd>
    1922:	f2 df       	rcall	.-28     	; 0x1908 <lcd_contrast_update>
    1924:	88 ec       	ldi	r24, 0xC8	; 200
    1926:	c1 df       	rcall	.-126    	; 0x18aa <lcd_bus_write_cmd>
    1928:	88 e8       	ldi	r24, 0x88	; 136
    192a:	bf df       	rcall	.-130    	; 0x18aa <lcd_bus_write_cmd>
    192c:	80 e4       	ldi	r24, 0x40	; 64
    192e:	bd df       	rcall	.-134    	; 0x18aa <lcd_bus_write_cmd>
    1930:	80 e9       	ldi	r24, 0x90	; 144
    1932:	bb df       	rcall	.-138    	; 0x18aa <lcd_bus_write_cmd>
    1934:	80 eb       	ldi	r24, 0xB0	; 176
    1936:	b9 df       	rcall	.-142    	; 0x18aa <lcd_bus_write_cmd>
    1938:	80 e0       	ldi	r24, 0x00	; 0
    193a:	b7 df       	rcall	.-146    	; 0x18aa <lcd_bus_write_cmd>
    193c:	80 e1       	ldi	r24, 0x10	; 16
    193e:	b5 df       	rcall	.-150    	; 0x18aa <lcd_bus_write_cmd>
    1940:	81 e0       	ldi	r24, 0x01	; 1
    1942:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <s_lcd_ram_read_nonvalid>
    1946:	8f ee       	ldi	r24, 0xEF	; 239
    1948:	b0 df       	rcall	.-160    	; 0x18aa <lcd_bus_write_cmd>
    194a:	8e ee       	ldi	r24, 0xEE	; 238
    194c:	ae df       	rcall	.-164    	; 0x18aa <lcd_bus_write_cmd>
    194e:	84 ea       	ldi	r24, 0xA4	; 164
    1950:	ac df       	rcall	.-168    	; 0x18aa <lcd_bus_write_cmd>
    1952:	86 ea       	ldi	r24, 0xA6	; 166
    1954:	aa df       	rcall	.-172    	; 0x18aa <lcd_bus_write_cmd>
    1956:	8f ea       	ldi	r24, 0xAF	; 175
    1958:	a8 cf       	rjmp	.-176    	; 0x18aa <lcd_bus_write_cmd>

0000195a <lcd_page_set>:
    195a:	80 31       	cpi	r24, 0x10	; 16
    195c:	28 f4       	brcc	.+10     	; 0x1968 <lcd_page_set+0xe>
    195e:	80 6b       	ori	r24, 0xB0	; 176
    1960:	a4 df       	rcall	.-184    	; 0x18aa <lcd_bus_write_cmd>
    1962:	81 e0       	ldi	r24, 0x01	; 1
    1964:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <s_lcd_ram_read_nonvalid>
    1968:	08 95       	ret

0000196a <lcd_col_set>:
    196a:	cf 93       	push	r28
    196c:	80 3f       	cpi	r24, 0xF0	; 240
    196e:	58 f4       	brcc	.+22     	; 0x1986 <lcd_col_set+0x1c>
    1970:	c8 2f       	mov	r28, r24
    1972:	8f 70       	andi	r24, 0x0F	; 15
    1974:	9a df       	rcall	.-204    	; 0x18aa <lcd_bus_write_cmd>
    1976:	8c 2f       	mov	r24, r28
    1978:	82 95       	swap	r24
    197a:	8f 70       	andi	r24, 0x0F	; 15
    197c:	80 61       	ori	r24, 0x10	; 16
    197e:	95 df       	rcall	.-214    	; 0x18aa <lcd_bus_write_cmd>
    1980:	81 e0       	ldi	r24, 0x01	; 1
    1982:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <s_lcd_ram_read_nonvalid>
    1986:	cf 91       	pop	r28
    1988:	08 95       	ret

0000198a <lcd_cr>:
    198a:	80 e0       	ldi	r24, 0x00	; 0
    198c:	8e df       	rcall	.-228    	; 0x18aa <lcd_bus_write_cmd>
    198e:	80 e1       	ldi	r24, 0x10	; 16
    1990:	8c df       	rcall	.-232    	; 0x18aa <lcd_bus_write_cmd>
    1992:	81 e0       	ldi	r24, 0x01	; 1
    1994:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <s_lcd_ram_read_nonvalid>
    1998:	08 95       	ret

0000199a <lcd_home>:
    199a:	80 eb       	ldi	r24, 0xB0	; 176
    199c:	86 df       	rcall	.-244    	; 0x18aa <lcd_bus_write_cmd>
    199e:	f5 cf       	rjmp	.-22     	; 0x198a <lcd_cr>

000019a0 <lcd_cls>:
    19a0:	cf 93       	push	r28
    19a2:	df 93       	push	r29
    19a4:	c0 e0       	ldi	r28, 0x00	; 0
    19a6:	8c 2f       	mov	r24, r28
    19a8:	80 6b       	ori	r24, 0xB0	; 176
    19aa:	7f df       	rcall	.-258    	; 0x18aa <lcd_bus_write_cmd>
    19ac:	80 e0       	ldi	r24, 0x00	; 0
    19ae:	7d df       	rcall	.-262    	; 0x18aa <lcd_bus_write_cmd>
    19b0:	80 e1       	ldi	r24, 0x10	; 16
    19b2:	7b df       	rcall	.-266    	; 0x18aa <lcd_bus_write_cmd>
    19b4:	d0 ef       	ldi	r29, 0xF0	; 240
    19b6:	80 e0       	ldi	r24, 0x00	; 0
    19b8:	85 df       	rcall	.-246    	; 0x18c4 <lcd_bus_write_ram>
    19ba:	d1 50       	subi	r29, 0x01	; 1
    19bc:	e1 f7       	brne	.-8      	; 0x19b6 <lcd_cls+0x16>
    19be:	cf 5f       	subi	r28, 0xFF	; 255
    19c0:	c0 31       	cpi	r28, 0x10	; 16
    19c2:	89 f7       	brne	.-30     	; 0x19a6 <lcd_cls+0x6>
    19c4:	df 91       	pop	r29
    19c6:	cf 91       	pop	r28
    19c8:	e8 cf       	rjmp	.-48     	; 0x199a <lcd_home>

000019ca <lcd_show_template>:
    19ca:	ff 92       	push	r15
    19cc:	0f 93       	push	r16
    19ce:	1f 93       	push	r17
    19d0:	cf 93       	push	r28
    19d2:	df 93       	push	r29
    19d4:	6a e0       	ldi	r22, 0x0A	; 10
    19d6:	71 e0       	ldi	r23, 0x01	; 1
    19d8:	8c ed       	ldi	r24, 0xDC	; 220
    19da:	93 e0       	ldi	r25, 0x03	; 3
    19dc:	0e 94 1c 20 	call	0x4038	; 0x4038 <strcpy>
    19e0:	23 e0       	ldi	r18, 0x03	; 3
    19e2:	31 e0       	ldi	r19, 0x01	; 1
    19e4:	4b e0       	ldi	r20, 0x0B	; 11
    19e6:	63 e0       	ldi	r22, 0x03	; 3
    19e8:	8c ed       	ldi	r24, 0xDC	; 220
    19ea:	93 e0       	ldi	r25, 0x03	; 3
    19ec:	d5 d9       	rcall	.-3158   	; 0xd98 <gfx_mono_draw_string>
    19ee:	67 e1       	ldi	r22, 0x17	; 23
    19f0:	71 e0       	ldi	r23, 0x01	; 1
    19f2:	8c ed       	ldi	r24, 0xDC	; 220
    19f4:	93 e0       	ldi	r25, 0x03	; 3
    19f6:	0e 94 1c 20 	call	0x4038	; 0x4038 <strcpy>
    19fa:	23 e0       	ldi	r18, 0x03	; 3
    19fc:	31 e0       	ldi	r19, 0x01	; 1
    19fe:	44 e1       	ldi	r20, 0x14	; 20
    1a00:	63 e0       	ldi	r22, 0x03	; 3
    1a02:	8c ed       	ldi	r24, 0xDC	; 220
    1a04:	93 e0       	ldi	r25, 0x03	; 3
    1a06:	c8 d9       	rcall	.-3184   	; 0xd98 <gfx_mono_draw_string>
    1a08:	61 e2       	ldi	r22, 0x21	; 33
    1a0a:	71 e0       	ldi	r23, 0x01	; 1
    1a0c:	8c ed       	ldi	r24, 0xDC	; 220
    1a0e:	93 e0       	ldi	r25, 0x03	; 3
    1a10:	0e 94 1c 20 	call	0x4038	; 0x4038 <strcpy>
    1a14:	23 e0       	ldi	r18, 0x03	; 3
    1a16:	31 e0       	ldi	r19, 0x01	; 1
    1a18:	4d e1       	ldi	r20, 0x1D	; 29
    1a1a:	63 e0       	ldi	r22, 0x03	; 3
    1a1c:	8c ed       	ldi	r24, 0xDC	; 220
    1a1e:	93 e0       	ldi	r25, 0x03	; 3
    1a20:	bb d9       	rcall	.-3210   	; 0xd98 <gfx_mono_draw_string>
    1a22:	1f 92       	push	r1
    1a24:	1f 92       	push	r1
    1a26:	1f 92       	push	r1
    1a28:	1f 92       	push	r1
    1a2a:	88 e3       	ldi	r24, 0x38	; 56
    1a2c:	91 e0       	ldi	r25, 0x01	; 1
    1a2e:	9f 93       	push	r25
    1a30:	8f 93       	push	r24
    1a32:	1f 92       	push	r1
    1a34:	10 e3       	ldi	r17, 0x30	; 48
    1a36:	1f 93       	push	r17
    1a38:	cc ed       	ldi	r28, 0xDC	; 220
    1a3a:	d3 e0       	ldi	r29, 0x03	; 3
    1a3c:	df 93       	push	r29
    1a3e:	cf 93       	push	r28
    1a40:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    1a44:	23 e0       	ldi	r18, 0x03	; 3
    1a46:	31 e0       	ldi	r19, 0x01	; 1
    1a48:	46 e2       	ldi	r20, 0x26	; 38
    1a4a:	63 e0       	ldi	r22, 0x03	; 3
    1a4c:	ce 01       	movw	r24, r28
    1a4e:	a4 d9       	rcall	.-3256   	; 0xd98 <gfx_mono_draw_string>
    1a50:	1f 92       	push	r1
    1a52:	1f 92       	push	r1
    1a54:	1f 92       	push	r1
    1a56:	1f 92       	push	r1
    1a58:	1f 92       	push	r1
    1a5a:	1f 92       	push	r1
    1a5c:	1f 92       	push	r1
    1a5e:	1f 92       	push	r1
    1a60:	80 e5       	ldi	r24, 0x50	; 80
    1a62:	91 e0       	ldi	r25, 0x01	; 1
    1a64:	9f 93       	push	r25
    1a66:	8f 93       	push	r24
    1a68:	1f 92       	push	r1
    1a6a:	1f 93       	push	r17
    1a6c:	df 93       	push	r29
    1a6e:	cf 93       	push	r28
    1a70:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    1a74:	23 e0       	ldi	r18, 0x03	; 3
    1a76:	31 e0       	ldi	r19, 0x01	; 1
    1a78:	4f e2       	ldi	r20, 0x2F	; 47
    1a7a:	63 e0       	ldi	r22, 0x03	; 3
    1a7c:	ce 01       	movw	r24, r28
    1a7e:	8c d9       	rcall	.-3304   	; 0xd98 <gfx_mono_draw_string>
    1a80:	1f 92       	push	r1
    1a82:	1f 92       	push	r1
    1a84:	1f 92       	push	r1
    1a86:	1f 92       	push	r1
    1a88:	83 e7       	ldi	r24, 0x73	; 115
    1a8a:	91 e0       	ldi	r25, 0x01	; 1
    1a8c:	9f 93       	push	r25
    1a8e:	8f 93       	push	r24
    1a90:	1f 92       	push	r1
    1a92:	1f 93       	push	r17
    1a94:	df 93       	push	r29
    1a96:	cf 93       	push	r28
    1a98:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    1a9c:	8d b7       	in	r24, 0x3d	; 61
    1a9e:	9e b7       	in	r25, 0x3e	; 62
    1aa0:	82 96       	adiw	r24, 0x22	; 34
    1aa2:	0f b6       	in	r0, 0x3f	; 63
    1aa4:	f8 94       	cli
    1aa6:	9e bf       	out	0x3e, r25	; 62
    1aa8:	0f be       	out	0x3f, r0	; 63
    1aaa:	8d bf       	out	0x3d, r24	; 61
    1aac:	23 e0       	ldi	r18, 0x03	; 3
    1aae:	31 e0       	ldi	r19, 0x01	; 1
    1ab0:	48 e3       	ldi	r20, 0x38	; 56
    1ab2:	63 e0       	ldi	r22, 0x03	; 3
    1ab4:	ce 01       	movw	r24, r28
    1ab6:	70 d9       	rcall	.-3360   	; 0xd98 <gfx_mono_draw_string>
    1ab8:	1f 92       	push	r1
    1aba:	1f 92       	push	r1
    1abc:	1f 92       	push	r1
    1abe:	1f 92       	push	r1
    1ac0:	88 e8       	ldi	r24, 0x88	; 136
    1ac2:	91 e0       	ldi	r25, 0x01	; 1
    1ac4:	9f 93       	push	r25
    1ac6:	8f 93       	push	r24
    1ac8:	1f 92       	push	r1
    1aca:	1f 93       	push	r17
    1acc:	df 93       	push	r29
    1ace:	cf 93       	push	r28
    1ad0:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    1ad4:	23 e0       	ldi	r18, 0x03	; 3
    1ad6:	31 e0       	ldi	r19, 0x01	; 1
    1ad8:	48 e3       	ldi	r20, 0x38	; 56
    1ada:	6b e7       	ldi	r22, 0x7B	; 123
    1adc:	ce 01       	movw	r24, r28
    1ade:	5c d9       	rcall	.-3400   	; 0xd98 <gfx_mono_draw_string>
    1ae0:	1f 92       	push	r1
    1ae2:	1f 92       	push	r1
    1ae4:	1f 92       	push	r1
    1ae6:	1f 92       	push	r1
    1ae8:	1f 92       	push	r1
    1aea:	1f 92       	push	r1
    1aec:	8e e9       	ldi	r24, 0x9E	; 158
    1aee:	91 e0       	ldi	r25, 0x01	; 1
    1af0:	9f 93       	push	r25
    1af2:	8f 93       	push	r24
    1af4:	1f 92       	push	r1
    1af6:	1f 93       	push	r17
    1af8:	df 93       	push	r29
    1afa:	cf 93       	push	r28
    1afc:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    1b00:	23 e0       	ldi	r18, 0x03	; 3
    1b02:	31 e0       	ldi	r19, 0x01	; 1
    1b04:	41 e4       	ldi	r20, 0x41	; 65
    1b06:	63 e0       	ldi	r22, 0x03	; 3
    1b08:	ce 01       	movw	r24, r28
    1b0a:	46 d9       	rcall	.-3444   	; 0xd98 <gfx_mono_draw_string>
    1b0c:	1f 92       	push	r1
    1b0e:	1f 92       	push	r1
    1b10:	1f 92       	push	r1
    1b12:	1f 92       	push	r1
    1b14:	8b ec       	ldi	r24, 0xCB	; 203
    1b16:	91 e0       	ldi	r25, 0x01	; 1
    1b18:	9f 93       	push	r25
    1b1a:	8f 93       	push	r24
    1b1c:	1f 92       	push	r1
    1b1e:	1f 93       	push	r17
    1b20:	df 93       	push	r29
    1b22:	cf 93       	push	r28
    1b24:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    1b28:	8d b7       	in	r24, 0x3d	; 61
    1b2a:	9e b7       	in	r25, 0x3e	; 62
    1b2c:	80 96       	adiw	r24, 0x20	; 32
    1b2e:	0f b6       	in	r0, 0x3f	; 63
    1b30:	f8 94       	cli
    1b32:	9e bf       	out	0x3e, r25	; 62
    1b34:	0f be       	out	0x3f, r0	; 63
    1b36:	8d bf       	out	0x3d, r24	; 61
    1b38:	23 e0       	ldi	r18, 0x03	; 3
    1b3a:	31 e0       	ldi	r19, 0x01	; 1
    1b3c:	4a e4       	ldi	r20, 0x4A	; 74
    1b3e:	63 e0       	ldi	r22, 0x03	; 3
    1b40:	ce 01       	movw	r24, r28
    1b42:	2a d9       	rcall	.-3500   	; 0xd98 <gfx_mono_draw_string>
    1b44:	1f 92       	push	r1
    1b46:	1f 92       	push	r1
    1b48:	1f 92       	push	r1
    1b4a:	1f 92       	push	r1
    1b4c:	8f ed       	ldi	r24, 0xDF	; 223
    1b4e:	91 e0       	ldi	r25, 0x01	; 1
    1b50:	9f 93       	push	r25
    1b52:	8f 93       	push	r24
    1b54:	1f 92       	push	r1
    1b56:	1f 93       	push	r17
    1b58:	df 93       	push	r29
    1b5a:	cf 93       	push	r28
    1b5c:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    1b60:	23 e0       	ldi	r18, 0x03	; 3
    1b62:	31 e0       	ldi	r19, 0x01	; 1
    1b64:	43 e5       	ldi	r20, 0x53	; 83
    1b66:	63 e0       	ldi	r22, 0x03	; 3
    1b68:	ce 01       	movw	r24, r28
    1b6a:	16 d9       	rcall	.-3540   	; 0xd98 <gfx_mono_draw_string>
    1b6c:	1f 92       	push	r1
    1b6e:	1f 92       	push	r1
    1b70:	1f 92       	push	r1
    1b72:	1f 92       	push	r1
    1b74:	1f 92       	push	r1
    1b76:	0e e7       	ldi	r16, 0x7E	; 126
    1b78:	0f 93       	push	r16
    1b7a:	1f 92       	push	r1
    1b7c:	1f 92       	push	r1
    1b7e:	1f 92       	push	r1
    1b80:	80 e2       	ldi	r24, 0x20	; 32
    1b82:	f8 2e       	mov	r15, r24
    1b84:	ff 92       	push	r15
    1b86:	87 ef       	ldi	r24, 0xF7	; 247
    1b88:	91 e0       	ldi	r25, 0x01	; 1
    1b8a:	9f 93       	push	r25
    1b8c:	8f 93       	push	r24
    1b8e:	1f 92       	push	r1
    1b90:	1f 93       	push	r17
    1b92:	df 93       	push	r29
    1b94:	cf 93       	push	r28
    1b96:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    1b9a:	23 e0       	ldi	r18, 0x03	; 3
    1b9c:	31 e0       	ldi	r19, 0x01	; 1
    1b9e:	4c e5       	ldi	r20, 0x5C	; 92
    1ba0:	63 e0       	ldi	r22, 0x03	; 3
    1ba2:	ce 01       	movw	r24, r28
    1ba4:	f9 d8       	rcall	.-3598   	; 0xd98 <gfx_mono_draw_string>
    1ba6:	1f 92       	push	r1
    1ba8:	1f 92       	push	r1
    1baa:	1f 92       	push	r1
    1bac:	1f 92       	push	r1
    1bae:	1f 92       	push	r1
    1bb0:	0f 93       	push	r16
    1bb2:	1f 92       	push	r1
    1bb4:	1f 92       	push	r1
    1bb6:	1f 92       	push	r1
    1bb8:	ff 92       	push	r15
    1bba:	86 e1       	ldi	r24, 0x16	; 22
    1bbc:	92 e0       	ldi	r25, 0x02	; 2
    1bbe:	9f 93       	push	r25
    1bc0:	8f 93       	push	r24
    1bc2:	1f 92       	push	r1
    1bc4:	1f 93       	push	r17
    1bc6:	df 93       	push	r29
    1bc8:	cf 93       	push	r28
    1bca:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    1bce:	8d b7       	in	r24, 0x3d	; 61
    1bd0:	9e b7       	in	r25, 0x3e	; 62
    1bd2:	8a 96       	adiw	r24, 0x2a	; 42
    1bd4:	0f b6       	in	r0, 0x3f	; 63
    1bd6:	f8 94       	cli
    1bd8:	9e bf       	out	0x3e, r25	; 62
    1bda:	0f be       	out	0x3f, r0	; 63
    1bdc:	8d bf       	out	0x3d, r24	; 61
    1bde:	23 e0       	ldi	r18, 0x03	; 3
    1be0:	31 e0       	ldi	r19, 0x01	; 1
    1be2:	45 e6       	ldi	r20, 0x65	; 101
    1be4:	63 e0       	ldi	r22, 0x03	; 3
    1be6:	ce 01       	movw	r24, r28
    1be8:	d7 d8       	rcall	.-3666   	; 0xd98 <gfx_mono_draw_string>
    1bea:	1f 92       	push	r1
    1bec:	1f 92       	push	r1
    1bee:	1f 92       	push	r1
    1bf0:	1f 92       	push	r1
    1bf2:	84 e3       	ldi	r24, 0x34	; 52
    1bf4:	92 e0       	ldi	r25, 0x02	; 2
    1bf6:	9f 93       	push	r25
    1bf8:	8f 93       	push	r24
    1bfa:	1f 92       	push	r1
    1bfc:	1f 93       	push	r17
    1bfe:	df 93       	push	r29
    1c00:	cf 93       	push	r28
    1c02:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    1c06:	23 e0       	ldi	r18, 0x03	; 3
    1c08:	31 e0       	ldi	r19, 0x01	; 1
    1c0a:	4e e6       	ldi	r20, 0x6E	; 110
    1c0c:	63 e0       	ldi	r22, 0x03	; 3
    1c0e:	ce 01       	movw	r24, r28
    1c10:	c3 d8       	rcall	.-3706   	; 0xd98 <gfx_mono_draw_string>
    1c12:	1f 92       	push	r1
    1c14:	0f 93       	push	r16
    1c16:	1f 92       	push	r1
    1c18:	1f 92       	push	r1
    1c1a:	8a e4       	ldi	r24, 0x4A	; 74
    1c1c:	92 e0       	ldi	r25, 0x02	; 2
    1c1e:	9f 93       	push	r25
    1c20:	8f 93       	push	r24
    1c22:	1f 92       	push	r1
    1c24:	1f 93       	push	r17
    1c26:	df 93       	push	r29
    1c28:	cf 93       	push	r28
    1c2a:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    1c2e:	23 e0       	ldi	r18, 0x03	; 3
    1c30:	31 e0       	ldi	r19, 0x01	; 1
    1c32:	4e e6       	ldi	r20, 0x6E	; 110
    1c34:	6f e9       	ldi	r22, 0x9F	; 159
    1c36:	ce 01       	movw	r24, r28
    1c38:	af d8       	rcall	.-3746   	; 0xd98 <gfx_mono_draw_string>
    1c3a:	8d b7       	in	r24, 0x3d	; 61
    1c3c:	9e b7       	in	r25, 0x3e	; 62
    1c3e:	44 96       	adiw	r24, 0x14	; 20
    1c40:	0f b6       	in	r0, 0x3f	; 63
    1c42:	f8 94       	cli
    1c44:	9e bf       	out	0x3e, r25	; 62
    1c46:	0f be       	out	0x3f, r0	; 63
    1c48:	8d bf       	out	0x3d, r24	; 61
    1c4a:	23 e0       	ldi	r18, 0x03	; 3
    1c4c:	31 e0       	ldi	r19, 0x01	; 1
    1c4e:	47 e7       	ldi	r20, 0x77	; 119
    1c50:	63 e0       	ldi	r22, 0x03	; 3
    1c52:	89 e5       	ldi	r24, 0x59	; 89
    1c54:	92 e0       	ldi	r25, 0x02	; 2
    1c56:	df 91       	pop	r29
    1c58:	cf 91       	pop	r28
    1c5a:	1f 91       	pop	r17
    1c5c:	0f 91       	pop	r16
    1c5e:	ff 90       	pop	r15
    1c60:	9b c8       	rjmp	.-3786   	; 0xd98 <gfx_mono_draw_string>

00001c62 <lcd_show_new_smartlcd_data>:
    1c62:	ff 92       	push	r15
    1c64:	0f 93       	push	r16
    1c66:	1f 93       	push	r17
    1c68:	cf 93       	push	r28
    1c6a:	df 93       	push	r29
    1c6c:	cd b7       	in	r28, 0x3d	; 61
    1c6e:	de b7       	in	r29, 0x3e	; 62
    1c70:	28 97       	sbiw	r28, 0x08	; 8
    1c72:	0f b6       	in	r0, 0x3f	; 63
    1c74:	f8 94       	cli
    1c76:	de bf       	out	0x3e, r29	; 62
    1c78:	0f be       	out	0x3f, r0	; 63
    1c7a:	cd bf       	out	0x3d, r28	; 61
    1c7c:	f2 dd       	rcall	.-1052   	; 0x1862 <cpu_irq_save>
    1c7e:	f8 2e       	mov	r15, r24
    1c80:	10 91 33 04 	lds	r17, 0x0433	; 0x800433 <g_showData+0x2>
    1c84:	12 33       	cpi	r17, 0x32	; 50
    1c86:	09 f4       	brne	.+2      	; 0x1c8a <lcd_show_new_smartlcd_data+0x28>
    1c88:	71 c0       	rjmp	.+226    	; 0x1d6c <lcd_show_new_smartlcd_data+0x10a>
    1c8a:	d0 f4       	brcc	.+52     	; 0x1cc0 <lcd_show_new_smartlcd_data+0x5e>
    1c8c:	14 31       	cpi	r17, 0x14	; 20
    1c8e:	09 f4       	brne	.+2      	; 0x1c92 <lcd_show_new_smartlcd_data+0x30>
    1c90:	43 c0       	rjmp	.+134    	; 0x1d18 <lcd_show_new_smartlcd_data+0xb6>
    1c92:	40 f4       	brcc	.+16     	; 0x1ca4 <lcd_show_new_smartlcd_data+0x42>
    1c94:	10 31       	cpi	r17, 0x10	; 16
    1c96:	09 f0       	breq	.+2      	; 0x1c9a <lcd_show_new_smartlcd_data+0x38>
    1c98:	98 c0       	rjmp	.+304    	; 0x1dca <lcd_show_new_smartlcd_data+0x168>
    1c9a:	82 de       	rcall	.-764    	; 0x19a0 <lcd_cls>
    1c9c:	10 92 33 04 	sts	0x0433, r1	; 0x800433 <g_showData+0x2>
    1ca0:	ff be       	out	0x3f, r15	; 63
    1ca2:	95 c0       	rjmp	.+298    	; 0x1dce <lcd_show_new_smartlcd_data+0x16c>
    1ca4:	10 32       	cpi	r17, 0x20	; 32
    1ca6:	09 f4       	brne	.+2      	; 0x1caa <lcd_show_new_smartlcd_data+0x48>
    1ca8:	3f c0       	rjmp	.+126    	; 0x1d28 <lcd_show_new_smartlcd_data+0xc6>
    1caa:	10 33       	cpi	r17, 0x30	; 48
    1cac:	09 f0       	breq	.+2      	; 0x1cb0 <lcd_show_new_smartlcd_data+0x4e>
    1cae:	8d c0       	rjmp	.+282    	; 0x1dca <lcd_show_new_smartlcd_data+0x168>
    1cb0:	20 91 34 04 	lds	r18, 0x0434	; 0x800434 <g_showData+0x3>
    1cb4:	a5 e3       	ldi	r26, 0x35	; 53
    1cb6:	b4 e0       	ldi	r27, 0x04	; 4
    1cb8:	ce 01       	movw	r24, r28
    1cba:	01 96       	adiw	r24, 0x01	; 1
    1cbc:	fc 01       	movw	r30, r24
    1cbe:	40 c0       	rjmp	.+128    	; 0x1d40 <lcd_show_new_smartlcd_data+0xde>
    1cc0:	16 33       	cpi	r17, 0x36	; 54
    1cc2:	09 f4       	brne	.+2      	; 0x1cc6 <lcd_show_new_smartlcd_data+0x64>
    1cc4:	63 c0       	rjmp	.+198    	; 0x1d8c <lcd_show_new_smartlcd_data+0x12a>
    1cc6:	98 f4       	brcc	.+38     	; 0x1cee <lcd_show_new_smartlcd_data+0x8c>
    1cc8:	14 33       	cpi	r17, 0x34	; 52
    1cca:	09 f0       	breq	.+2      	; 0x1cce <lcd_show_new_smartlcd_data+0x6c>
    1ccc:	7e c0       	rjmp	.+252    	; 0x1dca <lcd_show_new_smartlcd_data+0x168>
    1cce:	00 91 3a 04 	lds	r16, 0x043A	; 0x80043a <g_showData+0x9>
    1cd2:	20 91 35 04 	lds	r18, 0x0435	; 0x800435 <g_showData+0x4>
    1cd6:	40 91 34 04 	lds	r20, 0x0434	; 0x800434 <g_showData+0x3>
    1cda:	60 91 3c 04 	lds	r22, 0x043C	; 0x80043c <g_showData+0xb>
    1cde:	80 91 3b 04 	lds	r24, 0x043B	; 0x80043b <g_showData+0xa>
    1ce2:	0e 94 62 04 	call	0x8c4	; 0x8c4 <gfx_mono_generic_draw_rect>
    1ce6:	10 92 33 04 	sts	0x0433, r1	; 0x800433 <g_showData+0x2>
    1cea:	ff be       	out	0x3f, r15	; 63
    1cec:	70 c0       	rjmp	.+224    	; 0x1dce <lcd_show_new_smartlcd_data+0x16c>
    1cee:	18 33       	cpi	r17, 0x38	; 56
    1cf0:	09 f4       	brne	.+2      	; 0x1cf4 <lcd_show_new_smartlcd_data+0x92>
    1cf2:	5c c0       	rjmp	.+184    	; 0x1dac <lcd_show_new_smartlcd_data+0x14a>
    1cf4:	1a 33       	cpi	r17, 0x3A	; 58
    1cf6:	09 f0       	breq	.+2      	; 0x1cfa <lcd_show_new_smartlcd_data+0x98>
    1cf8:	68 c0       	rjmp	.+208    	; 0x1dca <lcd_show_new_smartlcd_data+0x168>
    1cfa:	0f ef       	ldi	r16, 0xFF	; 255
    1cfc:	20 91 3a 04 	lds	r18, 0x043A	; 0x80043a <g_showData+0x9>
    1d00:	40 91 34 04 	lds	r20, 0x0434	; 0x800434 <g_showData+0x3>
    1d04:	60 91 3c 04 	lds	r22, 0x043C	; 0x80043c <g_showData+0xb>
    1d08:	80 91 3b 04 	lds	r24, 0x043B	; 0x80043b <g_showData+0xa>
    1d0c:	0e 94 4d 05 	call	0xa9a	; 0xa9a <gfx_mono_generic_draw_filled_circle>
    1d10:	10 92 33 04 	sts	0x0433, r1	; 0x800433 <g_showData+0x2>
    1d14:	ff be       	out	0x3f, r15	; 63
    1d16:	5b c0       	rjmp	.+182    	; 0x1dce <lcd_show_new_smartlcd_data+0x16c>
    1d18:	80 91 34 04 	lds	r24, 0x0434	; 0x800434 <g_showData+0x3>
    1d1c:	80 93 3a 04 	sts	0x043A, r24	; 0x80043a <g_showData+0x9>
    1d20:	10 92 33 04 	sts	0x0433, r1	; 0x800433 <g_showData+0x2>
    1d24:	ff be       	out	0x3f, r15	; 63
    1d26:	53 c0       	rjmp	.+166    	; 0x1dce <lcd_show_new_smartlcd_data+0x16c>
    1d28:	80 91 34 04 	lds	r24, 0x0434	; 0x800434 <g_showData+0x3>
    1d2c:	80 93 3b 04 	sts	0x043B, r24	; 0x80043b <g_showData+0xa>
    1d30:	80 91 35 04 	lds	r24, 0x0435	; 0x800435 <g_showData+0x4>
    1d34:	80 93 3c 04 	sts	0x043C, r24	; 0x80043c <g_showData+0xb>
    1d38:	10 92 33 04 	sts	0x0433, r1	; 0x800433 <g_showData+0x2>
    1d3c:	ff be       	out	0x3f, r15	; 63
    1d3e:	47 c0       	rjmp	.+142    	; 0x1dce <lcd_show_new_smartlcd_data+0x16c>
    1d40:	3e 2f       	mov	r19, r30
    1d42:	38 1b       	sub	r19, r24
    1d44:	32 17       	cp	r19, r18
    1d46:	18 f4       	brcc	.+6      	; 0x1d4e <lcd_show_new_smartlcd_data+0xec>
    1d48:	3d 91       	ld	r19, X+
    1d4a:	31 93       	st	Z+, r19
    1d4c:	f9 cf       	rjmp	.-14     	; 0x1d40 <lcd_show_new_smartlcd_data+0xde>
    1d4e:	fc 01       	movw	r30, r24
    1d50:	e2 0f       	add	r30, r18
    1d52:	f1 1d       	adc	r31, r1
    1d54:	10 82       	st	Z, r1
    1d56:	23 e0       	ldi	r18, 0x03	; 3
    1d58:	31 e0       	ldi	r19, 0x01	; 1
    1d5a:	40 91 3c 04 	lds	r20, 0x043C	; 0x80043c <g_showData+0xb>
    1d5e:	60 91 3b 04 	lds	r22, 0x043B	; 0x80043b <g_showData+0xa>
    1d62:	1a d8       	rcall	.-4044   	; 0xd98 <gfx_mono_draw_string>
    1d64:	10 92 33 04 	sts	0x0433, r1	; 0x800433 <g_showData+0x2>
    1d68:	ff be       	out	0x3f, r15	; 63
    1d6a:	31 c0       	rjmp	.+98     	; 0x1dce <lcd_show_new_smartlcd_data+0x16c>
    1d6c:	00 91 3a 04 	lds	r16, 0x043A	; 0x80043a <g_showData+0x9>
    1d70:	20 91 35 04 	lds	r18, 0x0435	; 0x800435 <g_showData+0x4>
    1d74:	40 91 34 04 	lds	r20, 0x0434	; 0x800434 <g_showData+0x3>
    1d78:	60 91 3c 04 	lds	r22, 0x043C	; 0x80043c <g_showData+0xb>
    1d7c:	80 91 3b 04 	lds	r24, 0x043B	; 0x80043b <g_showData+0xa>
    1d80:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <gfx_mono_generic_draw_line>
    1d84:	10 92 33 04 	sts	0x0433, r1	; 0x800433 <g_showData+0x2>
    1d88:	ff be       	out	0x3f, r15	; 63
    1d8a:	21 c0       	rjmp	.+66     	; 0x1dce <lcd_show_new_smartlcd_data+0x16c>
    1d8c:	00 91 3a 04 	lds	r16, 0x043A	; 0x80043a <g_showData+0x9>
    1d90:	20 91 35 04 	lds	r18, 0x0435	; 0x800435 <g_showData+0x4>
    1d94:	40 91 34 04 	lds	r20, 0x0434	; 0x800434 <g_showData+0x3>
    1d98:	60 91 3c 04 	lds	r22, 0x043C	; 0x80043c <g_showData+0xb>
    1d9c:	80 91 3b 04 	lds	r24, 0x043B	; 0x80043b <g_showData+0xa>
    1da0:	0e 94 85 04 	call	0x90a	; 0x90a <gfx_mono_generic_draw_filled_rect>
    1da4:	10 92 33 04 	sts	0x0433, r1	; 0x800433 <g_showData+0x2>
    1da8:	ff be       	out	0x3f, r15	; 63
    1daa:	11 c0       	rjmp	.+34     	; 0x1dce <lcd_show_new_smartlcd_data+0x16c>
    1dac:	0f ef       	ldi	r16, 0xFF	; 255
    1dae:	20 91 3a 04 	lds	r18, 0x043A	; 0x80043a <g_showData+0x9>
    1db2:	40 91 34 04 	lds	r20, 0x0434	; 0x800434 <g_showData+0x3>
    1db6:	60 91 3c 04 	lds	r22, 0x043C	; 0x80043c <g_showData+0xb>
    1dba:	80 91 3b 04 	lds	r24, 0x043B	; 0x80043b <g_showData+0xa>
    1dbe:	0e 94 9f 04 	call	0x93e	; 0x93e <gfx_mono_generic_draw_circle>
    1dc2:	10 92 33 04 	sts	0x0433, r1	; 0x800433 <g_showData+0x2>
    1dc6:	ff be       	out	0x3f, r15	; 63
    1dc8:	02 c0       	rjmp	.+4      	; 0x1dce <lcd_show_new_smartlcd_data+0x16c>
    1dca:	ff be       	out	0x3f, r15	; 63
    1dcc:	10 e0       	ldi	r17, 0x00	; 0
    1dce:	81 2f       	mov	r24, r17
    1dd0:	28 96       	adiw	r28, 0x08	; 8
    1dd2:	0f b6       	in	r0, 0x3f	; 63
    1dd4:	f8 94       	cli
    1dd6:	de bf       	out	0x3e, r29	; 62
    1dd8:	0f be       	out	0x3f, r0	; 63
    1dda:	cd bf       	out	0x3d, r28	; 61
    1ddc:	df 91       	pop	r29
    1dde:	cf 91       	pop	r28
    1de0:	1f 91       	pop	r17
    1de2:	0f 91       	pop	r16
    1de4:	ff 90       	pop	r15
    1de6:	08 95       	ret

00001de8 <lcd_show_new_refosc_data>:
    1de8:	3f 92       	push	r3
    1dea:	4f 92       	push	r4
    1dec:	5f 92       	push	r5
    1dee:	6f 92       	push	r6
    1df0:	7f 92       	push	r7
    1df2:	8f 92       	push	r8
    1df4:	9f 92       	push	r9
    1df6:	af 92       	push	r10
    1df8:	bf 92       	push	r11
    1dfa:	cf 92       	push	r12
    1dfc:	df 92       	push	r13
    1dfe:	ef 92       	push	r14
    1e00:	ff 92       	push	r15
    1e02:	0f 93       	push	r16
    1e04:	1f 93       	push	r17
    1e06:	cf 93       	push	r28
    1e08:	df 93       	push	r29
    1e0a:	2b dd       	rcall	.-1450   	; 0x1862 <cpu_irq_save>
    1e0c:	c8 2f       	mov	r28, r24
    1e0e:	90 91 31 04 	lds	r25, 0x0431	; 0x800431 <g_showData>
    1e12:	92 ff       	sbrs	r25, 2
    1e14:	2f c0       	rjmp	.+94     	; 0x1e74 <lcd_show_new_refosc_data+0x8c>
    1e16:	9b 7f       	andi	r25, 0xFB	; 251
    1e18:	90 93 31 04 	sts	0x0431, r25	; 0x800431 <g_showData>
    1e1c:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <g_showData+0x25>
    1e20:	1f 92       	push	r1
    1e22:	8f 93       	push	r24
    1e24:	80 91 55 04 	lds	r24, 0x0455	; 0x800455 <g_showData+0x24>
    1e28:	1f 92       	push	r1
    1e2a:	8f 93       	push	r24
    1e2c:	80 91 54 04 	lds	r24, 0x0454	; 0x800454 <g_showData+0x23>
    1e30:	1f 92       	push	r1
    1e32:	8f 93       	push	r24
    1e34:	83 e6       	ldi	r24, 0x63	; 99
    1e36:	92 e0       	ldi	r25, 0x02	; 2
    1e38:	9f 93       	push	r25
    1e3a:	8f 93       	push	r24
    1e3c:	1f 92       	push	r1
    1e3e:	80 e3       	ldi	r24, 0x30	; 48
    1e40:	8f 93       	push	r24
    1e42:	8c ed       	ldi	r24, 0xDC	; 220
    1e44:	93 e0       	ldi	r25, 0x03	; 3
    1e46:	9f 93       	push	r25
    1e48:	8f 93       	push	r24
    1e4a:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    1e4e:	cf bf       	out	0x3f, r28	; 63
    1e50:	23 e0       	ldi	r18, 0x03	; 3
    1e52:	31 e0       	ldi	r19, 0x01	; 1
    1e54:	4d e1       	ldi	r20, 0x1D	; 29
    1e56:	6f e3       	ldi	r22, 0x3F	; 63
    1e58:	8c ed       	ldi	r24, 0xDC	; 220
    1e5a:	93 e0       	ldi	r25, 0x03	; 3
    1e5c:	0e 94 cc 06 	call	0xd98	; 0xd98 <gfx_mono_draw_string>
    1e60:	8d b7       	in	r24, 0x3d	; 61
    1e62:	9e b7       	in	r25, 0x3e	; 62
    1e64:	0c 96       	adiw	r24, 0x0c	; 12
    1e66:	0f b6       	in	r0, 0x3f	; 63
    1e68:	f8 94       	cli
    1e6a:	9e bf       	out	0x3e, r25	; 62
    1e6c:	0f be       	out	0x3f, r0	; 63
    1e6e:	8d bf       	out	0x3d, r24	; 61
    1e70:	8f ef       	ldi	r24, 0xFF	; 255
    1e72:	00 c4       	rjmp	.+2048   	; 0x2674 <lcd_show_new_refosc_data+0x88c>
    1e74:	91 ff       	sbrs	r25, 1
    1e76:	31 c0       	rjmp	.+98     	; 0x1eda <lcd_show_new_refosc_data+0xf2>
    1e78:	9d 7f       	andi	r25, 0xFD	; 253
    1e7a:	90 93 31 04 	sts	0x0431, r25	; 0x800431 <g_showData>
    1e7e:	80 91 42 04 	lds	r24, 0x0442	; 0x800442 <g_showData+0x11>
    1e82:	8f 93       	push	r24
    1e84:	80 91 41 04 	lds	r24, 0x0441	; 0x800441 <g_showData+0x10>
    1e88:	8f 93       	push	r24
    1e8a:	80 91 52 04 	lds	r24, 0x0452	; 0x800452 <g_showData+0x21>
    1e8e:	1f 92       	push	r1
    1e90:	8f 93       	push	r24
    1e92:	80 91 53 04 	lds	r24, 0x0453	; 0x800453 <g_showData+0x22>
    1e96:	1f 92       	push	r1
    1e98:	8f 93       	push	r24
    1e9a:	82 e7       	ldi	r24, 0x72	; 114
    1e9c:	92 e0       	ldi	r25, 0x02	; 2
    1e9e:	9f 93       	push	r25
    1ea0:	8f 93       	push	r24
    1ea2:	1f 92       	push	r1
    1ea4:	80 e3       	ldi	r24, 0x30	; 48
    1ea6:	8f 93       	push	r24
    1ea8:	8c ed       	ldi	r24, 0xDC	; 220
    1eaa:	93 e0       	ldi	r25, 0x03	; 3
    1eac:	9f 93       	push	r25
    1eae:	8f 93       	push	r24
    1eb0:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    1eb4:	cf bf       	out	0x3f, r28	; 63
    1eb6:	23 e0       	ldi	r18, 0x03	; 3
    1eb8:	31 e0       	ldi	r19, 0x01	; 1
    1eba:	44 e1       	ldi	r20, 0x14	; 20
    1ebc:	6f e3       	ldi	r22, 0x3F	; 63
    1ebe:	8c ed       	ldi	r24, 0xDC	; 220
    1ec0:	93 e0       	ldi	r25, 0x03	; 3
    1ec2:	0e 94 cc 06 	call	0xd98	; 0xd98 <gfx_mono_draw_string>
    1ec6:	8d b7       	in	r24, 0x3d	; 61
    1ec8:	9e b7       	in	r25, 0x3e	; 62
    1eca:	0c 96       	adiw	r24, 0x0c	; 12
    1ecc:	0f b6       	in	r0, 0x3f	; 63
    1ece:	f8 94       	cli
    1ed0:	9e bf       	out	0x3e, r25	; 62
    1ed2:	0f be       	out	0x3f, r0	; 63
    1ed4:	8d bf       	out	0x3d, r24	; 61
    1ed6:	8e ef       	ldi	r24, 0xFE	; 254
    1ed8:	cd c3       	rjmp	.+1946   	; 0x2674 <lcd_show_new_refosc_data+0x88c>
    1eda:	89 2f       	mov	r24, r25
    1edc:	81 70       	andi	r24, 0x01	; 1
    1ede:	90 ff       	sbrs	r25, 0
    1ee0:	55 c1       	rjmp	.+682    	; 0x218c <lcd_show_new_refosc_data+0x3a4>
    1ee2:	9e 7f       	andi	r25, 0xFE	; 254
    1ee4:	90 93 31 04 	sts	0x0431, r25	; 0x800431 <g_showData>
    1ee8:	cf bf       	out	0x3f, r28	; 63
    1eea:	c0 91 3f 04 	lds	r28, 0x043F	; 0x80043f <g_showData+0xe>
    1eee:	d0 91 40 04 	lds	r29, 0x0440	; 0x800440 <g_showData+0xf>
    1ef2:	a0 90 3d 04 	lds	r10, 0x043D	; 0x80043d <g_showData+0xc>
    1ef6:	b0 90 3e 04 	lds	r11, 0x043E	; 0x80043e <g_showData+0xd>
    1efa:	90 90 51 04 	lds	r9, 0x0451	; 0x800451 <g_showData+0x20>
    1efe:	c1 35       	cpi	r28, 0x51	; 81
    1f00:	96 e4       	ldi	r25, 0x46	; 70
    1f02:	d9 07       	cpc	r29, r25
    1f04:	9c f4       	brge	.+38     	; 0x1f2c <lcd_show_new_refosc_data+0x144>
    1f06:	c0 3b       	cpi	r28, 0xB0	; 176
    1f08:	89 eb       	ldi	r24, 0xB9	; 185
    1f0a:	d8 07       	cpc	r29, r24
    1f0c:	2c f0       	brlt	.+10     	; 0x1f18 <lcd_show_new_refosc_data+0x130>
    1f0e:	c5 39       	cpi	r28, 0x95	; 149
    1f10:	91 e1       	ldi	r25, 0x11	; 17
    1f12:	d9 07       	cpc	r29, r25
    1f14:	1c f0       	brlt	.+6      	; 0x1f1c <lcd_show_new_refosc_data+0x134>
    1f16:	0f c0       	rjmp	.+30     	; 0x1f36 <lcd_show_new_refosc_data+0x14e>
    1f18:	c0 eb       	ldi	r28, 0xB0	; 176
    1f1a:	d9 eb       	ldi	r29, 0xB9	; 185
    1f1c:	be 01       	movw	r22, r28
    1f1e:	cc 36       	cpi	r28, 0x6C	; 108
    1f20:	8e ee       	ldi	r24, 0xEE	; 238
    1f22:	d8 07       	cpc	r29, r24
    1f24:	54 f4       	brge	.+20     	; 0x1f3a <lcd_show_new_refosc_data+0x152>
    1f26:	6c e6       	ldi	r22, 0x6C	; 108
    1f28:	7e ee       	ldi	r23, 0xEE	; 238
    1f2a:	07 c0       	rjmp	.+14     	; 0x1f3a <lcd_show_new_refosc_data+0x152>
    1f2c:	c0 e5       	ldi	r28, 0x50	; 80
    1f2e:	d6 e4       	ldi	r29, 0x46	; 70
    1f30:	60 e5       	ldi	r22, 0x50	; 80
    1f32:	76 e4       	ldi	r23, 0x46	; 70
    1f34:	02 c0       	rjmp	.+4      	; 0x1f3a <lcd_show_new_refosc_data+0x152>
    1f36:	60 e5       	ldi	r22, 0x50	; 80
    1f38:	76 e4       	ldi	r23, 0x46	; 70
    1f3a:	07 2e       	mov	r0, r23
    1f3c:	00 0c       	add	r0, r0
    1f3e:	88 0b       	sbc	r24, r24
    1f40:	99 0b       	sbc	r25, r25
    1f42:	0e 94 79 1e 	call	0x3cf2	; 0x3cf2 <__floatsisf>
    1f46:	20 e0       	ldi	r18, 0x00	; 0
    1f48:	30 ea       	ldi	r19, 0xA0	; 160
    1f4a:	4c e8       	ldi	r20, 0x8C	; 140
    1f4c:	55 e4       	ldi	r21, 0x45	; 69
    1f4e:	0e 94 de 1d 	call	0x3bbc	; 0x3bbc <__divsf3>
    1f52:	20 e0       	ldi	r18, 0x00	; 0
    1f54:	30 e0       	ldi	r19, 0x00	; 0
    1f56:	48 e9       	ldi	r20, 0x98	; 152
    1f58:	52 e4       	ldi	r21, 0x42	; 66
    1f5a:	0e 94 80 1f 	call	0x3f00	; 0x3f00 <__mulsf3>
    1f5e:	0e 94 46 1e 	call	0x3c8c	; 0x3c8c <__fixsfsi>
    1f62:	2b 01       	movw	r4, r22
    1f64:	3c 01       	movw	r6, r24
    1f66:	7b 01       	movw	r14, r22
    1f68:	77 ff       	sbrs	r23, 7
    1f6a:	08 c0       	rjmp	.+16     	; 0x1f7c <lcd_show_new_refosc_data+0x194>
    1f6c:	36 e9       	ldi	r19, 0x96	; 150
    1f6e:	83 2e       	mov	r8, r19
    1f70:	86 0e       	add	r8, r22
    1f72:	cc 24       	eor	r12, r12
    1f74:	dd 24       	eor	r13, r13
    1f76:	c6 1a       	sub	r12, r22
    1f78:	d7 0a       	sbc	r13, r23
    1f7a:	03 c0       	rjmp	.+6      	; 0x1f82 <lcd_show_new_refosc_data+0x19a>
    1f7c:	6b 01       	movw	r12, r22
    1f7e:	26 e9       	ldi	r18, 0x96	; 150
    1f80:	82 2e       	mov	r8, r18
    1f82:	1f 92       	push	r1
    1f84:	9f 92       	push	r9
    1f86:	81 e8       	ldi	r24, 0x81	; 129
    1f88:	92 e0       	ldi	r25, 0x02	; 2
    1f8a:	9f 93       	push	r25
    1f8c:	8f 93       	push	r24
    1f8e:	1f 92       	push	r1
    1f90:	90 e3       	ldi	r25, 0x30	; 48
    1f92:	39 2e       	mov	r3, r25
    1f94:	3f 92       	push	r3
    1f96:	0c ed       	ldi	r16, 0xDC	; 220
    1f98:	13 e0       	ldi	r17, 0x03	; 3
    1f9a:	1f 93       	push	r17
    1f9c:	0f 93       	push	r16
    1f9e:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    1fa2:	23 e0       	ldi	r18, 0x03	; 3
    1fa4:	31 e0       	ldi	r19, 0x01	; 1
    1fa6:	4b e0       	ldi	r20, 0x0B	; 11
    1fa8:	6b e4       	ldi	r22, 0x4B	; 75
    1faa:	c8 01       	movw	r24, r16
    1fac:	0e 94 cc 06 	call	0xd98	; 0xd98 <gfx_mono_draw_string>
    1fb0:	c5 01       	movw	r24, r10
    1fb2:	68 ee       	ldi	r22, 0xE8	; 232
    1fb4:	73 e0       	ldi	r23, 0x03	; 3
    1fb6:	0e 94 ef 1f 	call	0x3fde	; 0x3fde <__udivmodhi4>
    1fba:	9f 93       	push	r25
    1fbc:	8f 93       	push	r24
    1fbe:	7f 93       	push	r23
    1fc0:	6f 93       	push	r22
    1fc2:	85 e8       	ldi	r24, 0x85	; 133
    1fc4:	92 e0       	ldi	r25, 0x02	; 2
    1fc6:	9f 93       	push	r25
    1fc8:	8f 93       	push	r24
    1fca:	1f 92       	push	r1
    1fcc:	3f 92       	push	r3
    1fce:	1f 93       	push	r17
    1fd0:	0f 93       	push	r16
    1fd2:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    1fd6:	23 e0       	ldi	r18, 0x03	; 3
    1fd8:	31 e0       	ldi	r19, 0x01	; 1
    1fda:	48 e3       	ldi	r20, 0x38	; 56
    1fdc:	6d eb       	ldi	r22, 0xBD	; 189
    1fde:	c8 01       	movw	r24, r16
    1fe0:	0e 94 cc 06 	call	0xd98	; 0xd98 <gfx_mono_draw_string>
    1fe4:	ce 01       	movw	r24, r28
    1fe6:	64 e6       	ldi	r22, 0x64	; 100
    1fe8:	70 e0       	ldi	r23, 0x00	; 0
    1fea:	0e 94 03 20 	call	0x4006	; 0x4006 <__divmodhi4>
    1fee:	7f 93       	push	r23
    1ff0:	6f 93       	push	r22
    1ff2:	8e e8       	ldi	r24, 0x8E	; 142
    1ff4:	92 e0       	ldi	r25, 0x02	; 2
    1ff6:	9f 93       	push	r25
    1ff8:	8f 93       	push	r24
    1ffa:	1f 92       	push	r1
    1ffc:	3f 92       	push	r3
    1ffe:	1f 93       	push	r17
    2000:	0f 93       	push	r16
    2002:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    2006:	23 e0       	ldi	r18, 0x03	; 3
    2008:	31 e0       	ldi	r19, 0x01	; 1
    200a:	4e e6       	ldi	r20, 0x6E	; 110
    200c:	69 ec       	ldi	r22, 0xC9	; 201
    200e:	c8 01       	movw	r24, r16
    2010:	0e 94 cc 06 	call	0xd98	; 0xd98 <gfx_mono_draw_string>
    2014:	8d b7       	in	r24, 0x3d	; 61
    2016:	9e b7       	in	r25, 0x3e	; 62
    2018:	4a 96       	adiw	r24, 0x1a	; 26
    201a:	0f b6       	in	r0, 0x3f	; 63
    201c:	f8 94       	cli
    201e:	9e bf       	out	0x3e, r25	; 62
    2020:	0f be       	out	0x3f, r0	; 63
    2022:	8d bf       	out	0x3d, r24	; 61
    2024:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <clk_state_old.3316>
    2028:	98 12       	cpse	r9, r24
    202a:	22 c0       	rjmp	.+68     	; 0x2070 <lcd_show_new_refosc_data+0x288>
    202c:	c1 14       	cp	r12, r1
    202e:	d1 04       	cpc	r13, r1
    2030:	f9 f0       	breq	.+62     	; 0x2070 <lcd_show_new_refosc_data+0x288>
    2032:	44 2d       	mov	r20, r4
    2034:	1e 14       	cp	r1, r14
    2036:	1f 04       	cpc	r1, r15
    2038:	0c f4       	brge	.+2      	; 0x203c <lcd_show_new_refosc_data+0x254>
    203a:	40 e0       	ldi	r20, 0x00	; 0
    203c:	d4 2d       	mov	r29, r4
    203e:	f7 fc       	sbrc	r15, 7
    2040:	d0 e0       	ldi	r29, 0x00	; 0
    2042:	97 e0       	ldi	r25, 0x07	; 7
    2044:	99 16       	cp	r9, r25
    2046:	09 f4       	brne	.+2      	; 0x204a <lcd_show_new_refosc_data+0x262>
    2048:	62 c0       	rjmp	.+196    	; 0x210e <lcd_show_new_refosc_data+0x326>
    204a:	99 15       	cp	r25, r9
    204c:	68 f0       	brcs	.+26     	; 0x2068 <lcd_show_new_refosc_data+0x280>
    204e:	8f ef       	ldi	r24, 0xFF	; 255
    2050:	89 0d       	add	r24, r9
    2052:	83 30       	cpi	r24, 0x03	; 3
    2054:	08 f0       	brcs	.+2      	; 0x2058 <lcd_show_new_refosc_data+0x270>
    2056:	96 c0       	rjmp	.+300    	; 0x2184 <lcd_show_new_refosc_data+0x39c>
    2058:	01 e0       	ldi	r16, 0x01	; 1
    205a:	21 e0       	ldi	r18, 0x01	; 1
    205c:	48 e9       	ldi	r20, 0x98	; 152
    205e:	6a e7       	ldi	r22, 0x7A	; 122
    2060:	8a e4       	ldi	r24, 0x4A	; 74
    2062:	0e 94 85 04 	call	0x90a	; 0x90a <gfx_mono_generic_draw_filled_rect>
    2066:	8e c0       	rjmp	.+284    	; 0x2184 <lcd_show_new_refosc_data+0x39c>
    2068:	8f e0       	ldi	r24, 0x0F	; 15
    206a:	98 16       	cp	r9, r24
    206c:	99 f0       	breq	.+38     	; 0x2094 <lcd_show_new_refosc_data+0x2ac>
    206e:	8a c0       	rjmp	.+276    	; 0x2184 <lcd_show_new_refosc_data+0x39c>
    2070:	00 e0       	ldi	r16, 0x00	; 0
    2072:	25 e0       	ldi	r18, 0x05	; 5
    2074:	40 ea       	ldi	r20, 0xA0	; 160
    2076:	68 e7       	ldi	r22, 0x78	; 120
    2078:	86 e4       	ldi	r24, 0x46	; 70
    207a:	0e 94 85 04 	call	0x90a	; 0x90a <gfx_mono_generic_draw_filled_rect>
    207e:	c1 14       	cp	r12, r1
    2080:	d1 04       	cpc	r13, r1
    2082:	b9 f6       	brne	.-82     	; 0x2032 <lcd_show_new_refosc_data+0x24a>
    2084:	01 e0       	ldi	r16, 0x01	; 1
    2086:	2c e7       	ldi	r18, 0x7C	; 124
    2088:	46 e9       	ldi	r20, 0x96	; 150
    208a:	68 e7       	ldi	r22, 0x78	; 120
    208c:	86 e9       	ldi	r24, 0x96	; 150
    208e:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <gfx_mono_generic_draw_line>
    2092:	78 c0       	rjmp	.+240    	; 0x2184 <lcd_show_new_refosc_data+0x39c>
    2094:	40 5b       	subi	r20, 0xB0	; 176
    2096:	00 e0       	ldi	r16, 0x00	; 0
    2098:	25 e0       	ldi	r18, 0x05	; 5
    209a:	68 e7       	ldi	r22, 0x78	; 120
    209c:	86 e4       	ldi	r24, 0x46	; 70
    209e:	0e 94 85 04 	call	0x90a	; 0x90a <gfx_mono_generic_draw_filled_rect>
    20a2:	f7 fe       	sbrs	r15, 7
    20a4:	0f c0       	rjmp	.+30     	; 0x20c4 <lcd_show_new_refosc_data+0x2dc>
    20a6:	01 e0       	ldi	r16, 0x01	; 1
    20a8:	28 e7       	ldi	r18, 0x78	; 120
    20aa:	48 2d       	mov	r20, r8
    20ac:	6a e7       	ldi	r22, 0x7A	; 122
    20ae:	cc ef       	ldi	r28, 0xFC	; 252
    20b0:	c8 0d       	add	r28, r8
    20b2:	8c 2f       	mov	r24, r28
    20b4:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <gfx_mono_generic_draw_line>
    20b8:	2c e7       	ldi	r18, 0x7C	; 124
    20ba:	48 2d       	mov	r20, r8
    20bc:	6a e7       	ldi	r22, 0x7A	; 122
    20be:	8c 2f       	mov	r24, r28
    20c0:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <gfx_mono_generic_draw_line>
    20c4:	01 e0       	ldi	r16, 0x01	; 1
    20c6:	25 e0       	ldi	r18, 0x05	; 5
    20c8:	4c 2d       	mov	r20, r12
    20ca:	68 e7       	ldi	r22, 0x78	; 120
    20cc:	88 2d       	mov	r24, r8
    20ce:	0e 94 85 04 	call	0x90a	; 0x90a <gfx_mono_generic_draw_filled_rect>
    20d2:	40 e5       	ldi	r20, 0x50	; 80
    20d4:	4d 1b       	sub	r20, r29
    20d6:	00 e0       	ldi	r16, 0x00	; 0
    20d8:	25 e0       	ldi	r18, 0x05	; 5
    20da:	68 e7       	ldi	r22, 0x78	; 120
    20dc:	86 e9       	ldi	r24, 0x96	; 150
    20de:	8d 0f       	add	r24, r29
    20e0:	0e 94 85 04 	call	0x90a	; 0x90a <gfx_mono_generic_draw_filled_rect>
    20e4:	1e 14       	cp	r1, r14
    20e6:	1f 04       	cpc	r1, r15
    20e8:	0c f0       	brlt	.+2      	; 0x20ec <lcd_show_new_refosc_data+0x304>
    20ea:	4c c0       	rjmp	.+152    	; 0x2184 <lcd_show_new_refosc_data+0x39c>
    20ec:	c5 e9       	ldi	r28, 0x95	; 149
    20ee:	cd 0f       	add	r28, r29
    20f0:	d7 56       	subi	r29, 0x67	; 103
    20f2:	01 e0       	ldi	r16, 0x01	; 1
    20f4:	28 e7       	ldi	r18, 0x78	; 120
    20f6:	4c 2f       	mov	r20, r28
    20f8:	6a e7       	ldi	r22, 0x7A	; 122
    20fa:	8d 2f       	mov	r24, r29
    20fc:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <gfx_mono_generic_draw_line>
    2100:	2c e7       	ldi	r18, 0x7C	; 124
    2102:	4c 2f       	mov	r20, r28
    2104:	6a e7       	ldi	r22, 0x7A	; 122
    2106:	8d 2f       	mov	r24, r29
    2108:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <gfx_mono_generic_draw_line>
    210c:	3b c0       	rjmp	.+118    	; 0x2184 <lcd_show_new_refosc_data+0x39c>
    210e:	40 5b       	subi	r20, 0xB0	; 176
    2110:	00 e0       	ldi	r16, 0x00	; 0
    2112:	23 e0       	ldi	r18, 0x03	; 3
    2114:	69 e7       	ldi	r22, 0x79	; 121
    2116:	86 e4       	ldi	r24, 0x46	; 70
    2118:	0e 94 85 04 	call	0x90a	; 0x90a <gfx_mono_generic_draw_filled_rect>
    211c:	f7 fe       	sbrs	r15, 7
    211e:	0f c0       	rjmp	.+30     	; 0x213e <lcd_show_new_refosc_data+0x356>
    2120:	01 e0       	ldi	r16, 0x01	; 1
    2122:	29 e7       	ldi	r18, 0x79	; 121
    2124:	48 2d       	mov	r20, r8
    2126:	6a e7       	ldi	r22, 0x7A	; 122
    2128:	cc ef       	ldi	r28, 0xFC	; 252
    212a:	c8 0d       	add	r28, r8
    212c:	8c 2f       	mov	r24, r28
    212e:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <gfx_mono_generic_draw_line>
    2132:	2b e7       	ldi	r18, 0x7B	; 123
    2134:	48 2d       	mov	r20, r8
    2136:	6a e7       	ldi	r22, 0x7A	; 122
    2138:	8c 2f       	mov	r24, r28
    213a:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <gfx_mono_generic_draw_line>
    213e:	01 e0       	ldi	r16, 0x01	; 1
    2140:	23 e0       	ldi	r18, 0x03	; 3
    2142:	4c 2d       	mov	r20, r12
    2144:	69 e7       	ldi	r22, 0x79	; 121
    2146:	88 2d       	mov	r24, r8
    2148:	0e 94 85 04 	call	0x90a	; 0x90a <gfx_mono_generic_draw_filled_rect>
    214c:	40 e5       	ldi	r20, 0x50	; 80
    214e:	4d 1b       	sub	r20, r29
    2150:	00 e0       	ldi	r16, 0x00	; 0
    2152:	23 e0       	ldi	r18, 0x03	; 3
    2154:	69 e7       	ldi	r22, 0x79	; 121
    2156:	86 e9       	ldi	r24, 0x96	; 150
    2158:	8d 0f       	add	r24, r29
    215a:	0e 94 85 04 	call	0x90a	; 0x90a <gfx_mono_generic_draw_filled_rect>
    215e:	1e 14       	cp	r1, r14
    2160:	1f 04       	cpc	r1, r15
    2162:	84 f4       	brge	.+32     	; 0x2184 <lcd_show_new_refosc_data+0x39c>
    2164:	c5 e9       	ldi	r28, 0x95	; 149
    2166:	cd 0f       	add	r28, r29
    2168:	d7 56       	subi	r29, 0x67	; 103
    216a:	01 e0       	ldi	r16, 0x01	; 1
    216c:	29 e7       	ldi	r18, 0x79	; 121
    216e:	4c 2f       	mov	r20, r28
    2170:	6a e7       	ldi	r22, 0x7A	; 122
    2172:	8d 2f       	mov	r24, r29
    2174:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <gfx_mono_generic_draw_line>
    2178:	2b e7       	ldi	r18, 0x7B	; 123
    217a:	4c 2f       	mov	r20, r28
    217c:	6a e7       	ldi	r22, 0x7A	; 122
    217e:	8d 2f       	mov	r24, r29
    2180:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <gfx_mono_generic_draw_line>
    2184:	90 92 56 03 	sts	0x0356, r9	; 0x800356 <clk_state_old.3316>
    2188:	8d ef       	ldi	r24, 0xFD	; 253
    218a:	74 c2       	rjmp	.+1256   	; 0x2674 <lcd_show_new_refosc_data+0x88c>
    218c:	96 ff       	sbrs	r25, 6
    218e:	36 c0       	rjmp	.+108    	; 0x21fc <lcd_show_new_refosc_data+0x414>
    2190:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <idx.3359>
    2194:	22 30       	cpi	r18, 0x02	; 2
    2196:	90 f5       	brcc	.+100    	; 0x21fc <lcd_show_new_refosc_data+0x414>
    2198:	9f 7b       	andi	r25, 0xBF	; 191
    219a:	90 93 31 04 	sts	0x0431, r25	; 0x800431 <g_showData>
    219e:	80 91 5c 04 	lds	r24, 0x045C	; 0x80045c <g_showData+0x2b>
    21a2:	1f 92       	push	r1
    21a4:	8f 93       	push	r24
    21a6:	80 91 5b 04 	lds	r24, 0x045B	; 0x80045b <g_showData+0x2a>
    21aa:	1f 92       	push	r1
    21ac:	8f 93       	push	r24
    21ae:	80 91 5a 04 	lds	r24, 0x045A	; 0x80045a <g_showData+0x29>
    21b2:	1f 92       	push	r1
    21b4:	8f 93       	push	r24
    21b6:	84 e9       	ldi	r24, 0x94	; 148
    21b8:	92 e0       	ldi	r25, 0x02	; 2
    21ba:	9f 93       	push	r25
    21bc:	8f 93       	push	r24
    21be:	1f 92       	push	r1
    21c0:	80 e3       	ldi	r24, 0x30	; 48
    21c2:	8f 93       	push	r24
    21c4:	8c ed       	ldi	r24, 0xDC	; 220
    21c6:	93 e0       	ldi	r25, 0x03	; 3
    21c8:	9f 93       	push	r25
    21ca:	8f 93       	push	r24
    21cc:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    21d0:	cf bf       	out	0x3f, r28	; 63
    21d2:	23 e0       	ldi	r18, 0x03	; 3
    21d4:	31 e0       	ldi	r19, 0x01	; 1
    21d6:	41 e4       	ldi	r20, 0x41	; 65
    21d8:	6d e5       	ldi	r22, 0x5D	; 93
    21da:	8c ed       	ldi	r24, 0xDC	; 220
    21dc:	93 e0       	ldi	r25, 0x03	; 3
    21de:	0e 94 cc 06 	call	0xd98	; 0xd98 <gfx_mono_draw_string>
    21e2:	82 e0       	ldi	r24, 0x02	; 2
    21e4:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3359>
    21e8:	8d b7       	in	r24, 0x3d	; 61
    21ea:	9e b7       	in	r25, 0x3e	; 62
    21ec:	0c 96       	adiw	r24, 0x0c	; 12
    21ee:	0f b6       	in	r0, 0x3f	; 63
    21f0:	f8 94       	cli
    21f2:	9e bf       	out	0x3e, r25	; 62
    21f4:	0f be       	out	0x3f, r0	; 63
    21f6:	8d bf       	out	0x3d, r24	; 61
    21f8:	81 e0       	ldi	r24, 0x01	; 1
    21fa:	3c c2       	rjmp	.+1144   	; 0x2674 <lcd_show_new_refosc_data+0x88c>
    21fc:	97 ff       	sbrs	r25, 7
    21fe:	47 c0       	rjmp	.+142    	; 0x228e <lcd_show_new_refosc_data+0x4a6>
    2200:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <idx.3359>
    2204:	23 30       	cpi	r18, 0x03	; 3
    2206:	08 f0       	brcs	.+2      	; 0x220a <lcd_show_new_refosc_data+0x422>
    2208:	42 c0       	rjmp	.+132    	; 0x228e <lcd_show_new_refosc_data+0x4a6>
    220a:	80 91 31 04 	lds	r24, 0x0431	; 0x800431 <g_showData>
    220e:	8f 77       	andi	r24, 0x7F	; 127
    2210:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <g_showData>
    2214:	20 91 49 04 	lds	r18, 0x0449	; 0x800449 <g_showData+0x18>
    2218:	30 91 4a 04 	lds	r19, 0x044A	; 0x80044a <g_showData+0x19>
    221c:	c9 01       	movw	r24, r18
    221e:	64 e6       	ldi	r22, 0x64	; 100
    2220:	70 e0       	ldi	r23, 0x00	; 0
    2222:	0e 94 ef 1f 	call	0x3fde	; 0x3fde <__udivmodhi4>
    2226:	9f 93       	push	r25
    2228:	8f 93       	push	r24
    222a:	b9 01       	movw	r22, r18
    222c:	80 e0       	ldi	r24, 0x00	; 0
    222e:	90 e0       	ldi	r25, 0x00	; 0
    2230:	0e 94 77 1e 	call	0x3cee	; 0x3cee <__floatunsisf>
    2234:	20 e0       	ldi	r18, 0x00	; 0
    2236:	30 e0       	ldi	r19, 0x00	; 0
    2238:	48 ec       	ldi	r20, 0xC8	; 200
    223a:	52 e4       	ldi	r21, 0x42	; 66
    223c:	0e 94 de 1d 	call	0x3bbc	; 0x3bbc <__divsf3>
    2240:	0e 94 46 1e 	call	0x3c8c	; 0x3c8c <__fixsfsi>
    2244:	7f 93       	push	r23
    2246:	6f 93       	push	r22
    2248:	85 ed       	ldi	r24, 0xD5	; 213
    224a:	91 e0       	ldi	r25, 0x01	; 1
    224c:	9f 93       	push	r25
    224e:	8f 93       	push	r24
    2250:	1f 92       	push	r1
    2252:	80 e3       	ldi	r24, 0x30	; 48
    2254:	8f 93       	push	r24
    2256:	8c ed       	ldi	r24, 0xDC	; 220
    2258:	93 e0       	ldi	r25, 0x03	; 3
    225a:	9f 93       	push	r25
    225c:	8f 93       	push	r24
    225e:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    2262:	cf bf       	out	0x3f, r28	; 63
    2264:	23 e0       	ldi	r18, 0x03	; 3
    2266:	31 e0       	ldi	r19, 0x01	; 1
    2268:	4a e4       	ldi	r20, 0x4A	; 74
    226a:	6f e3       	ldi	r22, 0x3F	; 63
    226c:	8c ed       	ldi	r24, 0xDC	; 220
    226e:	93 e0       	ldi	r25, 0x03	; 3
    2270:	0e 94 cc 06 	call	0xd98	; 0xd98 <gfx_mono_draw_string>
    2274:	83 e0       	ldi	r24, 0x03	; 3
    2276:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3359>
    227a:	8d b7       	in	r24, 0x3d	; 61
    227c:	9e b7       	in	r25, 0x3e	; 62
    227e:	0a 96       	adiw	r24, 0x0a	; 10
    2280:	0f b6       	in	r0, 0x3f	; 63
    2282:	f8 94       	cli
    2284:	9e bf       	out	0x3e, r25	; 62
    2286:	0f be       	out	0x3f, r0	; 63
    2288:	8d bf       	out	0x3d, r24	; 61
    228a:	82 e0       	ldi	r24, 0x02	; 2
    228c:	f3 c1       	rjmp	.+998    	; 0x2674 <lcd_show_new_refosc_data+0x88c>
    228e:	20 91 32 04 	lds	r18, 0x0432	; 0x800432 <g_showData+0x1>
    2292:	20 ff       	sbrs	r18, 0
    2294:	32 c0       	rjmp	.+100    	; 0x22fa <lcd_show_new_refosc_data+0x512>
    2296:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <idx.3359>
    229a:	34 30       	cpi	r19, 0x04	; 4
    229c:	70 f5       	brcc	.+92     	; 0x22fa <lcd_show_new_refosc_data+0x512>
    229e:	2e 7f       	andi	r18, 0xFE	; 254
    22a0:	20 93 32 04 	sts	0x0432, r18	; 0x800432 <g_showData+0x1>
    22a4:	80 91 5e 04 	lds	r24, 0x045E	; 0x80045e <g_showData+0x2d>
    22a8:	1f 92       	push	r1
    22aa:	8f 93       	push	r24
    22ac:	80 91 5d 04 	lds	r24, 0x045D	; 0x80045d <g_showData+0x2c>
    22b0:	1f 92       	push	r1
    22b2:	8f 93       	push	r24
    22b4:	8c ee       	ldi	r24, 0xEC	; 236
    22b6:	91 e0       	ldi	r25, 0x01	; 1
    22b8:	9f 93       	push	r25
    22ba:	8f 93       	push	r24
    22bc:	1f 92       	push	r1
    22be:	80 e3       	ldi	r24, 0x30	; 48
    22c0:	8f 93       	push	r24
    22c2:	8c ed       	ldi	r24, 0xDC	; 220
    22c4:	93 e0       	ldi	r25, 0x03	; 3
    22c6:	9f 93       	push	r25
    22c8:	8f 93       	push	r24
    22ca:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    22ce:	cf bf       	out	0x3f, r28	; 63
    22d0:	23 e0       	ldi	r18, 0x03	; 3
    22d2:	31 e0       	ldi	r19, 0x01	; 1
    22d4:	43 e5       	ldi	r20, 0x53	; 83
    22d6:	61 e5       	ldi	r22, 0x51	; 81
    22d8:	8c ed       	ldi	r24, 0xDC	; 220
    22da:	93 e0       	ldi	r25, 0x03	; 3
    22dc:	0e 94 cc 06 	call	0xd98	; 0xd98 <gfx_mono_draw_string>
    22e0:	84 e0       	ldi	r24, 0x04	; 4
    22e2:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3359>
    22e6:	8d b7       	in	r24, 0x3d	; 61
    22e8:	9e b7       	in	r25, 0x3e	; 62
    22ea:	0a 96       	adiw	r24, 0x0a	; 10
    22ec:	0f b6       	in	r0, 0x3f	; 63
    22ee:	f8 94       	cli
    22f0:	9e bf       	out	0x3e, r25	; 62
    22f2:	0f be       	out	0x3f, r0	; 63
    22f4:	8d bf       	out	0x3d, r24	; 61
    22f6:	83 e0       	ldi	r24, 0x03	; 3
    22f8:	bd c1       	rjmp	.+890    	; 0x2674 <lcd_show_new_refosc_data+0x88c>
    22fa:	21 ff       	sbrs	r18, 1
    22fc:	41 c0       	rjmp	.+130    	; 0x2380 <lcd_show_new_refosc_data+0x598>
    22fe:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <idx.3359>
    2302:	35 30       	cpi	r19, 0x05	; 5
    2304:	e8 f5       	brcc	.+122    	; 0x2380 <lcd_show_new_refosc_data+0x598>
    2306:	80 91 32 04 	lds	r24, 0x0432	; 0x800432 <g_showData+0x1>
    230a:	8d 7f       	andi	r24, 0xFD	; 253
    230c:	80 93 32 04 	sts	0x0432, r24	; 0x800432 <g_showData+0x1>
    2310:	80 91 4c 04 	lds	r24, 0x044C	; 0x80044c <g_showData+0x1b>
    2314:	8f 93       	push	r24
    2316:	80 91 4b 04 	lds	r24, 0x044B	; 0x80044b <g_showData+0x1a>
    231a:	8f 93       	push	r24
    231c:	80 91 61 04 	lds	r24, 0x0461	; 0x800461 <g_showData+0x30>
    2320:	1f 92       	push	r1
    2322:	8f 93       	push	r24
    2324:	1f 92       	push	r1
    2326:	8e e7       	ldi	r24, 0x7E	; 126
    2328:	8f 93       	push	r24
    232a:	80 91 60 04 	lds	r24, 0x0460	; 0x800460 <g_showData+0x2f>
    232e:	1f 92       	push	r1
    2330:	8f 93       	push	r24
    2332:	80 91 5f 04 	lds	r24, 0x045F	; 0x80045f <g_showData+0x2e>
    2336:	1f 92       	push	r1
    2338:	8f 93       	push	r24
    233a:	8d ea       	ldi	r24, 0xAD	; 173
    233c:	92 e0       	ldi	r25, 0x02	; 2
    233e:	9f 93       	push	r25
    2340:	8f 93       	push	r24
    2342:	1f 92       	push	r1
    2344:	80 e3       	ldi	r24, 0x30	; 48
    2346:	8f 93       	push	r24
    2348:	8c ed       	ldi	r24, 0xDC	; 220
    234a:	93 e0       	ldi	r25, 0x03	; 3
    234c:	9f 93       	push	r25
    234e:	8f 93       	push	r24
    2350:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    2354:	cf bf       	out	0x3f, r28	; 63
    2356:	23 e0       	ldi	r18, 0x03	; 3
    2358:	31 e0       	ldi	r19, 0x01	; 1
    235a:	4c e5       	ldi	r20, 0x5C	; 92
    235c:	6f e3       	ldi	r22, 0x3F	; 63
    235e:	8c ed       	ldi	r24, 0xDC	; 220
    2360:	93 e0       	ldi	r25, 0x03	; 3
    2362:	0e 94 cc 06 	call	0xd98	; 0xd98 <gfx_mono_draw_string>
    2366:	85 e0       	ldi	r24, 0x05	; 5
    2368:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3359>
    236c:	8d b7       	in	r24, 0x3d	; 61
    236e:	9e b7       	in	r25, 0x3e	; 62
    2370:	40 96       	adiw	r24, 0x10	; 16
    2372:	0f b6       	in	r0, 0x3f	; 63
    2374:	f8 94       	cli
    2376:	9e bf       	out	0x3e, r25	; 62
    2378:	0f be       	out	0x3f, r0	; 63
    237a:	8d bf       	out	0x3d, r24	; 61
    237c:	84 e0       	ldi	r24, 0x04	; 4
    237e:	7a c1       	rjmp	.+756    	; 0x2674 <lcd_show_new_refosc_data+0x88c>
    2380:	22 ff       	sbrs	r18, 2
    2382:	41 c0       	rjmp	.+130    	; 0x2406 <lcd_show_new_refosc_data+0x61e>
    2384:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <idx.3359>
    2388:	36 30       	cpi	r19, 0x06	; 6
    238a:	e8 f5       	brcc	.+122    	; 0x2406 <lcd_show_new_refosc_data+0x61e>
    238c:	80 91 32 04 	lds	r24, 0x0432	; 0x800432 <g_showData+0x1>
    2390:	8b 7f       	andi	r24, 0xFB	; 251
    2392:	80 93 32 04 	sts	0x0432, r24	; 0x800432 <g_showData+0x1>
    2396:	80 91 4e 04 	lds	r24, 0x044E	; 0x80044e <g_showData+0x1d>
    239a:	8f 93       	push	r24
    239c:	80 91 4d 04 	lds	r24, 0x044D	; 0x80044d <g_showData+0x1c>
    23a0:	8f 93       	push	r24
    23a2:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <g_showData+0x33>
    23a6:	1f 92       	push	r1
    23a8:	8f 93       	push	r24
    23aa:	1f 92       	push	r1
    23ac:	8e e7       	ldi	r24, 0x7E	; 126
    23ae:	8f 93       	push	r24
    23b0:	80 91 63 04 	lds	r24, 0x0463	; 0x800463 <g_showData+0x32>
    23b4:	1f 92       	push	r1
    23b6:	8f 93       	push	r24
    23b8:	80 91 62 04 	lds	r24, 0x0462	; 0x800462 <g_showData+0x31>
    23bc:	1f 92       	push	r1
    23be:	8f 93       	push	r24
    23c0:	81 ec       	ldi	r24, 0xC1	; 193
    23c2:	92 e0       	ldi	r25, 0x02	; 2
    23c4:	9f 93       	push	r25
    23c6:	8f 93       	push	r24
    23c8:	1f 92       	push	r1
    23ca:	80 e3       	ldi	r24, 0x30	; 48
    23cc:	8f 93       	push	r24
    23ce:	8c ed       	ldi	r24, 0xDC	; 220
    23d0:	93 e0       	ldi	r25, 0x03	; 3
    23d2:	9f 93       	push	r25
    23d4:	8f 93       	push	r24
    23d6:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    23da:	cf bf       	out	0x3f, r28	; 63
    23dc:	23 e0       	ldi	r18, 0x03	; 3
    23de:	31 e0       	ldi	r19, 0x01	; 1
    23e0:	45 e6       	ldi	r20, 0x65	; 101
    23e2:	6f e3       	ldi	r22, 0x3F	; 63
    23e4:	8c ed       	ldi	r24, 0xDC	; 220
    23e6:	93 e0       	ldi	r25, 0x03	; 3
    23e8:	0e 94 cc 06 	call	0xd98	; 0xd98 <gfx_mono_draw_string>
    23ec:	86 e0       	ldi	r24, 0x06	; 6
    23ee:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3359>
    23f2:	8d b7       	in	r24, 0x3d	; 61
    23f4:	9e b7       	in	r25, 0x3e	; 62
    23f6:	40 96       	adiw	r24, 0x10	; 16
    23f8:	0f b6       	in	r0, 0x3f	; 63
    23fa:	f8 94       	cli
    23fc:	9e bf       	out	0x3e, r25	; 62
    23fe:	0f be       	out	0x3f, r0	; 63
    2400:	8d bf       	out	0x3d, r24	; 61
    2402:	85 e0       	ldi	r24, 0x05	; 5
    2404:	37 c1       	rjmp	.+622    	; 0x2674 <lcd_show_new_refosc_data+0x88c>
    2406:	23 ff       	sbrs	r18, 3
    2408:	36 c0       	rjmp	.+108    	; 0x2476 <lcd_show_new_refosc_data+0x68e>
    240a:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <idx.3359>
    240e:	27 30       	cpi	r18, 0x07	; 7
    2410:	90 f5       	brcc	.+100    	; 0x2476 <lcd_show_new_refosc_data+0x68e>
    2412:	80 91 32 04 	lds	r24, 0x0432	; 0x800432 <g_showData+0x1>
    2416:	87 7f       	andi	r24, 0xF7	; 247
    2418:	80 93 32 04 	sts	0x0432, r24	; 0x800432 <g_showData+0x1>
    241c:	80 91 65 04 	lds	r24, 0x0465	; 0x800465 <g_showData+0x34>
    2420:	1f 92       	push	r1
    2422:	8f 93       	push	r24
    2424:	80 91 50 04 	lds	r24, 0x0450	; 0x800450 <g_showData+0x1f>
    2428:	8f 93       	push	r24
    242a:	80 91 4f 04 	lds	r24, 0x044F	; 0x80044f <g_showData+0x1e>
    242e:	8f 93       	push	r24
    2430:	84 ed       	ldi	r24, 0xD4	; 212
    2432:	92 e0       	ldi	r25, 0x02	; 2
    2434:	9f 93       	push	r25
    2436:	8f 93       	push	r24
    2438:	1f 92       	push	r1
    243a:	80 e3       	ldi	r24, 0x30	; 48
    243c:	8f 93       	push	r24
    243e:	8c ed       	ldi	r24, 0xDC	; 220
    2440:	93 e0       	ldi	r25, 0x03	; 3
    2442:	9f 93       	push	r25
    2444:	8f 93       	push	r24
    2446:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    244a:	cf bf       	out	0x3f, r28	; 63
    244c:	23 e0       	ldi	r18, 0x03	; 3
    244e:	31 e0       	ldi	r19, 0x01	; 1
    2450:	4e e6       	ldi	r20, 0x6E	; 110
    2452:	6f e3       	ldi	r22, 0x3F	; 63
    2454:	8c ed       	ldi	r24, 0xDC	; 220
    2456:	93 e0       	ldi	r25, 0x03	; 3
    2458:	0e 94 cc 06 	call	0xd98	; 0xd98 <gfx_mono_draw_string>
    245c:	87 e0       	ldi	r24, 0x07	; 7
    245e:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3359>
    2462:	8d b7       	in	r24, 0x3d	; 61
    2464:	9e b7       	in	r25, 0x3e	; 62
    2466:	0a 96       	adiw	r24, 0x0a	; 10
    2468:	0f b6       	in	r0, 0x3f	; 63
    246a:	f8 94       	cli
    246c:	9e bf       	out	0x3e, r25	; 62
    246e:	0f be       	out	0x3f, r0	; 63
    2470:	8d bf       	out	0x3d, r24	; 61
    2472:	86 e0       	ldi	r24, 0x06	; 6
    2474:	ff c0       	rjmp	.+510    	; 0x2674 <lcd_show_new_refosc_data+0x88c>
    2476:	93 ff       	sbrs	r25, 3
    2478:	38 c0       	rjmp	.+112    	; 0x24ea <lcd_show_new_refosc_data+0x702>
    247a:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <idx.3359>
    247e:	28 30       	cpi	r18, 0x08	; 8
    2480:	a0 f5       	brcc	.+104    	; 0x24ea <lcd_show_new_refosc_data+0x702>
    2482:	80 91 31 04 	lds	r24, 0x0431	; 0x800431 <g_showData>
    2486:	87 7f       	andi	r24, 0xF7	; 247
    2488:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <g_showData>
    248c:	80 91 46 04 	lds	r24, 0x0446	; 0x800446 <g_showData+0x15>
    2490:	8f 93       	push	r24
    2492:	80 91 45 04 	lds	r24, 0x0445	; 0x800445 <g_showData+0x14>
    2496:	8f 93       	push	r24
    2498:	80 91 44 04 	lds	r24, 0x0444	; 0x800444 <g_showData+0x13>
    249c:	8f 93       	push	r24
    249e:	80 91 43 04 	lds	r24, 0x0443	; 0x800443 <g_showData+0x12>
    24a2:	8f 93       	push	r24
    24a4:	8d ed       	ldi	r24, 0xDD	; 221
    24a6:	92 e0       	ldi	r25, 0x02	; 2
    24a8:	9f 93       	push	r25
    24aa:	8f 93       	push	r24
    24ac:	1f 92       	push	r1
    24ae:	80 e3       	ldi	r24, 0x30	; 48
    24b0:	8f 93       	push	r24
    24b2:	8c ed       	ldi	r24, 0xDC	; 220
    24b4:	93 e0       	ldi	r25, 0x03	; 3
    24b6:	9f 93       	push	r25
    24b8:	8f 93       	push	r24
    24ba:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    24be:	cf bf       	out	0x3f, r28	; 63
    24c0:	23 e0       	ldi	r18, 0x03	; 3
    24c2:	31 e0       	ldi	r19, 0x01	; 1
    24c4:	46 e2       	ldi	r20, 0x26	; 38
    24c6:	6f e3       	ldi	r22, 0x3F	; 63
    24c8:	8c ed       	ldi	r24, 0xDC	; 220
    24ca:	93 e0       	ldi	r25, 0x03	; 3
    24cc:	0e 94 cc 06 	call	0xd98	; 0xd98 <gfx_mono_draw_string>
    24d0:	88 e0       	ldi	r24, 0x08	; 8
    24d2:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3359>
    24d6:	8d b7       	in	r24, 0x3d	; 61
    24d8:	9e b7       	in	r25, 0x3e	; 62
    24da:	0a 96       	adiw	r24, 0x0a	; 10
    24dc:	0f b6       	in	r0, 0x3f	; 63
    24de:	f8 94       	cli
    24e0:	9e bf       	out	0x3e, r25	; 62
    24e2:	0f be       	out	0x3f, r0	; 63
    24e4:	8d bf       	out	0x3d, r24	; 61
    24e6:	87 e0       	ldi	r24, 0x07	; 7
    24e8:	c5 c0       	rjmp	.+394    	; 0x2674 <lcd_show_new_refosc_data+0x88c>
    24ea:	94 ff       	sbrs	r25, 4
    24ec:	87 c0       	rjmp	.+270    	; 0x25fc <lcd_show_new_refosc_data+0x814>
    24ee:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <idx.3359>
    24f2:	29 30       	cpi	r18, 0x09	; 9
    24f4:	08 f0       	brcs	.+2      	; 0x24f8 <lcd_show_new_refosc_data+0x710>
    24f6:	82 c0       	rjmp	.+260    	; 0x25fc <lcd_show_new_refosc_data+0x814>
    24f8:	f0 90 57 04 	lds	r15, 0x0457	; 0x800457 <g_showData+0x26>
    24fc:	60 91 58 04 	lds	r22, 0x0458	; 0x800458 <g_showData+0x27>
    2500:	80 91 31 04 	lds	r24, 0x0431	; 0x800431 <g_showData>
    2504:	8f 7e       	andi	r24, 0xEF	; 239
    2506:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <g_showData>
    250a:	cf bf       	out	0x3f, r28	; 63
    250c:	70 e0       	ldi	r23, 0x00	; 0
    250e:	80 e0       	ldi	r24, 0x00	; 0
    2510:	90 e0       	ldi	r25, 0x00	; 0
    2512:	0e 94 79 1e 	call	0x3cf2	; 0x3cf2 <__floatsisf>
    2516:	2b 01       	movw	r4, r22
    2518:	3c 01       	movw	r6, r24
    251a:	20 e0       	ldi	r18, 0x00	; 0
    251c:	30 e0       	ldi	r19, 0x00	; 0
    251e:	4a e7       	ldi	r20, 0x7A	; 122
    2520:	50 e4       	ldi	r21, 0x40	; 64
    2522:	0e 94 80 1f 	call	0x3f00	; 0x3f00 <__mulsf3>
    2526:	0e 94 46 1e 	call	0x3c8c	; 0x3c8c <__fixsfsi>
    252a:	7f 93       	push	r23
    252c:	6f 93       	push	r22
    252e:	1f 92       	push	r1
    2530:	ff 92       	push	r15
    2532:	07 ee       	ldi	r16, 0xE7	; 231
    2534:	12 e0       	ldi	r17, 0x02	; 2
    2536:	1f 93       	push	r17
    2538:	0f 93       	push	r16
    253a:	1f 92       	push	r1
    253c:	80 e3       	ldi	r24, 0x30	; 48
    253e:	b8 2e       	mov	r11, r24
    2540:	bf 92       	push	r11
    2542:	cc ed       	ldi	r28, 0xDC	; 220
    2544:	d3 e0       	ldi	r29, 0x03	; 3
    2546:	df 93       	push	r29
    2548:	cf 93       	push	r28
    254a:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    254e:	23 e0       	ldi	r18, 0x03	; 3
    2550:	31 e0       	ldi	r19, 0x01	; 1
    2552:	4f e2       	ldi	r20, 0x2F	; 47
    2554:	6f e3       	ldi	r22, 0x3F	; 63
    2556:	ce 01       	movw	r24, r28
    2558:	0e 94 cc 06 	call	0xd98	; 0xd98 <gfx_mono_draw_string>
    255c:	6f 2d       	mov	r22, r15
    255e:	70 e0       	ldi	r23, 0x00	; 0
    2560:	80 e0       	ldi	r24, 0x00	; 0
    2562:	90 e0       	ldi	r25, 0x00	; 0
    2564:	0e 94 77 1e 	call	0x3cee	; 0x3cee <__floatunsisf>
    2568:	6b 01       	movw	r12, r22
    256a:	7c 01       	movw	r14, r24
    256c:	20 e0       	ldi	r18, 0x00	; 0
    256e:	30 e0       	ldi	r19, 0x00	; 0
    2570:	40 e8       	ldi	r20, 0x80	; 128
    2572:	5b e3       	ldi	r21, 0x3B	; 59
    2574:	c3 01       	movw	r24, r6
    2576:	b2 01       	movw	r22, r4
    2578:	0e 94 80 1f 	call	0x3f00	; 0x3f00 <__mulsf3>
    257c:	a7 01       	movw	r20, r14
    257e:	96 01       	movw	r18, r12
    2580:	0e 94 76 1d 	call	0x3aec	; 0x3aec <__addsf3>
    2584:	20 e0       	ldi	r18, 0x00	; 0
    2586:	30 e0       	ldi	r19, 0x00	; 0
    2588:	48 ec       	ldi	r20, 0xC8	; 200
    258a:	5e e3       	ldi	r21, 0x3E	; 62
    258c:	0e 94 80 1f 	call	0x3f00	; 0x3f00 <__mulsf3>
    2590:	6b 01       	movw	r12, r22
    2592:	7c 01       	movw	r14, r24
    2594:	0e 94 b4 1e 	call	0x3d68	; 0x3d68 <floor>
    2598:	9b 01       	movw	r18, r22
    259a:	ac 01       	movw	r20, r24
    259c:	c7 01       	movw	r24, r14
    259e:	b6 01       	movw	r22, r12
    25a0:	0e 94 75 1d 	call	0x3aea	; 0x3aea <__subsf3>
    25a4:	20 e0       	ldi	r18, 0x00	; 0
    25a6:	30 e0       	ldi	r19, 0x00	; 0
    25a8:	4a e7       	ldi	r20, 0x7A	; 122
    25aa:	54 e4       	ldi	r21, 0x44	; 68
    25ac:	0e 94 80 1f 	call	0x3f00	; 0x3f00 <__mulsf3>
    25b0:	0e 94 46 1e 	call	0x3c8c	; 0x3c8c <__fixsfsi>
    25b4:	7f 93       	push	r23
    25b6:	6f 93       	push	r22
    25b8:	c7 01       	movw	r24, r14
    25ba:	b6 01       	movw	r22, r12
    25bc:	0e 94 46 1e 	call	0x3c8c	; 0x3c8c <__fixsfsi>
    25c0:	7f 93       	push	r23
    25c2:	6f 93       	push	r22
    25c4:	1f 93       	push	r17
    25c6:	0f 93       	push	r16
    25c8:	1f 92       	push	r1
    25ca:	bf 92       	push	r11
    25cc:	df 93       	push	r29
    25ce:	cf 93       	push	r28
    25d0:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    25d4:	23 e0       	ldi	r18, 0x03	; 3
    25d6:	31 e0       	ldi	r19, 0x01	; 1
    25d8:	4f e2       	ldi	r20, 0x2F	; 47
    25da:	6d e8       	ldi	r22, 0x8D	; 141
    25dc:	ce 01       	movw	r24, r28
    25de:	0e 94 cc 06 	call	0xd98	; 0xd98 <gfx_mono_draw_string>
    25e2:	89 e0       	ldi	r24, 0x09	; 9
    25e4:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3359>
    25e8:	8d b7       	in	r24, 0x3d	; 61
    25ea:	9e b7       	in	r25, 0x3e	; 62
    25ec:	44 96       	adiw	r24, 0x14	; 20
    25ee:	0f b6       	in	r0, 0x3f	; 63
    25f0:	f8 94       	cli
    25f2:	9e bf       	out	0x3e, r25	; 62
    25f4:	0f be       	out	0x3f, r0	; 63
    25f6:	8d bf       	out	0x3d, r24	; 61
    25f8:	88 e0       	ldi	r24, 0x08	; 8
    25fa:	3c c0       	rjmp	.+120    	; 0x2674 <lcd_show_new_refosc_data+0x88c>
    25fc:	95 ff       	sbrs	r25, 5
    25fe:	36 c0       	rjmp	.+108    	; 0x266c <lcd_show_new_refosc_data+0x884>
    2600:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <idx.3359>
    2604:	9a 30       	cpi	r25, 0x0A	; 10
    2606:	90 f5       	brcc	.+100    	; 0x266c <lcd_show_new_refosc_data+0x884>
    2608:	80 91 31 04 	lds	r24, 0x0431	; 0x800431 <g_showData>
    260c:	8f 7d       	andi	r24, 0xDF	; 223
    260e:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <g_showData>
    2612:	80 91 48 04 	lds	r24, 0x0448	; 0x800448 <g_showData+0x17>
    2616:	8f 93       	push	r24
    2618:	80 91 47 04 	lds	r24, 0x0447	; 0x800447 <g_showData+0x16>
    261c:	8f 93       	push	r24
    261e:	80 91 59 04 	lds	r24, 0x0459	; 0x800459 <g_showData+0x28>
    2622:	1f 92       	push	r1
    2624:	8f 93       	push	r24
    2626:	85 e8       	ldi	r24, 0x85	; 133
    2628:	92 e0       	ldi	r25, 0x02	; 2
    262a:	9f 93       	push	r25
    262c:	8f 93       	push	r24
    262e:	1f 92       	push	r1
    2630:	80 e3       	ldi	r24, 0x30	; 48
    2632:	8f 93       	push	r24
    2634:	8c ed       	ldi	r24, 0xDC	; 220
    2636:	93 e0       	ldi	r25, 0x03	; 3
    2638:	9f 93       	push	r25
    263a:	8f 93       	push	r24
    263c:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    2640:	cf bf       	out	0x3f, r28	; 63
    2642:	23 e0       	ldi	r18, 0x03	; 3
    2644:	31 e0       	ldi	r19, 0x01	; 1
    2646:	48 e3       	ldi	r20, 0x38	; 56
    2648:	6f e3       	ldi	r22, 0x3F	; 63
    264a:	8c ed       	ldi	r24, 0xDC	; 220
    264c:	93 e0       	ldi	r25, 0x03	; 3
    264e:	0e 94 cc 06 	call	0xd98	; 0xd98 <gfx_mono_draw_string>
    2652:	8a e0       	ldi	r24, 0x0A	; 10
    2654:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <idx.3359>
    2658:	8d b7       	in	r24, 0x3d	; 61
    265a:	9e b7       	in	r25, 0x3e	; 62
    265c:	0a 96       	adiw	r24, 0x0a	; 10
    265e:	0f b6       	in	r0, 0x3f	; 63
    2660:	f8 94       	cli
    2662:	9e bf       	out	0x3e, r25	; 62
    2664:	0f be       	out	0x3f, r0	; 63
    2666:	8d bf       	out	0x3d, r24	; 61
    2668:	89 e0       	ldi	r24, 0x09	; 9
    266a:	04 c0       	rjmp	.+8      	; 0x2674 <lcd_show_new_refosc_data+0x88c>
    266c:	91 e0       	ldi	r25, 0x01	; 1
    266e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <idx.3359>
    2672:	cf bf       	out	0x3f, r28	; 63
    2674:	df 91       	pop	r29
    2676:	cf 91       	pop	r28
    2678:	1f 91       	pop	r17
    267a:	0f 91       	pop	r16
    267c:	ff 90       	pop	r15
    267e:	ef 90       	pop	r14
    2680:	df 90       	pop	r13
    2682:	cf 90       	pop	r12
    2684:	bf 90       	pop	r11
    2686:	af 90       	pop	r10
    2688:	9f 90       	pop	r9
    268a:	8f 90       	pop	r8
    268c:	7f 90       	pop	r7
    268e:	6f 90       	pop	r6
    2690:	5f 90       	pop	r5
    2692:	4f 90       	pop	r4
    2694:	3f 90       	pop	r3
    2696:	08 95       	ret

00002698 <lcd_animation_prepare>:
    2698:	ef 92       	push	r14
    269a:	ff 92       	push	r15
    269c:	0f 93       	push	r16
    269e:	1f 93       	push	r17
    26a0:	cf 93       	push	r28
    26a2:	df 93       	push	r29
    26a4:	83 ec       	ldi	r24, 0xC3	; 195
    26a6:	9f ef       	ldi	r25, 0xFF	; 255
    26a8:	90 93 db 03 	sts	0x03DB, r25	; 0x8003db <s_animation_train_origin+0x1>
    26ac:	80 93 da 03 	sts	0x03DA, r24	; 0x8003da <s_animation_train_origin>
    26b0:	81 e0       	ldi	r24, 0x01	; 1
    26b2:	80 93 d9 03 	sts	0x03D9, r24	; 0x8003d9 <s_animation_dx>
    26b6:	20 e0       	ldi	r18, 0x00	; 0
    26b8:	30 e0       	ldi	r19, 0x00	; 0
    26ba:	8b e0       	ldi	r24, 0x0B	; 11
    26bc:	e8 2e       	mov	r14, r24
    26be:	f1 2c       	mov	r15, r1
    26c0:	c0 e4       	ldi	r28, 0x40	; 64
    26c2:	48 ef       	ldi	r20, 0xF8	; 248
    26c4:	d8 ec       	ldi	r29, 0xC8	; 200
    26c6:	18 ed       	ldi	r17, 0xD8	; 216
    26c8:	0f ed       	ldi	r16, 0xDF	; 223
    26ca:	21 15       	cp	r18, r1
    26cc:	31 05       	cpc	r19, r1
    26ce:	19 f4       	brne	.+6      	; 0x26d6 <lcd_animation_prepare+0x3e>
    26d0:	10 92 94 03 	sts	0x0394, r1	; 0x800394 <s_animation_train_left>
    26d4:	43 c0       	rjmp	.+134    	; 0x275c <lcd_animation_prepare+0xc4>
    26d6:	23 30       	cpi	r18, 0x03	; 3
    26d8:	31 05       	cpc	r19, r1
    26da:	5c f4       	brge	.+22     	; 0x26f2 <lcd_animation_prepare+0x5a>
    26dc:	f9 01       	movw	r30, r18
    26de:	ec 56       	subi	r30, 0x6C	; 108
    26e0:	fc 4f       	sbci	r31, 0xFC	; 252
    26e2:	40 83       	st	Z, r20
    26e4:	2f 5f       	subi	r18, 0xFF	; 255
    26e6:	3f 4f       	sbci	r19, 0xFF	; 255
    26e8:	f9 01       	movw	r30, r18
    26ea:	ec 56       	subi	r30, 0x6C	; 108
    26ec:	fc 4f       	sbci	r31, 0xFC	; 252
    26ee:	10 83       	st	Z, r17
    26f0:	35 c0       	rjmp	.+106    	; 0x275c <lcd_animation_prepare+0xc4>
    26f2:	25 30       	cpi	r18, 0x05	; 5
    26f4:	31 05       	cpc	r19, r1
    26f6:	2c f4       	brge	.+10     	; 0x2702 <lcd_animation_prepare+0x6a>
    26f8:	f9 01       	movw	r30, r18
    26fa:	ec 56       	subi	r30, 0x6C	; 108
    26fc:	fc 4f       	sbci	r31, 0xFC	; 252
    26fe:	00 83       	st	Z, r16
    2700:	2d c0       	rjmp	.+90     	; 0x275c <lcd_animation_prepare+0xc4>
    2702:	2b 30       	cpi	r18, 0x0B	; 11
    2704:	31 05       	cpc	r19, r1
    2706:	2c f4       	brge	.+10     	; 0x2712 <lcd_animation_prepare+0x7a>
    2708:	f9 01       	movw	r30, r18
    270a:	ec 56       	subi	r30, 0x6C	; 108
    270c:	fc 4f       	sbci	r31, 0xFC	; 252
    270e:	10 83       	st	Z, r17
    2710:	25 c0       	rjmp	.+74     	; 0x275c <lcd_animation_prepare+0xc4>
    2712:	20 31       	cpi	r18, 0x10	; 16
    2714:	31 05       	cpc	r19, r1
    2716:	e4 f0       	brlt	.+56     	; 0x2750 <lcd_animation_prepare+0xb8>
    2718:	2c 33       	cpi	r18, 0x3C	; 60
    271a:	31 05       	cpc	r19, r1
    271c:	19 f4       	brne	.+6      	; 0x2724 <lcd_animation_prepare+0x8c>
    271e:	10 92 d0 03 	sts	0x03D0, r1	; 0x8003d0 <s_animation_train_left+0x3c>
    2722:	1c c0       	rjmp	.+56     	; 0x275c <lcd_animation_prepare+0xc4>
    2724:	c9 01       	movw	r24, r18
    2726:	40 97       	sbiw	r24, 0x10	; 16
    2728:	b7 01       	movw	r22, r14
    272a:	0e 94 03 20 	call	0x4006	; 0x4006 <__divmodhi4>
    272e:	f9 01       	movw	r30, r18
    2730:	ec 56       	subi	r30, 0x6C	; 108
    2732:	fc 4f       	sbci	r31, 0xFC	; 252
    2734:	89 2b       	or	r24, r25
    2736:	89 f4       	brne	.+34     	; 0x275a <lcd_animation_prepare+0xc2>
    2738:	c0 83       	st	Z, r28
    273a:	c1 83       	std	Z+1, r28	; 0x01
    273c:	c2 83       	std	Z+2, r28	; 0x02
    273e:	43 83       	std	Z+3, r20	; 0x03
    2740:	44 83       	std	Z+4, r20	; 0x04
    2742:	d5 83       	std	Z+5, r29	; 0x05
    2744:	46 83       	std	Z+6, r20	; 0x06
    2746:	47 83       	std	Z+7, r20	; 0x07
    2748:	d0 87       	std	Z+8, r29	; 0x08
    274a:	41 87       	std	Z+9, r20	; 0x09
    274c:	26 5f       	subi	r18, 0xF6	; 246
    274e:	3f 4f       	sbci	r19, 0xFF	; 255
    2750:	f9 01       	movw	r30, r18
    2752:	ec 56       	subi	r30, 0x6C	; 108
    2754:	fc 4f       	sbci	r31, 0xFC	; 252
    2756:	40 83       	st	Z, r20
    2758:	01 c0       	rjmp	.+2      	; 0x275c <lcd_animation_prepare+0xc4>
    275a:	10 82       	st	Z, r1
    275c:	2f 5f       	subi	r18, 0xFF	; 255
    275e:	3f 4f       	sbci	r19, 0xFF	; 255
    2760:	2d 33       	cpi	r18, 0x3D	; 61
    2762:	31 05       	cpc	r19, r1
    2764:	0c f4       	brge	.+2      	; 0x2768 <lcd_animation_prepare+0xd0>
    2766:	b1 cf       	rjmp	.-158    	; 0x26ca <lcd_animation_prepare+0x32>
    2768:	a4 e9       	ldi	r26, 0x94	; 148
    276a:	b3 e0       	ldi	r27, 0x03	; 3
    276c:	e4 e9       	ldi	r30, 0x94	; 148
    276e:	f3 e0       	ldi	r31, 0x03	; 3
    2770:	8d 91       	ld	r24, X+
    2772:	82 93       	st	-Z, r24
    2774:	83 e0       	ldi	r24, 0x03	; 3
    2776:	e7 35       	cpi	r30, 0x57	; 87
    2778:	f8 07       	cpc	r31, r24
    277a:	d1 f7       	brne	.-12     	; 0x2770 <lcd_animation_prepare+0xd8>
    277c:	00 e0       	ldi	r16, 0x00	; 0
    277e:	28 e0       	ldi	r18, 0x08	; 8
    2780:	40 ef       	ldi	r20, 0xF0	; 240
    2782:	68 e7       	ldi	r22, 0x78	; 120
    2784:	80 e0       	ldi	r24, 0x00	; 0
    2786:	0e 94 85 04 	call	0x90a	; 0x90a <gfx_mono_generic_draw_filled_rect>
    278a:	df 91       	pop	r29
    278c:	cf 91       	pop	r28
    278e:	1f 91       	pop	r17
    2790:	0f 91       	pop	r16
    2792:	ff 90       	pop	r15
    2794:	ef 90       	pop	r14
    2796:	08 95       	ret

00002798 <lcd_animation_loop>:
    2798:	2f 92       	push	r2
    279a:	3f 92       	push	r3
    279c:	4f 92       	push	r4
    279e:	5f 92       	push	r5
    27a0:	6f 92       	push	r6
    27a2:	7f 92       	push	r7
    27a4:	8f 92       	push	r8
    27a6:	9f 92       	push	r9
    27a8:	af 92       	push	r10
    27aa:	bf 92       	push	r11
    27ac:	cf 92       	push	r12
    27ae:	df 92       	push	r13
    27b0:	ef 92       	push	r14
    27b2:	ff 92       	push	r15
    27b4:	0f 93       	push	r16
    27b6:	1f 93       	push	r17
    27b8:	cf 93       	push	r28
    27ba:	df 93       	push	r29
    27bc:	52 d8       	rcall	.-3932   	; 0x1862 <cpu_irq_save>
    27be:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <g_status>
    27c2:	91 70       	andi	r25, 0x01	; 1
    27c4:	8f bf       	out	0x3f, r24	; 63
    27c6:	84 e9       	ldi	r24, 0x94	; 148
    27c8:	28 2e       	mov	r2, r24
    27ca:	83 e0       	ldi	r24, 0x03	; 3
    27cc:	38 2e       	mov	r3, r24
    27ce:	2a e0       	ldi	r18, 0x0A	; 10
    27d0:	a2 2e       	mov	r10, r18
    27d2:	b1 2c       	mov	r11, r1
    27d4:	31 e0       	ldi	r19, 0x01	; 1
    27d6:	e3 2e       	mov	r14, r19
    27d8:	33 e0       	ldi	r19, 0x03	; 3
    27da:	f3 2e       	mov	r15, r19
    27dc:	cc ed       	ldi	r28, 0xDC	; 220
    27de:	d3 e0       	ldi	r29, 0x03	; 3
    27e0:	44 e6       	ldi	r20, 0x64	; 100
    27e2:	84 2e       	mov	r8, r20
    27e4:	91 2c       	mov	r9, r1
    27e6:	50 ef       	ldi	r21, 0xF0	; 240
    27e8:	c5 2e       	mov	r12, r21
    27ea:	52 e0       	ldi	r21, 0x02	; 2
    27ec:	d5 2e       	mov	r13, r21
    27ee:	13 e0       	ldi	r17, 0x03	; 3
    27f0:	99 23       	and	r25, r25
    27f2:	09 f4       	brne	.+2      	; 0x27f6 <lcd_animation_loop+0x5e>
    27f4:	91 c1       	rjmp	.+802    	; 0x2b18 <lcd_animation_loop+0x380>
    27f6:	80 91 d9 03 	lds	r24, 0x03D9	; 0x8003d9 <s_animation_dx>
    27fa:	88 23       	and	r24, r24
    27fc:	09 f4       	brne	.+2      	; 0x2800 <lcd_animation_loop+0x68>
    27fe:	8c c1       	rjmp	.+792    	; 0x2b18 <lcd_animation_loop+0x380>
    2800:	fc d6       	rcall	.+3576   	; 0x35fa <get_abs_time>
    2802:	2b 01       	movw	r4, r22
    2804:	3c 01       	movw	r6, r24
    2806:	20 91 d1 03 	lds	r18, 0x03D1	; 0x8003d1 <s_animation_time_last_train>
    280a:	30 91 d2 03 	lds	r19, 0x03D2	; 0x8003d2 <s_animation_time_last_train+0x1>
    280e:	40 91 d3 03 	lds	r20, 0x03D3	; 0x8003d3 <s_animation_time_last_train+0x2>
    2812:	50 91 d4 03 	lds	r21, 0x03D4	; 0x8003d4 <s_animation_time_last_train+0x3>
    2816:	0e 94 75 1d 	call	0x3aea	; 0x3aea <__subsf3>
    281a:	2a e0       	ldi	r18, 0x0A	; 10
    281c:	37 ed       	ldi	r19, 0xD7	; 215
    281e:	43 e2       	ldi	r20, 0x23	; 35
    2820:	5d e3       	ldi	r21, 0x3D	; 61
    2822:	0e 94 7c 1f 	call	0x3ef8	; 0x3ef8 <__gesf2>
    2826:	87 fd       	sbrc	r24, 7
    2828:	60 c0       	rjmp	.+192    	; 0x28ea <lcd_animation_loop+0x152>
    282a:	40 92 d1 03 	sts	0x03D1, r4	; 0x8003d1 <s_animation_time_last_train>
    282e:	50 92 d2 03 	sts	0x03D2, r5	; 0x8003d2 <s_animation_time_last_train+0x1>
    2832:	60 92 d3 03 	sts	0x03D3, r6	; 0x8003d3 <s_animation_time_last_train+0x2>
    2836:	70 92 d4 03 	sts	0x03D4, r7	; 0x8003d4 <s_animation_time_last_train+0x3>
    283a:	20 91 d9 03 	lds	r18, 0x03D9	; 0x8003d9 <s_animation_dx>
    283e:	80 91 da 03 	lds	r24, 0x03DA	; 0x8003da <s_animation_train_origin>
    2842:	90 91 db 03 	lds	r25, 0x03DB	; 0x8003db <s_animation_train_origin+0x1>
    2846:	82 0f       	add	r24, r18
    2848:	91 1d       	adc	r25, r1
    284a:	27 fd       	sbrc	r18, 7
    284c:	9a 95       	dec	r25
    284e:	90 93 db 03 	sts	0x03DB, r25	; 0x8003db <s_animation_train_origin+0x1>
    2852:	80 93 da 03 	sts	0x03DA, r24	; 0x8003da <s_animation_train_origin>
    2856:	8a 3b       	cpi	r24, 0xBA	; 186
    2858:	2f ef       	ldi	r18, 0xFF	; 255
    285a:	92 07       	cpc	r25, r18
    285c:	24 f4       	brge	.+8      	; 0x2866 <lcd_animation_loop+0xce>
    285e:	e1 e0       	ldi	r30, 0x01	; 1
    2860:	e0 93 d9 03 	sts	0x03D9, r30	; 0x8003d9 <s_animation_dx>
    2864:	06 c0       	rjmp	.+12     	; 0x2872 <lcd_animation_loop+0xda>
    2866:	8a 3f       	cpi	r24, 0xFA	; 250
    2868:	91 05       	cpc	r25, r1
    286a:	1c f0       	brlt	.+6      	; 0x2872 <lcd_animation_loop+0xda>
    286c:	ff ef       	ldi	r31, 0xFF	; 255
    286e:	f0 93 d9 03 	sts	0x03D9, r31	; 0x8003d9 <s_animation_dx>
    2872:	20 91 d9 03 	lds	r18, 0x03D9	; 0x8003d9 <s_animation_dx>
    2876:	27 ff       	sbrs	r18, 7
    2878:	1c c0       	rjmp	.+56     	; 0x28b2 <lcd_animation_loop+0x11a>
    287a:	80 3f       	cpi	r24, 0xF0	; 240
    287c:	91 05       	cpc	r25, r1
    287e:	40 f4       	brcc	.+16     	; 0x2890 <lcd_animation_loop+0xf8>
    2880:	2d e3       	ldi	r18, 0x3D	; 61
    2882:	48 2f       	mov	r20, r24
    2884:	6f e0       	ldi	r22, 0x0F	; 15
    2886:	84 e9       	ldi	r24, 0x94	; 148
    2888:	93 e0       	ldi	r25, 0x03	; 3
    288a:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <gfx_mono_lcd_uc1608_put_page>
    288e:	2d c0       	rjmp	.+90     	; 0x28ea <lcd_animation_loop+0x152>
    2890:	9c 01       	movw	r18, r24
    2892:	24 5c       	subi	r18, 0xC4	; 196
    2894:	3f 4f       	sbci	r19, 0xFF	; 255
    2896:	2c 33       	cpi	r18, 0x3C	; 60
    2898:	31 05       	cpc	r19, r1
    289a:	38 f5       	brcc	.+78     	; 0x28ea <lcd_animation_loop+0x152>
    289c:	2d e3       	ldi	r18, 0x3D	; 61
    289e:	28 0f       	add	r18, r24
    28a0:	40 e0       	ldi	r20, 0x00	; 0
    28a2:	6f e0       	ldi	r22, 0x0F	; 15
    28a4:	f1 01       	movw	r30, r2
    28a6:	e8 1b       	sub	r30, r24
    28a8:	f9 0b       	sbc	r31, r25
    28aa:	cf 01       	movw	r24, r30
    28ac:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <gfx_mono_lcd_uc1608_put_page>
    28b0:	1c c0       	rjmp	.+56     	; 0x28ea <lcd_animation_loop+0x152>
    28b2:	80 3f       	cpi	r24, 0xF0	; 240
    28b4:	91 05       	cpc	r25, r1
    28b6:	40 f4       	brcc	.+16     	; 0x28c8 <lcd_animation_loop+0x130>
    28b8:	2d e3       	ldi	r18, 0x3D	; 61
    28ba:	48 2f       	mov	r20, r24
    28bc:	6f e0       	ldi	r22, 0x0F	; 15
    28be:	87 e5       	ldi	r24, 0x57	; 87
    28c0:	93 e0       	ldi	r25, 0x03	; 3
    28c2:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <gfx_mono_lcd_uc1608_put_page>
    28c6:	11 c0       	rjmp	.+34     	; 0x28ea <lcd_animation_loop+0x152>
    28c8:	9c 01       	movw	r18, r24
    28ca:	24 5c       	subi	r18, 0xC4	; 196
    28cc:	3f 4f       	sbci	r19, 0xFF	; 255
    28ce:	2c 33       	cpi	r18, 0x3C	; 60
    28d0:	31 05       	cpc	r19, r1
    28d2:	58 f4       	brcc	.+22     	; 0x28ea <lcd_animation_loop+0x152>
    28d4:	2d e3       	ldi	r18, 0x3D	; 61
    28d6:	28 0f       	add	r18, r24
    28d8:	40 e0       	ldi	r20, 0x00	; 0
    28da:	6f e0       	ldi	r22, 0x0F	; 15
    28dc:	e7 e5       	ldi	r30, 0x57	; 87
    28de:	f3 e0       	ldi	r31, 0x03	; 3
    28e0:	e8 1b       	sub	r30, r24
    28e2:	f9 0b       	sbc	r31, r25
    28e4:	cf 01       	movw	r24, r30
    28e6:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <gfx_mono_lcd_uc1608_put_page>
    28ea:	20 91 d5 03 	lds	r18, 0x03D5	; 0x8003d5 <s_animation_time_last_temp>
    28ee:	30 91 d6 03 	lds	r19, 0x03D6	; 0x8003d6 <s_animation_time_last_temp+0x1>
    28f2:	40 91 d7 03 	lds	r20, 0x03D7	; 0x8003d7 <s_animation_time_last_temp+0x2>
    28f6:	50 91 d8 03 	lds	r21, 0x03D8	; 0x8003d8 <s_animation_time_last_temp+0x3>
    28fa:	c3 01       	movw	r24, r6
    28fc:	b2 01       	movw	r22, r4
    28fe:	0e 94 75 1d 	call	0x3aea	; 0x3aea <__subsf3>
    2902:	20 e0       	ldi	r18, 0x00	; 0
    2904:	30 e0       	ldi	r19, 0x00	; 0
    2906:	40 e0       	ldi	r20, 0x00	; 0
    2908:	5f e3       	ldi	r21, 0x3F	; 63
    290a:	0e 94 7c 1f 	call	0x3ef8	; 0x3ef8 <__gesf2>
    290e:	87 fd       	sbrc	r24, 7
    2910:	c3 c0       	rjmp	.+390    	; 0x2a98 <lcd_animation_loop+0x300>
    2912:	40 92 d5 03 	sts	0x03D5, r4	; 0x8003d5 <s_animation_time_last_temp>
    2916:	50 92 d6 03 	sts	0x03D6, r5	; 0x8003d6 <s_animation_time_last_temp+0x1>
    291a:	60 92 d7 03 	sts	0x03D7, r6	; 0x8003d7 <s_animation_time_last_temp+0x2>
    291e:	70 92 d8 03 	sts	0x03D8, r7	; 0x8003d8 <s_animation_time_last_temp+0x3>
    2922:	d3 d6       	rcall	.+3494   	; 0x36ca <task>
    2924:	0e 94 31 0c 	call	0x1862	; 0x1862 <cpu_irq_save>
    2928:	40 90 6d 04 	lds	r4, 0x046D	; 0x80046d <g_temp>
    292c:	50 90 6e 04 	lds	r5, 0x046E	; 0x80046e <g_temp+0x1>
    2930:	60 90 6f 04 	lds	r6, 0x046F	; 0x80046f <g_temp+0x2>
    2934:	70 90 70 04 	lds	r7, 0x0470	; 0x800470 <g_temp+0x3>
    2938:	8f bf       	out	0x3f, r24	; 63
    293a:	20 e0       	ldi	r18, 0x00	; 0
    293c:	30 e0       	ldi	r19, 0x00	; 0
    293e:	a9 01       	movw	r20, r18
    2940:	c3 01       	movw	r24, r6
    2942:	b2 01       	movw	r22, r4
    2944:	0e 94 da 1d 	call	0x3bb4	; 0x3bb4 <__cmpsf2>
    2948:	87 ff       	sbrs	r24, 7
    294a:	03 c0       	rjmp	.+6      	; 0x2952 <lcd_animation_loop+0x1ba>
    294c:	41 2c       	mov	r4, r1
    294e:	51 2c       	mov	r5, r1
    2950:	32 01       	movw	r6, r4
    2952:	20 91 52 03 	lds	r18, 0x0352	; 0x800352 <t_last.3380>
    2956:	30 91 53 03 	lds	r19, 0x0353	; 0x800353 <t_last.3380+0x1>
    295a:	40 91 54 03 	lds	r20, 0x0354	; 0x800354 <t_last.3380+0x2>
    295e:	50 91 55 03 	lds	r21, 0x0355	; 0x800355 <t_last.3380+0x3>
    2962:	c3 01       	movw	r24, r6
    2964:	b2 01       	movw	r22, r4
    2966:	0e 94 75 1d 	call	0x3aea	; 0x3aea <__subsf3>
    296a:	9f 77       	andi	r25, 0x7F	; 127
    296c:	2a e0       	ldi	r18, 0x0A	; 10
    296e:	37 ed       	ldi	r19, 0xD7	; 215
    2970:	43 e2       	ldi	r20, 0x23	; 35
    2972:	5c e3       	ldi	r21, 0x3C	; 60
    2974:	0e 94 da 1d 	call	0x3bb4	; 0x3bb4 <__cmpsf2>
    2978:	87 fd       	sbrc	r24, 7
    297a:	37 c0       	rjmp	.+110    	; 0x29ea <lcd_animation_loop+0x252>
    297c:	40 92 52 03 	sts	0x0352, r4	; 0x800352 <t_last.3380>
    2980:	50 92 53 03 	sts	0x0353, r5	; 0x800353 <t_last.3380+0x1>
    2984:	60 92 54 03 	sts	0x0354, r6	; 0x800354 <t_last.3380+0x2>
    2988:	70 92 55 03 	sts	0x0355, r7	; 0x800355 <t_last.3380+0x3>
    298c:	20 e0       	ldi	r18, 0x00	; 0
    298e:	30 e0       	ldi	r19, 0x00	; 0
    2990:	48 ec       	ldi	r20, 0xC8	; 200
    2992:	52 e4       	ldi	r21, 0x42	; 66
    2994:	c3 01       	movw	r24, r6
    2996:	b2 01       	movw	r22, r4
    2998:	0e 94 80 1f 	call	0x3f00	; 0x3f00 <__mulsf3>
    299c:	0e 94 46 1e 	call	0x3c8c	; 0x3c8c <__fixsfsi>
    29a0:	cb 01       	movw	r24, r22
    29a2:	b4 01       	movw	r22, r8
    29a4:	0e 94 03 20 	call	0x4006	; 0x4006 <__divmodhi4>
    29a8:	9f 93       	push	r25
    29aa:	8f 93       	push	r24
    29ac:	c3 01       	movw	r24, r6
    29ae:	b2 01       	movw	r22, r4
    29b0:	0e 94 46 1e 	call	0x3c8c	; 0x3c8c <__fixsfsi>
    29b4:	7f 93       	push	r23
    29b6:	6f 93       	push	r22
    29b8:	df 92       	push	r13
    29ba:	cf 92       	push	r12
    29bc:	1f 92       	push	r1
    29be:	f0 e3       	ldi	r31, 0x30	; 48
    29c0:	ff 93       	push	r31
    29c2:	df 93       	push	r29
    29c4:	cf 93       	push	r28
    29c6:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    29ca:	23 e0       	ldi	r18, 0x03	; 3
    29cc:	31 e0       	ldi	r19, 0x01	; 1
    29ce:	49 e6       	ldi	r20, 0x69	; 105
    29d0:	60 ea       	ldi	r22, 0xA0	; 160
    29d2:	8c ed       	ldi	r24, 0xDC	; 220
    29d4:	93 e0       	ldi	r25, 0x03	; 3
    29d6:	0e 94 cc 06 	call	0xd98	; 0xd98 <gfx_mono_draw_string>
    29da:	ed b7       	in	r30, 0x3d	; 61
    29dc:	fe b7       	in	r31, 0x3e	; 62
    29de:	3a 96       	adiw	r30, 0x0a	; 10
    29e0:	0f b6       	in	r0, 0x3f	; 63
    29e2:	f8 94       	cli
    29e4:	fe bf       	out	0x3e, r31	; 62
    29e6:	0f be       	out	0x3f, r0	; 63
    29e8:	ed bf       	out	0x3d, r30	; 61
    29ea:	0e 94 31 0c 	call	0x1862	; 0x1862 <cpu_irq_save>
    29ee:	40 90 75 04 	lds	r4, 0x0475	; 0x800475 <g_adc_light>
    29f2:	50 90 76 04 	lds	r5, 0x0476	; 0x800476 <g_adc_light+0x1>
    29f6:	60 90 77 04 	lds	r6, 0x0477	; 0x800477 <g_adc_light+0x2>
    29fa:	70 90 78 04 	lds	r7, 0x0478	; 0x800478 <g_adc_light+0x3>
    29fe:	8f bf       	out	0x3f, r24	; 63
    2a00:	20 91 4e 03 	lds	r18, 0x034E	; 0x80034e <l_last.3386>
    2a04:	30 91 4f 03 	lds	r19, 0x034F	; 0x80034f <l_last.3386+0x1>
    2a08:	40 91 50 03 	lds	r20, 0x0350	; 0x800350 <l_last.3386+0x2>
    2a0c:	50 91 51 03 	lds	r21, 0x0351	; 0x800351 <l_last.3386+0x3>
    2a10:	c3 01       	movw	r24, r6
    2a12:	b2 01       	movw	r22, r4
    2a14:	0e 94 75 1d 	call	0x3aea	; 0x3aea <__subsf3>
    2a18:	9f 77       	andi	r25, 0x7F	; 127
    2a1a:	2d ec       	ldi	r18, 0xCD	; 205
    2a1c:	3c ec       	ldi	r19, 0xCC	; 204
    2a1e:	4c ec       	ldi	r20, 0xCC	; 204
    2a20:	5d e3       	ldi	r21, 0x3D	; 61
    2a22:	0e 94 da 1d 	call	0x3bb4	; 0x3bb4 <__cmpsf2>
    2a26:	87 fd       	sbrc	r24, 7
    2a28:	37 c0       	rjmp	.+110    	; 0x2a98 <lcd_animation_loop+0x300>
    2a2a:	40 92 4e 03 	sts	0x034E, r4	; 0x80034e <l_last.3386>
    2a2e:	50 92 4f 03 	sts	0x034F, r5	; 0x80034f <l_last.3386+0x1>
    2a32:	60 92 50 03 	sts	0x0350, r6	; 0x800350 <l_last.3386+0x2>
    2a36:	70 92 51 03 	sts	0x0351, r7	; 0x800351 <l_last.3386+0x3>
    2a3a:	20 e0       	ldi	r18, 0x00	; 0
    2a3c:	30 e0       	ldi	r19, 0x00	; 0
    2a3e:	40 e2       	ldi	r20, 0x20	; 32
    2a40:	51 e4       	ldi	r21, 0x41	; 65
    2a42:	c3 01       	movw	r24, r6
    2a44:	b2 01       	movw	r22, r4
    2a46:	0e 94 80 1f 	call	0x3f00	; 0x3f00 <__mulsf3>
    2a4a:	0e 94 46 1e 	call	0x3c8c	; 0x3c8c <__fixsfsi>
    2a4e:	cb 01       	movw	r24, r22
    2a50:	b5 01       	movw	r22, r10
    2a52:	0e 94 03 20 	call	0x4006	; 0x4006 <__divmodhi4>
    2a56:	9f 93       	push	r25
    2a58:	8f 93       	push	r24
    2a5a:	c3 01       	movw	r24, r6
    2a5c:	b2 01       	movw	r22, r4
    2a5e:	0e 94 46 1e 	call	0x3c8c	; 0x3c8c <__fixsfsi>
    2a62:	7f 93       	push	r23
    2a64:	6f 93       	push	r22
    2a66:	ff 92       	push	r15
    2a68:	ef 92       	push	r14
    2a6a:	1f 92       	push	r1
    2a6c:	f0 e3       	ldi	r31, 0x30	; 48
    2a6e:	ff 93       	push	r31
    2a70:	df 93       	push	r29
    2a72:	cf 93       	push	r28
    2a74:	0e 94 23 20 	call	0x4046	; 0x4046 <snprintf>
    2a78:	23 e0       	ldi	r18, 0x03	; 3
    2a7a:	31 e0       	ldi	r19, 0x01	; 1
    2a7c:	4f e5       	ldi	r20, 0x5F	; 95
    2a7e:	60 ea       	ldi	r22, 0xA0	; 160
    2a80:	8c ed       	ldi	r24, 0xDC	; 220
    2a82:	93 e0       	ldi	r25, 0x03	; 3
    2a84:	0e 94 cc 06 	call	0xd98	; 0xd98 <gfx_mono_draw_string>
    2a88:	ed b7       	in	r30, 0x3d	; 61
    2a8a:	fe b7       	in	r31, 0x3e	; 62
    2a8c:	3a 96       	adiw	r30, 0x0a	; 10
    2a8e:	0f b6       	in	r0, 0x3f	; 63
    2a90:	f8 94       	cli
    2a92:	fe bf       	out	0x3e, r31	; 62
    2a94:	0f be       	out	0x3f, r0	; 63
    2a96:	ed bf       	out	0x3d, r30	; 61
    2a98:	20 91 4c 03 	lds	r18, 0x034C	; 0x80034c <loop.3371>
    2a9c:	30 91 4d 03 	lds	r19, 0x034D	; 0x80034d <loop.3371+0x1>
    2aa0:	f9 01       	movw	r30, r18
    2aa2:	31 96       	adiw	r30, 0x01	; 1
    2aa4:	f0 93 4d 03 	sts	0x034D, r31	; 0x80034d <loop.3371+0x1>
    2aa8:	e0 93 4c 03 	sts	0x034C, r30	; 0x80034c <loop.3371>
    2aac:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    2ab0:	22 31       	cpi	r18, 0x12	; 18
    2ab2:	31 05       	cpc	r19, r1
    2ab4:	6c f4       	brge	.+26     	; 0x2ad0 <lcd_animation_loop+0x338>
    2ab6:	61 2f       	mov	r22, r17
    2ab8:	0e 94 e3 1f 	call	0x3fc6	; 0x3fc6 <__udivmodqi4>
    2abc:	2b e1       	ldi	r18, 0x1B	; 27
    2abe:	2e 1b       	sub	r18, r30
    2ac0:	6a e0       	ldi	r22, 0x0A	; 10
    2ac2:	6e 0f       	add	r22, r30
    2ac4:	09 2f       	mov	r16, r25
    2ac6:	4f ee       	ldi	r20, 0xEF	; 239
    2ac8:	80 e0       	ldi	r24, 0x00	; 0
    2aca:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <gfx_mono_generic_draw_line>
    2ace:	1d c0       	rjmp	.+58     	; 0x2b0a <lcd_animation_loop+0x372>
    2ad0:	e2 30       	cpi	r30, 0x02	; 2
    2ad2:	21 e0       	ldi	r18, 0x01	; 1
    2ad4:	f2 07       	cpc	r31, r18
    2ad6:	6c f4       	brge	.+26     	; 0x2af2 <lcd_animation_loop+0x35a>
    2ad8:	61 2f       	mov	r22, r17
    2ada:	0e 94 e3 1f 	call	0x3fc6	; 0x3fc6 <__udivmodqi4>
    2ade:	41 e0       	ldi	r20, 0x01	; 1
    2ae0:	4e 1b       	sub	r20, r30
    2ae2:	09 2f       	mov	r16, r25
    2ae4:	2a e0       	ldi	r18, 0x0A	; 10
    2ae6:	6b e1       	ldi	r22, 0x1B	; 27
    2ae8:	8e ee       	ldi	r24, 0xEE	; 238
    2aea:	8e 0f       	add	r24, r30
    2aec:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <gfx_mono_generic_draw_line>
    2af0:	0c c0       	rjmp	.+24     	; 0x2b0a <lcd_animation_loop+0x372>
    2af2:	10 92 4d 03 	sts	0x034D, r1	; 0x80034d <loop.3371+0x1>
    2af6:	10 92 4c 03 	sts	0x034C, r1	; 0x80034c <loop.3371>
    2afa:	8f 5f       	subi	r24, 0xFF	; 255
    2afc:	83 30       	cpi	r24, 0x03	; 3
    2afe:	18 f4       	brcc	.+6      	; 0x2b06 <lcd_animation_loop+0x36e>
    2b00:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    2b04:	02 c0       	rjmp	.+4      	; 0x2b0a <lcd_animation_loop+0x372>
    2b06:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
    2b0a:	0e 94 31 0c 	call	0x1862	; 0x1862 <cpu_irq_save>
    2b0e:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <g_status>
    2b12:	91 70       	andi	r25, 0x01	; 1
    2b14:	8f bf       	out	0x3f, r24	; 63
    2b16:	6c ce       	rjmp	.-808    	; 0x27f0 <lcd_animation_loop+0x58>
    2b18:	0e 94 31 0c 	call	0x1862	; 0x1862 <cpu_irq_save>
    2b1c:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <g_status>
    2b20:	9e 7f       	andi	r25, 0xFE	; 254
    2b22:	90 93 66 04 	sts	0x0466, r25	; 0x800466 <g_status>
    2b26:	8f bf       	out	0x3f, r24	; 63
    2b28:	df 91       	pop	r29
    2b2a:	cf 91       	pop	r28
    2b2c:	1f 91       	pop	r17
    2b2e:	0f 91       	pop	r16
    2b30:	ff 90       	pop	r15
    2b32:	ef 90       	pop	r14
    2b34:	df 90       	pop	r13
    2b36:	cf 90       	pop	r12
    2b38:	bf 90       	pop	r11
    2b3a:	af 90       	pop	r10
    2b3c:	9f 90       	pop	r9
    2b3e:	8f 90       	pop	r8
    2b40:	7f 90       	pop	r7
    2b42:	6f 90       	pop	r6
    2b44:	5f 90       	pop	r5
    2b46:	4f 90       	pop	r4
    2b48:	3f 90       	pop	r3
    2b4a:	2f 90       	pop	r2
    2b4c:	08 95       	ret

00002b4e <lcd_test>:
    2b4e:	ef 92       	push	r14
    2b50:	ff 92       	push	r15
    2b52:	0f 93       	push	r16
    2b54:	1f 93       	push	r17
    2b56:	cf 93       	push	r28
    2b58:	c8 2f       	mov	r28, r24
    2b5a:	0e 94 31 0c 	call	0x1862	; 0x1862 <cpu_irq_save>
    2b5e:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <g_status>
    2b62:	9e 7f       	andi	r25, 0xFE	; 254
    2b64:	9d 7f       	andi	r25, 0xFD	; 253
    2b66:	90 93 66 04 	sts	0x0466, r25	; 0x800466 <g_status>
    2b6a:	8f bf       	out	0x3f, r24	; 63
    2b6c:	c0 fd       	sbrc	r28, 0
    2b6e:	03 c0       	rjmp	.+6      	; 0x2b76 <lcd_test+0x28>
    2b70:	c1 ff       	sbrs	r28, 1
    2b72:	2a c0       	rjmp	.+84     	; 0x2bc8 <lcd_test+0x7a>
    2b74:	08 c0       	rjmp	.+16     	; 0x2b86 <lcd_test+0x38>
    2b76:	10 e0       	ldi	r17, 0x00	; 0
    2b78:	81 2f       	mov	r24, r17
    2b7a:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <lcd_bus_write_ram>
    2b7e:	1f 5f       	subi	r17, 0xFF	; 255
    2b80:	10 3f       	cpi	r17, 0xF0	; 240
    2b82:	d1 f7       	brne	.-12     	; 0x2b78 <lcd_test+0x2a>
    2b84:	f5 cf       	rjmp	.-22     	; 0x2b70 <lcd_test+0x22>
    2b86:	82 eb       	ldi	r24, 0xB2	; 178
    2b88:	0e 94 55 0c 	call	0x18aa	; 0x18aa <lcd_bus_write_cmd>
    2b8c:	81 e0       	ldi	r24, 0x01	; 1
    2b8e:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <s_lcd_ram_read_nonvalid>
    2b92:	0e 94 c5 0c 	call	0x198a	; 0x198a <lcd_cr>
    2b96:	00 e0       	ldi	r16, 0x00	; 0
    2b98:	10 e0       	ldi	r17, 0x00	; 0
    2b9a:	87 e0       	ldi	r24, 0x07	; 7
    2b9c:	e8 2e       	mov	r14, r24
    2b9e:	f1 2c       	mov	r15, r1
    2ba0:	c8 01       	movw	r24, r16
    2ba2:	b7 01       	movw	r22, r14
    2ba4:	0e 94 03 20 	call	0x4006	; 0x4006 <__divmodhi4>
    2ba8:	89 2b       	or	r24, r25
    2baa:	19 f4       	brne	.+6      	; 0x2bb2 <lcd_test+0x64>
    2bac:	80 e0       	ldi	r24, 0x00	; 0
    2bae:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <lcd_bus_write_ram>
    2bb2:	f8 01       	movw	r30, r16
    2bb4:	ec 5f       	subi	r30, 0xFC	; 252
    2bb6:	fb 4f       	sbci	r31, 0xFB	; 251
    2bb8:	84 91       	lpm	r24, Z
    2bba:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <lcd_bus_write_ram>
    2bbe:	0f 5f       	subi	r16, 0xFF	; 255
    2bc0:	1f 4f       	sbci	r17, 0xFF	; 255
    2bc2:	00 3f       	cpi	r16, 0xF0	; 240
    2bc4:	11 05       	cpc	r17, r1
    2bc6:	61 f7       	brne	.-40     	; 0x2ba0 <lcd_test+0x52>
    2bc8:	c2 ff       	sbrs	r28, 2
    2bca:	2d c0       	rjmp	.+90     	; 0x2c26 <lcd_test+0xd8>
    2bcc:	41 e0       	ldi	r20, 0x01	; 1
    2bce:	68 e2       	ldi	r22, 0x28	; 40
    2bd0:	84 e0       	ldi	r24, 0x04	; 4
    2bd2:	0e 94 57 06 	call	0xcae	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
    2bd6:	41 e0       	ldi	r20, 0x01	; 1
    2bd8:	69 e2       	ldi	r22, 0x29	; 41
    2bda:	85 e0       	ldi	r24, 0x05	; 5
    2bdc:	0e 94 57 06 	call	0xcae	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
    2be0:	41 e0       	ldi	r20, 0x01	; 1
    2be2:	6a e2       	ldi	r22, 0x2A	; 42
    2be4:	86 e0       	ldi	r24, 0x06	; 6
    2be6:	0e 94 57 06 	call	0xcae	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
    2bea:	41 e0       	ldi	r20, 0x01	; 1
    2bec:	6b e2       	ldi	r22, 0x2B	; 43
    2bee:	87 e0       	ldi	r24, 0x07	; 7
    2bf0:	0e 94 57 06 	call	0xcae	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
    2bf4:	41 e0       	ldi	r20, 0x01	; 1
    2bf6:	6c e2       	ldi	r22, 0x2C	; 44
    2bf8:	86 e0       	ldi	r24, 0x06	; 6
    2bfa:	0e 94 57 06 	call	0xcae	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
    2bfe:	41 e0       	ldi	r20, 0x01	; 1
    2c00:	6d e2       	ldi	r22, 0x2D	; 45
    2c02:	85 e0       	ldi	r24, 0x05	; 5
    2c04:	0e 94 57 06 	call	0xcae	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
    2c08:	41 e0       	ldi	r20, 0x01	; 1
    2c0a:	6e e2       	ldi	r22, 0x2E	; 46
    2c0c:	86 e0       	ldi	r24, 0x06	; 6
    2c0e:	0e 94 57 06 	call	0xcae	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
    2c12:	41 e0       	ldi	r20, 0x01	; 1
    2c14:	6f e2       	ldi	r22, 0x2F	; 47
    2c16:	87 e0       	ldi	r24, 0x07	; 7
    2c18:	0e 94 57 06 	call	0xcae	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
    2c1c:	41 e0       	ldi	r20, 0x01	; 1
    2c1e:	60 e3       	ldi	r22, 0x30	; 48
    2c20:	88 e0       	ldi	r24, 0x08	; 8
    2c22:	0e 94 57 06 	call	0xcae	; 0xcae <gfx_mono_lcd_uc1608_draw_pixel>
    2c26:	c3 ff       	sbrs	r28, 3
    2c28:	07 c0       	rjmp	.+14     	; 0x2c38 <lcd_test+0xea>
    2c2a:	01 e0       	ldi	r16, 0x01	; 1
    2c2c:	2f e1       	ldi	r18, 0x1F	; 31
    2c2e:	4f ee       	ldi	r20, 0xEF	; 239
    2c30:	60 e1       	ldi	r22, 0x10	; 16
    2c32:	80 e0       	ldi	r24, 0x00	; 0
    2c34:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <gfx_mono_generic_draw_line>
    2c38:	c4 ff       	sbrs	r28, 4
    2c3a:	0d c0       	rjmp	.+26     	; 0x2c56 <lcd_test+0x108>
    2c3c:	01 e0       	ldi	r16, 0x01	; 1
    2c3e:	28 e2       	ldi	r18, 0x28	; 40
    2c40:	48 e2       	ldi	r20, 0x28	; 40
    2c42:	60 e3       	ldi	r22, 0x30	; 48
    2c44:	86 e4       	ldi	r24, 0x46	; 70
    2c46:	0e 94 62 04 	call	0x8c4	; 0x8c4 <gfx_mono_generic_draw_rect>
    2c4a:	28 e2       	ldi	r18, 0x28	; 40
    2c4c:	48 e2       	ldi	r20, 0x28	; 40
    2c4e:	60 e3       	ldi	r22, 0x30	; 48
    2c50:	8a ea       	ldi	r24, 0xAA	; 170
    2c52:	0e 94 85 04 	call	0x90a	; 0x90a <gfx_mono_generic_draw_filled_rect>
    2c56:	c5 ff       	sbrs	r28, 5
    2c58:	0d c0       	rjmp	.+26     	; 0x2c74 <lcd_test+0x126>
    2c5a:	0f ef       	ldi	r16, 0xFF	; 255
    2c5c:	21 e0       	ldi	r18, 0x01	; 1
    2c5e:	4a e0       	ldi	r20, 0x0A	; 10
    2c60:	60 e5       	ldi	r22, 0x50	; 80
    2c62:	8a e0       	ldi	r24, 0x0A	; 10
    2c64:	0e 94 9f 04 	call	0x93e	; 0x93e <gfx_mono_generic_draw_circle>
    2c68:	21 e0       	ldi	r18, 0x01	; 1
    2c6a:	4a e0       	ldi	r20, 0x0A	; 10
    2c6c:	60 e5       	ldi	r22, 0x50	; 80
    2c6e:	88 e2       	ldi	r24, 0x28	; 40
    2c70:	0e 94 4d 05 	call	0xa9a	; 0xa9a <gfx_mono_generic_draw_filled_circle>
    2c74:	c6 ff       	sbrs	r28, 6
    2c76:	08 c0       	rjmp	.+16     	; 0x2c88 <lcd_test+0x13a>
    2c78:	23 e0       	ldi	r18, 0x03	; 3
    2c7a:	31 e0       	ldi	r19, 0x01	; 1
    2c7c:	40 e2       	ldi	r20, 0x20	; 32
    2c7e:	66 e4       	ldi	r22, 0x46	; 70
    2c80:	8f e0       	ldi	r24, 0x0F	; 15
    2c82:	93 e0       	ldi	r25, 0x03	; 3
    2c84:	0e 94 cc 06 	call	0xd98	; 0xd98 <gfx_mono_draw_string>
    2c88:	c7 ff       	sbrs	r28, 7
    2c8a:	0f c0       	rjmp	.+30     	; 0x2caa <lcd_test+0x15c>
    2c8c:	05 dd       	rcall	.-1526   	; 0x2698 <lcd_animation_prepare>
    2c8e:	0e 94 31 0c 	call	0x1862	; 0x1862 <cpu_irq_save>
    2c92:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <g_status>
    2c96:	91 60       	ori	r25, 0x01	; 1
    2c98:	90 93 66 04 	sts	0x0466, r25	; 0x800466 <g_status>
    2c9c:	8f bf       	out	0x3f, r24	; 63
    2c9e:	cf 91       	pop	r28
    2ca0:	1f 91       	pop	r17
    2ca2:	0f 91       	pop	r16
    2ca4:	ff 90       	pop	r15
    2ca6:	ef 90       	pop	r14
    2ca8:	77 cd       	rjmp	.-1298   	; 0x2798 <lcd_animation_loop>
    2caa:	cf 91       	pop	r28
    2cac:	1f 91       	pop	r17
    2cae:	0f 91       	pop	r16
    2cb0:	ff 90       	pop	r15
    2cb2:	ef 90       	pop	r14
    2cb4:	08 95       	ret

00002cb6 <isr_smartlcd_cmd>:
    2cb6:	80 93 33 04 	sts	0x0433, r24	; 0x800433 <g_showData+0x2>
    2cba:	08 95       	ret

00002cbc <isr_smartlcd_cmd_data1>:
    2cbc:	e1 e3       	ldi	r30, 0x31	; 49
    2cbe:	f4 e0       	ldi	r31, 0x04	; 4
    2cc0:	82 83       	std	Z+2, r24	; 0x02
    2cc2:	63 83       	std	Z+3, r22	; 0x03
    2cc4:	08 95       	ret

00002cc6 <isr_smartlcd_cmd_data2>:
    2cc6:	e1 e3       	ldi	r30, 0x31	; 49
    2cc8:	f4 e0       	ldi	r31, 0x04	; 4
    2cca:	82 83       	std	Z+2, r24	; 0x02
    2ccc:	63 83       	std	Z+3, r22	; 0x03
    2cce:	44 83       	std	Z+4, r20	; 0x04
    2cd0:	08 95       	ret

00002cd2 <isr_smartlcd_cmd_data3>:
    2cd2:	e1 e3       	ldi	r30, 0x31	; 49
    2cd4:	f4 e0       	ldi	r31, 0x04	; 4
    2cd6:	82 83       	std	Z+2, r24	; 0x02
    2cd8:	63 83       	std	Z+3, r22	; 0x03
    2cda:	44 83       	std	Z+4, r20	; 0x04
    2cdc:	25 83       	std	Z+5, r18	; 0x05
    2cde:	08 95       	ret

00002ce0 <isr_smartlcd_cmd_data4>:
    2ce0:	0f 93       	push	r16
    2ce2:	e1 e3       	ldi	r30, 0x31	; 49
    2ce4:	f4 e0       	ldi	r31, 0x04	; 4
    2ce6:	82 83       	std	Z+2, r24	; 0x02
    2ce8:	63 83       	std	Z+3, r22	; 0x03
    2cea:	44 83       	std	Z+4, r20	; 0x04
    2cec:	25 83       	std	Z+5, r18	; 0x05
    2cee:	06 83       	std	Z+6, r16	; 0x06
    2cf0:	0f 91       	pop	r16
    2cf2:	08 95       	ret

00002cf4 <isr_smartlcd_cmd_data5>:
    2cf4:	ef 92       	push	r14
    2cf6:	0f 93       	push	r16
    2cf8:	e1 e3       	ldi	r30, 0x31	; 49
    2cfa:	f4 e0       	ldi	r31, 0x04	; 4
    2cfc:	82 83       	std	Z+2, r24	; 0x02
    2cfe:	63 83       	std	Z+3, r22	; 0x03
    2d00:	44 83       	std	Z+4, r20	; 0x04
    2d02:	25 83       	std	Z+5, r18	; 0x05
    2d04:	06 83       	std	Z+6, r16	; 0x06
    2d06:	e7 82       	std	Z+7, r14	; 0x07
    2d08:	0f 91       	pop	r16
    2d0a:	ef 90       	pop	r14
    2d0c:	08 95       	ret

00002d0e <isr_smartlcd_cmd_data6>:
    2d0e:	cf 92       	push	r12
    2d10:	ef 92       	push	r14
    2d12:	0f 93       	push	r16
    2d14:	e1 e3       	ldi	r30, 0x31	; 49
    2d16:	f4 e0       	ldi	r31, 0x04	; 4
    2d18:	82 83       	std	Z+2, r24	; 0x02
    2d1a:	63 83       	std	Z+3, r22	; 0x03
    2d1c:	44 83       	std	Z+4, r20	; 0x04
    2d1e:	25 83       	std	Z+5, r18	; 0x05
    2d20:	06 83       	std	Z+6, r16	; 0x06
    2d22:	e7 82       	std	Z+7, r14	; 0x07
    2d24:	c0 86       	std	Z+8, r12	; 0x08
    2d26:	0f 91       	pop	r16
    2d28:	ef 90       	pop	r14
    2d2a:	cf 90       	pop	r12
    2d2c:	08 95       	ret

00002d2e <isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100>:


void isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100(uint8_t clk_state, uint16_t phaseVolt1000, int16_t phaseDeg100)
{
	// interrupt is already disabled, here
	if ((g_showData.clkState_clk_state     != clk_state    )  ||
    2d2e:	90 91 51 04 	lds	r25, 0x0451	; 0x800451 <g_showData+0x20>
    2d32:	98 13       	cpse	r25, r24
    2d34:	0e c0       	rjmp	.+28     	; 0x2d52 <isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100+0x24>
    2d36:	20 91 3d 04 	lds	r18, 0x043D	; 0x80043d <g_showData+0xc>
    2d3a:	30 91 3e 04 	lds	r19, 0x043E	; 0x80043e <g_showData+0xd>
    2d3e:	26 17       	cp	r18, r22
    2d40:	37 07       	cpc	r19, r23
    2d42:	39 f4       	brne	.+14     	; 0x2d52 <isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100+0x24>
		(g_showData.clkState_phaseVolt1000 != phaseVolt1000)  ||
    2d44:	20 91 3f 04 	lds	r18, 0x043F	; 0x80043f <g_showData+0xe>
    2d48:	30 91 40 04 	lds	r19, 0x0440	; 0x800440 <g_showData+0xf>
    2d4c:	24 17       	cp	r18, r20
    2d4e:	35 07       	cpc	r19, r21
    2d50:	79 f0       	breq	.+30     	; 0x2d70 <isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100+0x42>
		(g_showData.clkState_phaseDeg100   != phaseDeg100  )) {
		g_showData.newClkState            = true;
    2d52:	90 91 31 04 	lds	r25, 0x0431	; 0x800431 <g_showData>
    2d56:	91 60       	ori	r25, 0x01	; 1
    2d58:	90 93 31 04 	sts	0x0431, r25	; 0x800431 <g_showData>
		g_showData.clkState_clk_state     = clk_state;
    2d5c:	80 93 51 04 	sts	0x0451, r24	; 0x800451 <g_showData+0x20>
		g_showData.clkState_phaseVolt1000 = phaseVolt1000;
    2d60:	70 93 3e 04 	sts	0x043E, r23	; 0x80043e <g_showData+0xd>
    2d64:	60 93 3d 04 	sts	0x043D, r22	; 0x80043d <g_showData+0xc>
		g_showData.clkState_phaseDeg100   = phaseDeg100;
    2d68:	50 93 40 04 	sts	0x0440, r21	; 0x800440 <g_showData+0xf>
    2d6c:	40 93 3f 04 	sts	0x043F, r20	; 0x80043f <g_showData+0xe>
    2d70:	08 95       	ret

00002d72 <isr_lcd_10mhz_ref_osc_show_date>:
// hold a copy of a font size in the PROG memory section
SYSFONT_DEFINE_GLYPHS;


uint8_t lcd_bus_read_status(void)
{
    2d72:	20 91 41 04 	lds	r18, 0x0441	; 0x800441 <g_showData+0x10>
    2d76:	30 91 42 04 	lds	r19, 0x0442	; 0x800442 <g_showData+0x11>
    2d7a:	28 17       	cp	r18, r24
    2d7c:	39 07       	cpc	r19, r25
    2d7e:	71 f4       	brne	.+28     	; 0x2d9c <isr_lcd_10mhz_ref_osc_show_date+0x2a>
    2d80:	20 91 52 04 	lds	r18, 0x0452	; 0x800452 <g_showData+0x21>
    2d84:	30 e0       	ldi	r19, 0x00	; 0
    2d86:	e6 2f       	mov	r30, r22
    2d88:	06 2e       	mov	r0, r22
    2d8a:	00 0c       	add	r0, r0
    2d8c:	ff 0b       	sbc	r31, r31
    2d8e:	2e 17       	cp	r18, r30
    2d90:	3f 07       	cpc	r19, r31
    2d92:	21 f4       	brne	.+8      	; 0x2d9c <isr_lcd_10mhz_ref_osc_show_date+0x2a>
    2d94:	20 91 53 04 	lds	r18, 0x0453	; 0x800453 <g_showData+0x22>
    2d98:	24 17       	cp	r18, r20
    2d9a:	69 f0       	breq	.+26     	; 0x2db6 <isr_lcd_10mhz_ref_osc_show_date+0x44>
    2d9c:	20 91 31 04 	lds	r18, 0x0431	; 0x800431 <g_showData>
    2da0:	22 60       	ori	r18, 0x02	; 2
    2da2:	20 93 31 04 	sts	0x0431, r18	; 0x800431 <g_showData>
    2da6:	90 93 42 04 	sts	0x0442, r25	; 0x800442 <g_showData+0x11>
    2daa:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <g_showData+0x10>
    2dae:	60 93 52 04 	sts	0x0452, r22	; 0x800452 <g_showData+0x21>
    2db2:	40 93 53 04 	sts	0x0453, r20	; 0x800453 <g_showData+0x22>
    2db6:	08 95       	ret

00002db8 <isr_lcd_10mhz_ref_osc_show_time>:
    2db8:	90 91 54 04 	lds	r25, 0x0454	; 0x800454 <g_showData+0x23>
    2dbc:	98 13       	cpse	r25, r24
    2dbe:	0e c0       	rjmp	.+28     	; 0x2ddc <isr_lcd_10mhz_ref_osc_show_time+0x24>
    2dc0:	20 91 55 04 	lds	r18, 0x0455	; 0x800455 <g_showData+0x24>
    2dc4:	30 e0       	ldi	r19, 0x00	; 0
    2dc6:	e6 2f       	mov	r30, r22
    2dc8:	06 2e       	mov	r0, r22
    2dca:	00 0c       	add	r0, r0
    2dcc:	ff 0b       	sbc	r31, r31
    2dce:	2e 17       	cp	r18, r30
    2dd0:	3f 07       	cpc	r19, r31
    2dd2:	21 f4       	brne	.+8      	; 0x2ddc <isr_lcd_10mhz_ref_osc_show_time+0x24>
    2dd4:	90 91 56 04 	lds	r25, 0x0456	; 0x800456 <g_showData+0x25>
    2dd8:	94 17       	cp	r25, r20
    2dda:	59 f0       	breq	.+22     	; 0x2df2 <isr_lcd_10mhz_ref_osc_show_time+0x3a>
    2ddc:	90 91 31 04 	lds	r25, 0x0431	; 0x800431 <g_showData>
    2de0:	94 60       	ori	r25, 0x04	; 4
    2de2:	90 93 31 04 	sts	0x0431, r25	; 0x800431 <g_showData>
    2de6:	80 93 54 04 	sts	0x0454, r24	; 0x800454 <g_showData+0x23>
    2dea:	60 93 55 04 	sts	0x0455, r22	; 0x800455 <g_showData+0x24>
    2dee:	40 93 56 04 	sts	0x0456, r20	; 0x800456 <g_showData+0x25>
    2df2:	08 95       	ret

00002df4 <isr_lcd_10mhz_ref_osc_show_ppm>:
    2df4:	20 91 43 04 	lds	r18, 0x0443	; 0x800443 <g_showData+0x12>
    2df8:	30 91 44 04 	lds	r19, 0x0444	; 0x800444 <g_showData+0x13>
    2dfc:	28 17       	cp	r18, r24
    2dfe:	39 07       	cpc	r19, r25
    2e00:	39 f4       	brne	.+14     	; 0x2e10 <isr_lcd_10mhz_ref_osc_show_ppm+0x1c>
    2e02:	20 91 45 04 	lds	r18, 0x0445	; 0x800445 <g_showData+0x14>
    2e06:	30 91 46 04 	lds	r19, 0x0446	; 0x800446 <g_showData+0x15>
    2e0a:	26 17       	cp	r18, r22
    2e0c:	37 07       	cpc	r19, r23
    2e0e:	69 f0       	breq	.+26     	; 0x2e2a <isr_lcd_10mhz_ref_osc_show_ppm+0x36>
    2e10:	20 91 31 04 	lds	r18, 0x0431	; 0x800431 <g_showData>
    2e14:	28 60       	ori	r18, 0x08	; 8
    2e16:	20 93 31 04 	sts	0x0431, r18	; 0x800431 <g_showData>
    2e1a:	90 93 44 04 	sts	0x0444, r25	; 0x800444 <g_showData+0x13>
    2e1e:	80 93 43 04 	sts	0x0443, r24	; 0x800443 <g_showData+0x12>
    2e22:	70 93 46 04 	sts	0x0446, r23	; 0x800446 <g_showData+0x15>
    2e26:	60 93 45 04 	sts	0x0445, r22	; 0x800445 <g_showData+0x14>
    2e2a:	08 95       	ret

00002e2c <isr_lcd_10mhz_ref_osc_show_pwm>:
    2e2c:	90 91 57 04 	lds	r25, 0x0457	; 0x800457 <g_showData+0x26>
    2e30:	98 13       	cpse	r25, r24
    2e32:	04 c0       	rjmp	.+8      	; 0x2e3c <isr_lcd_10mhz_ref_osc_show_pwm+0x10>
    2e34:	90 91 58 04 	lds	r25, 0x0458	; 0x800458 <g_showData+0x27>
    2e38:	96 17       	cp	r25, r22
    2e3a:	49 f0       	breq	.+18     	; 0x2e4e <isr_lcd_10mhz_ref_osc_show_pwm+0x22>
    2e3c:	90 91 31 04 	lds	r25, 0x0431	; 0x800431 <g_showData>
    2e40:	90 61       	ori	r25, 0x10	; 16
    2e42:	90 93 31 04 	sts	0x0431, r25	; 0x800431 <g_showData>
    2e46:	80 93 57 04 	sts	0x0457, r24	; 0x800457 <g_showData+0x26>
    2e4a:	60 93 58 04 	sts	0x0458, r22	; 0x800458 <g_showData+0x27>
    2e4e:	08 95       	ret

00002e50 <isr_lcd_10mhz_ref_osc_show_pv>:
    2e50:	90 91 59 04 	lds	r25, 0x0459	; 0x800459 <g_showData+0x28>
    2e54:	98 13       	cpse	r25, r24
    2e56:	07 c0       	rjmp	.+14     	; 0x2e66 <isr_lcd_10mhz_ref_osc_show_pv+0x16>
    2e58:	20 91 47 04 	lds	r18, 0x0447	; 0x800447 <g_showData+0x16>
    2e5c:	30 91 48 04 	lds	r19, 0x0448	; 0x800448 <g_showData+0x17>
    2e60:	26 17       	cp	r18, r22
    2e62:	37 07       	cpc	r19, r23
    2e64:	59 f0       	breq	.+22     	; 0x2e7c <isr_lcd_10mhz_ref_osc_show_pv+0x2c>
    2e66:	90 91 31 04 	lds	r25, 0x0431	; 0x800431 <g_showData>
    2e6a:	90 62       	ori	r25, 0x20	; 32
    2e6c:	90 93 31 04 	sts	0x0431, r25	; 0x800431 <g_showData>
    2e70:	80 93 59 04 	sts	0x0459, r24	; 0x800459 <g_showData+0x28>
    2e74:	70 93 48 04 	sts	0x0448, r23	; 0x800448 <g_showData+0x17>
    2e78:	60 93 47 04 	sts	0x0447, r22	; 0x800447 <g_showData+0x16>
    2e7c:	08 95       	ret

00002e7e <isr_lcd_10mhz_ref_osc_show_sat_use>:
    2e7e:	90 91 5a 04 	lds	r25, 0x045A	; 0x80045a <g_showData+0x29>
    2e82:	98 13       	cpse	r25, r24
    2e84:	08 c0       	rjmp	.+16     	; 0x2e96 <isr_lcd_10mhz_ref_osc_show_sat_use+0x18>
    2e86:	90 91 5b 04 	lds	r25, 0x045B	; 0x80045b <g_showData+0x2a>
    2e8a:	96 13       	cpse	r25, r22
    2e8c:	04 c0       	rjmp	.+8      	; 0x2e96 <isr_lcd_10mhz_ref_osc_show_sat_use+0x18>
    2e8e:	90 91 5c 04 	lds	r25, 0x045C	; 0x80045c <g_showData+0x2b>
    2e92:	94 17       	cp	r25, r20
    2e94:	59 f0       	breq	.+22     	; 0x2eac <isr_lcd_10mhz_ref_osc_show_sat_use+0x2e>
    2e96:	90 91 31 04 	lds	r25, 0x0431	; 0x800431 <g_showData>
    2e9a:	90 64       	ori	r25, 0x40	; 64
    2e9c:	90 93 31 04 	sts	0x0431, r25	; 0x800431 <g_showData>
    2ea0:	80 93 5a 04 	sts	0x045A, r24	; 0x80045a <g_showData+0x29>
    2ea4:	60 93 5b 04 	sts	0x045B, r22	; 0x80045b <g_showData+0x2a>
    2ea8:	40 93 5c 04 	sts	0x045C, r20	; 0x80045c <g_showData+0x2b>
    2eac:	08 95       	ret

00002eae <isr_lcd_10mhz_ref_osc_show_sat_dop>:
    2eae:	20 91 49 04 	lds	r18, 0x0449	; 0x800449 <g_showData+0x18>
    2eb2:	30 91 4a 04 	lds	r19, 0x044A	; 0x80044a <g_showData+0x19>
    2eb6:	28 17       	cp	r18, r24
    2eb8:	39 07       	cpc	r19, r25
    2eba:	49 f0       	breq	.+18     	; 0x2ece <isr_lcd_10mhz_ref_osc_show_sat_dop+0x20>
    2ebc:	20 91 31 04 	lds	r18, 0x0431	; 0x800431 <g_showData>
    2ec0:	20 68       	ori	r18, 0x80	; 128
    2ec2:	20 93 31 04 	sts	0x0431, r18	; 0x800431 <g_showData>
    2ec6:	90 93 4a 04 	sts	0x044A, r25	; 0x80044a <g_showData+0x19>
    2eca:	80 93 49 04 	sts	0x0449, r24	; 0x800449 <g_showData+0x18>
    2ece:	08 95       	ret

00002ed0 <isr_lcd_10mhz_ref_osc_show_pos_state>:
    2ed0:	90 91 5d 04 	lds	r25, 0x045D	; 0x80045d <g_showData+0x2c>
    2ed4:	98 13       	cpse	r25, r24
    2ed6:	04 c0       	rjmp	.+8      	; 0x2ee0 <isr_lcd_10mhz_ref_osc_show_pos_state+0x10>
    2ed8:	90 91 5e 04 	lds	r25, 0x045E	; 0x80045e <g_showData+0x2d>
    2edc:	96 17       	cp	r25, r22
    2ede:	49 f0       	breq	.+18     	; 0x2ef2 <isr_lcd_10mhz_ref_osc_show_pos_state+0x22>
    2ee0:	90 91 32 04 	lds	r25, 0x0432	; 0x800432 <g_showData+0x1>
    2ee4:	91 60       	ori	r25, 0x01	; 1
    2ee6:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <g_showData+0x1>
    2eea:	80 93 5d 04 	sts	0x045D, r24	; 0x80045d <g_showData+0x2c>
    2eee:	60 93 5e 04 	sts	0x045E, r22	; 0x80045e <g_showData+0x2d>
    2ef2:	08 95       	ret

00002ef4 <isr_lcd_10mhz_ref_osc_show_pos_lat>:
    2ef4:	90 91 5f 04 	lds	r25, 0x045F	; 0x80045f <g_showData+0x2e>
    2ef8:	98 13       	cpse	r25, r24
    2efa:	0f c0       	rjmp	.+30     	; 0x2f1a <isr_lcd_10mhz_ref_osc_show_pos_lat+0x26>
    2efc:	90 91 60 04 	lds	r25, 0x0460	; 0x800460 <g_showData+0x2f>
    2f00:	96 13       	cpse	r25, r22
    2f02:	0b c0       	rjmp	.+22     	; 0x2f1a <isr_lcd_10mhz_ref_osc_show_pos_lat+0x26>
    2f04:	90 91 61 04 	lds	r25, 0x0461	; 0x800461 <g_showData+0x30>
    2f08:	94 13       	cpse	r25, r20
    2f0a:	07 c0       	rjmp	.+14     	; 0x2f1a <isr_lcd_10mhz_ref_osc_show_pos_lat+0x26>
    2f0c:	e0 91 4b 04 	lds	r30, 0x044B	; 0x80044b <g_showData+0x1a>
    2f10:	f0 91 4c 04 	lds	r31, 0x044C	; 0x80044c <g_showData+0x1b>
    2f14:	e2 17       	cp	r30, r18
    2f16:	f3 07       	cpc	r31, r19
    2f18:	79 f0       	breq	.+30     	; 0x2f38 <isr_lcd_10mhz_ref_osc_show_pos_lat+0x44>
    2f1a:	90 91 32 04 	lds	r25, 0x0432	; 0x800432 <g_showData+0x1>
    2f1e:	92 60       	ori	r25, 0x02	; 2
    2f20:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <g_showData+0x1>
    2f24:	80 93 5f 04 	sts	0x045F, r24	; 0x80045f <g_showData+0x2e>
    2f28:	60 93 60 04 	sts	0x0460, r22	; 0x800460 <g_showData+0x2f>
    2f2c:	40 93 61 04 	sts	0x0461, r20	; 0x800461 <g_showData+0x30>
    2f30:	30 93 4c 04 	sts	0x044C, r19	; 0x80044c <g_showData+0x1b>
    2f34:	20 93 4b 04 	sts	0x044B, r18	; 0x80044b <g_showData+0x1a>
    2f38:	08 95       	ret

00002f3a <isr_lcd_10mhz_ref_osc_show_pos_lon>:
    2f3a:	90 91 62 04 	lds	r25, 0x0462	; 0x800462 <g_showData+0x31>
    2f3e:	98 13       	cpse	r25, r24
    2f40:	0f c0       	rjmp	.+30     	; 0x2f60 <isr_lcd_10mhz_ref_osc_show_pos_lon+0x26>
    2f42:	90 91 63 04 	lds	r25, 0x0463	; 0x800463 <g_showData+0x32>
    2f46:	96 13       	cpse	r25, r22
    2f48:	0b c0       	rjmp	.+22     	; 0x2f60 <isr_lcd_10mhz_ref_osc_show_pos_lon+0x26>
    2f4a:	90 91 64 04 	lds	r25, 0x0464	; 0x800464 <g_showData+0x33>
    2f4e:	94 13       	cpse	r25, r20
    2f50:	07 c0       	rjmp	.+14     	; 0x2f60 <isr_lcd_10mhz_ref_osc_show_pos_lon+0x26>
    2f52:	e0 91 4d 04 	lds	r30, 0x044D	; 0x80044d <g_showData+0x1c>
    2f56:	f0 91 4e 04 	lds	r31, 0x044E	; 0x80044e <g_showData+0x1d>
    2f5a:	e2 17       	cp	r30, r18
    2f5c:	f3 07       	cpc	r31, r19
    2f5e:	79 f0       	breq	.+30     	; 0x2f7e <isr_lcd_10mhz_ref_osc_show_pos_lon+0x44>
    2f60:	90 91 32 04 	lds	r25, 0x0432	; 0x800432 <g_showData+0x1>
    2f64:	94 60       	ori	r25, 0x04	; 4
    2f66:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <g_showData+0x1>
    2f6a:	80 93 62 04 	sts	0x0462, r24	; 0x800462 <g_showData+0x31>
    2f6e:	60 93 63 04 	sts	0x0463, r22	; 0x800463 <g_showData+0x32>
    2f72:	40 93 64 04 	sts	0x0464, r20	; 0x800464 <g_showData+0x33>
    2f76:	30 93 4e 04 	sts	0x044E, r19	; 0x80044e <g_showData+0x1d>
    2f7a:	20 93 4d 04 	sts	0x044D, r18	; 0x80044d <g_showData+0x1c>
    2f7e:	08 95       	ret

00002f80 <isr_lcd_10mhz_ref_osc_show_pos_height>:
    2f80:	20 91 4f 04 	lds	r18, 0x044F	; 0x80044f <g_showData+0x1e>
    2f84:	30 91 50 04 	lds	r19, 0x0450	; 0x800450 <g_showData+0x1f>
    2f88:	28 17       	cp	r18, r24
    2f8a:	39 07       	cpc	r19, r25
    2f8c:	21 f4       	brne	.+8      	; 0x2f96 <isr_lcd_10mhz_ref_osc_show_pos_height+0x16>
    2f8e:	20 91 65 04 	lds	r18, 0x0465	; 0x800465 <g_showData+0x34>
    2f92:	26 17       	cp	r18, r22
    2f94:	59 f0       	breq	.+22     	; 0x2fac <isr_lcd_10mhz_ref_osc_show_pos_height+0x2c>
    2f96:	20 91 32 04 	lds	r18, 0x0432	; 0x800432 <g_showData+0x1>
    2f9a:	28 60       	ori	r18, 0x08	; 8
    2f9c:	20 93 32 04 	sts	0x0432, r18	; 0x800432 <g_showData+0x1>
    2fa0:	90 93 50 04 	sts	0x0450, r25	; 0x800450 <g_showData+0x1f>
    2fa4:	80 93 4f 04 	sts	0x044F, r24	; 0x80044f <g_showData+0x1e>
    2fa8:	60 93 65 04 	sts	0x0465, r22	; 0x800465 <g_showData+0x34>
    2fac:	08 95       	ret

00002fae <lcd_get_sysfont>:
    2fae:	83 e0       	ldi	r24, 0x03	; 3
    2fb0:	91 e0       	ldi	r25, 0x01	; 1
    2fb2:	08 95       	ret

00002fb4 <lcd_init>:
    2fb4:	82 ee       	ldi	r24, 0xE2	; 226
    2fb6:	0e 94 55 0c 	call	0x18aa	; 0x18aa <lcd_bus_write_cmd>
    2fba:	6b e2       	ldi	r22, 0x2B	; 43
    2fbc:	78 e6       	ldi	r23, 0x68	; 104
    2fbe:	80 e0       	ldi	r24, 0x00	; 0
    2fc0:	90 e0       	ldi	r25, 0x00	; 0
    2fc2:	0e 94 3e 0c 	call	0x187c	; 0x187c <__portable_avr_delay_cycles>
    2fc6:	0e 94 49 0c 	call	0x1892	; 0x1892 <lcd_bus_read_status>
    2fca:	87 fd       	sbrc	r24, 7
    2fcc:	06 c0       	rjmp	.+12     	; 0x2fda <lcd_init+0x26>
    2fce:	0e 94 8b 0c 	call	0x1916	; 0x1916 <lcd_enable.part.0>
    2fd2:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <lcd_cls>
    2fd6:	80 e0       	ldi	r24, 0x00	; 0
    2fd8:	08 95       	ret
    2fda:	81 e0       	ldi	r24, 0x01	; 1
    2fdc:	08 95       	ret

00002fde <isr_lcd_set_mode>:
    2fde:	80 93 30 04 	sts	0x0430, r24	; 0x800430 <g_SmartLCD_mode>
    2fe2:	88 23       	and	r24, r24
    2fe4:	31 f0       	breq	.+12     	; 0x2ff2 <isr_lcd_set_mode+0x14>
    2fe6:	80 91 66 04 	lds	r24, 0x0466	; 0x800466 <g_status>
    2fea:	8e 7f       	andi	r24, 0xFE	; 254
    2fec:	80 93 66 04 	sts	0x0466, r24	; 0x800466 <g_status>
    2ff0:	08 95       	ret
    2ff2:	e0 df       	rcall	.-64     	; 0x2fb4 <lcd_init>
    2ff4:	81 ef       	ldi	r24, 0xF1	; 241
    2ff6:	ab cd       	rjmp	.-1194   	; 0x2b4e <lcd_test>

00002ff8 <lcd_shutdown>:
    2ff8:	82 ee       	ldi	r24, 0xE2	; 226
    2ffa:	0e 94 55 0c 	call	0x18aa	; 0x18aa <lcd_bus_write_cmd>
    2ffe:	6b e6       	ldi	r22, 0x6B	; 107
    3000:	7a e0       	ldi	r23, 0x0A	; 10
    3002:	80 e0       	ldi	r24, 0x00	; 0
    3004:	90 e0       	ldi	r25, 0x00	; 0
    3006:	0c 94 3e 0c 	jmp	0x187c	; 0x187c <__portable_avr_delay_cycles>

0000300a <s_twi_tx_done>:
#endif

static void s_twi_tx_done(void)
{
	// Called when  s_tx_lock == 0
	if (s_tx_next_len) {
    300a:	e0 91 2a 04 	lds	r30, 0x042A	; 0x80042a <s_tx_next_len>
    300e:	ee 23       	and	r30, r30
    3010:	51 f0       	breq	.+20     	; 0x3026 <s_twi_tx_done+0x1c>
    3012:	f0 e0       	ldi	r31, 0x00	; 0
    3014:	ed 5d       	subi	r30, 0xDD	; 221
    3016:	fb 4f       	sbci	r31, 0xFB	; 251
		// Load	next master message
		for (int idx = s_tx_next_len; idx >= 0; --idx) {
			s_tx_d[idx] = s_tx_next_d[idx];
    3018:	12 92       	st	-Z, r1
static void s_twi_tx_done(void)
{
	// Called when  s_tx_lock == 0
	if (s_tx_next_len) {
		// Load	next master message
		for (int idx = s_tx_next_len; idx >= 0; --idx) {
    301a:	84 e0       	ldi	r24, 0x04	; 4
    301c:	e2 32       	cpi	r30, 0x22	; 34
    301e:	f8 07       	cpc	r31, r24
    3020:	d9 f7       	brne	.-10     	; 0x3018 <s_twi_tx_done+0xe>
			s_tx_d[idx] = s_tx_next_d[idx];
		}
		s_tx_len = s_tx_next_len;
		s_tx_next_len = 0;
    3022:	10 92 2a 04 	sts	0x042A, r1	; 0x80042a <s_tx_next_len>
    3026:	08 95       	ret

00003028 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2>:
	uint8_t err = 1;
	// TODO: implementation
	return err;
}

static void s_isr_twi_rcvd_command_closed_form(uint8_t data[], uint8_t cnt)
    3028:	cf 92       	push	r12
    302a:	ef 92       	push	r14
    302c:	0f 93       	push	r16
				// do nothing
			}
		}
	}  // if (isGCA)

	else if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD)) {
    302e:	80 91 1a 04 	lds	r24, 0x041A	; 0x80041a <s_rx_d>
    3032:	82 32       	cpi	r24, 0x22	; 34
    3034:	09 f0       	breq	.+2      	; 0x3038 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x10>
    3036:	6d c1       	rjmp	.+730    	; 0x3312 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x2ea>
}

static void s_isr_twi_rcvd_command_closed_form(uint8_t data[], uint8_t cnt)
{
	uint8_t isGCA	= !data[0];
	uint8_t cmd		=  data[1];
    3038:	e0 91 1b 04 	lds	r30, 0x041B	; 0x80041b <s_rx_d+0x1>
		}
	}  // if (isGCA)

	else if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD)) {
		/* unique command section for all modes */
		switch (cmd) {
    303c:	e2 30       	cpi	r30, 0x02	; 2
    303e:	51 f0       	breq	.+20     	; 0x3054 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x2c>
    3040:	e3 30       	cpi	r30, 0x03	; 3
    3042:	71 f0       	breq	.+28     	; 0x3060 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x38>
    3044:	e1 30       	cpi	r30, 0x01	; 1
    3046:	c9 f4       	brne	.+50     	; 0x307a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x52>
			case TWI_SMART_LCD_CMD_GET_VER:
			s_rx_ret_d[0] = VERSION;
    3048:	81 e1       	ldi	r24, 0x11	; 17
    304a:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <s_rx_ret_d>
			s_rx_ret_len = 1;
    304e:	e0 93 11 04 	sts	0x0411, r30	; 0x800411 <s_rx_ret_len>
    3052:	5f c1       	rjmp	.+702    	; 0x3312 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x2ea>
			return;

			case TWI_SMART_LCD_CMD_SET_MODE:
			isr_lcd_set_mode(data[2]);
    3054:	80 91 1c 04 	lds	r24, 0x041C	; 0x80041c <s_rx_d+0x2>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3058:	0f 91       	pop	r16
    305a:	ef 90       	pop	r14
			s_rx_ret_d[0] = VERSION;
			s_rx_ret_len = 1;
			return;

			case TWI_SMART_LCD_CMD_SET_MODE:
			isr_lcd_set_mode(data[2]);
    305c:	cf 90       	pop	r12
			return;

			case TWI_SMART_LCD_CMD_GET_STATE:
			s_rx_ret_d[0] = g_showData.cmd ?  0x81 : 0x80;		// (Valid << 7) | (Busy << 0)
    305e:	bf cf       	rjmp	.-130    	; 0x2fde <isr_lcd_set_mode>
    3060:	80 91 33 04 	lds	r24, 0x0433	; 0x800433 <g_showData+0x2>
    3064:	88 23       	and	r24, r24
    3066:	11 f0       	breq	.+4      	; 0x306c <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x44>
    3068:	81 e8       	ldi	r24, 0x81	; 129
    306a:	01 c0       	rjmp	.+2      	; 0x306e <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x46>
    306c:	80 e8       	ldi	r24, 0x80	; 128
    306e:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <s_rx_ret_d>
			s_rx_ret_len = 1;
    3072:	81 e0       	ldi	r24, 0x01	; 1
    3074:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <s_rx_ret_len>
			return;

			default:
			s_rx_ret_len = 0;
    3078:	4c c1       	rjmp	.+664    	; 0x3312 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x2ea>
    307a:	10 92 11 04 	sts	0x0411, r1	; 0x800411 <s_rx_ret_len>
		}

		if (g_SmartLCD_mode == C_SMART_LCD_MODE_SMARTLCD) {
    307e:	80 91 30 04 	lds	r24, 0x0430	; 0x800430 <g_SmartLCD_mode>
    3082:	80 31       	cpi	r24, 0x10	; 16
    3084:	09 f0       	breq	.+2      	; 0x3088 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x60>
			if (!(g_showData.cmd)) {							// Do when no command in process only
    3086:	b4 c0       	rjmp	.+360    	; 0x31f0 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x1c8>
    3088:	80 91 33 04 	lds	r24, 0x0433	; 0x800433 <g_showData+0x2>
    308c:	81 11       	cpse	r24, r1
				switch (cmd) {
    308e:	41 c1       	rjmp	.+642    	; 0x3312 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x2ea>
    3090:	e2 33       	cpi	r30, 0x32	; 50
    3092:	09 f4       	brne	.+2      	; 0x3096 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x6e>
    3094:	94 c0       	rjmp	.+296    	; 0x31be <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x196>
    3096:	80 f4       	brcc	.+32     	; 0x30b8 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x90>
    3098:	e4 31       	cpi	r30, 0x14	; 20
    309a:	59 f1       	breq	.+86     	; 0x30f2 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xca>
    309c:	40 f4       	brcc	.+16     	; 0x30ae <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x86>
    309e:	e0 31       	cpi	r30, 0x10	; 16
    30a0:	09 f0       	breq	.+2      	; 0x30a4 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x7c>
					case TWI_SMART_LCD_CMD_CLS:					// Clear screen
						isr_smartlcd_cmd(cmd);
    30a2:	37 c1       	rjmp	.+622    	; 0x3312 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x2ea>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    30a4:	80 e1       	ldi	r24, 0x10	; 16
    30a6:	0f 91       	pop	r16

		if (g_SmartLCD_mode == C_SMART_LCD_MODE_SMARTLCD) {
			if (!(g_showData.cmd)) {							// Do when no command in process only
				switch (cmd) {
					case TWI_SMART_LCD_CMD_CLS:					// Clear screen
						isr_smartlcd_cmd(cmd);
    30a8:	ef 90       	pop	r14
    30aa:	cf 90       	pop	r12
			s_rx_ret_len = 0;
		}

		if (g_SmartLCD_mode == C_SMART_LCD_MODE_SMARTLCD) {
			if (!(g_showData.cmd)) {							// Do when no command in process only
				switch (cmd) {
    30ac:	04 ce       	rjmp	.-1016   	; 0x2cb6 <isr_smartlcd_cmd>
    30ae:	e0 32       	cpi	r30, 0x20	; 32
    30b0:	39 f1       	breq	.+78     	; 0x3100 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xd8>
    30b2:	e0 33       	cpi	r30, 0x30	; 48
    30b4:	71 f1       	breq	.+92     	; 0x3112 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xea>
    30b6:	2d c1       	rjmp	.+602    	; 0x3312 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x2ea>
    30b8:	e6 33       	cpi	r30, 0x36	; 54
    30ba:	09 f4       	brne	.+2      	; 0x30be <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x96>
    30bc:	89 c0       	rjmp	.+274    	; 0x31d0 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x1a8>
    30be:	60 f4       	brcc	.+24     	; 0x30d8 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xb0>
    30c0:	e4 33       	cpi	r30, 0x34	; 52
    30c2:	09 f0       	breq	.+2      	; 0x30c6 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x9e>
					case TWI_SMART_LCD_CMD_DRAW_LINE:			// Draw line from current pencil position to next position (x, y)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
					break;

					case TWI_SMART_LCD_CMD_DRAW_RECT:			// Draw rectangular frame with pencil's start position with dimension (width, height)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
    30c4:	26 c1       	rjmp	.+588    	; 0x3312 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x2ea>
    30c6:	40 91 1d 04 	lds	r20, 0x041D	; 0x80041d <s_rx_d+0x3>
    30ca:	60 91 1c 04 	lds	r22, 0x041C	; 0x80041c <s_rx_d+0x2>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    30ce:	84 e3       	ldi	r24, 0x34	; 52
    30d0:	0f 91       	pop	r16
					case TWI_SMART_LCD_CMD_DRAW_LINE:			// Draw line from current pencil position to next position (x, y)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
					break;

					case TWI_SMART_LCD_CMD_DRAW_RECT:			// Draw rectangular frame with pencil's start position with dimension (width, height)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
    30d2:	ef 90       	pop	r14
    30d4:	cf 90       	pop	r12
			s_rx_ret_len = 0;
		}

		if (g_SmartLCD_mode == C_SMART_LCD_MODE_SMARTLCD) {
			if (!(g_showData.cmd)) {							// Do when no command in process only
				switch (cmd) {
    30d6:	f7 cd       	rjmp	.-1042   	; 0x2cc6 <isr_smartlcd_cmd_data2>
    30d8:	e8 33       	cpi	r30, 0x38	; 56
    30da:	09 f4       	brne	.+2      	; 0x30de <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xb6>
    30dc:	82 c0       	rjmp	.+260    	; 0x31e2 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x1ba>
    30de:	ea 33       	cpi	r30, 0x3A	; 58
    30e0:	09 f0       	breq	.+2      	; 0x30e4 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xbc>
					case TWI_SMART_LCD_CMD_DRAW_CIRC:			// Draw circle or ellipse from the pencil's center point with (radius)
						isr_smartlcd_cmd_data1(cmd, data[2]);
					break;

					case TWI_SMART_LCD_CMD_DRAW_FILLED_CIRC:	// Draw filled circle or ellipse from the pencil's center point with (radius)
						isr_smartlcd_cmd_data1(cmd, data[2]);
    30e2:	17 c1       	rjmp	.+558    	; 0x3312 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x2ea>
    30e4:	60 91 1c 04 	lds	r22, 0x041C	; 0x80041c <s_rx_d+0x2>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    30e8:	8a e3       	ldi	r24, 0x3A	; 58
					case TWI_SMART_LCD_CMD_DRAW_CIRC:			// Draw circle or ellipse from the pencil's center point with (radius)
						isr_smartlcd_cmd_data1(cmd, data[2]);
					break;

					case TWI_SMART_LCD_CMD_DRAW_FILLED_CIRC:	// Draw filled circle or ellipse from the pencil's center point with (radius)
						isr_smartlcd_cmd_data1(cmd, data[2]);
    30ea:	0f 91       	pop	r16
    30ec:	ef 90       	pop	r14
					case TWI_SMART_LCD_CMD_CLS:					// Clear screen
						isr_smartlcd_cmd(cmd);
					break;

					case TWI_SMART_LCD_CMD_SET_PIXEL_TYPE:		// Set next pixels (OFF / ON / XOR)
						isr_smartlcd_cmd_data1(cmd, data[2]);
    30ee:	cf 90       	pop	r12
    30f0:	e5 cd       	rjmp	.-1078   	; 0x2cbc <isr_smartlcd_cmd_data1>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    30f2:	60 91 1c 04 	lds	r22, 0x041C	; 0x80041c <s_rx_d+0x2>
    30f6:	84 e1       	ldi	r24, 0x14	; 20
					case TWI_SMART_LCD_CMD_CLS:					// Clear screen
						isr_smartlcd_cmd(cmd);
					break;

					case TWI_SMART_LCD_CMD_SET_PIXEL_TYPE:		// Set next pixels (OFF / ON / XOR)
						isr_smartlcd_cmd_data1(cmd, data[2]);
    30f8:	0f 91       	pop	r16
    30fa:	ef 90       	pop	r14
					break;

					case TWI_SMART_LCD_CMD_SET_POS_X_Y:			// Set pencil position (x, y)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
    30fc:	cf 90       	pop	r12
    30fe:	de cd       	rjmp	.-1092   	; 0x2cbc <isr_smartlcd_cmd_data1>
    3100:	40 91 1d 04 	lds	r20, 0x041D	; 0x80041d <s_rx_d+0x3>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3104:	60 91 1c 04 	lds	r22, 0x041C	; 0x80041c <s_rx_d+0x2>
    3108:	80 e2       	ldi	r24, 0x20	; 32
					case TWI_SMART_LCD_CMD_SET_PIXEL_TYPE:		// Set next pixels (OFF / ON / XOR)
						isr_smartlcd_cmd_data1(cmd, data[2]);
					break;

					case TWI_SMART_LCD_CMD_SET_POS_X_Y:			// Set pencil position (x, y)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
    310a:	0f 91       	pop	r16
    310c:	ef 90       	pop	r14
					break;

					case TWI_SMART_LCD_CMD_WRITE:				// Write text of length (length, buffer...)
					{
						switch (data[2]) {
    310e:	cf 90       	pop	r12
    3110:	da cd       	rjmp	.-1100   	; 0x2cc6 <isr_smartlcd_cmd_data2>
    3112:	80 91 1c 04 	lds	r24, 0x041C	; 0x80041c <s_rx_d+0x2>
    3116:	83 30       	cpi	r24, 0x03	; 3
    3118:	51 f1       	breq	.+84     	; 0x316e <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x146>
    311a:	70 f4       	brcc	.+28     	; 0x3138 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x110>
    311c:	81 30       	cpi	r24, 0x01	; 1
    311e:	01 f1       	breq	.+64     	; 0x3160 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x138>
    3120:	82 30       	cpi	r24, 0x02	; 2
							case 1:
								isr_smartlcd_cmd_data1(cmd, data[3]);
							break;

							case 2:
								isr_smartlcd_cmd_data2(cmd, data[3], data[4]);
    3122:	09 f0       	breq	.+2      	; 0x3126 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0xfe>
    3124:	47 c0       	rjmp	.+142    	; 0x31b4 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x18c>
    3126:	40 91 1e 04 	lds	r20, 0x041E	; 0x80041e <s_rx_d+0x4>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    312a:	60 91 1d 04 	lds	r22, 0x041D	; 0x80041d <s_rx_d+0x3>
    312e:	80 e3       	ldi	r24, 0x30	; 48
							case 1:
								isr_smartlcd_cmd_data1(cmd, data[3]);
							break;

							case 2:
								isr_smartlcd_cmd_data2(cmd, data[3], data[4]);
    3130:	0f 91       	pop	r16
    3132:	ef 90       	pop	r14
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
					break;

					case TWI_SMART_LCD_CMD_WRITE:				// Write text of length (length, buffer...)
					{
						switch (data[2]) {
    3134:	cf 90       	pop	r12
    3136:	c7 cd       	rjmp	.-1138   	; 0x2cc6 <isr_smartlcd_cmd_data2>
    3138:	85 30       	cpi	r24, 0x05	; 5
    313a:	79 f1       	breq	.+94     	; 0x319a <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x172>
    313c:	18 f1       	brcs	.+70     	; 0x3184 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x15c>
							case 5:
								isr_smartlcd_cmd_data5(cmd, data[3], data[4], data[5], data[6], data[7]);
							break;

							case 6:
								isr_smartlcd_cmd_data6(cmd, data[3], data[4], data[5], data[6], data[7], data[8]);
    313e:	86 30       	cpi	r24, 0x06	; 6
    3140:	c9 f5       	brne	.+114    	; 0x31b4 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x18c>
    3142:	c0 90 22 04 	lds	r12, 0x0422	; 0x800422 <s_tx_d>
    3146:	e0 90 21 04 	lds	r14, 0x0421	; 0x800421 <s_rx_d+0x7>
    314a:	00 91 20 04 	lds	r16, 0x0420	; 0x800420 <s_rx_d+0x6>
    314e:	20 91 1f 04 	lds	r18, 0x041F	; 0x80041f <s_rx_d+0x5>
    3152:	40 91 1e 04 	lds	r20, 0x041E	; 0x80041e <s_rx_d+0x4>
    3156:	60 91 1d 04 	lds	r22, 0x041D	; 0x80041d <s_rx_d+0x3>

					case TWI_SMART_LCD_CMD_WRITE:				// Write text of length (length, buffer...)
					{
						switch (data[2]) {
							case 1:
								isr_smartlcd_cmd_data1(cmd, data[3]);
    315a:	80 e3       	ldi	r24, 0x30	; 48
    315c:	d8 dd       	rcall	.-1104   	; 0x2d0e <isr_smartlcd_cmd_data6>
    315e:	d9 c0       	rjmp	.+434    	; 0x3312 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x2ea>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3160:	60 91 1d 04 	lds	r22, 0x041D	; 0x80041d <s_rx_d+0x3>
    3164:	80 e3       	ldi	r24, 0x30	; 48

					case TWI_SMART_LCD_CMD_WRITE:				// Write text of length (length, buffer...)
					{
						switch (data[2]) {
							case 1:
								isr_smartlcd_cmd_data1(cmd, data[3]);
    3166:	0f 91       	pop	r16
    3168:	ef 90       	pop	r14
							case 2:
								isr_smartlcd_cmd_data2(cmd, data[3], data[4]);
							break;

							case 3:
								isr_smartlcd_cmd_data3(cmd, data[3], data[4], data[5]);
    316a:	cf 90       	pop	r12
    316c:	a7 cd       	rjmp	.-1202   	; 0x2cbc <isr_smartlcd_cmd_data1>
    316e:	20 91 1f 04 	lds	r18, 0x041F	; 0x80041f <s_rx_d+0x5>
    3172:	40 91 1e 04 	lds	r20, 0x041E	; 0x80041e <s_rx_d+0x4>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3176:	60 91 1d 04 	lds	r22, 0x041D	; 0x80041d <s_rx_d+0x3>
    317a:	80 e3       	ldi	r24, 0x30	; 48
							case 2:
								isr_smartlcd_cmd_data2(cmd, data[3], data[4]);
							break;

							case 3:
								isr_smartlcd_cmd_data3(cmd, data[3], data[4], data[5]);
    317c:	0f 91       	pop	r16
							break;

							case 4:
								isr_smartlcd_cmd_data4(cmd, data[3], data[4], data[5], data[6]);
    317e:	ef 90       	pop	r14
    3180:	cf 90       	pop	r12
    3182:	a7 cd       	rjmp	.-1202   	; 0x2cd2 <isr_smartlcd_cmd_data3>
    3184:	00 91 20 04 	lds	r16, 0x0420	; 0x800420 <s_rx_d+0x6>
    3188:	20 91 1f 04 	lds	r18, 0x041F	; 0x80041f <s_rx_d+0x5>
    318c:	40 91 1e 04 	lds	r20, 0x041E	; 0x80041e <s_rx_d+0x4>
    3190:	60 91 1d 04 	lds	r22, 0x041D	; 0x80041d <s_rx_d+0x3>
							break;

							case 5:
								isr_smartlcd_cmd_data5(cmd, data[3], data[4], data[5], data[6], data[7]);
    3194:	80 e3       	ldi	r24, 0x30	; 48
    3196:	a4 dd       	rcall	.-1208   	; 0x2ce0 <isr_smartlcd_cmd_data4>
    3198:	bc c0       	rjmp	.+376    	; 0x3312 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x2ea>
    319a:	e0 90 21 04 	lds	r14, 0x0421	; 0x800421 <s_rx_d+0x7>
    319e:	00 91 20 04 	lds	r16, 0x0420	; 0x800420 <s_rx_d+0x6>
    31a2:	20 91 1f 04 	lds	r18, 0x041F	; 0x80041f <s_rx_d+0x5>
    31a6:	40 91 1e 04 	lds	r20, 0x041E	; 0x80041e <s_rx_d+0x4>
    31aa:	60 91 1d 04 	lds	r22, 0x041D	; 0x80041d <s_rx_d+0x3>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    31ae:	80 e3       	ldi	r24, 0x30	; 48
								isr_smartlcd_cmd_data6(cmd, data[3], data[4], data[5], data[6], data[7], data[8]);
							break;

							case 0:
							default:
								isr_smartlcd_cmd(cmd);
    31b0:	a1 dd       	rcall	.-1214   	; 0x2cf4 <isr_smartlcd_cmd_data5>
    31b2:	af c0       	rjmp	.+350    	; 0x3312 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x2ea>
						}  // switch (data[2])
					}
					break;

					case TWI_SMART_LCD_CMD_DRAW_LINE:			// Draw line from current pencil position to next position (x, y)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
    31b4:	80 e3       	ldi	r24, 0x30	; 48
    31b6:	0f 91       	pop	r16
    31b8:	ef 90       	pop	r14
    31ba:	cf 90       	pop	r12
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    31bc:	7c cd       	rjmp	.-1288   	; 0x2cb6 <isr_smartlcd_cmd>
    31be:	40 91 1d 04 	lds	r20, 0x041D	; 0x80041d <s_rx_d+0x3>
						}  // switch (data[2])
					}
					break;

					case TWI_SMART_LCD_CMD_DRAW_LINE:			// Draw line from current pencil position to next position (x, y)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
    31c2:	60 91 1c 04 	lds	r22, 0x041C	; 0x80041c <s_rx_d+0x2>
					case TWI_SMART_LCD_CMD_DRAW_RECT:			// Draw rectangular frame with pencil's start position with dimension (width, height)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
					break;

					case TWI_SMART_LCD_CMD_DRAW_FILLED_RECT:	// Draw filled rectangular frame with pencil's start position with dimension (width, height)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
    31c6:	82 e3       	ldi	r24, 0x32	; 50
    31c8:	0f 91       	pop	r16
    31ca:	ef 90       	pop	r14
    31cc:	cf 90       	pop	r12
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    31ce:	7b cd       	rjmp	.-1290   	; 0x2cc6 <isr_smartlcd_cmd_data2>
    31d0:	40 91 1d 04 	lds	r20, 0x041D	; 0x80041d <s_rx_d+0x3>
					case TWI_SMART_LCD_CMD_DRAW_RECT:			// Draw rectangular frame with pencil's start position with dimension (width, height)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
					break;

					case TWI_SMART_LCD_CMD_DRAW_FILLED_RECT:	// Draw filled rectangular frame with pencil's start position with dimension (width, height)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
    31d4:	60 91 1c 04 	lds	r22, 0x041C	; 0x80041c <s_rx_d+0x2>
					break;

					case TWI_SMART_LCD_CMD_DRAW_CIRC:			// Draw circle or ellipse from the pencil's center point with (radius)
						isr_smartlcd_cmd_data1(cmd, data[2]);
    31d8:	86 e3       	ldi	r24, 0x36	; 54
    31da:	0f 91       	pop	r16
    31dc:	ef 90       	pop	r14
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    31de:	cf 90       	pop	r12
    31e0:	72 cd       	rjmp	.-1308   	; 0x2cc6 <isr_smartlcd_cmd_data2>
					case TWI_SMART_LCD_CMD_DRAW_FILLED_RECT:	// Draw filled rectangular frame with pencil's start position with dimension (width, height)
						isr_smartlcd_cmd_data2(cmd, data[2], data[3]);
					break;

					case TWI_SMART_LCD_CMD_DRAW_CIRC:			// Draw circle or ellipse from the pencil's center point with (radius)
						isr_smartlcd_cmd_data1(cmd, data[2]);
    31e2:	60 91 1c 04 	lds	r22, 0x041C	; 0x80041c <s_rx_d+0x2>
					}
				}  // switch (cmd)
			}  // if (!(g_showData.cmd))
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_SMARTLCD)

		else if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC) {
    31e6:	88 e3       	ldi	r24, 0x38	; 56
    31e8:	0f 91       	pop	r16
			switch (cmd) {
    31ea:	ef 90       	pop	r14
    31ec:	cf 90       	pop	r12
    31ee:	66 cd       	rjmp	.-1332   	; 0x2cbc <isr_smartlcd_cmd_data1>
    31f0:	80 32       	cpi	r24, 0x20	; 32
    31f2:	09 f0       	breq	.+2      	; 0x31f6 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x1ce>
    31f4:	8e c0       	rjmp	.+284    	; 0x3312 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x2ea>
    31f6:	8e 2f       	mov	r24, r30
    31f8:	90 e0       	ldi	r25, 0x00	; 0
    31fa:	fc 01       	movw	r30, r24
    31fc:	e0 58       	subi	r30, 0x80	; 128
    31fe:	f1 09       	sbc	r31, r1
    3200:	ee 30       	cpi	r30, 0x0E	; 14
				case TWI_SMART_LCD_CMD_SHOW_CLK_STATE:
					isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100(data[2], (uint16_t) (data[3] | (data[4] << 8)), (int16_t) (data[5] | (data[6] << 8)));
    3202:	f1 05       	cpc	r31, r1
    3204:	08 f0       	brcs	.+2      	; 0x3208 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x1e0>
    3206:	85 c0       	rjmp	.+266    	; 0x3312 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2+0x2ea>
    3208:	ec 5c       	subi	r30, 0xCC	; 204
    320a:	ff 4f       	sbci	r31, 0xFF	; 255
    320c:	0f c7       	rjmp	.+3614   	; 0x402c <__tablejump2__>
    320e:	40 91 1f 04 	lds	r20, 0x041F	; 0x80041f <s_rx_d+0x5>
    3212:	50 91 20 04 	lds	r21, 0x0420	; 0x800420 <s_rx_d+0x6>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3216:	60 91 1d 04 	lds	r22, 0x041D	; 0x80041d <s_rx_d+0x3>
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_SMARTLCD)

		else if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC) {
			switch (cmd) {
				case TWI_SMART_LCD_CMD_SHOW_CLK_STATE:
					isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100(data[2], (uint16_t) (data[3] | (data[4] << 8)), (int16_t) (data[5] | (data[6] << 8)));
    321a:	70 91 1e 04 	lds	r23, 0x041E	; 0x80041e <s_rx_d+0x4>
				break;

				case TWI_SMART_LCD_CMD_SHOW_YEAR_MON_DAY:
					isr_lcd_10mhz_ref_osc_show_date(data[2] | (data[3] << 8), data[4], data[5]);
    321e:	80 91 1c 04 	lds	r24, 0x041C	; 0x80041c <s_rx_d+0x2>
    3222:	0f 91       	pop	r16
    3224:	ef 90       	pop	r14
    3226:	cf 90       	pop	r12
    3228:	82 cd       	rjmp	.-1276   	; 0x2d2e <isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100>
    322a:	40 91 1f 04 	lds	r20, 0x041F	; 0x80041f <s_rx_d+0x5>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    322e:	60 91 1e 04 	lds	r22, 0x041E	; 0x80041e <s_rx_d+0x4>
				case TWI_SMART_LCD_CMD_SHOW_CLK_STATE:
					isr_lcd_10mhz_ref_osc_show_clkstate_phaseVolt1000_phaseDeg100(data[2], (uint16_t) (data[3] | (data[4] << 8)), (int16_t) (data[5] | (data[6] << 8)));
				break;

				case TWI_SMART_LCD_CMD_SHOW_YEAR_MON_DAY:
					isr_lcd_10mhz_ref_osc_show_date(data[2] | (data[3] << 8), data[4], data[5]);
    3232:	80 91 1c 04 	lds	r24, 0x041C	; 0x80041c <s_rx_d+0x2>
				break;

				case TWI_SMART_LCD_CMD_SHOW_HR_MIN_SEC:
					isr_lcd_10mhz_ref_osc_show_time(data[2], data[3], data[4]);
    3236:	90 91 1d 04 	lds	r25, 0x041D	; 0x80041d <s_rx_d+0x3>
    323a:	0f 91       	pop	r16
    323c:	ef 90       	pop	r14
    323e:	cf 90       	pop	r12
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3240:	98 cd       	rjmp	.-1232   	; 0x2d72 <isr_lcd_10mhz_ref_osc_show_date>
    3242:	40 91 1e 04 	lds	r20, 0x041E	; 0x80041e <s_rx_d+0x4>
				case TWI_SMART_LCD_CMD_SHOW_YEAR_MON_DAY:
					isr_lcd_10mhz_ref_osc_show_date(data[2] | (data[3] << 8), data[4], data[5]);
				break;

				case TWI_SMART_LCD_CMD_SHOW_HR_MIN_SEC:
					isr_lcd_10mhz_ref_osc_show_time(data[2], data[3], data[4]);
    3246:	60 91 1d 04 	lds	r22, 0x041D	; 0x80041d <s_rx_d+0x3>
				break;

				case TWI_SMART_LCD_CMD_SHOW_PPB:
					isr_lcd_10mhz_ref_osc_show_ppm((int16_t) (data[2] | (data[3] << 8)), data[4] | (data[5] << 8));
    324a:	80 91 1c 04 	lds	r24, 0x041C	; 0x80041c <s_rx_d+0x2>
    324e:	0f 91       	pop	r16
    3250:	ef 90       	pop	r14
    3252:	cf 90       	pop	r12
    3254:	b1 cd       	rjmp	.-1182   	; 0x2db8 <isr_lcd_10mhz_ref_osc_show_time>
    3256:	60 91 1e 04 	lds	r22, 0x041E	; 0x80041e <s_rx_d+0x4>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    325a:	70 91 1f 04 	lds	r23, 0x041F	; 0x80041f <s_rx_d+0x5>
				case TWI_SMART_LCD_CMD_SHOW_HR_MIN_SEC:
					isr_lcd_10mhz_ref_osc_show_time(data[2], data[3], data[4]);
				break;

				case TWI_SMART_LCD_CMD_SHOW_PPB:
					isr_lcd_10mhz_ref_osc_show_ppm((int16_t) (data[2] | (data[3] << 8)), data[4] | (data[5] << 8));
    325e:	80 91 1c 04 	lds	r24, 0x041C	; 0x80041c <s_rx_d+0x2>
				break;

				case TWI_SMART_LCD_CMD_SHOW_TCXO_PWM:
					isr_lcd_10mhz_ref_osc_show_pwm(data[2], data[3]);
    3262:	90 91 1d 04 	lds	r25, 0x041D	; 0x80041d <s_rx_d+0x3>
    3266:	0f 91       	pop	r16
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    3268:	ef 90       	pop	r14
    326a:	cf 90       	pop	r12
				case TWI_SMART_LCD_CMD_SHOW_PPB:
					isr_lcd_10mhz_ref_osc_show_ppm((int16_t) (data[2] | (data[3] << 8)), data[4] | (data[5] << 8));
				break;

				case TWI_SMART_LCD_CMD_SHOW_TCXO_PWM:
					isr_lcd_10mhz_ref_osc_show_pwm(data[2], data[3]);
    326c:	c3 cd       	rjmp	.-1146   	; 0x2df4 <isr_lcd_10mhz_ref_osc_show_ppm>
    326e:	60 91 1d 04 	lds	r22, 0x041D	; 0x80041d <s_rx_d+0x3>
				break;

				case TWI_SMART_LCD_CMD_SHOW_TCXO_VC:
					isr_lcd_10mhz_ref_osc_show_pv(data[2], data[3] | (data[4] << 8));
    3272:	80 91 1c 04 	lds	r24, 0x041C	; 0x80041c <s_rx_d+0x2>
    3276:	0f 91       	pop	r16
    3278:	ef 90       	pop	r14
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    327a:	cf 90       	pop	r12
    327c:	d7 cd       	rjmp	.-1106   	; 0x2e2c <isr_lcd_10mhz_ref_osc_show_pwm>
    327e:	60 91 1d 04 	lds	r22, 0x041D	; 0x80041d <s_rx_d+0x3>
				case TWI_SMART_LCD_CMD_SHOW_TCXO_PWM:
					isr_lcd_10mhz_ref_osc_show_pwm(data[2], data[3]);
				break;

				case TWI_SMART_LCD_CMD_SHOW_TCXO_VC:
					isr_lcd_10mhz_ref_osc_show_pv(data[2], data[3] | (data[4] << 8));
    3282:	70 91 1e 04 	lds	r23, 0x041E	; 0x80041e <s_rx_d+0x4>
				break;

				case TWI_SMART_LCD_CMD_SHOW_SATS:
					isr_lcd_10mhz_ref_osc_show_sat_use(data[2], data[3], data[4]);
    3286:	80 91 1c 04 	lds	r24, 0x041C	; 0x80041c <s_rx_d+0x2>
    328a:	0f 91       	pop	r16
    328c:	ef 90       	pop	r14
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    328e:	cf 90       	pop	r12
    3290:	df cd       	rjmp	.-1090   	; 0x2e50 <isr_lcd_10mhz_ref_osc_show_pv>
    3292:	40 91 1e 04 	lds	r20, 0x041E	; 0x80041e <s_rx_d+0x4>
				case TWI_SMART_LCD_CMD_SHOW_TCXO_VC:
					isr_lcd_10mhz_ref_osc_show_pv(data[2], data[3] | (data[4] << 8));
				break;

				case TWI_SMART_LCD_CMD_SHOW_SATS:
					isr_lcd_10mhz_ref_osc_show_sat_use(data[2], data[3], data[4]);
    3296:	60 91 1d 04 	lds	r22, 0x041D	; 0x80041d <s_rx_d+0x3>
				break;

				case TWI_SMART_LCD_CMD_SHOW_DOP:
					isr_lcd_10mhz_ref_osc_show_sat_dop(data[2] | (data[3] << 8));
    329a:	80 91 1c 04 	lds	r24, 0x041C	; 0x80041c <s_rx_d+0x2>
    329e:	0f 91       	pop	r16
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    32a0:	ef 90       	pop	r14
    32a2:	cf 90       	pop	r12
				case TWI_SMART_LCD_CMD_SHOW_SATS:
					isr_lcd_10mhz_ref_osc_show_sat_use(data[2], data[3], data[4]);
				break;

				case TWI_SMART_LCD_CMD_SHOW_DOP:
					isr_lcd_10mhz_ref_osc_show_sat_dop(data[2] | (data[3] << 8));
    32a4:	ec cd       	rjmp	.-1064   	; 0x2e7e <isr_lcd_10mhz_ref_osc_show_sat_use>
    32a6:	80 91 1c 04 	lds	r24, 0x041C	; 0x80041c <s_rx_d+0x2>
				break;

				case TWI_SMART_LCD_CMD_SHOW_POS_STATE:
					isr_lcd_10mhz_ref_osc_show_pos_state(data[2], data[3]);
    32aa:	90 91 1d 04 	lds	r25, 0x041D	; 0x80041d <s_rx_d+0x3>
    32ae:	0f 91       	pop	r16
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    32b0:	ef 90       	pop	r14
    32b2:	cf 90       	pop	r12
    32b4:	fc cd       	rjmp	.-1032   	; 0x2eae <isr_lcd_10mhz_ref_osc_show_sat_dop>
				case TWI_SMART_LCD_CMD_SHOW_DOP:
					isr_lcd_10mhz_ref_osc_show_sat_dop(data[2] | (data[3] << 8));
				break;

				case TWI_SMART_LCD_CMD_SHOW_POS_STATE:
					isr_lcd_10mhz_ref_osc_show_pos_state(data[2], data[3]);
    32b6:	60 91 1d 04 	lds	r22, 0x041D	; 0x80041d <s_rx_d+0x3>
				break;

				case TWI_SMART_LCD_CMD_SHOW_POS_LAT:
					isr_lcd_10mhz_ref_osc_show_pos_lat(data[2], data[3], data[4], data[5] | (data[6] << 8));
    32ba:	80 91 1c 04 	lds	r24, 0x041C	; 0x80041c <s_rx_d+0x2>
    32be:	0f 91       	pop	r16
    32c0:	ef 90       	pop	r14
    32c2:	cf 90       	pop	r12
    32c4:	05 ce       	rjmp	.-1014   	; 0x2ed0 <isr_lcd_10mhz_ref_osc_show_pos_state>
    32c6:	20 91 1f 04 	lds	r18, 0x041F	; 0x80041f <s_rx_d+0x5>
    32ca:	30 91 20 04 	lds	r19, 0x0420	; 0x800420 <s_rx_d+0x6>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    32ce:	40 91 1e 04 	lds	r20, 0x041E	; 0x80041e <s_rx_d+0x4>
				case TWI_SMART_LCD_CMD_SHOW_POS_STATE:
					isr_lcd_10mhz_ref_osc_show_pos_state(data[2], data[3]);
				break;

				case TWI_SMART_LCD_CMD_SHOW_POS_LAT:
					isr_lcd_10mhz_ref_osc_show_pos_lat(data[2], data[3], data[4], data[5] | (data[6] << 8));
    32d2:	60 91 1d 04 	lds	r22, 0x041D	; 0x80041d <s_rx_d+0x3>
				break;

				case TWI_SMART_LCD_CMD_SHOW_POS_LON:
					isr_lcd_10mhz_ref_osc_show_pos_lon(data[2], data[3], data[4], data[5] | (data[6] << 8));
    32d6:	80 91 1c 04 	lds	r24, 0x041C	; 0x80041c <s_rx_d+0x2>
    32da:	0f 91       	pop	r16
    32dc:	ef 90       	pop	r14
    32de:	cf 90       	pop	r12
    32e0:	09 ce       	rjmp	.-1006   	; 0x2ef4 <isr_lcd_10mhz_ref_osc_show_pos_lat>
    32e2:	20 91 1f 04 	lds	r18, 0x041F	; 0x80041f <s_rx_d+0x5>
    32e6:	30 91 20 04 	lds	r19, 0x0420	; 0x800420 <s_rx_d+0x6>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    32ea:	40 91 1e 04 	lds	r20, 0x041E	; 0x80041e <s_rx_d+0x4>
				case TWI_SMART_LCD_CMD_SHOW_POS_LAT:
					isr_lcd_10mhz_ref_osc_show_pos_lat(data[2], data[3], data[4], data[5] | (data[6] << 8));
				break;

				case TWI_SMART_LCD_CMD_SHOW_POS_LON:
					isr_lcd_10mhz_ref_osc_show_pos_lon(data[2], data[3], data[4], data[5] | (data[6] << 8));
    32ee:	60 91 1d 04 	lds	r22, 0x041D	; 0x80041d <s_rx_d+0x3>
				break;

				case TWI_SMART_LCD_CMD_SHOW_POS_HEIGHT:
					isr_lcd_10mhz_ref_osc_show_pos_height((data[2] | (data[3] << 8)), data[4]);
    32f2:	80 91 1c 04 	lds	r24, 0x041C	; 0x80041c <s_rx_d+0x2>
    32f6:	0f 91       	pop	r16
    32f8:	ef 90       	pop	r14
    32fa:	cf 90       	pop	r12
    32fc:	1e ce       	rjmp	.-964    	; 0x2f3a <isr_lcd_10mhz_ref_osc_show_pos_lon>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    32fe:	60 91 1e 04 	lds	r22, 0x041E	; 0x80041e <s_rx_d+0x4>
    3302:	80 91 1c 04 	lds	r24, 0x041C	; 0x80041c <s_rx_d+0x2>
				case TWI_SMART_LCD_CMD_SHOW_POS_LON:
					isr_lcd_10mhz_ref_osc_show_pos_lon(data[2], data[3], data[4], data[5] | (data[6] << 8));
				break;

				case TWI_SMART_LCD_CMD_SHOW_POS_HEIGHT:
					isr_lcd_10mhz_ref_osc_show_pos_height((data[2] | (data[3] << 8)), data[4]);
    3306:	90 91 1d 04 	lds	r25, 0x041D	; 0x80041d <s_rx_d+0x3>
					// do nothing for unsupported commands
				}
			}  // switch (cmd)
		}  // if (g_SmartLCD_mode == C_SMART_LCD_MODE_REFOSC)
	}  // if ((data[0] == TWI_SLAVE_ADDR_SMARTLCD))
}
    330a:	0f 91       	pop	r16
    330c:	ef 90       	pop	r14
    330e:	cf 90       	pop	r12
    3310:	37 ce       	rjmp	.-914    	; 0x2f80 <isr_lcd_10mhz_ref_osc_show_pos_height>
    3312:	0f 91       	pop	r16
    3314:	ef 90       	pop	r14
    3316:	cf 90       	pop	r12
    3318:	08 95       	ret

0000331a <__vector_24__bottom>:


uint8_t __vector_24__bottom(uint8_t tws, uint8_t twd, uint8_t twcr_cur)
{
    331a:	cf 93       	push	r28
    331c:	df 93       	push	r29
    331e:	d6 2f       	mov	r29, r22
	static uint8_t pos_i	= 0;
	static uint8_t pos_o	= 0;
	static uint8_t cnt_i	= 0;
	static uint8_t cnt_o	= 0;
	uint8_t twcr_new = twcr_cur & 0b01000101;
    3320:	c4 2f       	mov	r28, r20
    3322:	c5 74       	andi	r28, 0x45	; 69

	switch(tws) {
    3324:	88 36       	cpi	r24, 0x68	; 104
    3326:	09 f4       	brne	.+2      	; 0x332a <__vector_24__bottom+0x10>
    3328:	8c c0       	rjmp	.+280    	; 0x3442 <__vector_24__bottom+0x128>
    332a:	08 f0       	brcs	.+2      	; 0x332e <__vector_24__bottom+0x14>
    332c:	42 c0       	rjmp	.+132    	; 0x33b2 <__vector_24__bottom+0x98>
    332e:	80 33       	cpi	r24, 0x30	; 48
    3330:	09 f4       	brne	.+2      	; 0x3334 <__vector_24__bottom+0x1a>
    3332:	7f c0       	rjmp	.+254    	; 0x3432 <__vector_24__bottom+0x118>
    3334:	48 f5       	brcc	.+82     	; 0x3388 <__vector_24__bottom+0x6e>
    3336:	80 31       	cpi	r24, 0x10	; 16
    3338:	09 f4       	brne	.+2      	; 0x333c <__vector_24__bottom+0x22>
    333a:	66 c0       	rjmp	.+204    	; 0x3408 <__vector_24__bottom+0xee>
    333c:	d8 f4       	brcc	.+54     	; 0x3374 <__vector_24__bottom+0x5a>
    333e:	88 23       	and	r24, r24
    3340:	09 f4       	brne	.+2      	; 0x3344 <__vector_24__bottom+0x2a>
    3342:	49 c1       	rjmp	.+658    	; 0x35d6 <__vector_24__bottom+0x2bc>
    3344:	88 30       	cpi	r24, 0x08	; 8
    3346:	09 f0       	breq	.+2      	; 0x334a <__vector_24__bottom+0x30>
    3348:	46 c1       	rjmp	.+652    	; 0x35d6 <__vector_24__bottom+0x2bc>

	/* Master Transmitter Mode */

	case TWI_TWSR_START:						// Start condition transmitted
		s_tx_lock = 1;
		pos_o = 0;
    334a:	10 92 10 04 	sts	0x0410, r1	; 0x800410 <pos_o.2973>

		cnt_o = 2;								// TEST
    334e:	82 e0       	ldi	r24, 0x02	; 2
    3350:	80 93 0f 04 	sts	0x040F, r24	; 0x80040f <cnt_o.2975>
		s_tx_d[0] = (0x12 << TWD1) | (0b0 << TWD0);	// TEST
    3354:	84 e2       	ldi	r24, 0x24	; 36
    3356:	80 93 22 04 	sts	0x0422, r24	; 0x800422 <s_tx_d>
		s_tx_d[1] = 0x34;						// TEST
    335a:	84 e3       	ldi	r24, 0x34	; 52
    335c:	80 93 23 04 	sts	0x0423, r24	; 0x800423 <s_tx_d+0x1>
		s_tx_d[2] = 0x56;						// TEST
    3360:	86 e5       	ldi	r24, 0x56	; 86
    3362:	80 93 24 04 	sts	0x0424, r24	; 0x800424 <s_tx_d+0x2>
		s_tx_d[3] = 0x78;						// TEST
    3366:	88 e7       	ldi	r24, 0x78	; 120
    3368:	80 93 25 04 	sts	0x0425, r24	; 0x800425 <s_tx_d+0x3>
		s_tx_d[4] = 0x9a;						// TEST
    336c:	8a e9       	ldi	r24, 0x9A	; 154
    336e:	80 93 26 04 	sts	0x0426, r24	; 0x800426 <s_tx_d+0x4>
    3372:	4a c0       	rjmp	.+148    	; 0x3408 <__vector_24__bottom+0xee>
	static uint8_t pos_o	= 0;
	static uint8_t cnt_i	= 0;
	static uint8_t cnt_o	= 0;
	uint8_t twcr_new = twcr_cur & 0b01000101;

	switch(tws) {
    3374:	80 32       	cpi	r24, 0x20	; 32
    3376:	09 f4       	brne	.+2      	; 0x337a <__vector_24__bottom+0x60>
    3378:	5d c0       	rjmp	.+186    	; 0x3434 <__vector_24__bottom+0x11a>
    337a:	88 32       	cpi	r24, 0x28	; 40
    337c:	09 f4       	brne	.+2      	; 0x3380 <__vector_24__bottom+0x66>
    337e:	48 c0       	rjmp	.+144    	; 0x3410 <__vector_24__bottom+0xf6>
    3380:	88 31       	cpi	r24, 0x18	; 24
    3382:	09 f0       	breq	.+2      	; 0x3386 <__vector_24__bottom+0x6c>
    3384:	28 c1       	rjmp	.+592    	; 0x35d6 <__vector_24__bottom+0x2bc>
    3386:	41 c0       	rjmp	.+130    	; 0x340a <__vector_24__bottom+0xf0>
    3388:	88 34       	cpi	r24, 0x48	; 72
    338a:	09 f4       	brne	.+2      	; 0x338e <__vector_24__bottom+0x74>
    338c:	57 c0       	rjmp	.+174    	; 0x343c <__vector_24__bottom+0x122>
    338e:	38 f4       	brcc	.+14     	; 0x339e <__vector_24__bottom+0x84>
    3390:	88 33       	cpi	r24, 0x38	; 56
    3392:	09 f4       	brne	.+2      	; 0x3396 <__vector_24__bottom+0x7c>
    3394:	51 c0       	rjmp	.+162    	; 0x3438 <__vector_24__bottom+0x11e>
    3396:	80 34       	cpi	r24, 0x40	; 64
    3398:	09 f4       	brne	.+2      	; 0x339c <__vector_24__bottom+0x82>
    339a:	50 c0       	rjmp	.+160    	; 0x343c <__vector_24__bottom+0x122>
    339c:	1c c1       	rjmp	.+568    	; 0x35d6 <__vector_24__bottom+0x2bc>
    339e:	88 35       	cpi	r24, 0x58	; 88
    33a0:	09 f4       	brne	.+2      	; 0x33a4 <__vector_24__bottom+0x8a>
    33a2:	4c c0       	rjmp	.+152    	; 0x343c <__vector_24__bottom+0x122>
    33a4:	80 36       	cpi	r24, 0x60	; 96
    33a6:	09 f4       	brne	.+2      	; 0x33aa <__vector_24__bottom+0x90>
    33a8:	4b c0       	rjmp	.+150    	; 0x3440 <__vector_24__bottom+0x126>
    33aa:	80 35       	cpi	r24, 0x50	; 80
    33ac:	09 f0       	breq	.+2      	; 0x33b0 <__vector_24__bottom+0x96>
    33ae:	13 c1       	rjmp	.+550    	; 0x35d6 <__vector_24__bottom+0x2bc>
    33b0:	45 c0       	rjmp	.+138    	; 0x343c <__vector_24__bottom+0x122>
    33b2:	80 3a       	cpi	r24, 0xA0	; 160
    33b4:	09 f4       	brne	.+2      	; 0x33b8 <__vector_24__bottom+0x9e>
    33b6:	eb c0       	rjmp	.+470    	; 0x358e <__vector_24__bottom+0x274>
    33b8:	a8 f4       	brcc	.+42     	; 0x33e4 <__vector_24__bottom+0xca>
    33ba:	80 38       	cpi	r24, 0x80	; 128
    33bc:	09 f4       	brne	.+2      	; 0x33c0 <__vector_24__bottom+0xa6>
    33be:	50 c0       	rjmp	.+160    	; 0x3460 <__vector_24__bottom+0x146>
    33c0:	38 f4       	brcc	.+14     	; 0x33d0 <__vector_24__bottom+0xb6>
    33c2:	80 37       	cpi	r24, 0x70	; 112
    33c4:	09 f4       	brne	.+2      	; 0x33c8 <__vector_24__bottom+0xae>
    33c6:	43 c0       	rjmp	.+134    	; 0x344e <__vector_24__bottom+0x134>
    33c8:	88 37       	cpi	r24, 0x78	; 120
    33ca:	09 f4       	brne	.+2      	; 0x33ce <__vector_24__bottom+0xb4>
    33cc:	41 c0       	rjmp	.+130    	; 0x3450 <__vector_24__bottom+0x136>
    33ce:	03 c1       	rjmp	.+518    	; 0x35d6 <__vector_24__bottom+0x2bc>
    33d0:	80 39       	cpi	r24, 0x90	; 144
    33d2:	09 f4       	brne	.+2      	; 0x33d6 <__vector_24__bottom+0xbc>
    33d4:	46 c0       	rjmp	.+140    	; 0x3462 <__vector_24__bottom+0x148>
    33d6:	88 39       	cpi	r24, 0x98	; 152
    33d8:	09 f4       	brne	.+2      	; 0x33dc <__vector_24__bottom+0xc2>
    33da:	c9 c0       	rjmp	.+402    	; 0x356e <__vector_24__bottom+0x254>
    33dc:	88 38       	cpi	r24, 0x88	; 136
    33de:	09 f0       	breq	.+2      	; 0x33e2 <__vector_24__bottom+0xc8>
    33e0:	fa c0       	rjmp	.+500    	; 0x35d6 <__vector_24__bottom+0x2bc>
    33e2:	c5 c0       	rjmp	.+394    	; 0x356e <__vector_24__bottom+0x254>
    33e4:	88 3b       	cpi	r24, 0xB8	; 184
    33e6:	09 f4       	brne	.+2      	; 0x33ea <__vector_24__bottom+0xd0>
    33e8:	db c0       	rjmp	.+438    	; 0x35a0 <__vector_24__bottom+0x286>
    33ea:	20 f4       	brcc	.+8      	; 0x33f4 <__vector_24__bottom+0xda>
    33ec:	88 3a       	cpi	r24, 0xA8	; 168
    33ee:	09 f4       	brne	.+2      	; 0x33f2 <__vector_24__bottom+0xd8>
    33f0:	d7 c0       	rjmp	.+430    	; 0x35a0 <__vector_24__bottom+0x286>
    33f2:	f1 c0       	rjmp	.+482    	; 0x35d6 <__vector_24__bottom+0x2bc>
    33f4:	88 3c       	cpi	r24, 0xC8	; 200
    33f6:	09 f4       	brne	.+2      	; 0x33fa <__vector_24__bottom+0xe0>
    33f8:	ec c0       	rjmp	.+472    	; 0x35d2 <__vector_24__bottom+0x2b8>
    33fa:	88 3f       	cpi	r24, 0xF8	; 248
    33fc:	09 f4       	brne	.+2      	; 0x3400 <__vector_24__bottom+0xe6>
    33fe:	eb c0       	rjmp	.+470    	; 0x35d6 <__vector_24__bottom+0x2bc>
    3400:	80 3c       	cpi	r24, 0xC0	; 192
    3402:	09 f4       	brne	.+2      	; 0x3406 <__vector_24__bottom+0xec>
    3404:	e6 c0       	rjmp	.+460    	; 0x35d2 <__vector_24__bottom+0x2b8>
    3406:	e7 c0       	rjmp	.+462    	; 0x35d6 <__vector_24__bottom+0x2bc>
		s_tx_d[2] = 0x56;						// TEST
		s_tx_d[3] = 0x78;						// TEST
		s_tx_d[4] = 0x9a;						// TEST
		// fall-through.
	case TWI_TWSR_REPEATEDSTART:				// Repeated start condition transmitted
		nop();
    3408:	00 00       	nop
		// fall-through.
	case TWI_TWSR_M_SLAW_ADDR_ACK:				// SLA+W transmitted and ACK received
		TWDR = s_tx_d[pos_o++];
    340a:	e0 91 10 04 	lds	r30, 0x0410	; 0x800410 <pos_o.2973>
    340e:	06 c0       	rjmp	.+12     	; 0x341c <__vector_24__bottom+0x102>
	case TWI_TWSR_M_SLAW_ADDR_NACK:				// SLA+W transmitted and NACK received
		twcr_new |= _BV(TWSTO);					// Send STOP
	break;

	case TWI_TWSR_M_SLAW_DATA_ACK:				// Data byte sent and ACK received
		if (pos_o < cnt_o) {
    3410:	e0 91 10 04 	lds	r30, 0x0410	; 0x800410 <pos_o.2973>
    3414:	80 91 0f 04 	lds	r24, 0x040F	; 0x80040f <cnt_o.2975>
    3418:	e8 17       	cp	r30, r24
    341a:	58 f4       	brcc	.+22     	; 0x3432 <__vector_24__bottom+0x118>
			TWDR = s_tx_d[pos_o++];				// Send new data byte
    341c:	81 e0       	ldi	r24, 0x01	; 1
    341e:	8e 0f       	add	r24, r30
    3420:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <pos_o.2973>
    3424:	f0 e0       	ldi	r31, 0x00	; 0
    3426:	ee 5d       	subi	r30, 0xDE	; 222
    3428:	fb 4f       	sbci	r31, 0xFB	; 251
    342a:	80 81       	ld	r24, Z
    342c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
		} else {
			s_tx_lock = 0;
			s_twi_tx_done();					// Message sent
    3430:	d3 c0       	rjmp	.+422    	; 0x35d8 <__vector_24__bottom+0x2be>
			twcr_new |= _BV(TWSTO);				// Send STOP - no more data available
    3432:	eb dd       	rcall	.-1066   	; 0x300a <s_twi_tx_done>
    3434:	c0 61       	ori	r28, 0x10	; 16
		s_twi_tx_done();						// Message failure
		twcr_new |= _BV(TWSTO);					// Send STOP - due to an error or slave not ready situation
	break;

	case TWI_TWSR_M_SLAW_ARBIT_LOST:			// Arbitration lost
		twcr_new |= _BV(TWSTA);					// Send START (again)
    3436:	d0 c0       	rjmp	.+416    	; 0x35d8 <__vector_24__bottom+0x2be>
	break;
    3438:	c0 62       	ori	r28, 0x20	; 32
	case TWI_TWSR_M_SLAR_DATA_ACK:
		nop();
	break;

	case TWI_TWSR_M_SLAR_DATA_NACK:
		nop();
    343a:	ce c0       	rjmp	.+412    	; 0x35d8 <__vector_24__bottom+0x2be>
	break;
    343c:	00 00       	nop


	/* Slave Receiver Mode */

	case TWI_TWSR_S_SLAW_MYADDR_RECEIVED:		// SLA+W received and ACK returned
		nop();
    343e:	cc c0       	rjmp	.+408    	; 0x35d8 <__vector_24__bottom+0x2be>
		// fall-through.
	case TWI_TWSR_S_SLAW_MYADDR_ARBIT_LOST:
		mem_set(s_rx_d, 8, 0x00);
    3440:	00 00       	nop
    3442:	40 e0       	ldi	r20, 0x00	; 0
    3444:	68 e0       	ldi	r22, 0x08	; 8
    3446:	8a e1       	ldi	r24, 0x1A	; 26
    3448:	94 e0       	ldi	r25, 0x04	; 4
    344a:	14 d1       	rcall	.+552    	; 0x3674 <mem_set>
		pos_i = 1;								// Starting of reception
		twcr_new |= _BV(TWEA);					// Send ACK
	break;

	case TWI_TWSR_S_SLAW_OMNIADDR_RECEIVED:		// GCA received and ACK sent
		nop();
    344c:	01 c0       	rjmp	.+2      	; 0x3450 <__vector_24__bottom+0x136>
		// fall-through.
	case TWI_TWSR_S_SLAW_OMNIADDR_ARBIT_LOST:
		s_rx_d[0] = twd >> 1;					// GCA
    344e:	00 00       	nop
    3450:	d6 95       	lsr	r29
    3452:	d0 93 1a 04 	sts	0x041A, r29	; 0x80041a <s_rx_d>
		pos_i = 1;								// Starting of reception
    3456:	81 e0       	ldi	r24, 0x01	; 1
    3458:	80 93 0e 04 	sts	0x040E, r24	; 0x80040e <pos_i.2972>
		twcr_new |= _BV(TWEA);					// Send after next coming data byte ACK
	break;
    345c:	c0 64       	ori	r28, 0x40	; 64

	case TWI_TWSR_S_SLAW_MYADDR_DATA_ACK:		// Data after SLA+W received
		nop();
    345e:	bc c0       	rjmp	.+376    	; 0x35d8 <__vector_24__bottom+0x2be>
		// fall-through.
	case TWI_TWSR_S_SLAW_OMNIADDR_DATA_ACK:
		if (cnt_i != 0b1111) {					// Closed parameter form
    3460:	00 00       	nop
    3462:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <cnt_i.2974>
    3466:	8f 30       	cpi	r24, 0x0F	; 15
    3468:	09 f4       	brne	.+2      	; 0x346c <__vector_24__bottom+0x152>
			if (pos_i <= 0b1110) {
    346a:	7a c0       	rjmp	.+244    	; 0x3560 <__vector_24__bottom+0x246>
    346c:	90 91 0e 04 	lds	r25, 0x040E	; 0x80040e <pos_i.2972>
    3470:	9f 30       	cpi	r25, 0x0F	; 15
    3472:	08 f0       	brcs	.+2      	; 0x3476 <__vector_24__bottom+0x15c>
				s_rx_d[pos_i] = twd;			// [1]=cmd, [2..]=parameters
    3474:	79 c0       	rjmp	.+242    	; 0x3568 <__vector_24__bottom+0x24e>
    3476:	e9 2f       	mov	r30, r25
    3478:	f0 e0       	ldi	r31, 0x00	; 0
    347a:	e6 5e       	subi	r30, 0xE6	; 230
    347c:	fb 4f       	sbci	r31, 0xFB	; 251
			}
			if (pos_i == 1) {
    347e:	d0 83       	st	Z, r29
    3480:	91 30       	cpi	r25, 0x01	; 1
    3482:	09 f0       	breq	.+2      	; 0x3486 <__vector_24__bottom+0x16c>
				/* Load receive counter */
				if (s_rx_d[0] == TWI_SLAVE_ADDR_SMARTLCD) {
    3484:	63 c0       	rjmp	.+198    	; 0x354c <__vector_24__bottom+0x232>
    3486:	80 91 1a 04 	lds	r24, 0x041A	; 0x80041a <s_rx_d>
    348a:	82 32       	cpi	r24, 0x22	; 34
    348c:	09 f0       	breq	.+2      	; 0x3490 <__vector_24__bottom+0x176>
					cnt_i = 0;
    348e:	60 c0       	rjmp	.+192    	; 0x3550 <__vector_24__bottom+0x236>
    3490:	10 92 0d 04 	sts	0x040D, r1	; 0x80040d <cnt_i.2974>
					cnt_o = 0;
    3494:	10 92 0f 04 	sts	0x040F, r1	; 0x80040f <cnt_o.2975>

					switch (s_rx_d[1]) {
    3498:	80 91 1b 04 	lds	r24, 0x041B	; 0x80041b <s_rx_d+0x1>
    349c:	80 38       	cpi	r24, 0x80	; 128
    349e:	09 f4       	brne	.+2      	; 0x34a2 <__vector_24__bottom+0x188>
    34a0:	51 c0       	rjmp	.+162    	; 0x3544 <__vector_24__bottom+0x22a>
    34a2:	f0 f4       	brcc	.+60     	; 0x34e0 <__vector_24__bottom+0x1c6>
    34a4:	80 32       	cpi	r24, 0x20	; 32
    34a6:	09 f4       	brne	.+2      	; 0x34aa <__vector_24__bottom+0x190>
    34a8:	41 c0       	rjmp	.+130    	; 0x352c <__vector_24__bottom+0x212>
    34aa:	68 f4       	brcc	.+26     	; 0x34c6 <__vector_24__bottom+0x1ac>
    34ac:	82 30       	cpi	r24, 0x02	; 2
    34ae:	d1 f1       	breq	.+116    	; 0x3524 <__vector_24__bottom+0x20a>
    34b0:	28 f4       	brcc	.+10     	; 0x34bc <__vector_24__bottom+0x1a2>
    34b2:	88 23       	and	r24, r24
    34b4:	69 f1       	breq	.+90     	; 0x3510 <__vector_24__bottom+0x1f6>
    34b6:	81 30       	cpi	r24, 0x01	; 1
    34b8:	79 f1       	breq	.+94     	; 0x3518 <__vector_24__bottom+0x1fe>
    34ba:	4a c0       	rjmp	.+148    	; 0x3550 <__vector_24__bottom+0x236>
    34bc:	83 30       	cpi	r24, 0x03	; 3
    34be:	61 f1       	breq	.+88     	; 0x3518 <__vector_24__bottom+0x1fe>
    34c0:	84 31       	cpi	r24, 0x14	; 20
    34c2:	81 f1       	breq	.+96     	; 0x3524 <__vector_24__bottom+0x20a>
    34c4:	45 c0       	rjmp	.+138    	; 0x3550 <__vector_24__bottom+0x236>
    34c6:	86 33       	cpi	r24, 0x36	; 54
    34c8:	89 f1       	breq	.+98     	; 0x352c <__vector_24__bottom+0x212>
    34ca:	28 f4       	brcc	.+10     	; 0x34d6 <__vector_24__bottom+0x1bc>
    34cc:	82 33       	cpi	r24, 0x32	; 50
    34ce:	71 f1       	breq	.+92     	; 0x352c <__vector_24__bottom+0x212>
    34d0:	84 33       	cpi	r24, 0x34	; 52
    34d2:	61 f1       	breq	.+88     	; 0x352c <__vector_24__bottom+0x212>
    34d4:	3d c0       	rjmp	.+122    	; 0x3550 <__vector_24__bottom+0x236>
    34d6:	88 33       	cpi	r24, 0x38	; 56
    34d8:	29 f1       	breq	.+74     	; 0x3524 <__vector_24__bottom+0x20a>
    34da:	8a 33       	cpi	r24, 0x3A	; 58
    34dc:	19 f1       	breq	.+70     	; 0x3524 <__vector_24__bottom+0x20a>
    34de:	38 c0       	rjmp	.+112    	; 0x3550 <__vector_24__bottom+0x236>
    34e0:	88 38       	cpi	r24, 0x88	; 136
    34e2:	41 f1       	breq	.+80     	; 0x3534 <__vector_24__bottom+0x21a>
    34e4:	68 f4       	brcc	.+26     	; 0x3500 <__vector_24__bottom+0x1e6>
    34e6:	83 38       	cpi	r24, 0x83	; 131
    34e8:	49 f1       	breq	.+82     	; 0x353c <__vector_24__bottom+0x222>
    34ea:	28 f4       	brcc	.+10     	; 0x34f6 <__vector_24__bottom+0x1dc>
    34ec:	81 38       	cpi	r24, 0x81	; 129
    34ee:	31 f1       	breq	.+76     	; 0x353c <__vector_24__bottom+0x222>
    34f0:	82 38       	cpi	r24, 0x82	; 130
    34f2:	01 f1       	breq	.+64     	; 0x3534 <__vector_24__bottom+0x21a>
    34f4:	2d c0       	rjmp	.+90     	; 0x3550 <__vector_24__bottom+0x236>
    34f6:	84 38       	cpi	r24, 0x84	; 132
    34f8:	c9 f0       	breq	.+50     	; 0x352c <__vector_24__bottom+0x212>
    34fa:	85 38       	cpi	r24, 0x85	; 133
    34fc:	d9 f0       	breq	.+54     	; 0x3534 <__vector_24__bottom+0x21a>
    34fe:	28 c0       	rjmp	.+80     	; 0x3550 <__vector_24__bottom+0x236>
    3500:	8d 38       	cpi	r24, 0x8D	; 141
    3502:	18 f4       	brcc	.+6      	; 0x350a <__vector_24__bottom+0x1f0>
    3504:	8b 38       	cpi	r24, 0x8B	; 139
    3506:	90 f0       	brcs	.+36     	; 0x352c <__vector_24__bottom+0x212>
    3508:	1d c0       	rjmp	.+58     	; 0x3544 <__vector_24__bottom+0x22a>
    350a:	8d 38       	cpi	r24, 0x8D	; 141
    350c:	99 f0       	breq	.+38     	; 0x3534 <__vector_24__bottom+0x21a>
						case TWI_SMART_LCD_CMD_NOOP:
							cnt_i = 1;
    350e:	20 c0       	rjmp	.+64     	; 0x3550 <__vector_24__bottom+0x236>
    3510:	81 e0       	ldi	r24, 0x01	; 1
    3512:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <cnt_i.2974>
						break;


						case TWI_SMART_LCD_CMD_GET_VER:
						case TWI_SMART_LCD_CMD_GET_STATE:
							cnt_i = 1;
    3516:	1c c0       	rjmp	.+56     	; 0x3550 <__vector_24__bottom+0x236>
    3518:	81 e0       	ldi	r24, 0x01	; 1
    351a:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <cnt_i.2974>
							cnt_o = 1;
    351e:	80 93 0f 04 	sts	0x040F, r24	; 0x80040f <cnt_o.2975>

						case TWI_SMART_LCD_CMD_SET_MODE:
						case TWI_SMART_LCD_CMD_SET_PIXEL_TYPE:
						case TWI_SMART_LCD_CMD_DRAW_CIRC:
						case TWI_SMART_LCD_CMD_DRAW_FILLED_CIRC:
							cnt_i = 2;
    3522:	16 c0       	rjmp	.+44     	; 0x3550 <__vector_24__bottom+0x236>
    3524:	82 e0       	ldi	r24, 0x02	; 2
    3526:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <cnt_i.2974>
						case TWI_SMART_LCD_CMD_DRAW_RECT:
						case TWI_SMART_LCD_CMD_DRAW_FILLED_RECT:
						case TWI_SMART_LCD_CMD_SHOW_DOP:
						case TWI_SMART_LCD_CMD_SHOW_POS_STATE:
						case TWI_SMART_LCD_CMD_SHOW_TCXO_PWM:
							cnt_i = 3;
    352a:	12 c0       	rjmp	.+36     	; 0x3550 <__vector_24__bottom+0x236>
    352c:	83 e0       	ldi	r24, 0x03	; 3
    352e:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <cnt_i.2974>

						case TWI_SMART_LCD_CMD_SHOW_HR_MIN_SEC:
						case TWI_SMART_LCD_CMD_SHOW_POS_HEIGHT:
						case TWI_SMART_LCD_CMD_SHOW_SATS:
						case TWI_SMART_LCD_CMD_SHOW_TCXO_VC:
							cnt_i = 4;
    3532:	0e c0       	rjmp	.+28     	; 0x3550 <__vector_24__bottom+0x236>
    3534:	84 e0       	ldi	r24, 0x04	; 4
    3536:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <cnt_i.2974>
						break;

						case TWI_SMART_LCD_CMD_SHOW_PPB:
						case TWI_SMART_LCD_CMD_SHOW_YEAR_MON_DAY:
							cnt_i = 5;
    353a:	0a c0       	rjmp	.+20     	; 0x3550 <__vector_24__bottom+0x236>
    353c:	85 e0       	ldi	r24, 0x05	; 5
    353e:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <cnt_i.2974>
						break;

						case TWI_SMART_LCD_CMD_SHOW_CLK_STATE:
						case TWI_SMART_LCD_CMD_SHOW_POS_LAT:
						case TWI_SMART_LCD_CMD_SHOW_POS_LON:
							cnt_i = 6;
    3542:	06 c0       	rjmp	.+12     	; 0x3550 <__vector_24__bottom+0x236>
    3544:	86 e0       	ldi	r24, 0x06	; 6
    3546:	80 93 0d 04 	sts	0x040D, r24	; 0x80040d <cnt_i.2974>
						break;
					}
				}
			}

			if (pos_i < 0b1110) {
    354a:	02 c0       	rjmp	.+4      	; 0x3550 <__vector_24__bottom+0x236>
    354c:	9e 30       	cpi	r25, 0x0E	; 14
				if (++pos_i <= cnt_i) {
    354e:	60 f4       	brcc	.+24     	; 0x3568 <__vector_24__bottom+0x24e>
    3550:	9f 5f       	subi	r25, 0xFF	; 255
    3552:	90 93 0e 04 	sts	0x040E, r25	; 0x80040e <pos_i.2972>
    3556:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <cnt_i.2974>
    355a:	89 17       	cp	r24, r25
    355c:	28 f0       	brcs	.+10     	; 0x3568 <__vector_24__bottom+0x24e>
			} else {
				twcr_new &= ~_BV(TWEA);			// Send NACK
			}

		} else {								// Open parameter form
			s_rx_d[2] = twd;
    355e:	39 c0       	rjmp	.+114    	; 0x35d2 <__vector_24__bottom+0x2b8>
    3560:	d0 93 1c 04 	sts	0x041C, r29	; 0x80041c <s_rx_d+0x2>
			if (!s_isr_twi_rcvd_command_open_form(s_rx_d, ++pos_i)) {
				twcr_new |= _BV(TWEA);			// Send ACK
			} else {
				pos_i = 0;
    3564:	10 92 0e 04 	sts	0x040E, r1	; 0x80040e <pos_i.2972>
				twcr_new &= ~_BV(TWEA);			// Send NACK
    3568:	c4 2f       	mov	r28, r20
    356a:	c5 70       	andi	r28, 0x05	; 5
		}
	break;

	case TWI_TWSR_S_SLAW_MYADDR_DATA_NACK:		// NACK after last data byte sent
	case TWI_TWSR_S_SLAW_OMNIADDR_DATA_NACK:
		if (cnt_i != 0b1111) {
    356c:	35 c0       	rjmp	.+106    	; 0x35d8 <__vector_24__bottom+0x2be>
    356e:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <cnt_i.2974>
			s_isr_twi_rcvd_command_closed_form(s_rx_d, pos_i);	// Call interpreter for closed form of parameters
    3572:	8f 30       	cpi	r24, 0x0F	; 15
    3574:	09 f0       	breq	.+2      	; 0x3578 <__vector_24__bottom+0x25e>
		} else {
			s_isr_twi_rcvd_command_open_form(s_rx_d, ++pos_i);	// Call interpreter for open form of parameters
		}
		pos_i = 0;
    3576:	58 dd       	rcall	.-1360   	; 0x3028 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2>
    3578:	10 92 0e 04 	sts	0x040E, r1	; 0x80040e <pos_i.2972>
		cnt_i = 0;
    357c:	10 92 0d 04 	sts	0x040D, r1	; 0x80040d <cnt_i.2974>
		mem_set(s_rx_d, 8, 0x00);
    3580:	40 e0       	ldi	r20, 0x00	; 0
    3582:	68 e0       	ldi	r22, 0x08	; 8
    3584:	8a e1       	ldi	r24, 0x1A	; 26
    3586:	94 e0       	ldi	r25, 0x04	; 4
		twcr_new |= _BV(TWEA);					// TWI goes to unaddressed, be active again
    3588:	75 d0       	rcall	.+234    	; 0x3674 <mem_set>
	break;

	case TWI_TWSR_S_SLAW_STOP_REPEATEDSTART_RECEIVED:	// STOP or RESTART received while still addressed as slave
		if (cnt_i != 0b1111) {
    358a:	c0 64       	ori	r28, 0x40	; 64
    358c:	25 c0       	rjmp	.+74     	; 0x35d8 <__vector_24__bottom+0x2be>
    358e:	80 91 0d 04 	lds	r24, 0x040D	; 0x80040d <cnt_i.2974>
			s_isr_twi_rcvd_command_closed_form(s_rx_d, pos_i);	// Call interpreter for closed form of parameters
    3592:	8f 30       	cpi	r24, 0x0F	; 15
		} else {
			s_isr_twi_rcvd_command_open_form(s_rx_d, ++pos_i);	// Call interpreter for open form of parameters
		}
		pos_i = 0;
    3594:	09 f0       	breq	.+2      	; 0x3598 <__vector_24__bottom+0x27e>
    3596:	48 dd       	rcall	.-1392   	; 0x3028 <s_isr_twi_rcvd_command_closed_form.isra.1.constprop.2>
		twcr_new |= _BV(TWEA);					// TWI goes to unaddressed, be active again
    3598:	10 92 0e 04 	sts	0x040E, r1	; 0x80040e <pos_i.2972>

	/* Slave Transmitter Mode */

	case TWI_TWSR_S_SLAR_MYADDR_DATA_ACK:		// SLA+R received and ACK has been returned
	case TWI_TWSR_S_SLAR_OMNIADDR_DATA_ACK:		// Data sent and ACK has been returned
		pos_o = 0;
    359c:	c0 64       	ori	r28, 0x40	; 64
    359e:	1c c0       	rjmp	.+56     	; 0x35d8 <__vector_24__bottom+0x2be>
		cnt_o = s_rx_ret_len;
    35a0:	10 92 10 04 	sts	0x0410, r1	; 0x800410 <pos_o.2973>
    35a4:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <s_rx_ret_len>
		s_rx_ret_len = 0;
    35a8:	80 93 0f 04 	sts	0x040F, r24	; 0x80040f <cnt_o.2975>
		TWDR = cnt_o > pos_o ?  s_rx_ret_d[pos_o++] : 0x00;
    35ac:	10 92 11 04 	sts	0x0411, r1	; 0x800411 <s_rx_ret_len>
    35b0:	88 23       	and	r24, r24
    35b2:	31 f0       	breq	.+12     	; 0x35c0 <__vector_24__bottom+0x2a6>
    35b4:	81 e0       	ldi	r24, 0x01	; 1
    35b6:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <pos_o.2973>
    35ba:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <s_rx_ret_d>
    35be:	01 c0       	rjmp	.+2      	; 0x35c2 <__vector_24__bottom+0x2a8>
    35c0:	80 e0       	ldi	r24, 0x00	; 0
		if (cnt_o > pos_o) {
    35c2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    35c6:	90 91 0f 04 	lds	r25, 0x040F	; 0x80040f <cnt_o.2975>
    35ca:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <pos_o.2973>
		twcr_new |= _BV(TWEA);					// TWI goes to unaddressed, be active again
	break;

	case TWI_TWSR_S_SLAR_MYADDR_LASTDATA_ACK:	// Last data sent and ACK has been returned
		/* message transmitted successfully in slave mode */
		twcr_new |= _BV(TWEA);					// TWI goes to unaddressed, be active again
    35ce:	89 17       	cp	r24, r25
	break;
    35d0:	58 f6       	brcc	.-106    	; 0x3568 <__vector_24__bottom+0x24e>
	case TWI_TWSR_BUS_ERROR_UNKNOWN:
		twcr_new |= _BV(TWSTO) | _BV(TWEA);		// TWI goes to unaddressed, be active again
	break;

	default:
		twcr_new |= _BV(TWSTO) | _BV(TWEA);		// TWI goes to unaddressed, be active again
    35d2:	c0 64       	ori	r28, 0x40	; 64
	}

	return twcr_new;
}
    35d4:	01 c0       	rjmp	.+2      	; 0x35d8 <__vector_24__bottom+0x2be>
    35d6:	c0 65       	ori	r28, 0x50	; 80
    35d8:	8c 2f       	mov	r24, r28
    35da:	df 91       	pop	r29
    35dc:	cf 91       	pop	r28
    35de:	08 95       	ret

000035e0 <cpu_irq_save>:
    35e0:	cf 93       	push	r28
    35e2:	df 93       	push	r29
    35e4:	1f 92       	push	r1
    35e6:	cd b7       	in	r28, 0x3d	; 61
    35e8:	de b7       	in	r29, 0x3e	; 62
    35ea:	8f b7       	in	r24, 0x3f	; 63
    35ec:	89 83       	std	Y+1, r24	; 0x01
    35ee:	f8 94       	cli
    35f0:	89 81       	ldd	r24, Y+1	; 0x01
    35f2:	0f 90       	pop	r0
    35f4:	df 91       	pop	r29
    35f6:	cf 91       	pop	r28
    35f8:	08 95       	ret

000035fa <get_abs_time>:
    35fa:	8f 92       	push	r8
    35fc:	9f 92       	push	r9
    35fe:	af 92       	push	r10
    3600:	bf 92       	push	r11
    3602:	cf 92       	push	r12
    3604:	df 92       	push	r13
    3606:	ef 92       	push	r14
    3608:	ff 92       	push	r15
    360a:	ea df       	rcall	.-44     	; 0x35e0 <cpu_irq_save>
    360c:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    3610:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    3614:	c0 90 7a 04 	lds	r12, 0x047A	; 0x80047a <g_timer_abs_msb>
    3618:	d0 90 7b 04 	lds	r13, 0x047B	; 0x80047b <g_timer_abs_msb+0x1>
    361c:	e0 90 7c 04 	lds	r14, 0x047C	; 0x80047c <g_timer_abs_msb+0x2>
    3620:	f0 90 7d 04 	lds	r15, 0x047D	; 0x80047d <g_timer_abs_msb+0x3>
    3624:	8f bf       	out	0x3f, r24	; 63
    3626:	70 e0       	ldi	r23, 0x00	; 0
    3628:	79 2b       	or	r23, r25
    362a:	07 2e       	mov	r0, r23
    362c:	00 0c       	add	r0, r0
    362e:	88 0b       	sbc	r24, r24
    3630:	99 0b       	sbc	r25, r25
    3632:	5f d3       	rcall	.+1726   	; 0x3cf2 <__floatsisf>
    3634:	20 e0       	ldi	r18, 0x00	; 0
    3636:	34 e2       	ldi	r19, 0x24	; 36
    3638:	44 ef       	ldi	r20, 0xF4	; 244
    363a:	5a e4       	ldi	r21, 0x4A	; 74
    363c:	bf d2       	rcall	.+1406   	; 0x3bbc <__divsf3>
    363e:	4b 01       	movw	r8, r22
    3640:	5c 01       	movw	r10, r24
    3642:	c7 01       	movw	r24, r14
    3644:	b6 01       	movw	r22, r12
    3646:	53 d3       	rcall	.+1702   	; 0x3cee <__floatunsisf>
    3648:	20 e0       	ldi	r18, 0x00	; 0
    364a:	30 e0       	ldi	r19, 0x00	; 0
    364c:	40 e0       	ldi	r20, 0x00	; 0
    364e:	54 e4       	ldi	r21, 0x44	; 68
    3650:	57 d4       	rcall	.+2222   	; 0x3f00 <__mulsf3>
    3652:	20 e0       	ldi	r18, 0x00	; 0
    3654:	34 e2       	ldi	r19, 0x24	; 36
    3656:	44 ef       	ldi	r20, 0xF4	; 244
    3658:	5a e4       	ldi	r21, 0x4A	; 74
    365a:	b0 d2       	rcall	.+1376   	; 0x3bbc <__divsf3>
    365c:	a5 01       	movw	r20, r10
    365e:	94 01       	movw	r18, r8
    3660:	45 d2       	rcall	.+1162   	; 0x3aec <__addsf3>
    3662:	ff 90       	pop	r15
    3664:	ef 90       	pop	r14
    3666:	df 90       	pop	r13
    3668:	cf 90       	pop	r12
    366a:	bf 90       	pop	r11
    366c:	af 90       	pop	r10
    366e:	9f 90       	pop	r9
    3670:	8f 90       	pop	r8
    3672:	08 95       	ret

00003674 <mem_set>:
    3674:	70 e0       	ldi	r23, 0x00	; 0
    3676:	61 15       	cp	r22, r1
    3678:	71 05       	cpc	r23, r1
    367a:	31 f0       	breq	.+12     	; 0x3688 <mem_set+0x14>
    367c:	fc 01       	movw	r30, r24
    367e:	41 93       	st	Z+, r20
    3680:	cf 01       	movw	r24, r30
    3682:	61 50       	subi	r22, 0x01	; 1
    3684:	71 09       	sbc	r23, r1
    3686:	f7 cf       	rjmp	.-18     	; 0x3676 <mem_set+0x2>
    3688:	08 95       	ret

0000368a <eeprom_nvm_settings_write>:
    368a:	cf 93       	push	r28
    368c:	c8 2f       	mov	r28, r24
    368e:	87 ff       	sbrs	r24, 7
    3690:	04 c0       	rjmp	.+8      	; 0x369a <eeprom_nvm_settings_write+0x10>
    3692:	61 e1       	ldi	r22, 0x11	; 17
    3694:	80 e0       	ldi	r24, 0x00	; 0
    3696:	90 e0       	ldi	r25, 0x00	; 0
    3698:	8d d7       	rcall	.+3866   	; 0x45b4 <eeprom_write_byte>
    369a:	c0 ff       	sbrs	r28, 0
    369c:	07 c0       	rjmp	.+14     	; 0x36ac <eeprom_nvm_settings_write+0x22>
    369e:	60 91 6b 04 	lds	r22, 0x046B	; 0x80046b <g_lcd_contrast_pm>
    36a2:	6f 73       	andi	r22, 0x3F	; 63
    36a4:	80 e1       	ldi	r24, 0x10	; 16
    36a6:	90 e0       	ldi	r25, 0x00	; 0
    36a8:	cf 91       	pop	r28
    36aa:	84 c7       	rjmp	.+3848   	; 0x45b4 <eeprom_write_byte>
    36ac:	cf 91       	pop	r28
    36ae:	08 95       	ret

000036b0 <eeprom_nvm_settings_read>:
    36b0:	87 ff       	sbrs	r24, 7
    36b2:	07 c0       	rjmp	.+14     	; 0x36c2 <eeprom_nvm_settings_read+0x12>
    36b4:	80 e0       	ldi	r24, 0x00	; 0
    36b6:	90 e0       	ldi	r25, 0x00	; 0
    36b8:	75 d7       	rcall	.+3818   	; 0x45a4 <eeprom_read_byte>
    36ba:	81 31       	cpi	r24, 0x11	; 17
    36bc:	11 f0       	breq	.+4      	; 0x36c2 <eeprom_nvm_settings_read+0x12>
    36be:	80 e8       	ldi	r24, 0x80	; 128
    36c0:	e4 df       	rcall	.-56     	; 0x368a <eeprom_nvm_settings_write>
    36c2:	86 e1       	ldi	r24, 0x16	; 22
    36c4:	80 93 6b 04 	sts	0x046B, r24	; 0x80046b <g_lcd_contrast_pm>
    36c8:	08 95       	ret

000036ca <task>:
    36ca:	8f 92       	push	r8
    36cc:	9f 92       	push	r9
    36ce:	af 92       	push	r10
    36d0:	bf 92       	push	r11
    36d2:	cf 92       	push	r12
    36d4:	df 92       	push	r13
    36d6:	ef 92       	push	r14
    36d8:	ff 92       	push	r15
    36da:	0f 93       	push	r16
    36dc:	1f 93       	push	r17
    36de:	cf 93       	push	r28
    36e0:	df 93       	push	r29
    36e2:	cd b7       	in	r28, 0x3d	; 61
    36e4:	de b7       	in	r29, 0x3e	; 62
    36e6:	a8 97       	sbiw	r28, 0x28	; 40
    36e8:	0f b6       	in	r0, 0x3f	; 63
    36ea:	f8 94       	cli
    36ec:	de bf       	out	0x3e, r29	; 62
    36ee:	0f be       	out	0x3f, r0	; 63
    36f0:	cd bf       	out	0x3d, r28	; 61
    36f2:	76 df       	rcall	.-276    	; 0x35e0 <cpu_irq_save>
    36f4:	80 90 71 04 	lds	r8, 0x0471	; 0x800471 <g_adc_temp>
    36f8:	90 90 72 04 	lds	r9, 0x0472	; 0x800472 <g_adc_temp+0x1>
    36fc:	a0 90 73 04 	lds	r10, 0x0473	; 0x800473 <g_adc_temp+0x2>
    3700:	b0 90 74 04 	lds	r11, 0x0474	; 0x800474 <g_adc_temp+0x3>
    3704:	c0 90 75 04 	lds	r12, 0x0475	; 0x800475 <g_adc_light>
    3708:	d0 90 76 04 	lds	r13, 0x0476	; 0x800476 <g_adc_light+0x1>
    370c:	e0 90 77 04 	lds	r14, 0x0477	; 0x800477 <g_adc_light+0x2>
    3710:	f0 90 78 04 	lds	r15, 0x0478	; 0x800478 <g_adc_light+0x3>
    3714:	8f bf       	out	0x3f, r24	; 63
    3716:	64 df       	rcall	.-312    	; 0x35e0 <cpu_irq_save>
    3718:	18 2f       	mov	r17, r24
    371a:	29 e1       	ldi	r18, 0x19	; 25
    371c:	37 ec       	ldi	r19, 0xC7	; 199
    371e:	4f ea       	ldi	r20, 0xAF	; 175
    3720:	53 e4       	ldi	r21, 0x43	; 67
    3722:	c5 01       	movw	r24, r10
    3724:	b4 01       	movw	r22, r8
    3726:	e1 d1       	rcall	.+962    	; 0x3aea <__subsf3>
    3728:	20 e0       	ldi	r18, 0x00	; 0
    372a:	30 ea       	ldi	r19, 0xA0	; 160
    372c:	47 e8       	ldi	r20, 0x87	; 135
    372e:	5f e3       	ldi	r21, 0x3F	; 63
    3730:	e7 d3       	rcall	.+1998   	; 0x3f00 <__mulsf3>
    3732:	20 e0       	ldi	r18, 0x00	; 0
    3734:	30 e0       	ldi	r19, 0x00	; 0
    3736:	48 ec       	ldi	r20, 0xC8	; 200
    3738:	51 e4       	ldi	r21, 0x41	; 65
    373a:	d8 d1       	rcall	.+944    	; 0x3aec <__addsf3>
    373c:	60 93 6d 04 	sts	0x046D, r22	; 0x80046d <g_temp>
    3740:	70 93 6e 04 	sts	0x046E, r23	; 0x80046e <g_temp+0x1>
    3744:	80 93 6f 04 	sts	0x046F, r24	; 0x80046f <g_temp+0x2>
    3748:	90 93 70 04 	sts	0x0470, r25	; 0x800470 <g_temp+0x3>
    374c:	1f bf       	out	0x3f, r17	; 63
    374e:	c7 01       	movw	r24, r14
    3750:	b6 01       	movw	r22, r12
    3752:	a1 d2       	rcall	.+1346   	; 0x3c96 <__fixunssfsi>
    3754:	66 3b       	cpi	r22, 0xB6	; 182
    3756:	23 e0       	ldi	r18, 0x03	; 3
    3758:	72 07       	cpc	r23, r18
    375a:	00 f5       	brcc	.+64     	; 0x379c <task+0xd2>
    375c:	80 e0       	ldi	r24, 0x00	; 0
    375e:	90 e0       	ldi	r25, 0x00	; 0
    3760:	c6 d2       	rcall	.+1420   	; 0x3cee <__floatunsisf>
    3762:	20 e0       	ldi	r18, 0x00	; 0
    3764:	30 e0       	ldi	r19, 0x00	; 0
    3766:	40 e2       	ldi	r20, 0x20	; 32
    3768:	51 e4       	ldi	r21, 0x41	; 65
    376a:	bf d1       	rcall	.+894    	; 0x3aea <__subsf3>
    376c:	20 e0       	ldi	r18, 0x00	; 0
    376e:	30 e8       	ldi	r19, 0x80	; 128
    3770:	4d e6       	ldi	r20, 0x6D	; 109
    3772:	54 e4       	ldi	r21, 0x44	; 68
    3774:	23 d2       	rcall	.+1094   	; 0x3bbc <__divsf3>
    3776:	20 e0       	ldi	r18, 0x00	; 0
    3778:	30 e0       	ldi	r19, 0x00	; 0
    377a:	45 e7       	ldi	r20, 0x75	; 117
    377c:	53 e4       	ldi	r21, 0x43	; 67
    377e:	c0 d3       	rcall	.+1920   	; 0x3f00 <__mulsf3>
    3780:	20 e0       	ldi	r18, 0x00	; 0
    3782:	30 e0       	ldi	r19, 0x00	; 0
    3784:	40 e2       	ldi	r20, 0x20	; 32
    3786:	51 e4       	ldi	r21, 0x41	; 65
    3788:	b1 d1       	rcall	.+866    	; 0x3aec <__addsf3>
    378a:	85 d2       	rcall	.+1290   	; 0x3c96 <__fixunssfsi>
    378c:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    3790:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3794:	80 68       	ori	r24, 0x80	; 128
    3796:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    379a:	07 c0       	rjmp	.+14     	; 0x37aa <task+0xe0>
    379c:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    37a0:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    37a4:	8f 73       	andi	r24, 0x3F	; 63
    37a6:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    37aa:	1a df       	rcall	.-460    	; 0x35e0 <cpu_irq_save>
    37ac:	10 91 30 04 	lds	r17, 0x0430	; 0x800430 <g_SmartLCD_mode>
    37b0:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <g_status>
    37b4:	09 2f       	mov	r16, r25
    37b6:	01 70       	andi	r16, 0x01	; 1
    37b8:	96 95       	lsr	r25
    37ba:	91 70       	andi	r25, 0x01	; 1
    37bc:	8f bf       	out	0x3f, r24	; 63
    37be:	99 23       	and	r25, r25
    37c0:	09 f4       	brne	.+2      	; 0x37c4 <task+0xfa>
    37c2:	46 c0       	rjmp	.+140    	; 0x3850 <task+0x186>
    37c4:	10 31       	cpi	r17, 0x10	; 16
    37c6:	21 f4       	brne	.+8      	; 0x37d0 <task+0x106>
    37c8:	0e 94 31 0e 	call	0x1c62	; 0x1c62 <lcd_show_new_smartlcd_data>
    37cc:	f8 2e       	mov	r15, r24
    37ce:	06 c0       	rjmp	.+12     	; 0x37dc <task+0x112>
    37d0:	10 32       	cpi	r17, 0x20	; 32
    37d2:	09 f0       	breq	.+2      	; 0x37d6 <task+0x10c>
    37d4:	3d c0       	rjmp	.+122    	; 0x3850 <task+0x186>
    37d6:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <lcd_show_new_refosc_data>
    37da:	f8 2e       	mov	r15, r24
    37dc:	01 11       	cpse	r16, r1
    37de:	35 c0       	rjmp	.+106    	; 0x384a <task+0x180>
    37e0:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <s_last_animation.3296>
    37e4:	88 23       	and	r24, r24
    37e6:	89 f1       	breq	.+98     	; 0x384a <task+0x180>
    37e8:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <s_last_animation.3296>
    37ec:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <lcd_cls>
    37f0:	10 31       	cpi	r17, 0x10	; 16
    37f2:	41 f4       	brne	.+16     	; 0x3804 <task+0x13a>
    37f4:	01 e0       	ldi	r16, 0x01	; 1
    37f6:	20 e8       	ldi	r18, 0x80	; 128
    37f8:	40 ef       	ldi	r20, 0xF0	; 240
    37fa:	60 e0       	ldi	r22, 0x00	; 0
    37fc:	80 e0       	ldi	r24, 0x00	; 0
    37fe:	0e 94 62 04 	call	0x8c4	; 0x8c4 <gfx_mono_generic_draw_rect>
    3802:	1c c0       	rjmp	.+56     	; 0x383c <task+0x172>
    3804:	10 32       	cpi	r17, 0x20	; 32
    3806:	d1 f4       	brne	.+52     	; 0x383c <task+0x172>
    3808:	01 e0       	ldi	r16, 0x01	; 1
    380a:	20 e8       	ldi	r18, 0x80	; 128
    380c:	40 ef       	ldi	r20, 0xF0	; 240
    380e:	60 e0       	ldi	r22, 0x00	; 0
    3810:	80 e0       	ldi	r24, 0x00	; 0
    3812:	0e 94 62 04 	call	0x8c4	; 0x8c4 <gfx_mono_generic_draw_rect>
    3816:	88 e2       	ldi	r24, 0x28	; 40
    3818:	e0 e2       	ldi	r30, 0x20	; 32
    381a:	f3 e0       	ldi	r31, 0x03	; 3
    381c:	de 01       	movw	r26, r28
    381e:	11 96       	adiw	r26, 0x01	; 1
    3820:	01 90       	ld	r0, Z+
    3822:	0d 92       	st	X+, r0
    3824:	8a 95       	dec	r24
    3826:	e1 f7       	brne	.-8      	; 0x3820 <task+0x156>
    3828:	c2 db       	rcall	.-2172   	; 0x2fae <lcd_get_sysfont>
    382a:	9c 01       	movw	r18, r24
    382c:	42 e0       	ldi	r20, 0x02	; 2
    382e:	63 e0       	ldi	r22, 0x03	; 3
    3830:	ce 01       	movw	r24, r28
    3832:	01 96       	adiw	r24, 0x01	; 1
    3834:	0e 94 cc 06 	call	0xd98	; 0xd98 <gfx_mono_draw_string>
    3838:	0e 94 e5 0c 	call	0x19ca	; 0x19ca <lcd_show_template>
    383c:	d1 de       	rcall	.-606    	; 0x35e0 <cpu_irq_save>
    383e:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <g_status>
    3842:	92 60       	ori	r25, 0x02	; 2
    3844:	90 93 66 04 	sts	0x0466, r25	; 0x800466 <g_status>
    3848:	8f bf       	out	0x3f, r24	; 63
    384a:	f1 10       	cpse	r15, r1
    384c:	ae cf       	rjmp	.-164    	; 0x37aa <task+0xe0>
    384e:	04 c0       	rjmp	.+8      	; 0x3858 <task+0x18e>
    3850:	01 11       	cpse	r16, r1
    3852:	02 c0       	rjmp	.+4      	; 0x3858 <task+0x18e>
    3854:	f1 2c       	mov	r15, r1
    3856:	c4 cf       	rjmp	.-120    	; 0x37e0 <task+0x116>
    3858:	a8 96       	adiw	r28, 0x28	; 40
    385a:	0f b6       	in	r0, 0x3f	; 63
    385c:	f8 94       	cli
    385e:	de bf       	out	0x3e, r29	; 62
    3860:	0f be       	out	0x3f, r0	; 63
    3862:	cd bf       	out	0x3d, r28	; 61
    3864:	df 91       	pop	r29
    3866:	cf 91       	pop	r28
    3868:	1f 91       	pop	r17
    386a:	0f 91       	pop	r16
    386c:	ff 90       	pop	r15
    386e:	ef 90       	pop	r14
    3870:	df 90       	pop	r13
    3872:	cf 90       	pop	r12
    3874:	bf 90       	pop	r11
    3876:	af 90       	pop	r10
    3878:	9f 90       	pop	r9
    387a:	8f 90       	pop	r8
    387c:	08 95       	ret

0000387e <main>:
    387e:	cf 93       	push	r28
    3880:	df 93       	push	r29
    3882:	8e e7       	ldi	r24, 0x7E	; 126
    3884:	88 b9       	out	0x08, r24	; 8
    3886:	88 e0       	ldi	r24, 0x08	; 8
    3888:	87 b9       	out	0x07, r24	; 7
    388a:	84 e1       	ldi	r24, 0x14	; 20
    388c:	85 b9       	out	0x05, r24	; 5
    388e:	8b ef       	ldi	r24, 0xFB	; 251
    3890:	84 b9       	out	0x04, r24	; 4
    3892:	8f ef       	ldi	r24, 0xFF	; 255
    3894:	8b b9       	out	0x0b, r24	; 11
    3896:	1a b8       	out	0x0a, r1	; 10
    3898:	c1 e0       	ldi	r28, 0x01	; 1
    389a:	c0 93 7e 00 	sts	0x007E, r28	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
    389e:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <sysclk_init>
    38a2:	8b ee       	ldi	r24, 0xEB	; 235
    38a4:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    38a8:	d3 e8       	ldi	r29, 0x83	; 131
    38aa:	d3 bd       	out	0x23, r29	; 35
    38ac:	68 e0       	ldi	r22, 0x08	; 8
    38ae:	80 e0       	ldi	r24, 0x00	; 0
    38b0:	0e 94 12 03 	call	0x624	; 0x624 <sysclk_enable_module>
    38b4:	82 e8       	ldi	r24, 0x82	; 130
    38b6:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    38ba:	89 e0       	ldi	r24, 0x09	; 9
    38bc:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    38c0:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    38c4:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    38c8:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    38cc:	80 e8       	ldi	r24, 0x80	; 128
    38ce:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    38d2:	c0 93 6f 00 	sts	0x006F, r28	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    38d6:	87 e2       	ldi	r24, 0x27	; 39
    38d8:	86 bb       	out	0x16, r24	; 22
    38da:	60 e4       	ldi	r22, 0x40	; 64
    38dc:	80 e0       	ldi	r24, 0x00	; 0
    38de:	0e 94 12 03 	call	0x624	; 0x624 <sysclk_enable_module>
    38e2:	d0 93 b0 00 	sts	0x00B0, r29	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    38e6:	85 e0       	ldi	r24, 0x05	; 5
    38e8:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    38ec:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
    38f0:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    38f4:	c0 93 70 00 	sts	0x0070, r28	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
    38f8:	87 e0       	ldi	r24, 0x07	; 7
    38fa:	87 bb       	out	0x17, r24	; 23
    38fc:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
    3900:	61 e0       	ldi	r22, 0x01	; 1
    3902:	80 e0       	ldi	r24, 0x00	; 0
    3904:	0e 94 12 03 	call	0x624	; 0x624 <sysclk_enable_module>
    3908:	c0 93 7e 00 	sts	0x007E, r28	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
    390c:	87 e8       	ldi	r24, 0x87	; 135
    390e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3912:	80 ec       	ldi	r24, 0xC0	; 192
    3914:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    3918:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    391c:	80 61       	ori	r24, 0x10	; 16
    391e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3922:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3926:	88 60       	ori	r24, 0x08	; 8
    3928:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    392c:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
    3930:	88 7f       	andi	r24, 0xF8	; 248
    3932:	86 60       	ori	r24, 0x06	; 6
    3934:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
    3938:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    393c:	80 62       	ori	r24, 0x20	; 32
    393e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3942:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <board_init>
    3946:	84 b7       	in	r24, 0x34	; 52
    3948:	98 2f       	mov	r25, r24
    394a:	97 70       	andi	r25, 0x07	; 7
    394c:	11 f4       	brne	.+4      	; 0x3952 <main+0xd4>
    394e:	81 11       	cpse	r24, r1
    3950:	2b c0       	rjmp	.+86     	; 0x39a8 <main+0x12a>
    3952:	46 de       	rcall	.-884    	; 0x35e0 <cpu_irq_save>
    3954:	f8 94       	cli
    3956:	10 92 79 04 	sts	0x0479, r1	; 0x800479 <g_adc_state>
    395a:	10 92 75 04 	sts	0x0475, r1	; 0x800475 <g_adc_light>
    395e:	10 92 76 04 	sts	0x0476, r1	; 0x800476 <g_adc_light+0x1>
    3962:	10 92 77 04 	sts	0x0477, r1	; 0x800477 <g_adc_light+0x2>
    3966:	10 92 78 04 	sts	0x0478, r1	; 0x800478 <g_adc_light+0x3>
    396a:	10 92 71 04 	sts	0x0471, r1	; 0x800471 <g_adc_temp>
    396e:	10 92 72 04 	sts	0x0472, r1	; 0x800472 <g_adc_temp+0x1>
    3972:	10 92 73 04 	sts	0x0473, r1	; 0x800473 <g_adc_temp+0x2>
    3976:	10 92 74 04 	sts	0x0474, r1	; 0x800474 <g_adc_temp+0x3>
    397a:	40 e0       	ldi	r20, 0x00	; 0
    397c:	50 e0       	ldi	r21, 0x00	; 0
    397e:	68 ec       	ldi	r22, 0xC8	; 200
    3980:	71 e4       	ldi	r23, 0x41	; 65
    3982:	40 93 6d 04 	sts	0x046D, r20	; 0x80046d <g_temp>
    3986:	50 93 6e 04 	sts	0x046E, r21	; 0x80046e <g_temp+0x1>
    398a:	60 93 6f 04 	sts	0x046F, r22	; 0x80046f <g_temp+0x2>
    398e:	70 93 70 04 	sts	0x0470, r23	; 0x800470 <g_temp+0x3>
    3992:	90 e4       	ldi	r25, 0x40	; 64
    3994:	90 93 6c 04 	sts	0x046C, r25	; 0x80046c <g_lcdbl_dimmer>
    3998:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <g_status>
    399c:	9e 7f       	andi	r25, 0xFE	; 254
    399e:	9d 7f       	andi	r25, 0xFD	; 253
    39a0:	90 93 66 04 	sts	0x0466, r25	; 0x800466 <g_status>
    39a4:	8f bf       	out	0x3f, r24	; 63
    39a6:	0d c0       	rjmp	.+26     	; 0x39c2 <main+0x144>
    39a8:	90 e0       	ldi	r25, 0x00	; 0
    39aa:	a0 e0       	ldi	r26, 0x00	; 0
    39ac:	b0 e0       	ldi	r27, 0x00	; 0
    39ae:	80 93 2c 04 	sts	0x042C, r24	; 0x80042c <g_u32_DEBUG21>
    39b2:	90 93 2d 04 	sts	0x042D, r25	; 0x80042d <g_u32_DEBUG21+0x1>
    39b6:	a0 93 2e 04 	sts	0x042E, r26	; 0x80042e <g_u32_DEBUG21+0x2>
    39ba:	b0 93 2f 04 	sts	0x042F, r27	; 0x80042f <g_u32_DEBUG21+0x3>
    39be:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <asm_break>
    39c2:	8f ef       	ldi	r24, 0xFF	; 255
    39c4:	75 de       	rcall	.-790    	; 0x36b0 <eeprom_nvm_settings_read>
    39c6:	60 e8       	ldi	r22, 0x80	; 128
    39c8:	80 e0       	ldi	r24, 0x00	; 0
    39ca:	0e 94 12 03 	call	0x624	; 0x624 <sysclk_enable_module>
    39ce:	08 de       	rcall	.-1008   	; 0x35e0 <cpu_irq_save>
    39d0:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    39d4:	92 e0       	ldi	r25, 0x02	; 2
    39d6:	90 93 b8 00 	sts	0x00B8, r25	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    39da:	94 e4       	ldi	r25, 0x44	; 68
    39dc:	90 93 ba 00 	sts	0x00BA, r25	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7e00ba>
    39e0:	10 92 bd 00 	sts	0x00BD, r1	; 0x8000bd <__TEXT_REGION_LENGTH__+0x7e00bd>
    39e4:	95 e4       	ldi	r25, 0x45	; 69
    39e6:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    39ea:	8f bf       	out	0x3f, r24	; 63
    39ec:	78 94       	sei
    39ee:	13 bc       	out	0x23, r1	; 35
    39f0:	e1 da       	rcall	.-2622   	; 0x2fb4 <lcd_init>
    39f2:	81 ef       	ldi	r24, 0xF1	; 241
    39f4:	ac d8       	rcall	.-3752   	; 0x2b4e <lcd_test>
    39f6:	81 e0       	ldi	r24, 0x01	; 1
    39f8:	80 93 2b 04 	sts	0x042B, r24	; 0x80042b <runmode>
    39fc:	c1 e0       	ldi	r28, 0x01	; 1
    39fe:	80 91 2b 04 	lds	r24, 0x042B	; 0x80042b <runmode>
    3a02:	88 23       	and	r24, r24
    3a04:	39 f0       	breq	.+14     	; 0x3a14 <main+0x196>
    3a06:	61 de       	rcall	.-830    	; 0x36ca <task>
    3a08:	c3 bf       	out	0x33, r28	; 51
    3a0a:	88 95       	sleep
    3a0c:	83 b7       	in	r24, 0x33	; 51
    3a0e:	8e 7f       	andi	r24, 0xFE	; 254
    3a10:	83 bf       	out	0x33, r24	; 51
    3a12:	f5 cf       	rjmp	.-22     	; 0x39fe <main+0x180>
    3a14:	f1 da       	rcall	.-2590   	; 0x2ff8 <lcd_shutdown>
    3a16:	f8 94       	cli
    3a18:	80 b7       	in	r24, 0x30	; 48
    3a1a:	80 68       	ori	r24, 0x80	; 128
    3a1c:	80 bf       	out	0x30, r24	; 48
    3a1e:	64 e0       	ldi	r22, 0x04	; 4
    3a20:	80 e0       	ldi	r24, 0x00	; 0
    3a22:	0e 94 28 03 	call	0x650	; 0x650 <sysclk_disable_module>
    3a26:	62 e0       	ldi	r22, 0x02	; 2
    3a28:	80 e0       	ldi	r24, 0x00	; 0
    3a2a:	0e 94 28 03 	call	0x650	; 0x650 <sysclk_disable_module>
    3a2e:	d8 dd       	rcall	.-1104   	; 0x35e0 <cpu_irq_save>
    3a30:	94 e0       	ldi	r25, 0x04	; 4
    3a32:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    3a36:	3c 98       	cbi	0x07, 4	; 7
    3a38:	44 9a       	sbi	0x08, 4	; 8
    3a3a:	3d 98       	cbi	0x07, 5	; 7
    3a3c:	45 9a       	sbi	0x08, 5	; 8
    3a3e:	10 92 bc 00 	sts	0x00BC, r1	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    3a42:	8f bf       	out	0x3f, r24	; 63
    3a44:	60 e8       	ldi	r22, 0x80	; 128
    3a46:	80 e0       	ldi	r24, 0x00	; 0
    3a48:	0e 94 28 03 	call	0x650	; 0x650 <sysclk_disable_module>
    3a4c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3a50:	87 7f       	andi	r24, 0xF7	; 247
    3a52:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3a56:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3a5a:	8f 7d       	andi	r24, 0xDF	; 223
    3a5c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3a60:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
    3a64:	88 7f       	andi	r24, 0xF8	; 248
    3a66:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
    3a6a:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    3a6e:	10 92 7e 00 	sts	0x007E, r1	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
    3a72:	61 e0       	ldi	r22, 0x01	; 1
    3a74:	80 e0       	ldi	r24, 0x00	; 0
    3a76:	0e 94 28 03 	call	0x650	; 0x650 <sysclk_disable_module>
    3a7a:	b2 dd       	rcall	.-1180   	; 0x35e0 <cpu_irq_save>
    3a7c:	c8 2f       	mov	r28, r24
    3a7e:	60 e2       	ldi	r22, 0x20	; 32
    3a80:	80 e0       	ldi	r24, 0x00	; 0
    3a82:	0e 94 28 03 	call	0x650	; 0x650 <sysclk_disable_module>
    3a86:	21 98       	cbi	0x04, 1	; 4
    3a88:	29 98       	cbi	0x05, 1	; 5
    3a8a:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    3a8e:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    3a92:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
    3a96:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    3a9a:	68 e0       	ldi	r22, 0x08	; 8
    3a9c:	80 e0       	ldi	r24, 0x00	; 0
    3a9e:	0e 94 28 03 	call	0x650	; 0x650 <sysclk_disable_module>
    3aa2:	23 9a       	sbi	0x04, 3	; 4
    3aa4:	2b 98       	cbi	0x05, 3	; 5
    3aa6:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    3aaa:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    3aae:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
    3ab2:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
    3ab6:	60 e4       	ldi	r22, 0x40	; 64
    3ab8:	80 e0       	ldi	r24, 0x00	; 0
    3aba:	0e 94 28 03 	call	0x650	; 0x650 <sysclk_disable_module>
    3abe:	90 dd       	rcall	.-1248   	; 0x35e0 <cpu_irq_save>
    3ac0:	5f 93       	push	r21
    3ac2:	50 e8       	ldi	r21, 0x80	; 128
    3ac4:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    3ac8:	50 e0       	ldi	r21, 0x00	; 0
    3aca:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    3ace:	5f 91       	pop	r21
    3ad0:	8f bf       	out	0x3f, r24	; 63
    3ad2:	cf bf       	out	0x3f, r28	; 63
    3ad4:	89 e0       	ldi	r24, 0x09	; 9
    3ad6:	83 bf       	out	0x33, r24	; 51
    3ad8:	88 95       	sleep
    3ada:	83 b7       	in	r24, 0x33	; 51
    3adc:	8e 7f       	andi	r24, 0xFE	; 254
    3ade:	83 bf       	out	0x33, r24	; 51
    3ae0:	80 e0       	ldi	r24, 0x00	; 0
    3ae2:	90 e0       	ldi	r25, 0x00	; 0
    3ae4:	df 91       	pop	r29
    3ae6:	cf 91       	pop	r28
    3ae8:	08 95       	ret

00003aea <__subsf3>:
    3aea:	50 58       	subi	r21, 0x80	; 128

00003aec <__addsf3>:
    3aec:	bb 27       	eor	r27, r27
    3aee:	aa 27       	eor	r26, r26
    3af0:	0e d0       	rcall	.+28     	; 0x3b0e <__addsf3x>
    3af2:	b1 c1       	rjmp	.+866    	; 0x3e56 <__fp_round>
    3af4:	a2 d1       	rcall	.+836    	; 0x3e3a <__fp_pscA>
    3af6:	30 f0       	brcs	.+12     	; 0x3b04 <__addsf3+0x18>
    3af8:	a7 d1       	rcall	.+846    	; 0x3e48 <__fp_pscB>
    3afa:	20 f0       	brcs	.+8      	; 0x3b04 <__addsf3+0x18>
    3afc:	31 f4       	brne	.+12     	; 0x3b0a <__addsf3+0x1e>
    3afe:	9f 3f       	cpi	r25, 0xFF	; 255
    3b00:	11 f4       	brne	.+4      	; 0x3b06 <__addsf3+0x1a>
    3b02:	1e f4       	brtc	.+6      	; 0x3b0a <__addsf3+0x1e>
    3b04:	97 c1       	rjmp	.+814    	; 0x3e34 <__fp_nan>
    3b06:	0e f4       	brtc	.+2      	; 0x3b0a <__addsf3+0x1e>
    3b08:	e0 95       	com	r30
    3b0a:	e7 fb       	bst	r30, 7
    3b0c:	64 c1       	rjmp	.+712    	; 0x3dd6 <__fp_inf>

00003b0e <__addsf3x>:
    3b0e:	e9 2f       	mov	r30, r25
    3b10:	b3 d1       	rcall	.+870    	; 0x3e78 <__fp_split3>
    3b12:	80 f3       	brcs	.-32     	; 0x3af4 <__addsf3+0x8>
    3b14:	ba 17       	cp	r27, r26
    3b16:	62 07       	cpc	r22, r18
    3b18:	73 07       	cpc	r23, r19
    3b1a:	84 07       	cpc	r24, r20
    3b1c:	95 07       	cpc	r25, r21
    3b1e:	18 f0       	brcs	.+6      	; 0x3b26 <__addsf3x+0x18>
    3b20:	71 f4       	brne	.+28     	; 0x3b3e <__addsf3x+0x30>
    3b22:	9e f5       	brtc	.+102    	; 0x3b8a <__addsf3x+0x7c>
    3b24:	e2 c1       	rjmp	.+964    	; 0x3eea <__fp_zero>
    3b26:	0e f4       	brtc	.+2      	; 0x3b2a <__addsf3x+0x1c>
    3b28:	e0 95       	com	r30
    3b2a:	0b 2e       	mov	r0, r27
    3b2c:	ba 2f       	mov	r27, r26
    3b2e:	a0 2d       	mov	r26, r0
    3b30:	0b 01       	movw	r0, r22
    3b32:	b9 01       	movw	r22, r18
    3b34:	90 01       	movw	r18, r0
    3b36:	0c 01       	movw	r0, r24
    3b38:	ca 01       	movw	r24, r20
    3b3a:	a0 01       	movw	r20, r0
    3b3c:	11 24       	eor	r1, r1
    3b3e:	ff 27       	eor	r31, r31
    3b40:	59 1b       	sub	r21, r25
    3b42:	99 f0       	breq	.+38     	; 0x3b6a <__addsf3x+0x5c>
    3b44:	59 3f       	cpi	r21, 0xF9	; 249
    3b46:	50 f4       	brcc	.+20     	; 0x3b5c <__addsf3x+0x4e>
    3b48:	50 3e       	cpi	r21, 0xE0	; 224
    3b4a:	68 f1       	brcs	.+90     	; 0x3ba6 <__addsf3x+0x98>
    3b4c:	1a 16       	cp	r1, r26
    3b4e:	f0 40       	sbci	r31, 0x00	; 0
    3b50:	a2 2f       	mov	r26, r18
    3b52:	23 2f       	mov	r18, r19
    3b54:	34 2f       	mov	r19, r20
    3b56:	44 27       	eor	r20, r20
    3b58:	58 5f       	subi	r21, 0xF8	; 248
    3b5a:	f3 cf       	rjmp	.-26     	; 0x3b42 <__addsf3x+0x34>
    3b5c:	46 95       	lsr	r20
    3b5e:	37 95       	ror	r19
    3b60:	27 95       	ror	r18
    3b62:	a7 95       	ror	r26
    3b64:	f0 40       	sbci	r31, 0x00	; 0
    3b66:	53 95       	inc	r21
    3b68:	c9 f7       	brne	.-14     	; 0x3b5c <__addsf3x+0x4e>
    3b6a:	7e f4       	brtc	.+30     	; 0x3b8a <__addsf3x+0x7c>
    3b6c:	1f 16       	cp	r1, r31
    3b6e:	ba 0b       	sbc	r27, r26
    3b70:	62 0b       	sbc	r22, r18
    3b72:	73 0b       	sbc	r23, r19
    3b74:	84 0b       	sbc	r24, r20
    3b76:	ba f0       	brmi	.+46     	; 0x3ba6 <__addsf3x+0x98>
    3b78:	91 50       	subi	r25, 0x01	; 1
    3b7a:	a1 f0       	breq	.+40     	; 0x3ba4 <__addsf3x+0x96>
    3b7c:	ff 0f       	add	r31, r31
    3b7e:	bb 1f       	adc	r27, r27
    3b80:	66 1f       	adc	r22, r22
    3b82:	77 1f       	adc	r23, r23
    3b84:	88 1f       	adc	r24, r24
    3b86:	c2 f7       	brpl	.-16     	; 0x3b78 <__addsf3x+0x6a>
    3b88:	0e c0       	rjmp	.+28     	; 0x3ba6 <__addsf3x+0x98>
    3b8a:	ba 0f       	add	r27, r26
    3b8c:	62 1f       	adc	r22, r18
    3b8e:	73 1f       	adc	r23, r19
    3b90:	84 1f       	adc	r24, r20
    3b92:	48 f4       	brcc	.+18     	; 0x3ba6 <__addsf3x+0x98>
    3b94:	87 95       	ror	r24
    3b96:	77 95       	ror	r23
    3b98:	67 95       	ror	r22
    3b9a:	b7 95       	ror	r27
    3b9c:	f7 95       	ror	r31
    3b9e:	9e 3f       	cpi	r25, 0xFE	; 254
    3ba0:	08 f0       	brcs	.+2      	; 0x3ba4 <__addsf3x+0x96>
    3ba2:	b3 cf       	rjmp	.-154    	; 0x3b0a <__addsf3+0x1e>
    3ba4:	93 95       	inc	r25
    3ba6:	88 0f       	add	r24, r24
    3ba8:	08 f0       	brcs	.+2      	; 0x3bac <__addsf3x+0x9e>
    3baa:	99 27       	eor	r25, r25
    3bac:	ee 0f       	add	r30, r30
    3bae:	97 95       	ror	r25
    3bb0:	87 95       	ror	r24
    3bb2:	08 95       	ret

00003bb4 <__cmpsf2>:
    3bb4:	ec d0       	rcall	.+472    	; 0x3d8e <__fp_cmp>
    3bb6:	08 f4       	brcc	.+2      	; 0x3bba <__cmpsf2+0x6>
    3bb8:	81 e0       	ldi	r24, 0x01	; 1
    3bba:	08 95       	ret

00003bbc <__divsf3>:
    3bbc:	0c d0       	rcall	.+24     	; 0x3bd6 <__divsf3x>
    3bbe:	4b c1       	rjmp	.+662    	; 0x3e56 <__fp_round>
    3bc0:	43 d1       	rcall	.+646    	; 0x3e48 <__fp_pscB>
    3bc2:	40 f0       	brcs	.+16     	; 0x3bd4 <__divsf3+0x18>
    3bc4:	3a d1       	rcall	.+628    	; 0x3e3a <__fp_pscA>
    3bc6:	30 f0       	brcs	.+12     	; 0x3bd4 <__divsf3+0x18>
    3bc8:	21 f4       	brne	.+8      	; 0x3bd2 <__divsf3+0x16>
    3bca:	5f 3f       	cpi	r21, 0xFF	; 255
    3bcc:	19 f0       	breq	.+6      	; 0x3bd4 <__divsf3+0x18>
    3bce:	03 c1       	rjmp	.+518    	; 0x3dd6 <__fp_inf>
    3bd0:	51 11       	cpse	r21, r1
    3bd2:	8c c1       	rjmp	.+792    	; 0x3eec <__fp_szero>
    3bd4:	2f c1       	rjmp	.+606    	; 0x3e34 <__fp_nan>

00003bd6 <__divsf3x>:
    3bd6:	50 d1       	rcall	.+672    	; 0x3e78 <__fp_split3>
    3bd8:	98 f3       	brcs	.-26     	; 0x3bc0 <__divsf3+0x4>

00003bda <__divsf3_pse>:
    3bda:	99 23       	and	r25, r25
    3bdc:	c9 f3       	breq	.-14     	; 0x3bd0 <__divsf3+0x14>
    3bde:	55 23       	and	r21, r21
    3be0:	b1 f3       	breq	.-20     	; 0x3bce <__divsf3+0x12>
    3be2:	95 1b       	sub	r25, r21
    3be4:	55 0b       	sbc	r21, r21
    3be6:	bb 27       	eor	r27, r27
    3be8:	aa 27       	eor	r26, r26
    3bea:	62 17       	cp	r22, r18
    3bec:	73 07       	cpc	r23, r19
    3bee:	84 07       	cpc	r24, r20
    3bf0:	38 f0       	brcs	.+14     	; 0x3c00 <__divsf3_pse+0x26>
    3bf2:	9f 5f       	subi	r25, 0xFF	; 255
    3bf4:	5f 4f       	sbci	r21, 0xFF	; 255
    3bf6:	22 0f       	add	r18, r18
    3bf8:	33 1f       	adc	r19, r19
    3bfa:	44 1f       	adc	r20, r20
    3bfc:	aa 1f       	adc	r26, r26
    3bfe:	a9 f3       	breq	.-22     	; 0x3bea <__divsf3_pse+0x10>
    3c00:	33 d0       	rcall	.+102    	; 0x3c68 <__divsf3_pse+0x8e>
    3c02:	0e 2e       	mov	r0, r30
    3c04:	3a f0       	brmi	.+14     	; 0x3c14 <__divsf3_pse+0x3a>
    3c06:	e0 e8       	ldi	r30, 0x80	; 128
    3c08:	30 d0       	rcall	.+96     	; 0x3c6a <__divsf3_pse+0x90>
    3c0a:	91 50       	subi	r25, 0x01	; 1
    3c0c:	50 40       	sbci	r21, 0x00	; 0
    3c0e:	e6 95       	lsr	r30
    3c10:	00 1c       	adc	r0, r0
    3c12:	ca f7       	brpl	.-14     	; 0x3c06 <__divsf3_pse+0x2c>
    3c14:	29 d0       	rcall	.+82     	; 0x3c68 <__divsf3_pse+0x8e>
    3c16:	fe 2f       	mov	r31, r30
    3c18:	27 d0       	rcall	.+78     	; 0x3c68 <__divsf3_pse+0x8e>
    3c1a:	66 0f       	add	r22, r22
    3c1c:	77 1f       	adc	r23, r23
    3c1e:	88 1f       	adc	r24, r24
    3c20:	bb 1f       	adc	r27, r27
    3c22:	26 17       	cp	r18, r22
    3c24:	37 07       	cpc	r19, r23
    3c26:	48 07       	cpc	r20, r24
    3c28:	ab 07       	cpc	r26, r27
    3c2a:	b0 e8       	ldi	r27, 0x80	; 128
    3c2c:	09 f0       	breq	.+2      	; 0x3c30 <__divsf3_pse+0x56>
    3c2e:	bb 0b       	sbc	r27, r27
    3c30:	80 2d       	mov	r24, r0
    3c32:	bf 01       	movw	r22, r30
    3c34:	ff 27       	eor	r31, r31
    3c36:	93 58       	subi	r25, 0x83	; 131
    3c38:	5f 4f       	sbci	r21, 0xFF	; 255
    3c3a:	2a f0       	brmi	.+10     	; 0x3c46 <__divsf3_pse+0x6c>
    3c3c:	9e 3f       	cpi	r25, 0xFE	; 254
    3c3e:	51 05       	cpc	r21, r1
    3c40:	68 f0       	brcs	.+26     	; 0x3c5c <__divsf3_pse+0x82>
    3c42:	c9 c0       	rjmp	.+402    	; 0x3dd6 <__fp_inf>
    3c44:	53 c1       	rjmp	.+678    	; 0x3eec <__fp_szero>
    3c46:	5f 3f       	cpi	r21, 0xFF	; 255
    3c48:	ec f3       	brlt	.-6      	; 0x3c44 <__divsf3_pse+0x6a>
    3c4a:	98 3e       	cpi	r25, 0xE8	; 232
    3c4c:	dc f3       	brlt	.-10     	; 0x3c44 <__divsf3_pse+0x6a>
    3c4e:	86 95       	lsr	r24
    3c50:	77 95       	ror	r23
    3c52:	67 95       	ror	r22
    3c54:	b7 95       	ror	r27
    3c56:	f7 95       	ror	r31
    3c58:	9f 5f       	subi	r25, 0xFF	; 255
    3c5a:	c9 f7       	brne	.-14     	; 0x3c4e <__divsf3_pse+0x74>
    3c5c:	88 0f       	add	r24, r24
    3c5e:	91 1d       	adc	r25, r1
    3c60:	96 95       	lsr	r25
    3c62:	87 95       	ror	r24
    3c64:	97 f9       	bld	r25, 7
    3c66:	08 95       	ret
    3c68:	e1 e0       	ldi	r30, 0x01	; 1
    3c6a:	66 0f       	add	r22, r22
    3c6c:	77 1f       	adc	r23, r23
    3c6e:	88 1f       	adc	r24, r24
    3c70:	bb 1f       	adc	r27, r27
    3c72:	62 17       	cp	r22, r18
    3c74:	73 07       	cpc	r23, r19
    3c76:	84 07       	cpc	r24, r20
    3c78:	ba 07       	cpc	r27, r26
    3c7a:	20 f0       	brcs	.+8      	; 0x3c84 <__divsf3_pse+0xaa>
    3c7c:	62 1b       	sub	r22, r18
    3c7e:	73 0b       	sbc	r23, r19
    3c80:	84 0b       	sbc	r24, r20
    3c82:	ba 0b       	sbc	r27, r26
    3c84:	ee 1f       	adc	r30, r30
    3c86:	88 f7       	brcc	.-30     	; 0x3c6a <__divsf3_pse+0x90>
    3c88:	e0 95       	com	r30
    3c8a:	08 95       	ret

00003c8c <__fixsfsi>:
    3c8c:	04 d0       	rcall	.+8      	; 0x3c96 <__fixunssfsi>
    3c8e:	68 94       	set
    3c90:	b1 11       	cpse	r27, r1
    3c92:	2c c1       	rjmp	.+600    	; 0x3eec <__fp_szero>
    3c94:	08 95       	ret

00003c96 <__fixunssfsi>:
    3c96:	f8 d0       	rcall	.+496    	; 0x3e88 <__fp_splitA>
    3c98:	88 f0       	brcs	.+34     	; 0x3cbc <__fixunssfsi+0x26>
    3c9a:	9f 57       	subi	r25, 0x7F	; 127
    3c9c:	90 f0       	brcs	.+36     	; 0x3cc2 <__fixunssfsi+0x2c>
    3c9e:	b9 2f       	mov	r27, r25
    3ca0:	99 27       	eor	r25, r25
    3ca2:	b7 51       	subi	r27, 0x17	; 23
    3ca4:	a0 f0       	brcs	.+40     	; 0x3cce <__fixunssfsi+0x38>
    3ca6:	d1 f0       	breq	.+52     	; 0x3cdc <__fixunssfsi+0x46>
    3ca8:	66 0f       	add	r22, r22
    3caa:	77 1f       	adc	r23, r23
    3cac:	88 1f       	adc	r24, r24
    3cae:	99 1f       	adc	r25, r25
    3cb0:	1a f0       	brmi	.+6      	; 0x3cb8 <__fixunssfsi+0x22>
    3cb2:	ba 95       	dec	r27
    3cb4:	c9 f7       	brne	.-14     	; 0x3ca8 <__fixunssfsi+0x12>
    3cb6:	12 c0       	rjmp	.+36     	; 0x3cdc <__fixunssfsi+0x46>
    3cb8:	b1 30       	cpi	r27, 0x01	; 1
    3cba:	81 f0       	breq	.+32     	; 0x3cdc <__fixunssfsi+0x46>
    3cbc:	16 d1       	rcall	.+556    	; 0x3eea <__fp_zero>
    3cbe:	b1 e0       	ldi	r27, 0x01	; 1
    3cc0:	08 95       	ret
    3cc2:	13 c1       	rjmp	.+550    	; 0x3eea <__fp_zero>
    3cc4:	67 2f       	mov	r22, r23
    3cc6:	78 2f       	mov	r23, r24
    3cc8:	88 27       	eor	r24, r24
    3cca:	b8 5f       	subi	r27, 0xF8	; 248
    3ccc:	39 f0       	breq	.+14     	; 0x3cdc <__fixunssfsi+0x46>
    3cce:	b9 3f       	cpi	r27, 0xF9	; 249
    3cd0:	cc f3       	brlt	.-14     	; 0x3cc4 <__fixunssfsi+0x2e>
    3cd2:	86 95       	lsr	r24
    3cd4:	77 95       	ror	r23
    3cd6:	67 95       	ror	r22
    3cd8:	b3 95       	inc	r27
    3cda:	d9 f7       	brne	.-10     	; 0x3cd2 <__fixunssfsi+0x3c>
    3cdc:	3e f4       	brtc	.+14     	; 0x3cec <__fixunssfsi+0x56>
    3cde:	90 95       	com	r25
    3ce0:	80 95       	com	r24
    3ce2:	70 95       	com	r23
    3ce4:	61 95       	neg	r22
    3ce6:	7f 4f       	sbci	r23, 0xFF	; 255
    3ce8:	8f 4f       	sbci	r24, 0xFF	; 255
    3cea:	9f 4f       	sbci	r25, 0xFF	; 255
    3cec:	08 95       	ret

00003cee <__floatunsisf>:
    3cee:	e8 94       	clt
    3cf0:	09 c0       	rjmp	.+18     	; 0x3d04 <__floatsisf+0x12>

00003cf2 <__floatsisf>:
    3cf2:	97 fb       	bst	r25, 7
    3cf4:	3e f4       	brtc	.+14     	; 0x3d04 <__floatsisf+0x12>
    3cf6:	90 95       	com	r25
    3cf8:	80 95       	com	r24
    3cfa:	70 95       	com	r23
    3cfc:	61 95       	neg	r22
    3cfe:	7f 4f       	sbci	r23, 0xFF	; 255
    3d00:	8f 4f       	sbci	r24, 0xFF	; 255
    3d02:	9f 4f       	sbci	r25, 0xFF	; 255
    3d04:	99 23       	and	r25, r25
    3d06:	a9 f0       	breq	.+42     	; 0x3d32 <__floatsisf+0x40>
    3d08:	f9 2f       	mov	r31, r25
    3d0a:	96 e9       	ldi	r25, 0x96	; 150
    3d0c:	bb 27       	eor	r27, r27
    3d0e:	93 95       	inc	r25
    3d10:	f6 95       	lsr	r31
    3d12:	87 95       	ror	r24
    3d14:	77 95       	ror	r23
    3d16:	67 95       	ror	r22
    3d18:	b7 95       	ror	r27
    3d1a:	f1 11       	cpse	r31, r1
    3d1c:	f8 cf       	rjmp	.-16     	; 0x3d0e <__floatsisf+0x1c>
    3d1e:	fa f4       	brpl	.+62     	; 0x3d5e <__floatsisf+0x6c>
    3d20:	bb 0f       	add	r27, r27
    3d22:	11 f4       	brne	.+4      	; 0x3d28 <__floatsisf+0x36>
    3d24:	60 ff       	sbrs	r22, 0
    3d26:	1b c0       	rjmp	.+54     	; 0x3d5e <__floatsisf+0x6c>
    3d28:	6f 5f       	subi	r22, 0xFF	; 255
    3d2a:	7f 4f       	sbci	r23, 0xFF	; 255
    3d2c:	8f 4f       	sbci	r24, 0xFF	; 255
    3d2e:	9f 4f       	sbci	r25, 0xFF	; 255
    3d30:	16 c0       	rjmp	.+44     	; 0x3d5e <__floatsisf+0x6c>
    3d32:	88 23       	and	r24, r24
    3d34:	11 f0       	breq	.+4      	; 0x3d3a <__floatsisf+0x48>
    3d36:	96 e9       	ldi	r25, 0x96	; 150
    3d38:	11 c0       	rjmp	.+34     	; 0x3d5c <__floatsisf+0x6a>
    3d3a:	77 23       	and	r23, r23
    3d3c:	21 f0       	breq	.+8      	; 0x3d46 <__floatsisf+0x54>
    3d3e:	9e e8       	ldi	r25, 0x8E	; 142
    3d40:	87 2f       	mov	r24, r23
    3d42:	76 2f       	mov	r23, r22
    3d44:	05 c0       	rjmp	.+10     	; 0x3d50 <__floatsisf+0x5e>
    3d46:	66 23       	and	r22, r22
    3d48:	71 f0       	breq	.+28     	; 0x3d66 <__floatsisf+0x74>
    3d4a:	96 e8       	ldi	r25, 0x86	; 134
    3d4c:	86 2f       	mov	r24, r22
    3d4e:	70 e0       	ldi	r23, 0x00	; 0
    3d50:	60 e0       	ldi	r22, 0x00	; 0
    3d52:	2a f0       	brmi	.+10     	; 0x3d5e <__floatsisf+0x6c>
    3d54:	9a 95       	dec	r25
    3d56:	66 0f       	add	r22, r22
    3d58:	77 1f       	adc	r23, r23
    3d5a:	88 1f       	adc	r24, r24
    3d5c:	da f7       	brpl	.-10     	; 0x3d54 <__floatsisf+0x62>
    3d5e:	88 0f       	add	r24, r24
    3d60:	96 95       	lsr	r25
    3d62:	87 95       	ror	r24
    3d64:	97 f9       	bld	r25, 7
    3d66:	08 95       	ret

00003d68 <floor>:
    3d68:	a9 d0       	rcall	.+338    	; 0x3ebc <__fp_trunc>
    3d6a:	80 f0       	brcs	.+32     	; 0x3d8c <floor+0x24>
    3d6c:	9f 37       	cpi	r25, 0x7F	; 127
    3d6e:	40 f4       	brcc	.+16     	; 0x3d80 <floor+0x18>
    3d70:	91 11       	cpse	r25, r1
    3d72:	0e f0       	brts	.+2      	; 0x3d76 <floor+0xe>
    3d74:	bb c0       	rjmp	.+374    	; 0x3eec <__fp_szero>
    3d76:	60 e0       	ldi	r22, 0x00	; 0
    3d78:	70 e0       	ldi	r23, 0x00	; 0
    3d7a:	80 e8       	ldi	r24, 0x80	; 128
    3d7c:	9f eb       	ldi	r25, 0xBF	; 191
    3d7e:	08 95       	ret
    3d80:	26 f4       	brtc	.+8      	; 0x3d8a <floor+0x22>
    3d82:	1b 16       	cp	r1, r27
    3d84:	61 1d       	adc	r22, r1
    3d86:	71 1d       	adc	r23, r1
    3d88:	81 1d       	adc	r24, r1
    3d8a:	2b c0       	rjmp	.+86     	; 0x3de2 <__fp_mintl>
    3d8c:	45 c0       	rjmp	.+138    	; 0x3e18 <__fp_mpack>

00003d8e <__fp_cmp>:
    3d8e:	99 0f       	add	r25, r25
    3d90:	00 08       	sbc	r0, r0
    3d92:	55 0f       	add	r21, r21
    3d94:	aa 0b       	sbc	r26, r26
    3d96:	e0 e8       	ldi	r30, 0x80	; 128
    3d98:	fe ef       	ldi	r31, 0xFE	; 254
    3d9a:	16 16       	cp	r1, r22
    3d9c:	17 06       	cpc	r1, r23
    3d9e:	e8 07       	cpc	r30, r24
    3da0:	f9 07       	cpc	r31, r25
    3da2:	c0 f0       	brcs	.+48     	; 0x3dd4 <__fp_cmp+0x46>
    3da4:	12 16       	cp	r1, r18
    3da6:	13 06       	cpc	r1, r19
    3da8:	e4 07       	cpc	r30, r20
    3daa:	f5 07       	cpc	r31, r21
    3dac:	98 f0       	brcs	.+38     	; 0x3dd4 <__fp_cmp+0x46>
    3dae:	62 1b       	sub	r22, r18
    3db0:	73 0b       	sbc	r23, r19
    3db2:	84 0b       	sbc	r24, r20
    3db4:	95 0b       	sbc	r25, r21
    3db6:	39 f4       	brne	.+14     	; 0x3dc6 <__fp_cmp+0x38>
    3db8:	0a 26       	eor	r0, r26
    3dba:	61 f0       	breq	.+24     	; 0x3dd4 <__fp_cmp+0x46>
    3dbc:	23 2b       	or	r18, r19
    3dbe:	24 2b       	or	r18, r20
    3dc0:	25 2b       	or	r18, r21
    3dc2:	21 f4       	brne	.+8      	; 0x3dcc <__fp_cmp+0x3e>
    3dc4:	08 95       	ret
    3dc6:	0a 26       	eor	r0, r26
    3dc8:	09 f4       	brne	.+2      	; 0x3dcc <__fp_cmp+0x3e>
    3dca:	a1 40       	sbci	r26, 0x01	; 1
    3dcc:	a6 95       	lsr	r26
    3dce:	8f ef       	ldi	r24, 0xFF	; 255
    3dd0:	81 1d       	adc	r24, r1
    3dd2:	81 1d       	adc	r24, r1
    3dd4:	08 95       	ret

00003dd6 <__fp_inf>:
    3dd6:	97 f9       	bld	r25, 7
    3dd8:	9f 67       	ori	r25, 0x7F	; 127
    3dda:	80 e8       	ldi	r24, 0x80	; 128
    3ddc:	70 e0       	ldi	r23, 0x00	; 0
    3dde:	60 e0       	ldi	r22, 0x00	; 0
    3de0:	08 95       	ret

00003de2 <__fp_mintl>:
    3de2:	88 23       	and	r24, r24
    3de4:	71 f4       	brne	.+28     	; 0x3e02 <__fp_mintl+0x20>
    3de6:	77 23       	and	r23, r23
    3de8:	21 f0       	breq	.+8      	; 0x3df2 <__fp_mintl+0x10>
    3dea:	98 50       	subi	r25, 0x08	; 8
    3dec:	87 2b       	or	r24, r23
    3dee:	76 2f       	mov	r23, r22
    3df0:	07 c0       	rjmp	.+14     	; 0x3e00 <__fp_mintl+0x1e>
    3df2:	66 23       	and	r22, r22
    3df4:	11 f4       	brne	.+4      	; 0x3dfa <__fp_mintl+0x18>
    3df6:	99 27       	eor	r25, r25
    3df8:	0d c0       	rjmp	.+26     	; 0x3e14 <__fp_mintl+0x32>
    3dfa:	90 51       	subi	r25, 0x10	; 16
    3dfc:	86 2b       	or	r24, r22
    3dfe:	70 e0       	ldi	r23, 0x00	; 0
    3e00:	60 e0       	ldi	r22, 0x00	; 0
    3e02:	2a f0       	brmi	.+10     	; 0x3e0e <__fp_mintl+0x2c>
    3e04:	9a 95       	dec	r25
    3e06:	66 0f       	add	r22, r22
    3e08:	77 1f       	adc	r23, r23
    3e0a:	88 1f       	adc	r24, r24
    3e0c:	da f7       	brpl	.-10     	; 0x3e04 <__fp_mintl+0x22>
    3e0e:	88 0f       	add	r24, r24
    3e10:	96 95       	lsr	r25
    3e12:	87 95       	ror	r24
    3e14:	97 f9       	bld	r25, 7
    3e16:	08 95       	ret

00003e18 <__fp_mpack>:
    3e18:	9f 3f       	cpi	r25, 0xFF	; 255
    3e1a:	31 f0       	breq	.+12     	; 0x3e28 <__fp_mpack_finite+0xc>

00003e1c <__fp_mpack_finite>:
    3e1c:	91 50       	subi	r25, 0x01	; 1
    3e1e:	20 f4       	brcc	.+8      	; 0x3e28 <__fp_mpack_finite+0xc>
    3e20:	87 95       	ror	r24
    3e22:	77 95       	ror	r23
    3e24:	67 95       	ror	r22
    3e26:	b7 95       	ror	r27
    3e28:	88 0f       	add	r24, r24
    3e2a:	91 1d       	adc	r25, r1
    3e2c:	96 95       	lsr	r25
    3e2e:	87 95       	ror	r24
    3e30:	97 f9       	bld	r25, 7
    3e32:	08 95       	ret

00003e34 <__fp_nan>:
    3e34:	9f ef       	ldi	r25, 0xFF	; 255
    3e36:	80 ec       	ldi	r24, 0xC0	; 192
    3e38:	08 95       	ret

00003e3a <__fp_pscA>:
    3e3a:	00 24       	eor	r0, r0
    3e3c:	0a 94       	dec	r0
    3e3e:	16 16       	cp	r1, r22
    3e40:	17 06       	cpc	r1, r23
    3e42:	18 06       	cpc	r1, r24
    3e44:	09 06       	cpc	r0, r25
    3e46:	08 95       	ret

00003e48 <__fp_pscB>:
    3e48:	00 24       	eor	r0, r0
    3e4a:	0a 94       	dec	r0
    3e4c:	12 16       	cp	r1, r18
    3e4e:	13 06       	cpc	r1, r19
    3e50:	14 06       	cpc	r1, r20
    3e52:	05 06       	cpc	r0, r21
    3e54:	08 95       	ret

00003e56 <__fp_round>:
    3e56:	09 2e       	mov	r0, r25
    3e58:	03 94       	inc	r0
    3e5a:	00 0c       	add	r0, r0
    3e5c:	11 f4       	brne	.+4      	; 0x3e62 <__fp_round+0xc>
    3e5e:	88 23       	and	r24, r24
    3e60:	52 f0       	brmi	.+20     	; 0x3e76 <__fp_round+0x20>
    3e62:	bb 0f       	add	r27, r27
    3e64:	40 f4       	brcc	.+16     	; 0x3e76 <__fp_round+0x20>
    3e66:	bf 2b       	or	r27, r31
    3e68:	11 f4       	brne	.+4      	; 0x3e6e <__fp_round+0x18>
    3e6a:	60 ff       	sbrs	r22, 0
    3e6c:	04 c0       	rjmp	.+8      	; 0x3e76 <__fp_round+0x20>
    3e6e:	6f 5f       	subi	r22, 0xFF	; 255
    3e70:	7f 4f       	sbci	r23, 0xFF	; 255
    3e72:	8f 4f       	sbci	r24, 0xFF	; 255
    3e74:	9f 4f       	sbci	r25, 0xFF	; 255
    3e76:	08 95       	ret

00003e78 <__fp_split3>:
    3e78:	57 fd       	sbrc	r21, 7
    3e7a:	90 58       	subi	r25, 0x80	; 128
    3e7c:	44 0f       	add	r20, r20
    3e7e:	55 1f       	adc	r21, r21
    3e80:	59 f0       	breq	.+22     	; 0x3e98 <__fp_splitA+0x10>
    3e82:	5f 3f       	cpi	r21, 0xFF	; 255
    3e84:	71 f0       	breq	.+28     	; 0x3ea2 <__fp_splitA+0x1a>
    3e86:	47 95       	ror	r20

00003e88 <__fp_splitA>:
    3e88:	88 0f       	add	r24, r24
    3e8a:	97 fb       	bst	r25, 7
    3e8c:	99 1f       	adc	r25, r25
    3e8e:	61 f0       	breq	.+24     	; 0x3ea8 <__fp_splitA+0x20>
    3e90:	9f 3f       	cpi	r25, 0xFF	; 255
    3e92:	79 f0       	breq	.+30     	; 0x3eb2 <__fp_splitA+0x2a>
    3e94:	87 95       	ror	r24
    3e96:	08 95       	ret
    3e98:	12 16       	cp	r1, r18
    3e9a:	13 06       	cpc	r1, r19
    3e9c:	14 06       	cpc	r1, r20
    3e9e:	55 1f       	adc	r21, r21
    3ea0:	f2 cf       	rjmp	.-28     	; 0x3e86 <__fp_split3+0xe>
    3ea2:	46 95       	lsr	r20
    3ea4:	f1 df       	rcall	.-30     	; 0x3e88 <__fp_splitA>
    3ea6:	08 c0       	rjmp	.+16     	; 0x3eb8 <__fp_splitA+0x30>
    3ea8:	16 16       	cp	r1, r22
    3eaa:	17 06       	cpc	r1, r23
    3eac:	18 06       	cpc	r1, r24
    3eae:	99 1f       	adc	r25, r25
    3eb0:	f1 cf       	rjmp	.-30     	; 0x3e94 <__fp_splitA+0xc>
    3eb2:	86 95       	lsr	r24
    3eb4:	71 05       	cpc	r23, r1
    3eb6:	61 05       	cpc	r22, r1
    3eb8:	08 94       	sec
    3eba:	08 95       	ret

00003ebc <__fp_trunc>:
    3ebc:	e5 df       	rcall	.-54     	; 0x3e88 <__fp_splitA>
    3ebe:	a0 f0       	brcs	.+40     	; 0x3ee8 <__fp_trunc+0x2c>
    3ec0:	be e7       	ldi	r27, 0x7E	; 126
    3ec2:	b9 17       	cp	r27, r25
    3ec4:	88 f4       	brcc	.+34     	; 0x3ee8 <__fp_trunc+0x2c>
    3ec6:	bb 27       	eor	r27, r27
    3ec8:	9f 38       	cpi	r25, 0x8F	; 143
    3eca:	60 f4       	brcc	.+24     	; 0x3ee4 <__fp_trunc+0x28>
    3ecc:	16 16       	cp	r1, r22
    3ece:	b1 1d       	adc	r27, r1
    3ed0:	67 2f       	mov	r22, r23
    3ed2:	78 2f       	mov	r23, r24
    3ed4:	88 27       	eor	r24, r24
    3ed6:	98 5f       	subi	r25, 0xF8	; 248
    3ed8:	f7 cf       	rjmp	.-18     	; 0x3ec8 <__fp_trunc+0xc>
    3eda:	86 95       	lsr	r24
    3edc:	77 95       	ror	r23
    3ede:	67 95       	ror	r22
    3ee0:	b1 1d       	adc	r27, r1
    3ee2:	93 95       	inc	r25
    3ee4:	96 39       	cpi	r25, 0x96	; 150
    3ee6:	c8 f3       	brcs	.-14     	; 0x3eda <__fp_trunc+0x1e>
    3ee8:	08 95       	ret

00003eea <__fp_zero>:
    3eea:	e8 94       	clt

00003eec <__fp_szero>:
    3eec:	bb 27       	eor	r27, r27
    3eee:	66 27       	eor	r22, r22
    3ef0:	77 27       	eor	r23, r23
    3ef2:	cb 01       	movw	r24, r22
    3ef4:	97 f9       	bld	r25, 7
    3ef6:	08 95       	ret

00003ef8 <__gesf2>:
    3ef8:	4a df       	rcall	.-364    	; 0x3d8e <__fp_cmp>
    3efa:	08 f4       	brcc	.+2      	; 0x3efe <__gesf2+0x6>
    3efc:	8f ef       	ldi	r24, 0xFF	; 255
    3efe:	08 95       	ret

00003f00 <__mulsf3>:
    3f00:	0b d0       	rcall	.+22     	; 0x3f18 <__mulsf3x>
    3f02:	a9 cf       	rjmp	.-174    	; 0x3e56 <__fp_round>
    3f04:	9a df       	rcall	.-204    	; 0x3e3a <__fp_pscA>
    3f06:	28 f0       	brcs	.+10     	; 0x3f12 <__mulsf3+0x12>
    3f08:	9f df       	rcall	.-194    	; 0x3e48 <__fp_pscB>
    3f0a:	18 f0       	brcs	.+6      	; 0x3f12 <__mulsf3+0x12>
    3f0c:	95 23       	and	r25, r21
    3f0e:	09 f0       	breq	.+2      	; 0x3f12 <__mulsf3+0x12>
    3f10:	62 cf       	rjmp	.-316    	; 0x3dd6 <__fp_inf>
    3f12:	90 cf       	rjmp	.-224    	; 0x3e34 <__fp_nan>
    3f14:	11 24       	eor	r1, r1
    3f16:	ea cf       	rjmp	.-44     	; 0x3eec <__fp_szero>

00003f18 <__mulsf3x>:
    3f18:	af df       	rcall	.-162    	; 0x3e78 <__fp_split3>
    3f1a:	a0 f3       	brcs	.-24     	; 0x3f04 <__mulsf3+0x4>

00003f1c <__mulsf3_pse>:
    3f1c:	95 9f       	mul	r25, r21
    3f1e:	d1 f3       	breq	.-12     	; 0x3f14 <__mulsf3+0x14>
    3f20:	95 0f       	add	r25, r21
    3f22:	50 e0       	ldi	r21, 0x00	; 0
    3f24:	55 1f       	adc	r21, r21
    3f26:	62 9f       	mul	r22, r18
    3f28:	f0 01       	movw	r30, r0
    3f2a:	72 9f       	mul	r23, r18
    3f2c:	bb 27       	eor	r27, r27
    3f2e:	f0 0d       	add	r31, r0
    3f30:	b1 1d       	adc	r27, r1
    3f32:	63 9f       	mul	r22, r19
    3f34:	aa 27       	eor	r26, r26
    3f36:	f0 0d       	add	r31, r0
    3f38:	b1 1d       	adc	r27, r1
    3f3a:	aa 1f       	adc	r26, r26
    3f3c:	64 9f       	mul	r22, r20
    3f3e:	66 27       	eor	r22, r22
    3f40:	b0 0d       	add	r27, r0
    3f42:	a1 1d       	adc	r26, r1
    3f44:	66 1f       	adc	r22, r22
    3f46:	82 9f       	mul	r24, r18
    3f48:	22 27       	eor	r18, r18
    3f4a:	b0 0d       	add	r27, r0
    3f4c:	a1 1d       	adc	r26, r1
    3f4e:	62 1f       	adc	r22, r18
    3f50:	73 9f       	mul	r23, r19
    3f52:	b0 0d       	add	r27, r0
    3f54:	a1 1d       	adc	r26, r1
    3f56:	62 1f       	adc	r22, r18
    3f58:	83 9f       	mul	r24, r19
    3f5a:	a0 0d       	add	r26, r0
    3f5c:	61 1d       	adc	r22, r1
    3f5e:	22 1f       	adc	r18, r18
    3f60:	74 9f       	mul	r23, r20
    3f62:	33 27       	eor	r19, r19
    3f64:	a0 0d       	add	r26, r0
    3f66:	61 1d       	adc	r22, r1
    3f68:	23 1f       	adc	r18, r19
    3f6a:	84 9f       	mul	r24, r20
    3f6c:	60 0d       	add	r22, r0
    3f6e:	21 1d       	adc	r18, r1
    3f70:	82 2f       	mov	r24, r18
    3f72:	76 2f       	mov	r23, r22
    3f74:	6a 2f       	mov	r22, r26
    3f76:	11 24       	eor	r1, r1
    3f78:	9f 57       	subi	r25, 0x7F	; 127
    3f7a:	50 40       	sbci	r21, 0x00	; 0
    3f7c:	8a f0       	brmi	.+34     	; 0x3fa0 <__mulsf3_pse+0x84>
    3f7e:	e1 f0       	breq	.+56     	; 0x3fb8 <__mulsf3_pse+0x9c>
    3f80:	88 23       	and	r24, r24
    3f82:	4a f0       	brmi	.+18     	; 0x3f96 <__mulsf3_pse+0x7a>
    3f84:	ee 0f       	add	r30, r30
    3f86:	ff 1f       	adc	r31, r31
    3f88:	bb 1f       	adc	r27, r27
    3f8a:	66 1f       	adc	r22, r22
    3f8c:	77 1f       	adc	r23, r23
    3f8e:	88 1f       	adc	r24, r24
    3f90:	91 50       	subi	r25, 0x01	; 1
    3f92:	50 40       	sbci	r21, 0x00	; 0
    3f94:	a9 f7       	brne	.-22     	; 0x3f80 <__mulsf3_pse+0x64>
    3f96:	9e 3f       	cpi	r25, 0xFE	; 254
    3f98:	51 05       	cpc	r21, r1
    3f9a:	70 f0       	brcs	.+28     	; 0x3fb8 <__mulsf3_pse+0x9c>
    3f9c:	1c cf       	rjmp	.-456    	; 0x3dd6 <__fp_inf>
    3f9e:	a6 cf       	rjmp	.-180    	; 0x3eec <__fp_szero>
    3fa0:	5f 3f       	cpi	r21, 0xFF	; 255
    3fa2:	ec f3       	brlt	.-6      	; 0x3f9e <__mulsf3_pse+0x82>
    3fa4:	98 3e       	cpi	r25, 0xE8	; 232
    3fa6:	dc f3       	brlt	.-10     	; 0x3f9e <__mulsf3_pse+0x82>
    3fa8:	86 95       	lsr	r24
    3faa:	77 95       	ror	r23
    3fac:	67 95       	ror	r22
    3fae:	b7 95       	ror	r27
    3fb0:	f7 95       	ror	r31
    3fb2:	e7 95       	ror	r30
    3fb4:	9f 5f       	subi	r25, 0xFF	; 255
    3fb6:	c1 f7       	brne	.-16     	; 0x3fa8 <__mulsf3_pse+0x8c>
    3fb8:	fe 2b       	or	r31, r30
    3fba:	88 0f       	add	r24, r24
    3fbc:	91 1d       	adc	r25, r1
    3fbe:	96 95       	lsr	r25
    3fc0:	87 95       	ror	r24
    3fc2:	97 f9       	bld	r25, 7
    3fc4:	08 95       	ret

00003fc6 <__udivmodqi4>:
    3fc6:	99 1b       	sub	r25, r25
    3fc8:	79 e0       	ldi	r23, 0x09	; 9
    3fca:	04 c0       	rjmp	.+8      	; 0x3fd4 <__udivmodqi4_ep>

00003fcc <__udivmodqi4_loop>:
    3fcc:	99 1f       	adc	r25, r25
    3fce:	96 17       	cp	r25, r22
    3fd0:	08 f0       	brcs	.+2      	; 0x3fd4 <__udivmodqi4_ep>
    3fd2:	96 1b       	sub	r25, r22

00003fd4 <__udivmodqi4_ep>:
    3fd4:	88 1f       	adc	r24, r24
    3fd6:	7a 95       	dec	r23
    3fd8:	c9 f7       	brne	.-14     	; 0x3fcc <__udivmodqi4_loop>
    3fda:	80 95       	com	r24
    3fdc:	08 95       	ret

00003fde <__udivmodhi4>:
    3fde:	aa 1b       	sub	r26, r26
    3fe0:	bb 1b       	sub	r27, r27
    3fe2:	51 e1       	ldi	r21, 0x11	; 17
    3fe4:	07 c0       	rjmp	.+14     	; 0x3ff4 <__udivmodhi4_ep>

00003fe6 <__udivmodhi4_loop>:
    3fe6:	aa 1f       	adc	r26, r26
    3fe8:	bb 1f       	adc	r27, r27
    3fea:	a6 17       	cp	r26, r22
    3fec:	b7 07       	cpc	r27, r23
    3fee:	10 f0       	brcs	.+4      	; 0x3ff4 <__udivmodhi4_ep>
    3ff0:	a6 1b       	sub	r26, r22
    3ff2:	b7 0b       	sbc	r27, r23

00003ff4 <__udivmodhi4_ep>:
    3ff4:	88 1f       	adc	r24, r24
    3ff6:	99 1f       	adc	r25, r25
    3ff8:	5a 95       	dec	r21
    3ffa:	a9 f7       	brne	.-22     	; 0x3fe6 <__udivmodhi4_loop>
    3ffc:	80 95       	com	r24
    3ffe:	90 95       	com	r25
    4000:	bc 01       	movw	r22, r24
    4002:	cd 01       	movw	r24, r26
    4004:	08 95       	ret

00004006 <__divmodhi4>:
    4006:	97 fb       	bst	r25, 7
    4008:	07 2e       	mov	r0, r23
    400a:	16 f4       	brtc	.+4      	; 0x4010 <__divmodhi4+0xa>
    400c:	00 94       	com	r0
    400e:	06 d0       	rcall	.+12     	; 0x401c <__divmodhi4_neg1>
    4010:	77 fd       	sbrc	r23, 7
    4012:	08 d0       	rcall	.+16     	; 0x4024 <__divmodhi4_neg2>
    4014:	e4 df       	rcall	.-56     	; 0x3fde <__udivmodhi4>
    4016:	07 fc       	sbrc	r0, 7
    4018:	05 d0       	rcall	.+10     	; 0x4024 <__divmodhi4_neg2>
    401a:	3e f4       	brtc	.+14     	; 0x402a <__divmodhi4_exit>

0000401c <__divmodhi4_neg1>:
    401c:	90 95       	com	r25
    401e:	81 95       	neg	r24
    4020:	9f 4f       	sbci	r25, 0xFF	; 255
    4022:	08 95       	ret

00004024 <__divmodhi4_neg2>:
    4024:	70 95       	com	r23
    4026:	61 95       	neg	r22
    4028:	7f 4f       	sbci	r23, 0xFF	; 255

0000402a <__divmodhi4_exit>:
    402a:	08 95       	ret

0000402c <__tablejump2__>:
    402c:	ee 0f       	add	r30, r30
    402e:	ff 1f       	adc	r31, r31
    4030:	05 90       	lpm	r0, Z+
    4032:	f4 91       	lpm	r31, Z
    4034:	e0 2d       	mov	r30, r0
    4036:	09 94       	ijmp

00004038 <strcpy>:
    4038:	fb 01       	movw	r30, r22
    403a:	dc 01       	movw	r26, r24
    403c:	01 90       	ld	r0, Z+
    403e:	0d 92       	st	X+, r0
    4040:	00 20       	and	r0, r0
    4042:	e1 f7       	brne	.-8      	; 0x403c <strcpy+0x4>
    4044:	08 95       	ret

00004046 <snprintf>:
    4046:	ae e0       	ldi	r26, 0x0E	; 14
    4048:	b0 e0       	ldi	r27, 0x00	; 0
    404a:	e8 e2       	ldi	r30, 0x28	; 40
    404c:	f0 e2       	ldi	r31, 0x20	; 32
    404e:	ce c2       	rjmp	.+1436   	; 0x45ec <__prologue_saves__+0x1c>
    4050:	0d 89       	ldd	r16, Y+21	; 0x15
    4052:	1e 89       	ldd	r17, Y+22	; 0x16
    4054:	8f 89       	ldd	r24, Y+23	; 0x17
    4056:	98 8d       	ldd	r25, Y+24	; 0x18
    4058:	26 e0       	ldi	r18, 0x06	; 6
    405a:	2c 83       	std	Y+4, r18	; 0x04
    405c:	1a 83       	std	Y+2, r17	; 0x02
    405e:	09 83       	std	Y+1, r16	; 0x01
    4060:	97 ff       	sbrs	r25, 7
    4062:	02 c0       	rjmp	.+4      	; 0x4068 <snprintf+0x22>
    4064:	80 e0       	ldi	r24, 0x00	; 0
    4066:	90 e8       	ldi	r25, 0x80	; 128
    4068:	01 97       	sbiw	r24, 0x01	; 1
    406a:	9e 83       	std	Y+6, r25	; 0x06
    406c:	8d 83       	std	Y+5, r24	; 0x05
    406e:	ae 01       	movw	r20, r28
    4070:	45 5e       	subi	r20, 0xE5	; 229
    4072:	5f 4f       	sbci	r21, 0xFF	; 255
    4074:	69 8d       	ldd	r22, Y+25	; 0x19
    4076:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4078:	ce 01       	movw	r24, r28
    407a:	01 96       	adiw	r24, 0x01	; 1
    407c:	11 d0       	rcall	.+34     	; 0x40a0 <vfprintf>
    407e:	4d 81       	ldd	r20, Y+5	; 0x05
    4080:	5e 81       	ldd	r21, Y+6	; 0x06
    4082:	57 fd       	sbrc	r21, 7
    4084:	0a c0       	rjmp	.+20     	; 0x409a <snprintf+0x54>
    4086:	2f 81       	ldd	r18, Y+7	; 0x07
    4088:	38 85       	ldd	r19, Y+8	; 0x08
    408a:	42 17       	cp	r20, r18
    408c:	53 07       	cpc	r21, r19
    408e:	0c f4       	brge	.+2      	; 0x4092 <snprintf+0x4c>
    4090:	9a 01       	movw	r18, r20
    4092:	f8 01       	movw	r30, r16
    4094:	e2 0f       	add	r30, r18
    4096:	f3 1f       	adc	r31, r19
    4098:	10 82       	st	Z, r1
    409a:	2e 96       	adiw	r28, 0x0e	; 14
    409c:	e4 e0       	ldi	r30, 0x04	; 4
    409e:	c2 c2       	rjmp	.+1412   	; 0x4624 <__epilogue_restores__+0x1c>

000040a0 <vfprintf>:
    40a0:	ab e0       	ldi	r26, 0x0B	; 11
    40a2:	b0 e0       	ldi	r27, 0x00	; 0
    40a4:	e5 e5       	ldi	r30, 0x55	; 85
    40a6:	f0 e2       	ldi	r31, 0x20	; 32
    40a8:	93 c2       	rjmp	.+1318   	; 0x45d0 <__prologue_saves__>
    40aa:	6c 01       	movw	r12, r24
    40ac:	7b 01       	movw	r14, r22
    40ae:	8a 01       	movw	r16, r20
    40b0:	fc 01       	movw	r30, r24
    40b2:	17 82       	std	Z+7, r1	; 0x07
    40b4:	16 82       	std	Z+6, r1	; 0x06
    40b6:	83 81       	ldd	r24, Z+3	; 0x03
    40b8:	81 ff       	sbrs	r24, 1
    40ba:	bf c1       	rjmp	.+894    	; 0x443a <vfprintf+0x39a>
    40bc:	ce 01       	movw	r24, r28
    40be:	01 96       	adiw	r24, 0x01	; 1
    40c0:	3c 01       	movw	r6, r24
    40c2:	f6 01       	movw	r30, r12
    40c4:	93 81       	ldd	r25, Z+3	; 0x03
    40c6:	f7 01       	movw	r30, r14
    40c8:	93 fd       	sbrc	r25, 3
    40ca:	85 91       	lpm	r24, Z+
    40cc:	93 ff       	sbrs	r25, 3
    40ce:	81 91       	ld	r24, Z+
    40d0:	7f 01       	movw	r14, r30
    40d2:	88 23       	and	r24, r24
    40d4:	09 f4       	brne	.+2      	; 0x40d8 <vfprintf+0x38>
    40d6:	ad c1       	rjmp	.+858    	; 0x4432 <vfprintf+0x392>
    40d8:	85 32       	cpi	r24, 0x25	; 37
    40da:	39 f4       	brne	.+14     	; 0x40ea <vfprintf+0x4a>
    40dc:	93 fd       	sbrc	r25, 3
    40de:	85 91       	lpm	r24, Z+
    40e0:	93 ff       	sbrs	r25, 3
    40e2:	81 91       	ld	r24, Z+
    40e4:	7f 01       	movw	r14, r30
    40e6:	85 32       	cpi	r24, 0x25	; 37
    40e8:	21 f4       	brne	.+8      	; 0x40f2 <vfprintf+0x52>
    40ea:	b6 01       	movw	r22, r12
    40ec:	90 e0       	ldi	r25, 0x00	; 0
    40ee:	c0 d1       	rcall	.+896    	; 0x4470 <fputc>
    40f0:	e8 cf       	rjmp	.-48     	; 0x40c2 <vfprintf+0x22>
    40f2:	91 2c       	mov	r9, r1
    40f4:	21 2c       	mov	r2, r1
    40f6:	31 2c       	mov	r3, r1
    40f8:	ff e1       	ldi	r31, 0x1F	; 31
    40fa:	f3 15       	cp	r31, r3
    40fc:	d8 f0       	brcs	.+54     	; 0x4134 <vfprintf+0x94>
    40fe:	8b 32       	cpi	r24, 0x2B	; 43
    4100:	79 f0       	breq	.+30     	; 0x4120 <vfprintf+0x80>
    4102:	38 f4       	brcc	.+14     	; 0x4112 <vfprintf+0x72>
    4104:	80 32       	cpi	r24, 0x20	; 32
    4106:	79 f0       	breq	.+30     	; 0x4126 <vfprintf+0x86>
    4108:	83 32       	cpi	r24, 0x23	; 35
    410a:	a1 f4       	brne	.+40     	; 0x4134 <vfprintf+0x94>
    410c:	23 2d       	mov	r18, r3
    410e:	20 61       	ori	r18, 0x10	; 16
    4110:	1d c0       	rjmp	.+58     	; 0x414c <vfprintf+0xac>
    4112:	8d 32       	cpi	r24, 0x2D	; 45
    4114:	61 f0       	breq	.+24     	; 0x412e <vfprintf+0x8e>
    4116:	80 33       	cpi	r24, 0x30	; 48
    4118:	69 f4       	brne	.+26     	; 0x4134 <vfprintf+0x94>
    411a:	23 2d       	mov	r18, r3
    411c:	21 60       	ori	r18, 0x01	; 1
    411e:	16 c0       	rjmp	.+44     	; 0x414c <vfprintf+0xac>
    4120:	83 2d       	mov	r24, r3
    4122:	82 60       	ori	r24, 0x02	; 2
    4124:	38 2e       	mov	r3, r24
    4126:	e3 2d       	mov	r30, r3
    4128:	e4 60       	ori	r30, 0x04	; 4
    412a:	3e 2e       	mov	r3, r30
    412c:	2a c0       	rjmp	.+84     	; 0x4182 <vfprintf+0xe2>
    412e:	f3 2d       	mov	r31, r3
    4130:	f8 60       	ori	r31, 0x08	; 8
    4132:	1d c0       	rjmp	.+58     	; 0x416e <vfprintf+0xce>
    4134:	37 fc       	sbrc	r3, 7
    4136:	2d c0       	rjmp	.+90     	; 0x4192 <vfprintf+0xf2>
    4138:	20 ed       	ldi	r18, 0xD0	; 208
    413a:	28 0f       	add	r18, r24
    413c:	2a 30       	cpi	r18, 0x0A	; 10
    413e:	40 f0       	brcs	.+16     	; 0x4150 <vfprintf+0xb0>
    4140:	8e 32       	cpi	r24, 0x2E	; 46
    4142:	b9 f4       	brne	.+46     	; 0x4172 <vfprintf+0xd2>
    4144:	36 fc       	sbrc	r3, 6
    4146:	75 c1       	rjmp	.+746    	; 0x4432 <vfprintf+0x392>
    4148:	23 2d       	mov	r18, r3
    414a:	20 64       	ori	r18, 0x40	; 64
    414c:	32 2e       	mov	r3, r18
    414e:	19 c0       	rjmp	.+50     	; 0x4182 <vfprintf+0xe2>
    4150:	36 fe       	sbrs	r3, 6
    4152:	06 c0       	rjmp	.+12     	; 0x4160 <vfprintf+0xc0>
    4154:	8a e0       	ldi	r24, 0x0A	; 10
    4156:	98 9e       	mul	r9, r24
    4158:	20 0d       	add	r18, r0
    415a:	11 24       	eor	r1, r1
    415c:	92 2e       	mov	r9, r18
    415e:	11 c0       	rjmp	.+34     	; 0x4182 <vfprintf+0xe2>
    4160:	ea e0       	ldi	r30, 0x0A	; 10
    4162:	2e 9e       	mul	r2, r30
    4164:	20 0d       	add	r18, r0
    4166:	11 24       	eor	r1, r1
    4168:	22 2e       	mov	r2, r18
    416a:	f3 2d       	mov	r31, r3
    416c:	f0 62       	ori	r31, 0x20	; 32
    416e:	3f 2e       	mov	r3, r31
    4170:	08 c0       	rjmp	.+16     	; 0x4182 <vfprintf+0xe2>
    4172:	8c 36       	cpi	r24, 0x6C	; 108
    4174:	21 f4       	brne	.+8      	; 0x417e <vfprintf+0xde>
    4176:	83 2d       	mov	r24, r3
    4178:	80 68       	ori	r24, 0x80	; 128
    417a:	38 2e       	mov	r3, r24
    417c:	02 c0       	rjmp	.+4      	; 0x4182 <vfprintf+0xe2>
    417e:	88 36       	cpi	r24, 0x68	; 104
    4180:	41 f4       	brne	.+16     	; 0x4192 <vfprintf+0xf2>
    4182:	f7 01       	movw	r30, r14
    4184:	93 fd       	sbrc	r25, 3
    4186:	85 91       	lpm	r24, Z+
    4188:	93 ff       	sbrs	r25, 3
    418a:	81 91       	ld	r24, Z+
    418c:	7f 01       	movw	r14, r30
    418e:	81 11       	cpse	r24, r1
    4190:	b3 cf       	rjmp	.-154    	; 0x40f8 <vfprintf+0x58>
    4192:	98 2f       	mov	r25, r24
    4194:	9f 7d       	andi	r25, 0xDF	; 223
    4196:	95 54       	subi	r25, 0x45	; 69
    4198:	93 30       	cpi	r25, 0x03	; 3
    419a:	28 f4       	brcc	.+10     	; 0x41a6 <vfprintf+0x106>
    419c:	0c 5f       	subi	r16, 0xFC	; 252
    419e:	1f 4f       	sbci	r17, 0xFF	; 255
    41a0:	9f e3       	ldi	r25, 0x3F	; 63
    41a2:	99 83       	std	Y+1, r25	; 0x01
    41a4:	0d c0       	rjmp	.+26     	; 0x41c0 <vfprintf+0x120>
    41a6:	83 36       	cpi	r24, 0x63	; 99
    41a8:	31 f0       	breq	.+12     	; 0x41b6 <vfprintf+0x116>
    41aa:	83 37       	cpi	r24, 0x73	; 115
    41ac:	71 f0       	breq	.+28     	; 0x41ca <vfprintf+0x12a>
    41ae:	83 35       	cpi	r24, 0x53	; 83
    41b0:	09 f0       	breq	.+2      	; 0x41b4 <vfprintf+0x114>
    41b2:	55 c0       	rjmp	.+170    	; 0x425e <vfprintf+0x1be>
    41b4:	20 c0       	rjmp	.+64     	; 0x41f6 <vfprintf+0x156>
    41b6:	f8 01       	movw	r30, r16
    41b8:	80 81       	ld	r24, Z
    41ba:	89 83       	std	Y+1, r24	; 0x01
    41bc:	0e 5f       	subi	r16, 0xFE	; 254
    41be:	1f 4f       	sbci	r17, 0xFF	; 255
    41c0:	88 24       	eor	r8, r8
    41c2:	83 94       	inc	r8
    41c4:	91 2c       	mov	r9, r1
    41c6:	53 01       	movw	r10, r6
    41c8:	12 c0       	rjmp	.+36     	; 0x41ee <vfprintf+0x14e>
    41ca:	28 01       	movw	r4, r16
    41cc:	f2 e0       	ldi	r31, 0x02	; 2
    41ce:	4f 0e       	add	r4, r31
    41d0:	51 1c       	adc	r5, r1
    41d2:	f8 01       	movw	r30, r16
    41d4:	a0 80       	ld	r10, Z
    41d6:	b1 80       	ldd	r11, Z+1	; 0x01
    41d8:	36 fe       	sbrs	r3, 6
    41da:	03 c0       	rjmp	.+6      	; 0x41e2 <vfprintf+0x142>
    41dc:	69 2d       	mov	r22, r9
    41de:	70 e0       	ldi	r23, 0x00	; 0
    41e0:	02 c0       	rjmp	.+4      	; 0x41e6 <vfprintf+0x146>
    41e2:	6f ef       	ldi	r22, 0xFF	; 255
    41e4:	7f ef       	ldi	r23, 0xFF	; 255
    41e6:	c5 01       	movw	r24, r10
    41e8:	38 d1       	rcall	.+624    	; 0x445a <strnlen>
    41ea:	4c 01       	movw	r8, r24
    41ec:	82 01       	movw	r16, r4
    41ee:	f3 2d       	mov	r31, r3
    41f0:	ff 77       	andi	r31, 0x7F	; 127
    41f2:	3f 2e       	mov	r3, r31
    41f4:	15 c0       	rjmp	.+42     	; 0x4220 <vfprintf+0x180>
    41f6:	28 01       	movw	r4, r16
    41f8:	22 e0       	ldi	r18, 0x02	; 2
    41fa:	42 0e       	add	r4, r18
    41fc:	51 1c       	adc	r5, r1
    41fe:	f8 01       	movw	r30, r16
    4200:	a0 80       	ld	r10, Z
    4202:	b1 80       	ldd	r11, Z+1	; 0x01
    4204:	36 fe       	sbrs	r3, 6
    4206:	03 c0       	rjmp	.+6      	; 0x420e <vfprintf+0x16e>
    4208:	69 2d       	mov	r22, r9
    420a:	70 e0       	ldi	r23, 0x00	; 0
    420c:	02 c0       	rjmp	.+4      	; 0x4212 <vfprintf+0x172>
    420e:	6f ef       	ldi	r22, 0xFF	; 255
    4210:	7f ef       	ldi	r23, 0xFF	; 255
    4212:	c5 01       	movw	r24, r10
    4214:	17 d1       	rcall	.+558    	; 0x4444 <strnlen_P>
    4216:	4c 01       	movw	r8, r24
    4218:	f3 2d       	mov	r31, r3
    421a:	f0 68       	ori	r31, 0x80	; 128
    421c:	3f 2e       	mov	r3, r31
    421e:	82 01       	movw	r16, r4
    4220:	33 fc       	sbrc	r3, 3
    4222:	19 c0       	rjmp	.+50     	; 0x4256 <vfprintf+0x1b6>
    4224:	82 2d       	mov	r24, r2
    4226:	90 e0       	ldi	r25, 0x00	; 0
    4228:	88 16       	cp	r8, r24
    422a:	99 06       	cpc	r9, r25
    422c:	a0 f4       	brcc	.+40     	; 0x4256 <vfprintf+0x1b6>
    422e:	b6 01       	movw	r22, r12
    4230:	80 e2       	ldi	r24, 0x20	; 32
    4232:	90 e0       	ldi	r25, 0x00	; 0
    4234:	1d d1       	rcall	.+570    	; 0x4470 <fputc>
    4236:	2a 94       	dec	r2
    4238:	f5 cf       	rjmp	.-22     	; 0x4224 <vfprintf+0x184>
    423a:	f5 01       	movw	r30, r10
    423c:	37 fc       	sbrc	r3, 7
    423e:	85 91       	lpm	r24, Z+
    4240:	37 fe       	sbrs	r3, 7
    4242:	81 91       	ld	r24, Z+
    4244:	5f 01       	movw	r10, r30
    4246:	b6 01       	movw	r22, r12
    4248:	90 e0       	ldi	r25, 0x00	; 0
    424a:	12 d1       	rcall	.+548    	; 0x4470 <fputc>
    424c:	21 10       	cpse	r2, r1
    424e:	2a 94       	dec	r2
    4250:	21 e0       	ldi	r18, 0x01	; 1
    4252:	82 1a       	sub	r8, r18
    4254:	91 08       	sbc	r9, r1
    4256:	81 14       	cp	r8, r1
    4258:	91 04       	cpc	r9, r1
    425a:	79 f7       	brne	.-34     	; 0x423a <vfprintf+0x19a>
    425c:	e1 c0       	rjmp	.+450    	; 0x4420 <vfprintf+0x380>
    425e:	84 36       	cpi	r24, 0x64	; 100
    4260:	11 f0       	breq	.+4      	; 0x4266 <vfprintf+0x1c6>
    4262:	89 36       	cpi	r24, 0x69	; 105
    4264:	39 f5       	brne	.+78     	; 0x42b4 <vfprintf+0x214>
    4266:	f8 01       	movw	r30, r16
    4268:	37 fe       	sbrs	r3, 7
    426a:	07 c0       	rjmp	.+14     	; 0x427a <vfprintf+0x1da>
    426c:	60 81       	ld	r22, Z
    426e:	71 81       	ldd	r23, Z+1	; 0x01
    4270:	82 81       	ldd	r24, Z+2	; 0x02
    4272:	93 81       	ldd	r25, Z+3	; 0x03
    4274:	0c 5f       	subi	r16, 0xFC	; 252
    4276:	1f 4f       	sbci	r17, 0xFF	; 255
    4278:	08 c0       	rjmp	.+16     	; 0x428a <vfprintf+0x1ea>
    427a:	60 81       	ld	r22, Z
    427c:	71 81       	ldd	r23, Z+1	; 0x01
    427e:	07 2e       	mov	r0, r23
    4280:	00 0c       	add	r0, r0
    4282:	88 0b       	sbc	r24, r24
    4284:	99 0b       	sbc	r25, r25
    4286:	0e 5f       	subi	r16, 0xFE	; 254
    4288:	1f 4f       	sbci	r17, 0xFF	; 255
    428a:	f3 2d       	mov	r31, r3
    428c:	ff 76       	andi	r31, 0x6F	; 111
    428e:	3f 2e       	mov	r3, r31
    4290:	97 ff       	sbrs	r25, 7
    4292:	09 c0       	rjmp	.+18     	; 0x42a6 <vfprintf+0x206>
    4294:	90 95       	com	r25
    4296:	80 95       	com	r24
    4298:	70 95       	com	r23
    429a:	61 95       	neg	r22
    429c:	7f 4f       	sbci	r23, 0xFF	; 255
    429e:	8f 4f       	sbci	r24, 0xFF	; 255
    42a0:	9f 4f       	sbci	r25, 0xFF	; 255
    42a2:	f0 68       	ori	r31, 0x80	; 128
    42a4:	3f 2e       	mov	r3, r31
    42a6:	2a e0       	ldi	r18, 0x0A	; 10
    42a8:	30 e0       	ldi	r19, 0x00	; 0
    42aa:	a3 01       	movw	r20, r6
    42ac:	1d d1       	rcall	.+570    	; 0x44e8 <__ultoa_invert>
    42ae:	88 2e       	mov	r8, r24
    42b0:	86 18       	sub	r8, r6
    42b2:	44 c0       	rjmp	.+136    	; 0x433c <vfprintf+0x29c>
    42b4:	85 37       	cpi	r24, 0x75	; 117
    42b6:	31 f4       	brne	.+12     	; 0x42c4 <vfprintf+0x224>
    42b8:	23 2d       	mov	r18, r3
    42ba:	2f 7e       	andi	r18, 0xEF	; 239
    42bc:	b2 2e       	mov	r11, r18
    42be:	2a e0       	ldi	r18, 0x0A	; 10
    42c0:	30 e0       	ldi	r19, 0x00	; 0
    42c2:	25 c0       	rjmp	.+74     	; 0x430e <vfprintf+0x26e>
    42c4:	93 2d       	mov	r25, r3
    42c6:	99 7f       	andi	r25, 0xF9	; 249
    42c8:	b9 2e       	mov	r11, r25
    42ca:	8f 36       	cpi	r24, 0x6F	; 111
    42cc:	c1 f0       	breq	.+48     	; 0x42fe <vfprintf+0x25e>
    42ce:	18 f4       	brcc	.+6      	; 0x42d6 <vfprintf+0x236>
    42d0:	88 35       	cpi	r24, 0x58	; 88
    42d2:	79 f0       	breq	.+30     	; 0x42f2 <vfprintf+0x252>
    42d4:	ae c0       	rjmp	.+348    	; 0x4432 <vfprintf+0x392>
    42d6:	80 37       	cpi	r24, 0x70	; 112
    42d8:	19 f0       	breq	.+6      	; 0x42e0 <vfprintf+0x240>
    42da:	88 37       	cpi	r24, 0x78	; 120
    42dc:	21 f0       	breq	.+8      	; 0x42e6 <vfprintf+0x246>
    42de:	a9 c0       	rjmp	.+338    	; 0x4432 <vfprintf+0x392>
    42e0:	e9 2f       	mov	r30, r25
    42e2:	e0 61       	ori	r30, 0x10	; 16
    42e4:	be 2e       	mov	r11, r30
    42e6:	b4 fe       	sbrs	r11, 4
    42e8:	0d c0       	rjmp	.+26     	; 0x4304 <vfprintf+0x264>
    42ea:	fb 2d       	mov	r31, r11
    42ec:	f4 60       	ori	r31, 0x04	; 4
    42ee:	bf 2e       	mov	r11, r31
    42f0:	09 c0       	rjmp	.+18     	; 0x4304 <vfprintf+0x264>
    42f2:	34 fe       	sbrs	r3, 4
    42f4:	0a c0       	rjmp	.+20     	; 0x430a <vfprintf+0x26a>
    42f6:	29 2f       	mov	r18, r25
    42f8:	26 60       	ori	r18, 0x06	; 6
    42fa:	b2 2e       	mov	r11, r18
    42fc:	06 c0       	rjmp	.+12     	; 0x430a <vfprintf+0x26a>
    42fe:	28 e0       	ldi	r18, 0x08	; 8
    4300:	30 e0       	ldi	r19, 0x00	; 0
    4302:	05 c0       	rjmp	.+10     	; 0x430e <vfprintf+0x26e>
    4304:	20 e1       	ldi	r18, 0x10	; 16
    4306:	30 e0       	ldi	r19, 0x00	; 0
    4308:	02 c0       	rjmp	.+4      	; 0x430e <vfprintf+0x26e>
    430a:	20 e1       	ldi	r18, 0x10	; 16
    430c:	32 e0       	ldi	r19, 0x02	; 2
    430e:	f8 01       	movw	r30, r16
    4310:	b7 fe       	sbrs	r11, 7
    4312:	07 c0       	rjmp	.+14     	; 0x4322 <vfprintf+0x282>
    4314:	60 81       	ld	r22, Z
    4316:	71 81       	ldd	r23, Z+1	; 0x01
    4318:	82 81       	ldd	r24, Z+2	; 0x02
    431a:	93 81       	ldd	r25, Z+3	; 0x03
    431c:	0c 5f       	subi	r16, 0xFC	; 252
    431e:	1f 4f       	sbci	r17, 0xFF	; 255
    4320:	06 c0       	rjmp	.+12     	; 0x432e <vfprintf+0x28e>
    4322:	60 81       	ld	r22, Z
    4324:	71 81       	ldd	r23, Z+1	; 0x01
    4326:	80 e0       	ldi	r24, 0x00	; 0
    4328:	90 e0       	ldi	r25, 0x00	; 0
    432a:	0e 5f       	subi	r16, 0xFE	; 254
    432c:	1f 4f       	sbci	r17, 0xFF	; 255
    432e:	a3 01       	movw	r20, r6
    4330:	db d0       	rcall	.+438    	; 0x44e8 <__ultoa_invert>
    4332:	88 2e       	mov	r8, r24
    4334:	86 18       	sub	r8, r6
    4336:	fb 2d       	mov	r31, r11
    4338:	ff 77       	andi	r31, 0x7F	; 127
    433a:	3f 2e       	mov	r3, r31
    433c:	36 fe       	sbrs	r3, 6
    433e:	0d c0       	rjmp	.+26     	; 0x435a <vfprintf+0x2ba>
    4340:	23 2d       	mov	r18, r3
    4342:	2e 7f       	andi	r18, 0xFE	; 254
    4344:	a2 2e       	mov	r10, r18
    4346:	89 14       	cp	r8, r9
    4348:	58 f4       	brcc	.+22     	; 0x4360 <vfprintf+0x2c0>
    434a:	34 fe       	sbrs	r3, 4
    434c:	0b c0       	rjmp	.+22     	; 0x4364 <vfprintf+0x2c4>
    434e:	32 fc       	sbrc	r3, 2
    4350:	09 c0       	rjmp	.+18     	; 0x4364 <vfprintf+0x2c4>
    4352:	83 2d       	mov	r24, r3
    4354:	8e 7e       	andi	r24, 0xEE	; 238
    4356:	a8 2e       	mov	r10, r24
    4358:	05 c0       	rjmp	.+10     	; 0x4364 <vfprintf+0x2c4>
    435a:	b8 2c       	mov	r11, r8
    435c:	a3 2c       	mov	r10, r3
    435e:	03 c0       	rjmp	.+6      	; 0x4366 <vfprintf+0x2c6>
    4360:	b8 2c       	mov	r11, r8
    4362:	01 c0       	rjmp	.+2      	; 0x4366 <vfprintf+0x2c6>
    4364:	b9 2c       	mov	r11, r9
    4366:	a4 fe       	sbrs	r10, 4
    4368:	0f c0       	rjmp	.+30     	; 0x4388 <vfprintf+0x2e8>
    436a:	fe 01       	movw	r30, r28
    436c:	e8 0d       	add	r30, r8
    436e:	f1 1d       	adc	r31, r1
    4370:	80 81       	ld	r24, Z
    4372:	80 33       	cpi	r24, 0x30	; 48
    4374:	21 f4       	brne	.+8      	; 0x437e <vfprintf+0x2de>
    4376:	9a 2d       	mov	r25, r10
    4378:	99 7e       	andi	r25, 0xE9	; 233
    437a:	a9 2e       	mov	r10, r25
    437c:	09 c0       	rjmp	.+18     	; 0x4390 <vfprintf+0x2f0>
    437e:	a2 fe       	sbrs	r10, 2
    4380:	06 c0       	rjmp	.+12     	; 0x438e <vfprintf+0x2ee>
    4382:	b3 94       	inc	r11
    4384:	b3 94       	inc	r11
    4386:	04 c0       	rjmp	.+8      	; 0x4390 <vfprintf+0x2f0>
    4388:	8a 2d       	mov	r24, r10
    438a:	86 78       	andi	r24, 0x86	; 134
    438c:	09 f0       	breq	.+2      	; 0x4390 <vfprintf+0x2f0>
    438e:	b3 94       	inc	r11
    4390:	a3 fc       	sbrc	r10, 3
    4392:	10 c0       	rjmp	.+32     	; 0x43b4 <vfprintf+0x314>
    4394:	a0 fe       	sbrs	r10, 0
    4396:	06 c0       	rjmp	.+12     	; 0x43a4 <vfprintf+0x304>
    4398:	b2 14       	cp	r11, r2
    439a:	80 f4       	brcc	.+32     	; 0x43bc <vfprintf+0x31c>
    439c:	28 0c       	add	r2, r8
    439e:	92 2c       	mov	r9, r2
    43a0:	9b 18       	sub	r9, r11
    43a2:	0d c0       	rjmp	.+26     	; 0x43be <vfprintf+0x31e>
    43a4:	b2 14       	cp	r11, r2
    43a6:	58 f4       	brcc	.+22     	; 0x43be <vfprintf+0x31e>
    43a8:	b6 01       	movw	r22, r12
    43aa:	80 e2       	ldi	r24, 0x20	; 32
    43ac:	90 e0       	ldi	r25, 0x00	; 0
    43ae:	60 d0       	rcall	.+192    	; 0x4470 <fputc>
    43b0:	b3 94       	inc	r11
    43b2:	f8 cf       	rjmp	.-16     	; 0x43a4 <vfprintf+0x304>
    43b4:	b2 14       	cp	r11, r2
    43b6:	18 f4       	brcc	.+6      	; 0x43be <vfprintf+0x31e>
    43b8:	2b 18       	sub	r2, r11
    43ba:	02 c0       	rjmp	.+4      	; 0x43c0 <vfprintf+0x320>
    43bc:	98 2c       	mov	r9, r8
    43be:	21 2c       	mov	r2, r1
    43c0:	a4 fe       	sbrs	r10, 4
    43c2:	0f c0       	rjmp	.+30     	; 0x43e2 <vfprintf+0x342>
    43c4:	b6 01       	movw	r22, r12
    43c6:	80 e3       	ldi	r24, 0x30	; 48
    43c8:	90 e0       	ldi	r25, 0x00	; 0
    43ca:	52 d0       	rcall	.+164    	; 0x4470 <fputc>
    43cc:	a2 fe       	sbrs	r10, 2
    43ce:	16 c0       	rjmp	.+44     	; 0x43fc <vfprintf+0x35c>
    43d0:	a1 fc       	sbrc	r10, 1
    43d2:	03 c0       	rjmp	.+6      	; 0x43da <vfprintf+0x33a>
    43d4:	88 e7       	ldi	r24, 0x78	; 120
    43d6:	90 e0       	ldi	r25, 0x00	; 0
    43d8:	02 c0       	rjmp	.+4      	; 0x43de <vfprintf+0x33e>
    43da:	88 e5       	ldi	r24, 0x58	; 88
    43dc:	90 e0       	ldi	r25, 0x00	; 0
    43de:	b6 01       	movw	r22, r12
    43e0:	0c c0       	rjmp	.+24     	; 0x43fa <vfprintf+0x35a>
    43e2:	8a 2d       	mov	r24, r10
    43e4:	86 78       	andi	r24, 0x86	; 134
    43e6:	51 f0       	breq	.+20     	; 0x43fc <vfprintf+0x35c>
    43e8:	a1 fe       	sbrs	r10, 1
    43ea:	02 c0       	rjmp	.+4      	; 0x43f0 <vfprintf+0x350>
    43ec:	8b e2       	ldi	r24, 0x2B	; 43
    43ee:	01 c0       	rjmp	.+2      	; 0x43f2 <vfprintf+0x352>
    43f0:	80 e2       	ldi	r24, 0x20	; 32
    43f2:	a7 fc       	sbrc	r10, 7
    43f4:	8d e2       	ldi	r24, 0x2D	; 45
    43f6:	b6 01       	movw	r22, r12
    43f8:	90 e0       	ldi	r25, 0x00	; 0
    43fa:	3a d0       	rcall	.+116    	; 0x4470 <fputc>
    43fc:	89 14       	cp	r8, r9
    43fe:	30 f4       	brcc	.+12     	; 0x440c <vfprintf+0x36c>
    4400:	b6 01       	movw	r22, r12
    4402:	80 e3       	ldi	r24, 0x30	; 48
    4404:	90 e0       	ldi	r25, 0x00	; 0
    4406:	34 d0       	rcall	.+104    	; 0x4470 <fputc>
    4408:	9a 94       	dec	r9
    440a:	f8 cf       	rjmp	.-16     	; 0x43fc <vfprintf+0x35c>
    440c:	8a 94       	dec	r8
    440e:	f3 01       	movw	r30, r6
    4410:	e8 0d       	add	r30, r8
    4412:	f1 1d       	adc	r31, r1
    4414:	80 81       	ld	r24, Z
    4416:	b6 01       	movw	r22, r12
    4418:	90 e0       	ldi	r25, 0x00	; 0
    441a:	2a d0       	rcall	.+84     	; 0x4470 <fputc>
    441c:	81 10       	cpse	r8, r1
    441e:	f6 cf       	rjmp	.-20     	; 0x440c <vfprintf+0x36c>
    4420:	22 20       	and	r2, r2
    4422:	09 f4       	brne	.+2      	; 0x4426 <vfprintf+0x386>
    4424:	4e ce       	rjmp	.-868    	; 0x40c2 <vfprintf+0x22>
    4426:	b6 01       	movw	r22, r12
    4428:	80 e2       	ldi	r24, 0x20	; 32
    442a:	90 e0       	ldi	r25, 0x00	; 0
    442c:	21 d0       	rcall	.+66     	; 0x4470 <fputc>
    442e:	2a 94       	dec	r2
    4430:	f7 cf       	rjmp	.-18     	; 0x4420 <vfprintf+0x380>
    4432:	f6 01       	movw	r30, r12
    4434:	86 81       	ldd	r24, Z+6	; 0x06
    4436:	97 81       	ldd	r25, Z+7	; 0x07
    4438:	02 c0       	rjmp	.+4      	; 0x443e <vfprintf+0x39e>
    443a:	8f ef       	ldi	r24, 0xFF	; 255
    443c:	9f ef       	ldi	r25, 0xFF	; 255
    443e:	2b 96       	adiw	r28, 0x0b	; 11
    4440:	e2 e1       	ldi	r30, 0x12	; 18
    4442:	e2 c0       	rjmp	.+452    	; 0x4608 <__epilogue_restores__>

00004444 <strnlen_P>:
    4444:	fc 01       	movw	r30, r24
    4446:	05 90       	lpm	r0, Z+
    4448:	61 50       	subi	r22, 0x01	; 1
    444a:	70 40       	sbci	r23, 0x00	; 0
    444c:	01 10       	cpse	r0, r1
    444e:	d8 f7       	brcc	.-10     	; 0x4446 <strnlen_P+0x2>
    4450:	80 95       	com	r24
    4452:	90 95       	com	r25
    4454:	8e 0f       	add	r24, r30
    4456:	9f 1f       	adc	r25, r31
    4458:	08 95       	ret

0000445a <strnlen>:
    445a:	fc 01       	movw	r30, r24
    445c:	61 50       	subi	r22, 0x01	; 1
    445e:	70 40       	sbci	r23, 0x00	; 0
    4460:	01 90       	ld	r0, Z+
    4462:	01 10       	cpse	r0, r1
    4464:	d8 f7       	brcc	.-10     	; 0x445c <strnlen+0x2>
    4466:	80 95       	com	r24
    4468:	90 95       	com	r25
    446a:	8e 0f       	add	r24, r30
    446c:	9f 1f       	adc	r25, r31
    446e:	08 95       	ret

00004470 <fputc>:
    4470:	0f 93       	push	r16
    4472:	1f 93       	push	r17
    4474:	cf 93       	push	r28
    4476:	df 93       	push	r29
    4478:	fb 01       	movw	r30, r22
    447a:	23 81       	ldd	r18, Z+3	; 0x03
    447c:	21 fd       	sbrc	r18, 1
    447e:	03 c0       	rjmp	.+6      	; 0x4486 <fputc+0x16>
    4480:	8f ef       	ldi	r24, 0xFF	; 255
    4482:	9f ef       	ldi	r25, 0xFF	; 255
    4484:	2c c0       	rjmp	.+88     	; 0x44de <fputc+0x6e>
    4486:	22 ff       	sbrs	r18, 2
    4488:	16 c0       	rjmp	.+44     	; 0x44b6 <fputc+0x46>
    448a:	46 81       	ldd	r20, Z+6	; 0x06
    448c:	57 81       	ldd	r21, Z+7	; 0x07
    448e:	24 81       	ldd	r18, Z+4	; 0x04
    4490:	35 81       	ldd	r19, Z+5	; 0x05
    4492:	42 17       	cp	r20, r18
    4494:	53 07       	cpc	r21, r19
    4496:	44 f4       	brge	.+16     	; 0x44a8 <fputc+0x38>
    4498:	a0 81       	ld	r26, Z
    449a:	b1 81       	ldd	r27, Z+1	; 0x01
    449c:	9d 01       	movw	r18, r26
    449e:	2f 5f       	subi	r18, 0xFF	; 255
    44a0:	3f 4f       	sbci	r19, 0xFF	; 255
    44a2:	31 83       	std	Z+1, r19	; 0x01
    44a4:	20 83       	st	Z, r18
    44a6:	8c 93       	st	X, r24
    44a8:	26 81       	ldd	r18, Z+6	; 0x06
    44aa:	37 81       	ldd	r19, Z+7	; 0x07
    44ac:	2f 5f       	subi	r18, 0xFF	; 255
    44ae:	3f 4f       	sbci	r19, 0xFF	; 255
    44b0:	37 83       	std	Z+7, r19	; 0x07
    44b2:	26 83       	std	Z+6, r18	; 0x06
    44b4:	14 c0       	rjmp	.+40     	; 0x44de <fputc+0x6e>
    44b6:	8b 01       	movw	r16, r22
    44b8:	ec 01       	movw	r28, r24
    44ba:	fb 01       	movw	r30, r22
    44bc:	00 84       	ldd	r0, Z+8	; 0x08
    44be:	f1 85       	ldd	r31, Z+9	; 0x09
    44c0:	e0 2d       	mov	r30, r0
    44c2:	09 95       	icall
    44c4:	89 2b       	or	r24, r25
    44c6:	e1 f6       	brne	.-72     	; 0x4480 <fputc+0x10>
    44c8:	d8 01       	movw	r26, r16
    44ca:	16 96       	adiw	r26, 0x06	; 6
    44cc:	8d 91       	ld	r24, X+
    44ce:	9c 91       	ld	r25, X
    44d0:	17 97       	sbiw	r26, 0x07	; 7
    44d2:	01 96       	adiw	r24, 0x01	; 1
    44d4:	17 96       	adiw	r26, 0x07	; 7
    44d6:	9c 93       	st	X, r25
    44d8:	8e 93       	st	-X, r24
    44da:	16 97       	sbiw	r26, 0x06	; 6
    44dc:	ce 01       	movw	r24, r28
    44de:	df 91       	pop	r29
    44e0:	cf 91       	pop	r28
    44e2:	1f 91       	pop	r17
    44e4:	0f 91       	pop	r16
    44e6:	08 95       	ret

000044e8 <__ultoa_invert>:
    44e8:	fa 01       	movw	r30, r20
    44ea:	aa 27       	eor	r26, r26
    44ec:	28 30       	cpi	r18, 0x08	; 8
    44ee:	51 f1       	breq	.+84     	; 0x4544 <__ultoa_invert+0x5c>
    44f0:	20 31       	cpi	r18, 0x10	; 16
    44f2:	81 f1       	breq	.+96     	; 0x4554 <__ultoa_invert+0x6c>
    44f4:	e8 94       	clt
    44f6:	6f 93       	push	r22
    44f8:	6e 7f       	andi	r22, 0xFE	; 254
    44fa:	6e 5f       	subi	r22, 0xFE	; 254
    44fc:	7f 4f       	sbci	r23, 0xFF	; 255
    44fe:	8f 4f       	sbci	r24, 0xFF	; 255
    4500:	9f 4f       	sbci	r25, 0xFF	; 255
    4502:	af 4f       	sbci	r26, 0xFF	; 255
    4504:	b1 e0       	ldi	r27, 0x01	; 1
    4506:	3e d0       	rcall	.+124    	; 0x4584 <__ultoa_invert+0x9c>
    4508:	b4 e0       	ldi	r27, 0x04	; 4
    450a:	3c d0       	rcall	.+120    	; 0x4584 <__ultoa_invert+0x9c>
    450c:	67 0f       	add	r22, r23
    450e:	78 1f       	adc	r23, r24
    4510:	89 1f       	adc	r24, r25
    4512:	9a 1f       	adc	r25, r26
    4514:	a1 1d       	adc	r26, r1
    4516:	68 0f       	add	r22, r24
    4518:	79 1f       	adc	r23, r25
    451a:	8a 1f       	adc	r24, r26
    451c:	91 1d       	adc	r25, r1
    451e:	a1 1d       	adc	r26, r1
    4520:	6a 0f       	add	r22, r26
    4522:	71 1d       	adc	r23, r1
    4524:	81 1d       	adc	r24, r1
    4526:	91 1d       	adc	r25, r1
    4528:	a1 1d       	adc	r26, r1
    452a:	20 d0       	rcall	.+64     	; 0x456c <__ultoa_invert+0x84>
    452c:	09 f4       	brne	.+2      	; 0x4530 <__ultoa_invert+0x48>
    452e:	68 94       	set
    4530:	3f 91       	pop	r19
    4532:	2a e0       	ldi	r18, 0x0A	; 10
    4534:	26 9f       	mul	r18, r22
    4536:	11 24       	eor	r1, r1
    4538:	30 19       	sub	r19, r0
    453a:	30 5d       	subi	r19, 0xD0	; 208
    453c:	31 93       	st	Z+, r19
    453e:	de f6       	brtc	.-74     	; 0x44f6 <__ultoa_invert+0xe>
    4540:	cf 01       	movw	r24, r30
    4542:	08 95       	ret
    4544:	46 2f       	mov	r20, r22
    4546:	47 70       	andi	r20, 0x07	; 7
    4548:	40 5d       	subi	r20, 0xD0	; 208
    454a:	41 93       	st	Z+, r20
    454c:	b3 e0       	ldi	r27, 0x03	; 3
    454e:	0f d0       	rcall	.+30     	; 0x456e <__ultoa_invert+0x86>
    4550:	c9 f7       	brne	.-14     	; 0x4544 <__ultoa_invert+0x5c>
    4552:	f6 cf       	rjmp	.-20     	; 0x4540 <__ultoa_invert+0x58>
    4554:	46 2f       	mov	r20, r22
    4556:	4f 70       	andi	r20, 0x0F	; 15
    4558:	40 5d       	subi	r20, 0xD0	; 208
    455a:	4a 33       	cpi	r20, 0x3A	; 58
    455c:	18 f0       	brcs	.+6      	; 0x4564 <__ultoa_invert+0x7c>
    455e:	49 5d       	subi	r20, 0xD9	; 217
    4560:	31 fd       	sbrc	r19, 1
    4562:	40 52       	subi	r20, 0x20	; 32
    4564:	41 93       	st	Z+, r20
    4566:	02 d0       	rcall	.+4      	; 0x456c <__ultoa_invert+0x84>
    4568:	a9 f7       	brne	.-22     	; 0x4554 <__ultoa_invert+0x6c>
    456a:	ea cf       	rjmp	.-44     	; 0x4540 <__ultoa_invert+0x58>
    456c:	b4 e0       	ldi	r27, 0x04	; 4
    456e:	a6 95       	lsr	r26
    4570:	97 95       	ror	r25
    4572:	87 95       	ror	r24
    4574:	77 95       	ror	r23
    4576:	67 95       	ror	r22
    4578:	ba 95       	dec	r27
    457a:	c9 f7       	brne	.-14     	; 0x456e <__ultoa_invert+0x86>
    457c:	00 97       	sbiw	r24, 0x00	; 0
    457e:	61 05       	cpc	r22, r1
    4580:	71 05       	cpc	r23, r1
    4582:	08 95       	ret
    4584:	9b 01       	movw	r18, r22
    4586:	ac 01       	movw	r20, r24
    4588:	0a 2e       	mov	r0, r26
    458a:	06 94       	lsr	r0
    458c:	57 95       	ror	r21
    458e:	47 95       	ror	r20
    4590:	37 95       	ror	r19
    4592:	27 95       	ror	r18
    4594:	ba 95       	dec	r27
    4596:	c9 f7       	brne	.-14     	; 0x458a <__ultoa_invert+0xa2>
    4598:	62 0f       	add	r22, r18
    459a:	73 1f       	adc	r23, r19
    459c:	84 1f       	adc	r24, r20
    459e:	95 1f       	adc	r25, r21
    45a0:	a0 1d       	adc	r26, r0
    45a2:	08 95       	ret

000045a4 <eeprom_read_byte>:
    45a4:	f9 99       	sbic	0x1f, 1	; 31
    45a6:	fe cf       	rjmp	.-4      	; 0x45a4 <eeprom_read_byte>
    45a8:	92 bd       	out	0x22, r25	; 34
    45aa:	81 bd       	out	0x21, r24	; 33
    45ac:	f8 9a       	sbi	0x1f, 0	; 31
    45ae:	99 27       	eor	r25, r25
    45b0:	80 b5       	in	r24, 0x20	; 32
    45b2:	08 95       	ret

000045b4 <eeprom_write_byte>:
    45b4:	26 2f       	mov	r18, r22

000045b6 <eeprom_write_r18>:
    45b6:	f9 99       	sbic	0x1f, 1	; 31
    45b8:	fe cf       	rjmp	.-4      	; 0x45b6 <eeprom_write_r18>
    45ba:	1f ba       	out	0x1f, r1	; 31
    45bc:	92 bd       	out	0x22, r25	; 34
    45be:	81 bd       	out	0x21, r24	; 33
    45c0:	20 bd       	out	0x20, r18	; 32
    45c2:	0f b6       	in	r0, 0x3f	; 63
    45c4:	f8 94       	cli
    45c6:	fa 9a       	sbi	0x1f, 2	; 31
    45c8:	f9 9a       	sbi	0x1f, 1	; 31
    45ca:	0f be       	out	0x3f, r0	; 63
    45cc:	01 96       	adiw	r24, 0x01	; 1
    45ce:	08 95       	ret

000045d0 <__prologue_saves__>:
    45d0:	2f 92       	push	r2
    45d2:	3f 92       	push	r3
    45d4:	4f 92       	push	r4
    45d6:	5f 92       	push	r5
    45d8:	6f 92       	push	r6
    45da:	7f 92       	push	r7
    45dc:	8f 92       	push	r8
    45de:	9f 92       	push	r9
    45e0:	af 92       	push	r10
    45e2:	bf 92       	push	r11
    45e4:	cf 92       	push	r12
    45e6:	df 92       	push	r13
    45e8:	ef 92       	push	r14
    45ea:	ff 92       	push	r15
    45ec:	0f 93       	push	r16
    45ee:	1f 93       	push	r17
    45f0:	cf 93       	push	r28
    45f2:	df 93       	push	r29
    45f4:	cd b7       	in	r28, 0x3d	; 61
    45f6:	de b7       	in	r29, 0x3e	; 62
    45f8:	ca 1b       	sub	r28, r26
    45fa:	db 0b       	sbc	r29, r27
    45fc:	0f b6       	in	r0, 0x3f	; 63
    45fe:	f8 94       	cli
    4600:	de bf       	out	0x3e, r29	; 62
    4602:	0f be       	out	0x3f, r0	; 63
    4604:	cd bf       	out	0x3d, r28	; 61
    4606:	09 94       	ijmp

00004608 <__epilogue_restores__>:
    4608:	2a 88       	ldd	r2, Y+18	; 0x12
    460a:	39 88       	ldd	r3, Y+17	; 0x11
    460c:	48 88       	ldd	r4, Y+16	; 0x10
    460e:	5f 84       	ldd	r5, Y+15	; 0x0f
    4610:	6e 84       	ldd	r6, Y+14	; 0x0e
    4612:	7d 84       	ldd	r7, Y+13	; 0x0d
    4614:	8c 84       	ldd	r8, Y+12	; 0x0c
    4616:	9b 84       	ldd	r9, Y+11	; 0x0b
    4618:	aa 84       	ldd	r10, Y+10	; 0x0a
    461a:	b9 84       	ldd	r11, Y+9	; 0x09
    461c:	c8 84       	ldd	r12, Y+8	; 0x08
    461e:	df 80       	ldd	r13, Y+7	; 0x07
    4620:	ee 80       	ldd	r14, Y+6	; 0x06
    4622:	fd 80       	ldd	r15, Y+5	; 0x05
    4624:	0c 81       	ldd	r16, Y+4	; 0x04
    4626:	1b 81       	ldd	r17, Y+3	; 0x03
    4628:	aa 81       	ldd	r26, Y+2	; 0x02
    462a:	b9 81       	ldd	r27, Y+1	; 0x01
    462c:	ce 0f       	add	r28, r30
    462e:	d1 1d       	adc	r29, r1
    4630:	0f b6       	in	r0, 0x3f	; 63
    4632:	f8 94       	cli
    4634:	de bf       	out	0x3e, r29	; 62
    4636:	0f be       	out	0x3f, r0	; 63
    4638:	cd bf       	out	0x3d, r28	; 61
    463a:	ed 01       	movw	r28, r26
    463c:	08 95       	ret

0000463e <_exit>:
    463e:	f8 94       	cli

00004640 <__stop_program>:
    4640:	ff cf       	rjmp	.-2      	; 0x4640 <__stop_program>
